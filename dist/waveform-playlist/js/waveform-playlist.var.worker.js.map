{"version":3,"sources":["webpack://WaveformPlaylist/./src/utils/exportogg.worker.js","webpack://WaveformPlaylist/./node_modules/prelude-ls/lib/Func.js","webpack://WaveformPlaylist/./node_modules/prelude-ls/lib/List.js","webpack://WaveformPlaylist/./node_modules/prelude-ls/lib/Num.js","webpack://WaveformPlaylist/./node_modules/prelude-ls/lib/Obj.js","webpack://WaveformPlaylist/./node_modules/prelude-ls/lib/Str.js","webpack://WaveformPlaylist/./node_modules/prelude-ls/lib/index.js","webpack://WaveformPlaylist/./node_modules/vorbis-encoder-js/dist/encoder.js","webpack://WaveformPlaylist/./node_modules/vorbis-encoder-js/dist/libvorbis.js","webpack://WaveformPlaylist/./node_modules/vorbis-encoder-js/index.js","webpack://WaveformPlaylist/external \"fs\"","webpack://WaveformPlaylist/external \"path\"","webpack://WaveformPlaylist/webpack/bootstrap","webpack://WaveformPlaylist/webpack/runtime/compat get default export","webpack://WaveformPlaylist/webpack/runtime/define property getters","webpack://WaveformPlaylist/webpack/runtime/hasOwnProperty shorthand","webpack://WaveformPlaylist/webpack/runtime/make namespace object","webpack://WaveformPlaylist/webpack/startup"],"names":["encodeOGG","buffer","numberOfChannels","sampleRate","quality","tags","audioBuffer","getChannelData","id","encoder","Encoder","encodeFrom","blob","finish","self","postMessage","onmessage","e","data","command"],"mappings":";;;;;;;;;;;;;;;;CAEA;;AACO,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,gBAA3B,EAA6CC,UAA7C,EAAyDC,OAAzD,EAAkEC,IAAlE,EAAwE;AAC3E,MAAMC,WAAW,GAAG;AAChBC,kBAAc,EAAE,wBAACC,EAAD,EAAQ;AACpB,aAAOP,MAAM,CAACO,EAAD,CAAb;AACH;AAHe,GAApB;AAKA,MAAMC,OAAO,GAAG,IAAIC,sDAAJ,CAAYP,UAAZ,EAAwBD,gBAAxB,EAA0CE,OAA1C,EAAmDC,IAAnD,CAAhB;AACAI,SAAO,CAACE,UAAR,CAAmBL,WAAnB;AACA,MAAMM,IAAI,GAAGH,OAAO,CAACI,MAAR,EAAb;AACAC,MAAI,CAACC,WAAL,CAAiBH,IAAjB;AACH;;AAEDE,IAAI,CAACE,SAAL,GAAiB,UAACC,CAAD,EAAO;AACpB,UAAQA,CAAC,CAACC,IAAF,CAAOC,OAAf;AACI,SAAK,WAAL;AAAkB;AACdnB,iBAAS,CAACiB,CAAC,CAACC,IAAF,CAAOjB,MAAR,EAAgBgB,CAAC,CAACC,IAAF,CAAOhB,gBAAvB,EAAyCe,CAAC,CAACC,IAAF,CAAOf,UAAhD,EAA4Dc,CAAC,CAACC,IAAF,CAAOd,OAAnE,EAA4Ea,CAAC,CAACC,IAAF,CAAOb,IAAnF,CAAT;AACA;AACH;;AACD;AAAS,OACL;AACA;AACH;AARL;AAUH,CAXD,C;;;;;;;;;;ACfA;AACA,0DAA0D;AAC1D;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;;;;;;;;;ACpEA;AACA,klBAAklB;AACllB;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW,E;;;;;;;;;;AC3sB5B;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;;;;;;;;;ACzJA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;;;;;;;;;AC3FA;AACA,6EAA6E;AAC7E,OAAO,mBAAO,CAAC,wDAAW;AAC1B,OAAO,mBAAO,CAAC,wDAAW;AAC1B,MAAM,mBAAO,CAAC,sDAAU;AACxB,MAAM,mBAAO,CAAC,sDAAU;AACxB,MAAM,mBAAO,CAAC,sDAAU;AACxB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,cAAc,QAAQ;AACtjLA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,0EAAgB;AACtC,SAAS,mBAAO,CAAC,0DAAY;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,4CAA4C,UAAU;AACtD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,OAAO,uBAAuB,YAAY;AACnE;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC/HD;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA,uDAAuD,UAAc;AACrE;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,mBAAO,CAAC,cAAI;AACtC,8BAA8B,mBAAO,CAAC,kBAAM;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,MAAM,IAA6B;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,mCAAmC,qCAAqC;AACxE;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA,GAAG;AACH,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,6BAA6B;AAC7B,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,wCAAwC;AACxC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,qCAAqC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,+BAA+B,oBAAoB,+BAA+B,iCAAiC,+CAA+C,YAAY,EAAE;AAChL,gCAAgC,qBAAqB,yDAAyD,mCAAmC,YAAY,EAAE;AAC/J,iCAAiC,wBAAwB,oCAAoC,wCAAwC,gCAAgC,0BAA0B,8BAA8B,eAAe,gCAAgC,WAAW,YAAY;AACnS,wCAAwC,sFAAsF,YAAY,EAAE;AAC5I,4CAA4C,wHAAwH,YAAY,EAAE;AAClL;AACA;AACA;AACA;;;;AAIA;;;;AAIA;AACA;AACA;;AAEA,cAAc;AACd;;AAEA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA,SAAS,0BAA0B,EAAE;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAiE,eAAe,qBAAqB,OAAO;AAC5G;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0BAA0B;AAC9E;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,qBAAqB,WAAW;AAChC;AACA;AACA,iDAAiD;AACjD,oEAAoE;AACpE,wCAAwC;AACxC,6DAA6D;AAC7D;AACA;;AAEA;AACA,2CAA2C,aAAa;AACxD;AACA,wEAAwE;AACxE,sBAAsB;AACtB;AACA,0CAA0C,yBAAyB;AACnE,4CAA4C;AAC5C;AACA,2DAA2D,wFAAwF;AACnJ;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,2BAA2B;AAC3B;AACA;AACA,CAAC;AACD;AACA;;AAEA,WAAW,2CAA2C;AACtD;AACA;AACA,uDAAuD;AACvD;AACA,yCAAyC;AACzC,yCAAyC;AACzC,2CAA2C;AAC3C,2CAA2C;AAC3C,0VAA0V;AAC1V,8CAA8C;AAC9C,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA,WAAW,mCAAmC;AAC9C;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,oBAAoB;AACpB,qBAAqB;AACrB,sBAAsB;AACtB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qEAAqE;AAChF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,YAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,YAAY;AACxC,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAgC,UAAU;AACnE;AACA,gCAAgC,mDAAmD,UAAU;AAC7F;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA,WAAW,UAAU;AACrB;AACA,WAAW,WAAW;AACtB;AACA,WAAW,WAAW;AACtB;AACA,WAAW,YAAY;AACvB;AACA,WAAW,WAAW;AACtB;AACA,WAAW,YAAY;AACvB;AACA,WAAW,aAAa;AACxB;AACA,WAAW,aAAa;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,oCAAoC;AACpC,iCAAiC;;AAEjC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,WAAW,oCAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO,yBAAyB,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B,+BAA+B;;;;AAI/B;;;;AAIA;AACA;AACA;AACA,GAAG;AACH,oBAAoB,aAAa;AACjC,8BAA8B,aAAa;AAC3C,mCAAmC,aAAa;AAChD,8BAA8B,aAAa;AAC3C,oBAAoB,aAAa;AACjC,qBAAqB,aAAa;AAClC,8BAA8B,aAAa;AAC3C,2BAA2B,aAAa;AACxC,+BAA+B,aAAa;;AAE5C,qCAAqC,aAAa;AAClD;AACA;AACA;;;;AAIA;;AAEA;;;;;AAKA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA,8BAA8B;;AAE9B;;AAEA,6BAA6B;;AAE7B;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,KAAK;;;;AAIL;;;AAGA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA,gBAAgB;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,SAAS,sCAAsC;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;AAIA,oC;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,K;AACA;;;;AAIA;AACA;AACA;AACA,K;AACA,8B;AACA;;;;AAIA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;AAC9D;AACA,yFAAyF,gCAAgC,uBAAuB,yCAAyC,wBAAwB,qCAAqC,yCAAyC,yCAAyC,EAAE;AAC1U;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,oBAAoB;;AAEpB;;;;AAIA,2BAA2B,yXAAyX,+DAA+D;;AAEnd,yBAAyB,uXAAuX,+DAA+D;;AAE/c,0BAA0B,wXAAwX,+DAA+D;;AAEjd,yBAAyB,uXAAuX,+DAA+D;;AAE/c,2BAA2B,yXAAyX,+DAA+D;;AAEnd,gCAAgC,8XAA8X,+DAA+D;;AAE7d,4BAA4B,0XAA0X,+DAA+D;;AAErd,0BAA0B,wXAAwX,+DAA+D;;AAEjd,6BAA6B,2XAA2X,+DAA+D;;AAEvd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB,wBAAwB;AACxB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAoB,qBAAqB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAoB,qBAAqB;AACjyBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B,IAAI;AACJ,sBAAsB;AACtB;AACA;AACA;AACA,EAAE;AACF,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,aAAa,gBAAgB;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB,cAAc,cAAc,cAAc,cAAc,cAAc,cAAc,aAAa,aAAa;AAChI;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kBAAkB,cAAc,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB,qBAAqB,qBAAqB,oBAAoB,cAAc;AACpN;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC,qCAAqC,qCAAqC,qCAAqC,qCAAqC,qCAAqC,mCAAmC,WAAW;AACrT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAmB,6BAA6B,+BAA+B,+BAA+B,+BAA+B,+BAA+B,+BAA+B,+BAA+B;AACxP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,kBAAkB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB;AACjK;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB,6BAA6B,+BAA+B,+BAA+B,+BAA+B,+BAA+B,+BAA+B,+BAA+B,6BAA6B,gBAAgB;AAC7S,MAAM;AACN,sCAAsC,kCAAkC,kCAAkC,kCAAkC,kCAAkC,kCAAkC,kCAAkC,gCAAgC,YAAY;AAC9R;AACA;AACA;AACA;AACA;AACA,qBAAqB,gCAAgC,kCAAkC,kCAAkC,kCAAkC,kCAAkC,kCAAkC,kCAAkC;AACjQ,KAAK;AACL,kCAAkC,+BAA+B,+BAA+B,+BAA+B,+BAA+B,+BAA+B,+BAA+B,6BAA6B,sBAAsB;AAC/Q;AACA;AACA,IAAI;AACJ,kBAAkB,eAAe,eAAe,eAAe,eAAe,eAAe,eAAe,cAAc,WAAW;AACrI;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,uBAAuB,yBAAyB,yBAAyB,yBAAyB,yBAAyB,yBAAyB,yBAAyB;AACnM;AACA;AACA;AACA,8BAA8B,oCAAoC,qCAAqC;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA,sBAAsB,eAAe,aAAa;AAClD,EAAE;AACF,mBAAmB,cAAc,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAogBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW,WAAW,SAAS;AAC5C,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW,WAAW,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,EAAE;AACF,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,MAAM;AACN,oBAAoB;AACpB;AACA;AACA;AACA,IAAI;AACJ,oBAAoB;AACpB;AACA,GAAG;AACH,mBAAmB;AACnB;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,MAAM;AACN,oBAAoB;AACpB;AACA;AACA;AACA,IAAI;AACJ,oBAAoB;AACpB;AACA,GAAG;AACH,mBAAmB;AACnB;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,KAAK,qBAAqB,eAAe,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iBAAiB,KAAK,qBAAqB,eAAe,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,SAAS,iBAAiB,KAAK,qBAAqB,eAAe,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,KAAK,qBAAqB,eAAe,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,KAAK,qBAAqB,eAAe,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS,gBAAgB;AACvC,EAAE;AACF,cAAc,YAAY,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS,gBAAgB;AACvC,EAAE;AACF,cAAc,YAAY,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB,gBAAgB;AACriBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,QAAQ;AACR,wBAAwB,mBAAmB;AAC3C;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC,MAAM;AACN,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA,IAAI;AACJ,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa;AACb;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAyD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,EAAE;AACF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,oBAAoB;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL,mBAAmB,iBAAiB;AACpC;AACA;AACA,GAAG;AACH,uBAAuB;AACvB;AACA;AACA;AACA,uBAAuB;AACvaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB,GAAG;AACH;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACdkBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAyD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE;AACF;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA,EAAE;AACF;AACA;AACA,mBAAmB;AACnB,EAAE;AACF,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB;AACpB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,wBAAwB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,uBAAuB,oBAAoB,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,yBAAyB;AACzB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbcAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB;AACrB,GAAG;AACH,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB,YAAY;AACnD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,OAAO;AACP,gCAAgC;AAChC;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB,aAAa;AAC7D,OAAO;AACP,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA,kBAAkB;AAClB;AACA;AACA,EAAE;AACF;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,sBAAsB;AACtgBAAgB;AAChB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB,cAAc,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,mBAAmB,mBAAmB,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB;AAChB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA,MAAM;AACN,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA,KAAK;AACL,mBAAmB,gBAAgB;AACnC;AACA,IAAI;AACJ;AACA;AACA;AACA,kBAAkB,gBAAgB,gBAAgB;AAClD,IAAI;AACJ,sBAAsB;AACtB;AACA;AACA;AACA,EAAE;AACF,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,qBAAqB;AACxP,OAAO;AACP,0BAA0B,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,qBAAqB,kBAAkB;AAC5O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B;AACpU,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B;AAC3Q;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB;AACnR;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sCAAsC,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,6BAA6B,sBAAsB,yBAAyB;AAC1V,SAAS;AACT,yCAAyC,gCAAgC,gCAAgC,gCAAgC,gCAAgC,gCAAgC,gCAAgC,gCAAgC,gCAAgC,gCAAgC,4BAA4B;AACrW;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB,aAAa;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,WAAW,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,kBAAkB;AACnN,GAAG;AACH;AACA,mBAAmB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,eAAe;AAClM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB;AAC9P,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe,eAAe,eAAe,eAAe,eAAe,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB;AACjN;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,eAAe,eAAe,eAAe,eAAe,eAAe;AACvN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+BAA+B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,0BAA0B,sBAAsB;AAC/R;AACA,KAAK;AACL,4BAA4B,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,uBAAuB,kBAAkB,mBAAmB;AAChR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChsBAAsB,kBAAkB,eAAe,sBAAsB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB,sBAAsB,yBAAyB;AAC5F,WAAW;AACX,8BAA8B;AAC9B;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzaAAa;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB,gBAAgB;AACpD;AACA;AACA,GAAG;AACH,eAAe,YAAY,YAAY;AACvC;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB,gBAAgB,gBAAgB,cAAc;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB,mBAAmB,mBAAmB;AAChF;AACA,IAAI;AACJ,oBAAoB,gBAAgB,gBAAgB,gBAAgB,gBAAgB;AACpF;AACA;AACA,EAAE;AACF,qBAAqB,mBAAmB,mBAAmB,mBAAmB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,aAAa,aAAa;AACnD,EAAE;AACF,qBAAqB,sBAAsB,sBAAsB,sBAAsB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,aAAa,aAAa;AACnD,EAAE;AACF,YAAY,gBAAgB,gBAAgB,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,GAAG;AACH,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,GAAG;AACH,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE;AACF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AAClJ;AACA;AACA,KAAK,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,iBAAiB;AAC3C;AACA;AACA,OAAO;AACP,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,4BAA4B,oBAAoB;AAChD;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc,cAAc,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA,KAAK;AACL,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA,kBAAkB,cAAc,cAAc;AAC9C,IAAI;AACJ,uBAAuB,mBAAmB,mBAAmB;AAC7D;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB,mBAAmB,iBAAiB;AAC9E,IAAI;AACJ,0BAA0B;AAC1B;AACA;AACA;AACA,EAAE;AACF,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACjJ,GAAG,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACjJ,GAAG,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACjJ;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,qBAAqB,qBAAqB,sBAAsB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAmB,qBAAqB,qBAAqB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oBAAoB,sBAAsB,sBAAsB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,MAAM;AACN,MAAM,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACpJ,MAAM,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACpJ,MAAM,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACpJ,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACjJ,GAAG,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACjJ,GAAG,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AACjJ;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA,eAAe,0DAA0D;AACzE;AACA;AACA;AACA;AACA,gBAAgB;AAChB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB;AACrB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,EAAE;AACF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA,IAAI;AACJ,qBAAqB;AACrB;AACA,GAAG;AACH;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe;AACf,EAAE;AACF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB;AAClB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAyD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,IAAI;AACJ,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,MAAM;AACN,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,KAAK;AACL,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA,8BAA8B;AAC9B;AACA,EAAE;AACF;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA,iBAAiB,0DAA0D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,OAAO;AACP,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAyD;AACzE;AACA,gBAAgB,0DAA0D;AAC1E;AACA,gBAAgB,0DAA0D;AAC1E;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,OAAO;AACP;AACA;AACA,yBAAyB;AACzB;AACA;AACA,MAAM;AACN;AACA;AACA,yBAAyB;AACzB,OAAO;AACP;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe;AACfcAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB,oBAAoB,qBAAqB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe,eAAe;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,YAAY,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc,cAAc;AAC1C,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,cAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,GAAG;AACH,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjiBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxsBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB,gBAAgB;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C,EAAE;AACF,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB,yBAAyB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB,gBAAgB;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C,EAAE;AACF,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB,gBAAgB;AACrD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe,eAAe;AAC9C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oBAAoB,iBAAiB,iBAAiB;AACtD;AACA;AACA,eAAe;AACfeAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,IAAI;AACJ,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA,eAAe,0DAA0D;AACzE;AACA,eAAe,0DAA0D;AACzE;AACA,gBAAgB,0DAA0D;AAC1E;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,gBAAgB,gBAAgB,gBAAgB,gBAAgB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB,mBAAmB,mBAAmB,iBAAiB;AAC/F,EAAE;AACF,kBAAkB,cAAc,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB,mBAAmB,mBAAmB,mBAAmB;AACnG;AACA,IAAI;AACJ,oBAAoB,gBAAgB,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc,YAAY;AAC/C,IAAI;AACJ,wBAAwB,oBAAoB,oBAAoB,iBAAiB;AACjF;AACA;AACA;AACA,EAAE;AACF,8BAA8B,4BAA4B,4BAA4B,yBAAyB;AAC/G;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA8B,4BAA4B,4BAA4B,gBAAgB;AACtG,EAAE;AACF;AACA,gBAAgB,aAAa,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB,oBAAoB,iBAAiB;AACjF;AACA,IAAI;AACJ,qBAAqB,cAAc,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB,oBAAoB,iBAAiB;AACjF;AACA,IAAI;AACJ,qBAAqB,cAAc;AACnC;AACA;AACA,EAAE;AACF,8BAA8B,4BAA4B,4BAA4B,sBAAsB;AAC5G;AACA;AACA;AACA,2BAA2B;AAC3B,EAAE;AACF,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oBAAoB;AACpB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,mCAAmC;AACnC,QAAQ;AACR,uCAAuC;AACvC;AACA;AACA;AACA,MAAM;AACN,sCAAsC;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB,YAAY;AAChE;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA,eAAe,0DAA0D;AACzE;AACA;AACA,cAAc;AACd,EAAE;AACF,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,yBAAyB;AACzB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAyD;AACzE;AACA,gBAAgB,0DAA0D;AAC1E;AACA,gBAAgB,0DAA0D;AAC1E;AACA,gBAAgB,0DAA0D;AAC1E;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA,gBAAgB,2DAA2D;AAC3E;AACA;AACA,gBAAgB,2DAA2D;AAC3E;AACA;AACA,gBAAgB,2DAA2D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,uBAAuB;AACvB;AACA;AACA;AACA,SAAS;AACT,qBAAqB;AACrB;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,aAAa;AACb,EAAE;AACF,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,IAAI;AACJ,qBAAqB,WAAW;AAChC;AACA;AACA,EAAE;AACF,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,KAAK;AACL,sBAAsB;AACtB;AACA,IAAI;AACJ;AACA;AACA;AACA,uBAAuB;AACvB;AACA,IAAI;AACJ,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB;AAClB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,4BAA4B;AAC5B;AACA;AACA;AACA,KAAK;AACL,0BAA0B;AAC1B;AACA,IAAI;AACJ,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,OAAO;AACP,sBAAsB;AACtB;AACA;AACA,KAAK;AACL,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB,EAAE;AACF,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,IAAI;AACJ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB,yDAAyD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,6BAA6B,kCAAkC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,qCAAqC,qBAAqB;AAC1D;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB,oBAAoB,oBAAoB,qBAAqB,qBAAqB,qBAAqB,qBAAqB;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD,gBAAgB;AAChB,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,oBAAoB,8BAA8B,kCAAkC,kCAAkC,oCAAoC,oCAAoC,oCAAoC,oCAAoC;AACtQ,kCAAkC;AAClC,mBAAmB;AACnB,8CAA8C;AAC9C;AACA,kBAAkB;AAClB;AACA;AACA;AACA,qCAAqC;AACrC,kBAAkB;AAClB,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,oBAAoB;AACpB,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,6CAA6C,kBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,mBAAmB,8BAA8B,kCAAkC,kCAAkC,oCAAoC,oCAAoC,oCAAoC,oCAAoC;AACrQ,uCAAuC;AACvC,kBAAkB;AAClB,mDAAmD;AACnD;AACA,iBAAiB;AACjB;AACA;AACA;AACA,uCAAuC;AACvC,iBAAiB;AACjB,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,mBAAmB;AACnB,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kDAAkD,qBAAqB;AACvE;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc;AACd;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA,gCAAgC;AAChC,WAAW;AACX,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,GAAG;AACH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,IAAI;AACJ,sBAAsB;AACtB;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sBAAsB;AAC9D,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB,qBAAqB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB,mCAAmC;AACzG,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,2BAA2B;AAC3B;AACA;AACA,EAAE;AACF,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,yBAAyB;AACzB,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC,UAAU;AACV,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,QAAQ;AACR,6BAA6B;AAC7B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe,iBAAiB;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,EAAE;AACF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB;AAClB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,qBAAqB;AACrB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yDAAyD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB,KAAK,qBAAqB,eAAe,EAAE;AACrE;AACA,gBAAgB;AAChB,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,KAAK;AACL,kBAAkB,WAAW;AAC7B;AACA,IAAI;AACJ,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa,WAAW;AAC/C,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB;AAClB;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,eAAe,cAAc,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,GAAG;AACH,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB,cAAc;AACnD;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,qBAAqB,kBAAkB,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe,gBAAgB,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,gBAAgB,gBAAgB,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB,WAAW,sBAAsB;AACrsBAAsB,cAAc,gBAAgB;AACpD,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB,iBAAiB,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,oBAAoB,iBAAiB,iBAAiB,iBAAiB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,gCAAgC,mBAAmB,4BAA4B,iBAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB,mBAAmB,mBAAmB;AAClF,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB,gBAAgB,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,uBAAuB,iBAAiB;AACxC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB,gBAAgB,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc,iBAAiB,iBAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wBAAwB,iBAAiB,iBAAiB,iBAAiB;AAC3E;AACA;AACA;AACA;AACA,yBAAyB,oBAAoB,oBAAoB,kBAAkB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,oBAAoB,iBAAiB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,4BAA4B,oBAAoB,oBAAoB,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB,oBAAoB,oBAAoB;AACvF,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,iBAAiB,iBAAiB,iBAAiB;AACzE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB,oBAAoB;AACzD;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yBAAyB,oBAAoB,oBAAoB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,oBAAoB,oBAAoB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB,cAAc,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB,oBAAoB,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,0BAA0B,oBAAoB,oBAAoB,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,mBAAmB,iBAAiB,iBAAiB,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe,iBAAiB,cAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB,oBAAoB,oBAAoB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,4BAA4B,oBAAoB,oBAAoB,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,eAAe,iBAAiB,iBAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB,eAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,GAAG;AACH,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,0BAA0B,2BAA2B,2BAA2B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB,2BAA2B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA,IAAI;AACJ,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,oBAAoB;AACxgBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa,UAAU,gBAAgB,KAAK,kCAAkC,eAAe,aAAa,EAAE;AAC5G;AACA;AACA,aAAa,UAAU,gBAAgB,KAAK,kCAAkC,eAAe,aAAamBAAmB,YAAY,YAAY;AAC3C,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kCAAkC,sCAAsC,sCAAsC;AACjyBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnyBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,qCAAqC;AACrC;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,UAAU;AAChC;AACA;AACA;AACA,GAAG;AACH,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACfeAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,cAAc,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,cAAc,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB;AAClB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,IAAI;AACJ,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,MAAM;AACN,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC,MAAM;AACN,sBAAsB;AACtB;AACA;AACA;AACA,IAAI;AACJ,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA,GAAG;AACH,eAAe;AACf;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,GAAG;AACH,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU,UAAU;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC,MAAM;AACN,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA,EAAE;AACF,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,KAAK;AACL;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB,YAAY;AACtD;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,EAAE;AACF;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB,iBAAiB;AACpD;AACA,IAAI;AACJ;AACA,kBAAkB,eAAe,oBAAoB,aAAa;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,kBAAkB;AAC1D;AACA;AACA,MAAM;AACN,wBAAwB,gBAAgB,gBAAgB,cAAc,UAAU;AAChF;AACA;AACA;AACA,GAAG;AACH,kBAAkB,gBAAgB,iBAAiB;AACnD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,EAAE;AACF;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,EAAE;AACF,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,MAAM;AACN,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,QAAQ;AACR,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA,QAAQ;AACR,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzwBAAwB;AACxB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB,gBAAgB,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA,UAAU;AACV,8BAA8B;AAC9B;AACA,SAAS;AACT,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA,SAAS;AACT,6BAA6B,oBAAoB,gBAAgB,qBAAqB;AACtF;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,OAAO;AACP,2BAA2B;AAC3B;AACA;AACA;AACA,8BAA8B;AAC9B,OAAO;AACP,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,QAAQ;AACR,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,2BAA2B;AAC3B;AACA,UAAU;AACV,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,0BAA0B;AAC1B;AACA;AACA;AACA,OAAO;AACP,0BAA0B;AAC1B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,QAAQ;AACR,2BAA2B;AAC3B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,iCAAiC;AACjC;AACA,cAAc;AACd,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,0BAA0B;AAC1B,SAAS;AACT,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,sCAAsC,0CAA0C,0CAA0C;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;AACA,MAAM;AACN,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,cAAc,aAAa;AAC3B,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH,YAAY,YAAY;AACxsBAAsB;AACtB;AACA,OAAO;AACP,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,qBAAqB;AACrB;AACA,MAAM;AACN,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;AACA,MAAM;AACN,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,cAAc;AACd,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH,YAAY;AACZ;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,sBAAsB;AACtB;AACA,OAAO;AACP,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS,SAAS;AAC9B;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,UAAU,SAAS;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,UAAU,SAAS;AACnB;AACA;;;AAGA;AACA;AACA,UAAU,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS;AAChE;AACA;;;AAGA;AACA;AACA,UAAU,SAAS,SAAS;AAC5B;AACA;;;AAGA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,UAAU,SAAS,SAAS,SAAS;AACrC;AACA;;AAEA;AACA,WAAW,UAAU,UAAU,kBAAkB;AACjD;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA,WAAW,UAAU,UAAU;AAC/B;AACA;AACA,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,uBAAuB;AACxG;AACA;AACA,WAAW,UAAU,UAAU,UAAU,mBAAmB;AAC5D;AACA;AACA,WAAW,UAAU,iBAAiB;AACtC;AACA;AACA,WAAW,UAAU,UAAU,UAAU,UAAU,oBAAoB;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV,CAAC;AACD;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;;AAEA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA,oEAAoE;AACpE;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;;AAEA,0EAA0E;AAC1E;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;;AAEA,0DAA0D;AAC1D;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;;;;;;;AAOA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;AAKA,WAAW,iBAAiB;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,kCAAkC;AAClC,kCAAkC;;AAElC;AACA,oCAAoC;AACpC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,KAAK;;;;;;AAML,KAAK;;;;AAIL;;;;;;;;;;;;ACrr/BA;AACA,aAAa,mBAAO,CAAC,+EAAqB;AAC1C,WAAW,mBAAO,CAAC,2EAAmB;AACtC;;;;;;;;;;;;ACHA,gC;;;;;;;;;;;ACAA,kC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"waveform-playlist.var.worker.js","sourcesContent":["import {encoder as Encoder} from 'vorbis-encoder-js';\r\n\r\n// quality between - 0.1 to 1\r\nexport function encodeOGG(buffer, numberOfChannels, sampleRate, quality, tags) {\r\n    const audioBuffer = {\r\n        getChannelData: (id) => {\r\n            return buffer[id];\r\n        }\r\n    }\r\n    const encoder = new Encoder(sampleRate, numberOfChannels, quality, tags);\r\n    encoder.encodeFrom(audioBuffer);\r\n    const blob = encoder.finish();\r\n    self.postMessage(blob);\r\n}\r\n\r\nself.onmessage = (e) => {\r\n    switch (e.data.command) {\r\n        case 'encodeOGG': {\r\n            encodeOGG(e.data.buffer, e.data.numberOfChannels, e.data.sampleRate, e.data.quality, e.data.tags);\r\n            break;\r\n        }\r\n        default: {\r\n            // todo\r\n            //throw new Error('Unknown export worker command');\r\n        }\r\n    }\r\n};\r\n","// Generated by LiveScript 1.6.0\nvar apply, curry, flip, fix, over, memoize, toString$ = {}.toString;\napply = curry$(function(f, list){\n  return f.apply(null, list);\n});\ncurry = function(f){\n  return curry$(f);\n};\nflip = curry$(function(f, x, y){\n  return f(y, x);\n});\nfix = function(f){\n  return function(g){\n    return function(){\n      return f(g(g)).apply(null, arguments);\n    };\n  }(function(g){\n    return function(){\n      return f(g(g)).apply(null, arguments);\n    };\n  });\n};\nover = curry$(function(f, g, x, y){\n  return f(g(x), g(y));\n});\nmemoize = function(f){\n  var memo;\n  memo = {};\n  return function(){\n    var args, res$, i$, to$, key, arg;\n    res$ = [];\n    for (i$ = 0, to$ = arguments.length; i$ < to$; ++i$) {\n      res$.push(arguments[i$]);\n    }\n    args = res$;\n    key = (function(){\n      var i$, ref$, len$, results$ = [];\n      for (i$ = 0, len$ = (ref$ = args).length; i$ < len$; ++i$) {\n        arg = ref$[i$];\n        results$.push(arg + toString$.call(arg).slice(8, -1));\n      }\n      return results$;\n    }()).join('');\n    return memo[key] = key in memo\n      ? memo[key]\n      : f.apply(null, args);\n  };\n};\nmodule.exports = {\n  curry: curry,\n  flip: flip,\n  fix: fix,\n  apply: apply,\n  over: over,\n  memoize: memoize\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.6.0\nvar each, map, compact, filter, reject, remove, partition, find, head, first, tail, last, initial, empty, reverse, unique, uniqueBy, fold, foldl, fold1, foldl1, foldr, foldr1, unfoldr, concat, concatMap, flatten, difference, intersection, union, countBy, groupBy, andList, orList, any, all, sort, sortWith, sortBy, sum, product, mean, average, maximum, minimum, maximumBy, minimumBy, scan, scanl, scan1, scanl1, scanr, scanr1, slice, take, drop, splitAt, takeWhile, dropWhile, span, breakList, zip, zipWith, zipAll, zipAllWith, at, elemIndex, elemIndices, findIndex, findIndices, toString$ = {}.toString;\neach = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    f(x);\n  }\n  return xs;\n});\nmap = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    results$.push(f(x));\n  }\n  return results$;\n});\ncompact = function(xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (x) {\n      results$.push(x);\n    }\n  }\n  return results$;\n};\nfilter = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      results$.push(x);\n    }\n  }\n  return results$;\n});\nreject = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!f(x)) {\n      results$.push(x);\n    }\n  }\n  return results$;\n});\nremove = curry$(function(el, xs){\n  var i, x$;\n  i = elemIndex(el, xs);\n  x$ = xs.slice();\n  if (i != null) {\n    x$.splice(i, 1);\n  }\n  return x$;\n});\npartition = curry$(function(f, xs){\n  var passed, failed, i$, len$, x;\n  passed = [];\n  failed = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    (f(x) ? passed : failed).push(x);\n  }\n  return [passed, failed];\n});\nfind = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      return x;\n    }\n  }\n});\nhead = first = function(xs){\n  return xs[0];\n};\ntail = function(xs){\n  if (!xs.length) {\n    return;\n  }\n  return xs.slice(1);\n};\nlast = function(xs){\n  return xs[xs.length - 1];\n};\ninitial = function(xs){\n  if (!xs.length) {\n    return;\n  }\n  return xs.slice(0, -1);\n};\nempty = function(xs){\n  return !xs.length;\n};\nreverse = function(xs){\n  return xs.concat().reverse();\n};\nunique = function(xs){\n  var result, i$, len$, x;\n  result = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!in$(x, result)) {\n      result.push(x);\n    }\n  }\n  return result;\n};\nuniqueBy = curry$(function(f, xs){\n  var seen, i$, len$, x, val, results$ = [];\n  seen = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    val = f(x);\n    if (in$(val, seen)) {\n      continue;\n    }\n    seen.push(val);\n    results$.push(x);\n  }\n  return results$;\n});\nfold = foldl = curry$(function(f, memo, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    memo = f(memo, x);\n  }\n  return memo;\n});\nfold1 = foldl1 = curry$(function(f, xs){\n  return fold(f, xs[0], xs.slice(1));\n});\nfoldr = curry$(function(f, memo, xs){\n  var i$, x;\n  for (i$ = xs.length - 1; i$ >= 0; --i$) {\n    x = xs[i$];\n    memo = f(x, memo);\n  }\n  return memo;\n});\nfoldr1 = curry$(function(f, xs){\n  return foldr(f, xs[xs.length - 1], xs.slice(0, -1));\n});\nunfoldr = curry$(function(f, b){\n  var result, x, that;\n  result = [];\n  x = b;\n  while ((that = f(x)) != null) {\n    result.push(that[0]);\n    x = that[1];\n  }\n  return result;\n});\nconcat = function(xss){\n  return [].concat.apply([], xss);\n};\nconcatMap = curry$(function(f, xs){\n  var x;\n  return [].concat.apply([], (function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(f(x));\n    }\n    return results$;\n  }()));\n});\nflatten = function(xs){\n  var x;\n  return [].concat.apply([], (function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      if (toString$.call(x).slice(8, -1) === 'Array') {\n        results$.push(flatten(x));\n      } else {\n        results$.push(x);\n      }\n    }\n    return results$;\n  }()));\n};\ndifference = function(xs){\n  var yss, res$, i$, to$, results, len$, x, j$, len1$, ys;\n  res$ = [];\n  for (i$ = 1, to$ = arguments.length; i$ < to$; ++i$) {\n    res$.push(arguments[i$]);\n  }\n  yss = res$;\n  results = [];\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n      if (in$(x, ys)) {\n        continue outer;\n      }\n    }\n    results.push(x);\n  }\n  return results;\n};\nintersection = function(xs){\n  var yss, res$, i$, to$, results, len$, x, j$, len1$, ys;\n  res$ = [];\n  for (i$ = 1, to$ = arguments.length; i$ < to$; ++i$) {\n    res$.push(arguments[i$]);\n  }\n  yss = res$;\n  results = [];\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n      if (!in$(x, ys)) {\n        continue outer;\n      }\n    }\n    results.push(x);\n  }\n  return results;\n};\nunion = function(){\n  var xss, res$, i$, to$, results, len$, xs, j$, len1$, x;\n  res$ = [];\n  for (i$ = 0, to$ = arguments.length; i$ < to$; ++i$) {\n    res$.push(arguments[i$]);\n  }\n  xss = res$;\n  results = [];\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    for (j$ = 0, len1$ = xs.length; j$ < len1$; ++j$) {\n      x = xs[j$];\n      if (!in$(x, results)) {\n        results.push(x);\n      }\n    }\n  }\n  return results;\n};\ncountBy = curry$(function(f, xs){\n  var results, i$, len$, x, key;\n  results = {};\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n    if (key in results) {\n      results[key] += 1;\n    } else {\n      results[key] = 1;\n    }\n  }\n  return results;\n});\ngroupBy = curry$(function(f, xs){\n  var results, i$, len$, x, key;\n  results = {};\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n    if (key in results) {\n      results[key].push(x);\n    } else {\n      results[key] = [x];\n    }\n  }\n  return results;\n});\nandList = function(xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!x) {\n      return false;\n    }\n  }\n  return true;\n};\norList = function(xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (x) {\n      return true;\n    }\n  }\n  return false;\n};\nany = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      return true;\n    }\n  }\n  return false;\n});\nall = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!f(x)) {\n      return false;\n    }\n  }\n  return true;\n});\nsort = function(xs){\n  return xs.concat().sort(function(x, y){\n    if (x > y) {\n      return 1;\n    } else if (x < y) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n};\nsortWith = curry$(function(f, xs){\n  return xs.concat().sort(f);\n});\nsortBy = curry$(function(f, xs){\n  return xs.concat().sort(function(x, y){\n    if (f(x) > f(y)) {\n      return 1;\n    } else if (f(x) < f(y)) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n});\nsum = function(xs){\n  var result, i$, len$, x;\n  result = 0;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result += x;\n  }\n  return result;\n};\nproduct = function(xs){\n  var result, i$, len$, x;\n  result = 1;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result *= x;\n  }\n  return result;\n};\nmean = average = function(xs){\n  var sum, i$, len$, x;\n  sum = 0;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    sum += x;\n  }\n  return sum / xs.length;\n};\nmaximum = function(xs){\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (x > max) {\n      max = x;\n    }\n  }\n  return max;\n};\nminimum = function(xs){\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (x < min) {\n      min = x;\n    }\n  }\n  return min;\n};\nmaximumBy = curry$(function(f, xs){\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (f(x) > f(max)) {\n      max = x;\n    }\n  }\n  return max;\n});\nminimumBy = curry$(function(f, xs){\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (f(x) < f(min)) {\n      min = x;\n    }\n  }\n  return min;\n});\nscan = scanl = curry$(function(f, memo, xs){\n  var last, x;\n  last = memo;\n  return [memo].concat((function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(last = f(last, x));\n    }\n    return results$;\n  }()));\n});\nscan1 = scanl1 = curry$(function(f, xs){\n  if (!xs.length) {\n    return;\n  }\n  return scan(f, xs[0], xs.slice(1));\n});\nscanr = curry$(function(f, memo, xs){\n  xs = xs.concat().reverse();\n  return scan(f, memo, xs).reverse();\n});\nscanr1 = curry$(function(f, xs){\n  if (!xs.length) {\n    return;\n  }\n  xs = xs.concat().reverse();\n  return scan(f, xs[0], xs.slice(1)).reverse();\n});\nslice = curry$(function(x, y, xs){\n  return xs.slice(x, y);\n});\ntake = curry$(function(n, xs){\n  if (n <= 0) {\n    return xs.slice(0, 0);\n  } else {\n    return xs.slice(0, n);\n  }\n});\ndrop = curry$(function(n, xs){\n  if (n <= 0) {\n    return xs;\n  } else {\n    return xs.slice(n);\n  }\n});\nsplitAt = curry$(function(n, xs){\n  return [take(n, xs), drop(n, xs)];\n});\ntakeWhile = curry$(function(p, xs){\n  var len, i;\n  len = xs.length;\n  if (!len) {\n    return xs;\n  }\n  i = 0;\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n  return xs.slice(0, i);\n});\ndropWhile = curry$(function(p, xs){\n  var len, i;\n  len = xs.length;\n  if (!len) {\n    return xs;\n  }\n  i = 0;\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n  return xs.slice(i);\n});\nspan = curry$(function(p, xs){\n  return [takeWhile(p, xs), dropWhile(p, xs)];\n});\nbreakList = curry$(function(p, xs){\n  return span(compose$(p, not$), xs);\n});\nzip = curry$(function(xs, ys){\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (i === len) {\n      break;\n    }\n    result.push([x, ys[i]]);\n  }\n  return result;\n});\nzipWith = curry$(function(f, xs, ys){\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (i === len) {\n      break;\n    }\n    result.push(f(x, ys[i]));\n  }\n  return result;\n});\nzipAll = function(){\n  var xss, res$, i$, to$, minLength, len$, xs, ref$, i, lresult$, j$, results$ = [];\n  res$ = [];\n  for (i$ = 0, to$ = arguments.length; i$ < to$; ++i$) {\n    res$.push(arguments[i$]);\n  }\n  xss = res$;\n  minLength = undefined;\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    lresult$ = [];\n    for (j$ = 0, len$ = xss.length; j$ < len$; ++j$) {\n      xs = xss[j$];\n      lresult$.push(xs[i]);\n    }\n    results$.push(lresult$);\n  }\n  return results$;\n};\nzipAllWith = function(f){\n  var xss, res$, i$, to$, minLength, len$, xs, ref$, i, results$ = [];\n  res$ = [];\n  for (i$ = 1, to$ = arguments.length; i$ < to$; ++i$) {\n    res$.push(arguments[i$]);\n  }\n  xss = res$;\n  minLength = undefined;\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    results$.push(f.apply(null, (fn$())));\n  }\n  return results$;\n  function fn$(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xss).length; i$ < len$; ++i$) {\n      xs = ref$[i$];\n      results$.push(xs[i]);\n    }\n    return results$;\n  }\n};\nat = curry$(function(n, xs){\n  if (n < 0) {\n    return xs[xs.length + n];\n  } else {\n    return xs[n];\n  }\n});\nelemIndex = curry$(function(el, xs){\n  var i$, len$, i, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (x === el) {\n      return i;\n    }\n  }\n});\nelemIndices = curry$(function(el, xs){\n  var i$, len$, i, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (x === el) {\n      results$.push(i);\n    }\n  }\n  return results$;\n});\nfindIndex = curry$(function(f, xs){\n  var i$, len$, i, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (f(x)) {\n      return i;\n    }\n  }\n});\nfindIndices = curry$(function(f, xs){\n  var i$, len$, i, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (f(x)) {\n      results$.push(i);\n    }\n  }\n  return results$;\n});\nmodule.exports = {\n  each: each,\n  map: map,\n  filter: filter,\n  compact: compact,\n  reject: reject,\n  remove: remove,\n  partition: partition,\n  find: find,\n  head: head,\n  first: first,\n  tail: tail,\n  last: last,\n  initial: initial,\n  empty: empty,\n  reverse: reverse,\n  difference: difference,\n  intersection: intersection,\n  union: union,\n  countBy: countBy,\n  groupBy: groupBy,\n  fold: fold,\n  fold1: fold1,\n  foldl: foldl,\n  foldl1: foldl1,\n  foldr: foldr,\n  foldr1: foldr1,\n  unfoldr: unfoldr,\n  andList: andList,\n  orList: orList,\n  any: any,\n  all: all,\n  unique: unique,\n  uniqueBy: uniqueBy,\n  sort: sort,\n  sortWith: sortWith,\n  sortBy: sortBy,\n  sum: sum,\n  product: product,\n  mean: mean,\n  average: average,\n  concat: concat,\n  concatMap: concatMap,\n  flatten: flatten,\n  maximum: maximum,\n  minimum: minimum,\n  maximumBy: maximumBy,\n  minimumBy: minimumBy,\n  scan: scan,\n  scan1: scan1,\n  scanl: scanl,\n  scanl1: scanl1,\n  scanr: scanr,\n  scanr1: scanr1,\n  slice: slice,\n  take: take,\n  drop: drop,\n  splitAt: splitAt,\n  takeWhile: takeWhile,\n  dropWhile: dropWhile,\n  span: span,\n  breakList: breakList,\n  zip: zip,\n  zipWith: zipWith,\n  zipAll: zipAll,\n  zipAllWith: zipAllWith,\n  at: at,\n  elemIndex: elemIndex,\n  elemIndices: elemIndices,\n  findIndex: findIndex,\n  findIndices: findIndices\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}\nfunction in$(x, xs){\n  var i = -1, l = xs.length >>> 0;\n  while (++i < l) if (x === xs[i]) return true;\n  return false;\n}\nfunction compose$() {\n  var functions = arguments;\n  return function() {\n    var i, result;\n    result = functions[0].apply(this, arguments);\n    for (i = 1; i < functions.length; ++i) {\n      result = functions[i](result);\n    }\n    return result;\n  };\n}\nfunction not$(x){ return !x; }","// Generated by LiveScript 1.6.0\nvar max, min, negate, abs, signum, quot, rem, div, mod, recip, pi, tau, exp, sqrt, ln, pow, sin, tan, cos, asin, acos, atan, atan2, truncate, round, ceiling, floor, isItNaN, even, odd, gcd, lcm;\nmax = curry$(function(x$, y$){\n  return x$ > y$ ? x$ : y$;\n});\nmin = curry$(function(x$, y$){\n  return x$ < y$ ? x$ : y$;\n});\nnegate = function(x){\n  return -x;\n};\nabs = Math.abs;\nsignum = function(x){\n  if (x < 0) {\n    return -1;\n  } else if (x > 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\nquot = curry$(function(x, y){\n  return ~~(x / y);\n});\nrem = curry$(function(x$, y$){\n  return x$ % y$;\n});\ndiv = curry$(function(x, y){\n  return Math.floor(x / y);\n});\nmod = curry$(function(x$, y$){\n  var ref$;\n  return ((x$) % (ref$ = y$) + ref$) % ref$;\n});\nrecip = (function(it){\n  return 1 / it;\n});\npi = Math.PI;\ntau = pi * 2;\nexp = Math.exp;\nsqrt = Math.sqrt;\nln = Math.log;\npow = curry$(function(x$, y$){\n  return Math.pow(x$, y$);\n});\nsin = Math.sin;\ntan = Math.tan;\ncos = Math.cos;\nasin = Math.asin;\nacos = Math.acos;\natan = Math.atan;\natan2 = curry$(function(x, y){\n  return Math.atan2(x, y);\n});\ntruncate = function(x){\n  return ~~x;\n};\nround = Math.round;\nceiling = Math.ceil;\nfloor = Math.floor;\nisItNaN = function(x){\n  return x !== x;\n};\neven = function(x){\n  return x % 2 === 0;\n};\nodd = function(x){\n  return x % 2 !== 0;\n};\ngcd = curry$(function(x, y){\n  var z;\n  x = Math.abs(x);\n  y = Math.abs(y);\n  while (y !== 0) {\n    z = x % y;\n    x = y;\n    y = z;\n  }\n  return x;\n});\nlcm = curry$(function(x, y){\n  return Math.abs(Math.floor(x / gcd(x, y) * y));\n});\nmodule.exports = {\n  max: max,\n  min: min,\n  negate: negate,\n  abs: abs,\n  signum: signum,\n  quot: quot,\n  rem: rem,\n  div: div,\n  mod: mod,\n  recip: recip,\n  pi: pi,\n  tau: tau,\n  exp: exp,\n  sqrt: sqrt,\n  ln: ln,\n  pow: pow,\n  sin: sin,\n  tan: tan,\n  cos: cos,\n  acos: acos,\n  asin: asin,\n  atan: atan,\n  atan2: atan2,\n  truncate: truncate,\n  round: round,\n  ceiling: ceiling,\n  floor: floor,\n  isItNaN: isItNaN,\n  even: even,\n  odd: odd,\n  gcd: gcd,\n  lcm: lcm\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.6.0\nvar values, keys, pairsToObj, objToPairs, listsToObj, objToLists, empty, each, map, compact, filter, reject, partition, find;\nvalues = function(object){\n  var i$, x, results$ = [];\n  for (i$ in object) {\n    x = object[i$];\n    results$.push(x);\n  }\n  return results$;\n};\nkeys = function(object){\n  var x, results$ = [];\n  for (x in object) {\n    results$.push(x);\n  }\n  return results$;\n};\npairsToObj = function(object){\n  var i$, len$, x, resultObj$ = {};\n  for (i$ = 0, len$ = object.length; i$ < len$; ++i$) {\n    x = object[i$];\n    resultObj$[x[0]] = x[1];\n  }\n  return resultObj$;\n};\nobjToPairs = function(object){\n  var key, value, results$ = [];\n  for (key in object) {\n    value = object[key];\n    results$.push([key, value]);\n  }\n  return results$;\n};\nlistsToObj = curry$(function(keys, values){\n  var i$, len$, i, key, resultObj$ = {};\n  for (i$ = 0, len$ = keys.length; i$ < len$; ++i$) {\n    i = i$;\n    key = keys[i$];\n    resultObj$[key] = values[i];\n  }\n  return resultObj$;\n});\nobjToLists = function(object){\n  var keys, values, key, value;\n  keys = [];\n  values = [];\n  for (key in object) {\n    value = object[key];\n    keys.push(key);\n    values.push(value);\n  }\n  return [keys, values];\n};\nempty = function(object){\n  var x;\n  for (x in object) {\n    return false;\n  }\n  return true;\n};\neach = curry$(function(f, object){\n  var i$, x;\n  for (i$ in object) {\n    x = object[i$];\n    f(x);\n  }\n  return object;\n});\nmap = curry$(function(f, object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    resultObj$[k] = f(x);\n  }\n  return resultObj$;\n});\ncompact = function(object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    if (x) {\n      resultObj$[k] = x;\n    }\n  }\n  return resultObj$;\n};\nfilter = curry$(function(f, object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    if (f(x)) {\n      resultObj$[k] = x;\n    }\n  }\n  return resultObj$;\n});\nreject = curry$(function(f, object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    if (!f(x)) {\n      resultObj$[k] = x;\n    }\n  }\n  return resultObj$;\n});\npartition = curry$(function(f, object){\n  var passed, failed, k, x;\n  passed = {};\n  failed = {};\n  for (k in object) {\n    x = object[k];\n    (f(x) ? passed : failed)[k] = x;\n  }\n  return [passed, failed];\n});\nfind = curry$(function(f, object){\n  var i$, x;\n  for (i$ in object) {\n    x = object[i$];\n    if (f(x)) {\n      return x;\n    }\n  }\n});\nmodule.exports = {\n  values: values,\n  keys: keys,\n  pairsToObj: pairsToObj,\n  objToPairs: objToPairs,\n  listsToObj: listsToObj,\n  objToLists: objToLists,\n  empty: empty,\n  each: each,\n  map: map,\n  filter: filter,\n  compact: compact,\n  reject: reject,\n  partition: partition,\n  find: find\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.6.0\nvar split, join, lines, unlines, words, unwords, chars, unchars, reverse, repeat, capitalize, camelize, dasherize;\nsplit = curry$(function(sep, str){\n  return str.split(sep);\n});\njoin = curry$(function(sep, xs){\n  return xs.join(sep);\n});\nlines = function(str){\n  if (!str.length) {\n    return [];\n  }\n  return str.split('\\n');\n};\nunlines = function(it){\n  return it.join('\\n');\n};\nwords = function(str){\n  if (!str.length) {\n    return [];\n  }\n  return str.split(/[ ]+/);\n};\nunwords = function(it){\n  return it.join(' ');\n};\nchars = function(it){\n  return it.split('');\n};\nunchars = function(it){\n  return it.join('');\n};\nreverse = function(str){\n  return str.split('').reverse().join('');\n};\nrepeat = curry$(function(n, str){\n  var result, i$;\n  result = '';\n  for (i$ = 0; i$ < n; ++i$) {\n    result += str;\n  }\n  return result;\n});\ncapitalize = function(str){\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\ncamelize = function(it){\n  return it.replace(/[-_]+(.)?/g, function(arg$, c){\n    return (c != null ? c : '').toUpperCase();\n  });\n};\ndasherize = function(str){\n  return str.replace(/([^-A-Z])([A-Z]+)/g, function(arg$, lower, upper){\n    return lower + \"-\" + (upper.length > 1\n      ? upper\n      : upper.toLowerCase());\n  }).replace(/^([A-Z]+)/, function(arg$, upper){\n    if (upper.length > 1) {\n      return upper + \"-\";\n    } else {\n      return upper.toLowerCase();\n    }\n  });\n};\nmodule.exports = {\n  split: split,\n  join: join,\n  lines: lines,\n  unlines: unlines,\n  words: words,\n  unwords: unwords,\n  chars: chars,\n  unchars: unchars,\n  reverse: reverse,\n  repeat: repeat,\n  capitalize: capitalize,\n  camelize: camelize,\n  dasherize: dasherize\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.6.0\nvar Func, List, Obj, Str, Num, id, isType, replicate, prelude, toString$ = {}.toString;\nFunc = require('./Func.js');\nList = require('./List.js');\nObj = require('./Obj.js');\nStr = require('./Str.js');\nNum = require('./Num.js');\nid = function(x){\n  return x;\n};\nisType = curry$(function(type, x){\n  return toString$.call(x).slice(8, -1) === type;\n});\nreplicate = curry$(function(n, x){\n  var i$, results$ = [];\n  for (i$ = 0; i$ < n; ++i$) {\n    results$.push(x);\n  }\n  return results$;\n});\nStr.empty = List.empty;\nStr.slice = List.slice;\nStr.take = List.take;\nStr.drop = List.drop;\nStr.splitAt = List.splitAt;\nStr.takeWhile = List.takeWhile;\nStr.dropWhile = List.dropWhile;\nStr.span = List.span;\nStr.breakStr = List.breakList;\nprelude = {\n  Func: Func,\n  List: List,\n  Obj: Obj,\n  Str: Str,\n  Num: Num,\n  id: id,\n  isType: isType,\n  replicate: replicate\n};\nprelude.each = List.each;\nprelude.map = List.map;\nprelude.filter = List.filter;\nprelude.compact = List.compact;\nprelude.reject = List.reject;\nprelude.partition = List.partition;\nprelude.find = List.find;\nprelude.head = List.head;\nprelude.first = List.first;\nprelude.tail = List.tail;\nprelude.last = List.last;\nprelude.initial = List.initial;\nprelude.empty = List.empty;\nprelude.reverse = List.reverse;\nprelude.difference = List.difference;\nprelude.intersection = List.intersection;\nprelude.union = List.union;\nprelude.countBy = List.countBy;\nprelude.groupBy = List.groupBy;\nprelude.fold = List.fold;\nprelude.foldl = List.foldl;\nprelude.fold1 = List.fold1;\nprelude.foldl1 = List.foldl1;\nprelude.foldr = List.foldr;\nprelude.foldr1 = List.foldr1;\nprelude.unfoldr = List.unfoldr;\nprelude.andList = List.andList;\nprelude.orList = List.orList;\nprelude.any = List.any;\nprelude.all = List.all;\nprelude.unique = List.unique;\nprelude.uniqueBy = List.uniqueBy;\nprelude.sort = List.sort;\nprelude.sortWith = List.sortWith;\nprelude.sortBy = List.sortBy;\nprelude.sum = List.sum;\nprelude.product = List.product;\nprelude.mean = List.mean;\nprelude.average = List.average;\nprelude.concat = List.concat;\nprelude.concatMap = List.concatMap;\nprelude.flatten = List.flatten;\nprelude.maximum = List.maximum;\nprelude.minimum = List.minimum;\nprelude.maximumBy = List.maximumBy;\nprelude.minimumBy = List.minimumBy;\nprelude.scan = List.scan;\nprelude.scanl = List.scanl;\nprelude.scan1 = List.scan1;\nprelude.scanl1 = List.scanl1;\nprelude.scanr = List.scanr;\nprelude.scanr1 = List.scanr1;\nprelude.slice = List.slice;\nprelude.take = List.take;\nprelude.drop = List.drop;\nprelude.splitAt = List.splitAt;\nprelude.takeWhile = List.takeWhile;\nprelude.dropWhile = List.dropWhile;\nprelude.span = List.span;\nprelude.breakList = List.breakList;\nprelude.zip = List.zip;\nprelude.zipWith = List.zipWith;\nprelude.zipAll = List.zipAll;\nprelude.zipAllWith = List.zipAllWith;\nprelude.at = List.at;\nprelude.elemIndex = List.elemIndex;\nprelude.elemIndices = List.elemIndices;\nprelude.findIndex = List.findIndex;\nprelude.findIndices = List.findIndices;\nprelude.apply = Func.apply;\nprelude.curry = Func.curry;\nprelude.flip = Func.flip;\nprelude.fix = Func.fix;\nprelude.over = Func.over;\nprelude.split = Str.split;\nprelude.join = Str.join;\nprelude.lines = Str.lines;\nprelude.unlines = Str.unlines;\nprelude.words = Str.words;\nprelude.unwords = Str.unwords;\nprelude.chars = Str.chars;\nprelude.unchars = Str.unchars;\nprelude.repeat = Str.repeat;\nprelude.capitalize = Str.capitalize;\nprelude.camelize = Str.camelize;\nprelude.dasherize = Str.dasherize;\nprelude.values = Obj.values;\nprelude.keys = Obj.keys;\nprelude.pairsToObj = Obj.pairsToObj;\nprelude.objToPairs = Obj.objToPairs;\nprelude.listsToObj = Obj.listsToObj;\nprelude.objToLists = Obj.objToLists;\nprelude.max = Num.max;\nprelude.min = Num.min;\nprelude.negate = Num.negate;\nprelude.abs = Num.abs;\nprelude.signum = Num.signum;\nprelude.quot = Num.quot;\nprelude.rem = Num.rem;\nprelude.div = Num.div;\nprelude.mod = Num.mod;\nprelude.recip = Num.recip;\nprelude.pi = Num.pi;\nprelude.tau = Num.tau;\nprelude.exp = Num.exp;\nprelude.sqrt = Num.sqrt;\nprelude.ln = Num.ln;\nprelude.pow = Num.pow;\nprelude.sin = Num.sin;\nprelude.tan = Num.tan;\nprelude.cos = Num.cos;\nprelude.acos = Num.acos;\nprelude.asin = Num.asin;\nprelude.atan = Num.atan;\nprelude.atan2 = Num.atan2;\nprelude.truncate = Num.truncate;\nprelude.round = Num.round;\nprelude.ceiling = Num.ceiling;\nprelude.floor = Num.floor;\nprelude.isItNaN = Num.isItNaN;\nprelude.even = Num.even;\nprelude.odd = Num.odd;\nprelude.gcd = Num.gcd;\nprelude.lcm = Num.lcm;\nprelude.VERSION = '1.2.1';\nmodule.exports = prelude;\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.5.0\n(function(){\n  var libvorbis, encoder_init, encoder_stream_init, encoder_clear, encoder_analysis_buffer, encoder_process, encoder_data_len, encoder_transfer_data, HEAPU8, HEAPU32, HEAPF32, ref$, keys, each, map, apply, at, encoder_set_tag, setTags, Encoder, slice$ = [].slice;\n  libvorbis = require('./libvorbis.js'), encoder_init = libvorbis._encoder_init, encoder_stream_init = libvorbis._encoder_stream_init, encoder_clear = libvorbis._encoder_clear, encoder_analysis_buffer = libvorbis._encoder_analysis_buffer, encoder_process = libvorbis._encoder_process, encoder_data_len = libvorbis._encoder_data_len, encoder_transfer_data = libvorbis._encoder_transfer_data, HEAPU8 = libvorbis.HEAPU8, HEAPU32 = libvorbis.HEAPU32, HEAPF32 = libvorbis.HEAPF32;\n  ref$ = require('prelude-ls'), keys = ref$.keys, each = ref$.each, map = ref$.map, apply = ref$.apply, at = ref$.at;\n  encoder_set_tag = libvorbis.cwrap('encoder_set_tag', void 8, ['number', 'string', 'string']);\n  setTags = function(encoder, tags){\n    return each(compose$(function(it){\n      return [encoder, it, tags[it].toString()];\n    }, apply(encoder_set_tag)))(\n    keys(\n    tags));\n  };\n  module.exports = Encoder = (function(){\n    Encoder.displayName = 'Encoder';\n    var prototype = Encoder.prototype, constructor = Encoder;\n    function Encoder(sampleRate, numChannels, quality, tags){\n      tags == null && (tags = {});\n      this.numChannels = numChannels;\n      this.oggBuffers = [];\n      this.encoder = encoder_init(numChannels, sampleRate, quality);\n      setTags(this.encoder, (tags.ENCODER = 'vorbis-encoder-js', tags));\n      encoder_stream_init(this.encoder);\n    }\n    Encoder.prototype.encodeFrom = function(audioBuffer){\n      var this$ = this;\n      return each(bind$(this, 'encode'))(\n      function(data){\n        var buffers, i$, to$, i;\n        buffers = [];\n        for (i$ = 0, to$ = data[0].length; i$ <= to$; i$ += 4096) {\n          i = i$;\n          bind$(buffers, 'push')(\n          map(compose$(partialize$.apply(this$, [at, [void 8, data], [0]]), fn$))(\n          (fn1$.call(this$))));\n        }\n        return buffers;\n        function fn$(it){\n          return it.slice(i, i + 4096);\n        }\n        function fn1$(){\n          var i$, to$, results$ = [];\n          for (i$ = 0, to$ = this.numChannels; i$ < to$; ++i$) {\n            results$.push(i$);\n          }\n          return results$;\n        }\n      }(\n      map(function(it){\n        return audioBuffer.getChannelData(it);\n      })(\n      (function(){\n        var i$, to$, results$ = [];\n        for (i$ = 0, to$ = this.numChannels; i$ < to$; ++i$) {\n          results$.push(i$);\n        }\n        return results$;\n      }.call(this)))));\n    };\n    Encoder.prototype.encode = function(buffers){\n      var length, analysis_buffer, i$, to$, ch;\n      length = buffers[0].length;\n      analysis_buffer = encoder_analysis_buffer(this.encoder, buffers[0].length) >> 2;\n      for (i$ = 0, to$ = this.numChannels; i$ < to$; ++i$) {\n        ch = i$;\n        HEAPF32.set(buffers[ch], HEAPU32[analysis_buffer + ch] >> 2);\n      }\n      return this.process(length);\n    };\n    Encoder.prototype.finish = function(mimeType){\n      var blob;\n      this.process(0);\n      blob = new Blob(this.oggBuffers, {\n        type: mimeType || 'audio/ogg'\n      });\n      this.cleanup();\n      return blob;\n    };\n    Encoder.prototype.cancel = function(){\n      var ref$;\n      encoder_clear(this.encoder);\n      delete this.encoder;\n      return ref$ = this.oggBuffers, delete this.oggBuffers, ref$;\n    };\n    Encoder.prototype.cleanup = function(){\n      return this.cancel();\n    };\n    Encoder.prototype.process = function(length){\n      var len, data;\n      encoder_process(this.encoder, length);\n      len = encoder_data_len(this.encoder);\n      if (len > 0) {\n        data = encoder_transfer_data(this.encoder);\n        return bind$(this.oggBuffers, 'push')(\n        function(it){\n          return new Uint8Array(it);\n        }(\n        HEAPU8.subarray(data, data + len)));\n      }\n    };\n    return Encoder;\n  }());\n  function compose$() {\n    var functions = arguments;\n    return function() {\n      var i, result;\n      result = functions[0].apply(this, arguments);\n      for (i = 1; i < functions.length; ++i) {\n        result = functions[i](result);\n      }\n      return result;\n    };\n  }\n  function bind$(obj, key, target){\n    return function(){ return (target || obj)[key].apply(obj, arguments) };\n  }\n  function partialize$(f, args, where){\n    var context = this;\n    return function(){\n      var params = slice$.call(arguments), i,\n          len = params.length, wlen = where.length,\n          ta = args ? args.concat() : [], tw = where ? where.concat() : [];\n      for(i = 0; i < len; ++i) { ta[tw[0]] = params[i]; tw.shift(); }\n      return len < wlen && len ?\n        partialize$.apply(context, [f, ta, tw]) : f.apply(context, ta);\n    };\n  }\n}).call(this);\n","// The Module object: Our interface to the outside world. We import\n// and export values on it, and do the work to get that through\n// closure compiler if necessary. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to do an eval in order to handle the closure compiler\n// case, where this code here is minified but Module was defined\n// elsewhere (e.g. case 4 above). We also need to check if Module\n// already exists (e.g. case 3 above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module;\nif (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nfor (var key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\n// The environment setup code below is customized to use Module.\n// *** Environment setup code ***\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\nif (Module['ENVIRONMENT']) {\n  if (Module['ENVIRONMENT'] === 'WEB') {\n    ENVIRONMENT_IS_WEB = true;\n  } else if (Module['ENVIRONMENT'] === 'WORKER') {\n    ENVIRONMENT_IS_WORKER = true;\n  } else if (Module['ENVIRONMENT'] === 'NODE') {\n    ENVIRONMENT_IS_NODE = true;\n  } else if (Module['ENVIRONMENT'] === 'SHELL') {\n    ENVIRONMENT_IS_SHELL = true;\n  } else {\n    throw new Error('The provided Module[\\'ENVIRONMENT\\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');\n  }\n} else {\n  ENVIRONMENT_IS_WEB = typeof window === 'object';\n  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\n  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\n  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n}\n\n\nif (ENVIRONMENT_IS_NODE) {\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  if (!Module['print']) Module['print'] = console.log;\n  if (!Module['printErr']) Module['printErr'] = console.warn;\n\n  var nodeFS;\n  var nodePath;\n\n  Module['read'] = function shell_read(filename, binary) {\n    if (!nodeFS) nodeFS = require('fs');\n    if (!nodePath) nodePath = require('path');\n    filename = nodePath['normalize'](filename);\n    var ret = nodeFS['readFileSync'](filename);\n    return binary ? ret : ret.toString();\n  };\n\n  Module['readBinary'] = function readBinary(filename) {\n    var ret = Module['read'](filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  Module['load'] = function load(f) {\n    globalEval(read(f));\n  };\n\n  if (!Module['thisProgram']) {\n    if (process['argv'].length > 1) {\n      Module['thisProgram'] = process['argv'][1].replace(/\\\\/g, '/');\n    } else {\n      Module['thisProgram'] = 'unknown-program';\n    }\n  }\n\n  Module['arguments'] = process['argv'].slice(2);\n\n  if (typeof module !== 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n}\nelse if (ENVIRONMENT_IS_SHELL) {\n  if (!Module['print']) Module['print'] = print;\n  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm\n\n  if (typeof read != 'undefined') {\n    Module['read'] = read;\n  } else {\n    Module['read'] = function shell_read() { throw 'no read() available' };\n  }\n\n  Module['readBinary'] = function readBinary(f) {\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    var data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    Module['arguments'] = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    Module['quit'] = function(status, toThrow) {\n      quit(status);\n    }\n  }\n\n}\nelse if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  Module['read'] = function shell_read(url) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    Module['readBinary'] = function readBinary(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return xhr.response;\n    };\n  }\n\n  Module['readAsync'] = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n      } else {\n        onerror();\n      }\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n  if (typeof console !== 'undefined') {\n    if (!Module['print']) Module['print'] = function shell_print(x) {\n      console.log(x);\n    };\n    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {\n      console.warn(x);\n    };\n  } else {\n    // Probably a worker, and without console.log. We can do very little here...\n    var TRY_USE_DUMP = false;\n    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== \"undefined\") ? (function(x) {\n      dump(x);\n    }) : (function(x) {\n      // self.postMessage(x); // enable this if you want stdout to be sent as messages\n    }));\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    Module['load'] = importScripts;\n  }\n\n  if (typeof Module['setWindowTitle'] === 'undefined') {\n    Module['setWindowTitle'] = function(title) { document.title = title };\n  }\n}\nelse {\n  // Unreachable because SHELL is dependant on the others\n  throw 'Unknown runtime environment. Where are we?';\n}\n\nfunction globalEval(x) {\n  eval.call(null, x);\n}\nif (!Module['load'] && Module['read']) {\n  Module['load'] = function load(f) {\n    globalEval(Module['read'](f));\n  };\n}\nif (!Module['print']) {\n  Module['print'] = function(){};\n}\nif (!Module['printErr']) {\n  Module['printErr'] = Module['print'];\n}\nif (!Module['arguments']) {\n  Module['arguments'] = [];\n}\nif (!Module['thisProgram']) {\n  Module['thisProgram'] = './this.program';\n}\nif (!Module['quit']) {\n  Module['quit'] = function(status, toThrow) {\n    throw toThrow;\n  }\n}\n\n// *** Environment setup code ***\n\n// Closure helpers\nModule.print = Module['print'];\nModule.printErr = Module['printErr'];\n\n// Callbacks\nModule['preRun'] = [];\nModule['postRun'] = [];\n\n// Merge back in the overrides\nfor (var key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = undefined;\n\n\n\n// {{PREAMBLE_ADDITIONS}}\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n//========================================\n// Runtime code shared with compiler\n//========================================\n\nvar Runtime = {\n  setTempRet0: function (value) {\n    tempRet0 = value;\n    return value;\n  },\n  getTempRet0: function () {\n    return tempRet0;\n  },\n  stackSave: function () {\n    return STACKTOP;\n  },\n  stackRestore: function (stackTop) {\n    STACKTOP = stackTop;\n  },\n  getNativeTypeSize: function (type) {\n    switch (type) {\n      case 'i1': case 'i8': return 1;\n      case 'i16': return 2;\n      case 'i32': return 4;\n      case 'i64': return 8;\n      case 'float': return 4;\n      case 'double': return 8;\n      default: {\n        if (type[type.length-1] === '*') {\n          return Runtime.QUANTUM_SIZE; // A pointer\n        } else if (type[0] === 'i') {\n          var bits = parseInt(type.substr(1));\n          assert(bits % 8 === 0);\n          return bits/8;\n        } else {\n          return 0;\n        }\n      }\n    }\n  },\n  getNativeFieldSize: function (type) {\n    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);\n  },\n  STACK_ALIGN: 16,\n  prepVararg: function (ptr, type) {\n    if (type === 'double' || type === 'i64') {\n      // move so the load is aligned\n      if (ptr & 7) {\n        assert((ptr & 7) === 4);\n        ptr += 4;\n      }\n    } else {\n      assert((ptr & 3) === 0);\n    }\n    return ptr;\n  },\n  getAlignSize: function (type, size, vararg) {\n    // we align i64s and doubles on 64-bit boundaries, unlike x86\n    if (!vararg && (type == 'i64' || type == 'double')) return 8;\n    if (!type) return Math.min(size, 8); // align structures internally to 64 bits\n    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);\n  },\n  dynCall: function (sig, ptr, args) {\n    if (args && args.length) {\n      assert(args.length == sig.length-1);\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n    } else {\n      assert(sig.length == 1);\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n      return Module['dynCall_' + sig].call(null, ptr);\n    }\n  },\n  functionPointers: [],\n  addFunction: function (func) {\n    for (var i = 0; i < Runtime.functionPointers.length; i++) {\n      if (!Runtime.functionPointers[i]) {\n        Runtime.functionPointers[i] = func;\n        return 2*(1 + i);\n      }\n    }\n    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n  },\n  removeFunction: function (index) {\n    Runtime.functionPointers[(index-2)/2] = null;\n  },\n  warnOnce: function (text) {\n    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};\n    if (!Runtime.warnOnce.shown[text]) {\n      Runtime.warnOnce.shown[text] = 1;\n      Module.printErr(text);\n    }\n  },\n  funcWrappers: {},\n  getFuncWrapper: function (func, sig) {\n    assert(sig);\n    if (!Runtime.funcWrappers[sig]) {\n      Runtime.funcWrappers[sig] = {};\n    }\n    var sigCache = Runtime.funcWrappers[sig];\n    if (!sigCache[func]) {\n      // optimize away arguments usage in common cases\n      if (sig.length === 1) {\n        sigCache[func] = function dynCall_wrapper() {\n          return Runtime.dynCall(sig, func);\n        };\n      } else if (sig.length === 2) {\n        sigCache[func] = function dynCall_wrapper(arg) {\n          return Runtime.dynCall(sig, func, [arg]);\n        };\n      } else {\n        // general case\n        sigCache[func] = function dynCall_wrapper() {\n          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));\n        };\n      }\n    }\n    return sigCache[func];\n  },\n  getCompilerSetting: function (name) {\n    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';\n  },\n  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },\n  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },\n  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},\n  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },\n  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },\n  GLOBAL_BASE: 8,\n  QUANTUM_SIZE: 4,\n  __dummy__: 0\n}\n\n\n\nModule[\"Runtime\"] = Runtime;\n\n\n\n//========================================\n// Runtime essentials\n//========================================\n\nvar ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\nvar globalScope = this;\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  if (!func) {\n    try { func = eval('_' + ident); } catch(e) {}\n  }\n  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');\n  return func;\n}\n\nvar cwrap, ccall;\n(function(){\n  var JSfuncs = {\n    // Helpers for cwrap -- it can't refer to Runtime directly because it might\n    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find\n    // out what the minified function name is.\n    'stackSave': function() {\n      Runtime.stackSave()\n    },\n    'stackRestore': function() {\n      Runtime.stackRestore()\n    },\n    // type conversion from js to c\n    'arrayToC' : function(arr) {\n      var ret = Runtime.stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    },\n    'stringToC' : function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = Runtime.stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    }\n  };\n  // For fast lookup of conversion functions\n  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};\n\n  // C calling interface.\n  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {\n    var func = getCFunc(ident);\n    var cArgs = [];\n    var stack = 0;\n    assert(returnType !== 'array', 'Return type should not be \"array\".');\n    if (args) {\n      for (var i = 0; i < args.length; i++) {\n        var converter = toC[argTypes[i]];\n        if (converter) {\n          if (stack === 0) stack = Runtime.stackSave();\n          cArgs[i] = converter(args[i]);\n        } else {\n          cArgs[i] = args[i];\n        }\n      }\n    }\n    var ret = func.apply(null, cArgs);\n    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {\n      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');\n    }\n    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');\n    if (returnType === 'string') ret = Pointer_stringify(ret);\n    if (stack !== 0) {\n      if (opts && opts.async) {\n        EmterpreterAsync.asyncFinalizers.push(function() {\n          Runtime.stackRestore(stack);\n        });\n        return;\n      }\n      Runtime.stackRestore(stack);\n    }\n    return ret;\n  }\n\n  var sourceRegex = /^function\\s*[a-zA-Z$_0-9]*\\s*\\(([^)]*)\\)\\s*{\\s*([^*]*?)[\\s;]*(?:return\\s*(.*?)[;\\s]*)?}$/;\n  function parseJSFunc(jsfunc) {\n    // Match the body and the return value of a javascript function source\n    var parsed = jsfunc.toString().match(sourceRegex).slice(1);\n    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}\n  }\n\n  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file\n  var JSsource = null;\n  function ensureJSsource() {\n    if (!JSsource) {\n      JSsource = {};\n      for (var fun in JSfuncs) {\n        if (JSfuncs.hasOwnProperty(fun)) {\n          // Elements of toCsource are arrays of three items:\n          // the code, and the return value\n          JSsource[fun] = parseJSFunc(JSfuncs[fun]);\n        }\n      }\n    }\n  }\n\n  cwrap = function cwrap(ident, returnType, argTypes) {\n    argTypes = argTypes || [];\n    var cfunc = getCFunc(ident);\n    // When the function takes numbers and returns a number, we can just return\n    // the original function\n    var numericArgs = argTypes.every(function(type){ return type === 'number'});\n    var numericRet = (returnType !== 'string');\n    if ( numericRet && numericArgs) {\n      return cfunc;\n    }\n    // Creation of the arguments list ([\"$1\",\"$2\",...,\"$nargs\"])\n    var argNames = argTypes.map(function(x,i){return '$'+i});\n    var funcstr = \"(function(\" + argNames.join(',') + \") {\";\n    var nargs = argTypes.length;\n    if (!numericArgs) {\n      // Generate the code needed to convert the arguments from javascript\n      // values to pointers\n      ensureJSsource();\n      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';\n      for (var i = 0; i < nargs; i++) {\n        var arg = argNames[i], type = argTypes[i];\n        if (type === 'number') continue;\n        var convertCode = JSsource[type + 'ToC']; // [code, return]\n        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';\n        funcstr += convertCode.body + ';';\n        funcstr += arg + '=(' + convertCode.returnValue + ');';\n      }\n    }\n\n    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore\n    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;\n    // Call the function\n    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';\n    if (!numericRet) { // Return type can only by 'string' or 'number'\n      // Convert the result to a string\n      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;\n      funcstr += 'ret = ' + strgfy + '(ret);';\n    }\n    funcstr += \"if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }\";\n    if (!numericArgs) {\n      // If we had a stack, restore it\n      ensureJSsource();\n      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';\n    }\n    funcstr += 'return ret})';\n    return eval(funcstr);\n  };\n})();\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\n\n/** @type {function(number, number, string, boolean=)} */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\nModule[\"setValue\"] = setValue;\n\n/** @type {function(number, string, boolean=)} */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for setValue: ' + type);\n    }\n  return null;\n}\nModule[\"getValue\"] = getValue;\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_STATIC = 2; // Cannot be freed\nvar ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 4; // Do not allocate\nModule[\"ALLOC_NORMAL\"] = ALLOC_NORMAL;\nModule[\"ALLOC_STACK\"] = ALLOC_STACK;\nModule[\"ALLOC_STATIC\"] = ALLOC_STATIC;\nModule[\"ALLOC_DYNAMIC\"] = ALLOC_DYNAMIC;\nModule[\"ALLOC_NONE\"] = ALLOC_NONE;\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var ptr = ret, stop;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    if (typeof curr === 'function') {\n      curr = Runtime.getFunctionIndex(curr);\n    }\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n    assert(type, 'Must know what type to store in allocate!');\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = Runtime.getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\nModule[\"allocate\"] = allocate;\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!staticSealed) return Runtime.staticAlloc(size);\n  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);\n  return _malloc(size);\n}\nModule[\"getMemory\"] = getMemory;\n\n/** @type {function(number, number=)} */\nfunction Pointer_stringify(ptr, length) {\n  if (length === 0 || !ptr) return '';\n  // TODO: use TextDecoder\n  // Find the length, and check for UTF while doing so\n  var hasUtf = 0;\n  var t;\n  var i = 0;\n  while (1) {\n    assert(ptr + i < TOTAL_MEMORY);\n    t = HEAPU8[(((ptr)+(i))>>0)];\n    hasUtf |= t;\n    if (t == 0 && !length) break;\n    i++;\n    if (length && i == length) break;\n  }\n  if (!length) length = i;\n\n  var ret = '';\n\n  if (hasUtf < 128) {\n    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack\n    var curr;\n    while (length > 0) {\n      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));\n      ret = ret ? ret + curr : curr;\n      ptr += MAX_CHUNK;\n      length -= MAX_CHUNK;\n    }\n    return ret;\n  }\n  return Module['UTF8ToString'](ptr);\n}\nModule[\"Pointer_stringify\"] = Pointer_stringify;\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAP8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\nModule[\"AsciiToString\"] = AsciiToString;\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\nModule[\"stringToAscii\"] = stringToAscii;\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\nfunction UTF8ArrayToString(u8Array, idx) {\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  while (u8Array[endPtr]) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var u0, u1, u2, u3, u4, u5;\n\n    var str = '';\n    while (1) {\n      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n      u0 = u8Array[idx++];\n      if (!u0) return str;\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        u3 = u8Array[idx++] & 63;\n        if ((u0 & 0xF8) == 0xF0) {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;\n        } else {\n          u4 = u8Array[idx++] & 63;\n          if ((u0 & 0xFC) == 0xF8) {\n            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;\n          } else {\n            u5 = u8Array[idx++] & 63;\n            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;\n          }\n        }\n      }\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n}\nModule[\"UTF8ArrayToString\"] = UTF8ArrayToString;\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction UTF8ToString(ptr) {\n  return UTF8ArrayToString(HEAPU8,ptr);\n}\nModule[\"UTF8ToString\"] = UTF8ToString;\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0x1FFFFF) {\n      if (outIdx + 3 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0x3FFFFFF) {\n      if (outIdx + 4 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF8 | (u >> 24);\n      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 5 >= endIdx) break;\n      outU8Array[outIdx++] = 0xFC | (u >> 30);\n      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\nModule[\"stringToUTF8Array\"] = stringToUTF8Array;\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\nModule[\"stringToUTF8\"] = stringToUTF8;\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) {\n      ++len;\n    } else if (u <= 0x7FF) {\n      len += 2;\n    } else if (u <= 0xFFFF) {\n      len += 3;\n    } else if (u <= 0x1FFFFF) {\n      len += 4;\n    } else if (u <= 0x3FFFFFF) {\n      len += 5;\n    } else {\n      len += 6;\n    }\n  }\n  return len;\n}\nModule[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\n\nfunction UTF32ToString(ptr) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n\nfunction demangle(func) {\n  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];\n  if (__cxa_demangle_func) {\n    try {\n      var s =\n        func.substr(1);\n      var len = lengthBytesUTF8(s)+1;\n      var buf = _malloc(len);\n      stringToUTF8(s, buf, len);\n      var status = _malloc(4);\n      var ret = __cxa_demangle_func(buf, 0, 0, status);\n      if (getValue(status, 'i32') === 0 && ret) {\n        return Pointer_stringify(ret);\n      }\n      // otherwise, libcxxabi failed\n    } catch(e) {\n      // ignore problems here\n    } finally {\n      if (buf) _free(buf);\n      if (status) _free(status);\n      if (ret) _free(ret);\n    }\n    // failure when using libcxxabi, don't demangle\n    return func;\n  }\n  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\n  return func;\n}\n\nfunction demangleAll(text) {\n  var regex =\n    /__Z[\\w\\d_]+/g;\n  return text.replace(regex,\n    function(x) {\n      var y = demangle(x);\n      return x === y ? x : (x + ' [' + y + ']');\n    });\n}\n\nfunction jsStackTrace() {\n  var err = new Error();\n  if (!err.stack) {\n    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n    // so try that as a special-case.\n    try {\n      throw new Error(0);\n    } catch(e) {\n      err = e;\n    }\n    if (!err.stack) {\n      return '(no stack trace available)';\n    }\n  }\n  return err.stack.toString();\n}\n\nfunction stackTrace() {\n  var js = jsStackTrace();\n  if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n  return demangleAll(js);\n}\nModule[\"stackTrace\"] = stackTrace;\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\nvar MIN_TOTAL_MEMORY = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBuffer(buf) {\n  Module['buffer'] = buffer = buf;\n}\n\nfunction updateGlobalBufferViews() {\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\n}\n\nvar STATIC_BASE, STATICTOP, staticSealed; // static area\nvar STACK_BASE, STACKTOP, STACK_MAX; // stack area\nvar DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk\n\n  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;\n  staticSealed = false;\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  assert((STACK_MAX & 3) == 0);\n  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;\n  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;\n}\n\nfunction checkStackCookie() {\n  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));\n  }\n  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.\n  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';\n}\n\nfunction abortStackOverflow(allocSize) {\n  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - Module['asm'].stackSave() + allocSize) + ' bytes available!');\n}\n\nfunction abortOnCannotGrowMemory() {\n  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');\n}\n\n\nfunction enlargeMemory() {\n  abortOnCannotGrowMemory();\n}\n\n\nvar TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;\nvar TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;\nif (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\n\n// Initialize the runtime's memory\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,\n       'JS engine does not provide full typed array support');\n\n\n\n// Use a provided buffer, if there is one, or else allocate a new one\nif (Module['buffer']) {\n  buffer = Module['buffer'];\n  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);\n} else {\n  // Use a WebAssembly memory where available\n  {\n    buffer = new ArrayBuffer(TOTAL_MEMORY);\n  }\n  assert(buffer.byteLength === TOTAL_MEMORY);\n}\nupdateGlobalBufferViews();\n\n\nfunction getTotalMemory() {\n  return TOTAL_MEMORY;\n}\n\n// Endianness check (note: assumes compiler arch was little-endian)\n  HEAP32[0] = 0x63736d65; /* 'emsc' */\nHEAP16[1] = 0x6373;\nif (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';\n\nModule['HEAP'] = HEAP;\nModule['buffer'] = buffer;\nModule['HEAP8'] = HEAP8;\nModule['HEAP16'] = HEAP16;\nModule['HEAP32'] = HEAP32;\nModule['HEAPU8'] = HEAPU8;\nModule['HEAPU16'] = HEAPU16;\nModule['HEAPU32'] = HEAPU32;\nModule['HEAPF32'] = HEAPF32;\nModule['HEAPF64'] = HEAPF64;\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the runtime has exited\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n  // compatibility - merge in anything from Module['preRun'] at this time\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction ensureInitRuntime() {\n  checkStackCookie();\n  if (runtimeInitialized) return;\n  runtimeInitialized = true;\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  checkStackCookie();\n  callRuntimeCallbacks(__ATEXIT__);\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  checkStackCookie();\n  // compatibility - merge in anything from Module['postRun'] at this time\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\nModule[\"addOnPreRun\"] = addOnPreRun;\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\nModule[\"addOnInit\"] = addOnInit;\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\nModule[\"addOnPreMain\"] = addOnPreMain;\n\nfunction addOnExit(cb) {\n  __ATEXIT__.unshift(cb);\n}\nModule[\"addOnExit\"] = addOnExit;\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\nModule[\"addOnPostRun\"] = addOnPostRun;\n\n// Tools\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\nModule[\"intArrayFromString\"] = intArrayFromString;\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\nModule[\"intArrayToString\"] = intArrayToString;\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\nModule[\"writeStringToMemory\"] = writeStringToMemory;\n\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n  HEAP8.set(array, buffer);\n}\nModule[\"writeArrayToMemory\"] = writeArrayToMemory;\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\nModule[\"writeAsciiToMemory\"] = writeAsciiToMemory;\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\n// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )\nif (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {\n  var ah  = a >>> 16;\n  var al = a & 0xffff;\n  var bh  = b >>> 16;\n  var bl = b & 0xffff;\n  return (al*bl + ((ah*bl + al*bh) << 16))|0;\n};\nMath.imul = Math['imul'];\n\n\nif (!Math['clz32']) Math['clz32'] = function(x) {\n  x = x >>> 0;\n  for (var i = 0; i < 32; i++) {\n    if (x & (1 << (31 - i))) return i;\n  }\n  return 32;\n};\nMath.clz32 = Math['clz32']\n\nif (!Math['trunc']) Math['trunc'] = function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n};\nMath.trunc = Math['trunc'];\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// PRE_RUN_ADDITIONS (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            Module.printErr('still waiting on run dependencies:');\n          }\n          Module.printErr('dependency: ' + dep);\n        }\n        if (shown) {\n          Module.printErr('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    Module.printErr('warning: run dependency added without ID');\n  }\n}\nModule[\"addRunDependency\"] = addRunDependency;\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    Module.printErr('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\nModule[\"removeRunDependency\"] = removeRunDependency;\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\n\nvar memoryInitializer = null;\n\n\n\nvar /* show errors on likely calls to FS when it was not included */ FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n  loadFilesFromDB: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n\n\n// === Body ===\n\nvar ASM_CONSTS = [];\n\n\n\n\nSTATIC_BASE = Runtime.GLOBAL_BASE;\n\nSTATICTOP = STATIC_BASE + 547904;\n/* global initializers */  __ATINIT__.push();\n\n\n/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,248,63,0,0,0,0,0,0,4,64,0,0,0,0,0,0,18,64,0,0,0,0,0,0,33,64,0,0,0,0,0,128,48,64,0,0,0,4,107,244,52,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,248,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,4,64,0,0,0,0,0,0,18,64,0,0,0,0,0,0,33,64,0,0,0,4,107,244,52,66,255,255,255,255,0,0,12,195,0,0,12,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,128,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,66,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,154,153,153,153,153,153,185,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,8,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,8,64,154,153,153,153,153,153,185,191,0,0,0,0,0,0,0,0,154,153,153,153,153,153,185,63,154,153,153,153,153,153,201,63,51,51,51,51,51,51,211,63,154,153,153,153,153,153,217,63,0,0,0,0,0,0,224,63,51,51,51,51,51,51,227,63,102,102,102,102,102,102,230,63,154,153,153,153,153,153,233,63,205,204,204,204,204,204,236,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,205,204,204,204,204,204,244,63,154,153,153,153,153,153,249,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,12,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,16,64,51,51,51,51,51,51,17,64,102,102,102,102,102,102,18,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,154,153,153,153,153,153,201,63,154,153,153,153,153,153,201,63,154,153,153,153,153,153,201,63,154,153,153,153,153,153,217,63,51,51,51,51,51,51,227,63,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,205,204,204,204,204,204,43,64,51,51,51,51,51,51,46,64,154,153,153,153,153,153,47,64,0,0,0,0,0,128,48,64,51,51,51,51,51,51,49,64,102,102,102,102,102,230,50,64,154,153,153,153,153,25,52,64,0,0,0,0,0,0,72,64,0,0,0,0,0,56,143,64,0,0,0,0,0,56,143,64,0,0,0,0,0,56,143,64,0,0,0,0,0,56,143,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,248,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,4,64,154,153,153,153,153,153,5,64,0,0,0,0,0,0,8,64,154,153,153,153,153,153,13,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,16,64,0,0,0,0,0,64,191,64,0,0,0,0,0,88,203,64,0,0,0,0,0,130,228,64,0,0,0,0,0,112,183,64,0,0,0,0,0,148,193,64,0,0,0,0,0,64,223,64,0,0,0,0,0,112,199,64,0,0,0,0,0,136,211,64,0,0,0,0,0,106,232,64,154,153,153,153,153,153,185,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,51,51,51,51,51,51,211,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,18,64,0,0,0,0,0,0,22,64,0,0,0,0,0,0,62,64,0,0,0,0,0,64,191,64,0,0,0,0,0,100,201,64,0,0,0,0,0,124,229,64,0,0,0,0,0,64,207,64,0,0,0,0,0,88,219,64,0,0,0,0,0,64,239,64,0,0,0,0,0,106,248,64,154,153,153,153,153,153,185,191,154,153,153,153,153,153,169,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,0,154,153,153,153,153,153,233,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,51,51,51,51,51,51,211,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,26,64,0,0,0,0,0,0,32,64,0,0,0,0,0,0,62,64,0,0,0,0,0,192,88,64,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,8,64,0,0,0,0,0,0,16,64,0,0,0,0,0,112,199,64,0,0,0,0,0,136,211,64,0,0,0,0,0,124,229,64,0,0,0,0,0,255,244,64,0,0,0,0,0,64,207,64,0,0,0,0,0,88,219,64,0,0,0,0,0,106,232,64,0,0,0,0,0,249,245,64,0,0,0,0,0,0,35,64,0,0,0,0,0,0,38,64,0,0,0,0,0,0,62,64,0,0,0,0,0,192,88,64,0,0,0,0,0,76,205,64,0,0,0,0,0,136,211,64,0,0,0,0,0,124,229,64,0,0,0,0,0,255,244,64,0,0,0,0,0,76,221,64,0,0,0,0,0,130,228,64,0,0,0,0,0,100,233,64,0,0,0,0,0,64,239,64,0,0,0,0,0,148,241,64,0,0,0,0,0,11,243,64,0,0,0,0,0,255,244,64,0,0,0,0,0,118,246,64,0,0,0,0,0,219,250,64,0,0,0,0,0,76,253,64,0,0,0,0,0,23,1,65,0,0,0,0,128,49,7,65,154,153,153,153,153,153,40,64,0,0,0,0,0,0,42,64,0,0,0,0,0,0,42,64,0,0,0,0,0,0,44,64,0,0,0,0,0,0,46,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,148,209,64,0,0,0,0,0,88,219,64,0,0,0,0,0,23,225,64,0,0,0,0,0,249,229,64,0,0,0,0,0,88,235,64,0,0,0,0,0,76,237,64,0,0,0,0,128,79,242,64,0,0,0,0,0,249,245,64,0,0,0,0,0,106,248,64,0,0,0,0,128,19,252,64,0,0,0,0,128,79,2,65,0,0,0,0,128,49,7,65,0,0,0,0,0,64,223,64,0,0,0,0,0,112,231,64,0,0,0,0,0,76,237,64,0,0,0,0,0,23,241,64,0,0,0,0,0,136,243,64,0,0,0,0,0,255,244,64,0,0,0,0,0,112,247,64,0,0,0,0,0,219,250,64,0,0,0,0,0,76,253,64,0,0,0,0,0,23,1,65,0,0,0,0,0,136,3,65,0,0,0,0,8,76,13,65,0,0,0,0,0,88,203,64,0,0,0,0,0,136,211,64,0,0,0,0,0,88,219,64,0,0,0,0,0,142,226,64,0,0,0,0,0,118,230,64,0,0,0,0,0,94,234,64,0,0,0,0,128,79,242,64,0,0,0,0,0,112,247,64,0,0,0,0,0,76,253,64,0,0,0,0,0,23,1,65,0,0,0,0,0,249,5,65,0,0,0,0,8,76,13,65,0,0,0,0,0,249,213,64,0,0,0,0,0,64,223,64,0,0,0,0,0,136,227,64,0,0,0,0,0,112,231,64,0,0,0,0,0,88,235,64,0,0,0,0,0,64,239,64,0,0,0,0,0,136,243,64,0,0,0,0,0,112,247,64,0,0,0,0,0,88,251,64,0,0,0,0,0,64,255,64,0,0,0,0,0,136,3,65,0,0,0,0,136,132,14,65,0,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,255,0,0,0,255,1,0,0,255,3,0,0,255,7,0,0,255,15,0,0,255,31,0,0,255,63,0,0,255,127,0,0,255,255,0,0,255,255,1,0,255,255,3,0,255,255,7,0,255,255,15,0,255,255,31,0,255,255,63,0,255,255,127,0,255,255,255,0,255,255,255,1,255,255,255,3,255,255,255,7,255,255,255,15,255,255,255,31,255,255,255,63,255,255,255,127,255,255,255,255,0,0,0,0,183,29,193,4,110,59,130,9,217,38,67,13,220,118,4,19,107,107,197,23,178,77,134,26,5,80,71,30,184,237,8,38,15,240,201,34,214,214,138,47,97,203,75,43,100,155,12,53,211,134,205,49,10,160,142,60,189,189,79,56,112,219,17,76,199,198,208,72,30,224,147,69,169,253,82,65,172,173,21,95,27,176,212,91,194,150,151,86,117,139,86,82,200,54,25,106,127,43,216,110,166,13,155,99,17,16,90,103,20,64,29,121,163,93,220,125,122,123,159,112,205,102,94,116,224,182,35,152,87,171,226,156,142,141,161,145,57,144,96,149,60,192,39,139,139,221,230,143,82,251,165,130,229,230,100,134,88,91,43,190,239,70,234,186,54,96,169,183,129,125,104,179,132,45,47,173,51,48,238,169,234,22,173,164,93,11,108,160,144,109,50,212,39,112,243,208,254,86,176,221,73,75,113,217,76,27,54,199,251,6,247,195,34,32,180,206,149,61,117,202,40,128,58,242,159,157,251,246,70,187,184,251,241,166,121,255,244,246,62,225,67,235,255,229,154,205,188,232,45,208,125,236,119,112,134,52,192,109,71,48,25,75,4,61,174,86,197,57,171,6,130,39,28,27,67,35,197,61,0,46,114,32,193,42,207,157,142,18,120,128,79,22,161,166,12,27,22,187,205,31,19,235,138,1,164,246,75,5,125,208,8,8,202,205,201,12,7,171,151,120,176,182,86,124,105,144,21,113,222,141,212,117,219,221,147,107,108,192,82,111,181,230,17,98,2,251,208,102,191,70,159,94,8,91,94,90,209,125,29,87,102,96,220,83,99,48,155,77,212,45,90,73,13,11,25,68,186,22,216,64,151,198,165,172,32,219,100,168,249,253,39,165,78,224,230,161,75,176,161,191,252,173,96,187,37,139,35,182,146,150,226,178,47,43,173,138,152,54,108,142,65,16,47,131,246,13,238,135,243,93,169,153,68,64,104,157,157,102,43,144,42,123,234,148,231,29,180,224,80,0,117,228,137,38,54,233,62,59,247,237,59,107,176,243,140,118,113,247,85,80,50,250,226,77,243,254,95,240,188,198,232,237,125,194,49,203,62,207,134,214,255,203,131,134,184,213,52,155,121,209,237,189,58,220,90,160,251,216,238,224,12,105,89,253,205,109,128,219,142,96,55,198,79,100,50,150,8,122,133,139,201,126,92,173,138,115,235,176,75,119,86,13,4,79,225,16,197,75,56,54,134,70,143,43,71,66,138,123,0,92,61,102,193,88,228,64,130,85,83,93,67,81,158,59,29,37,41,38,220,33,240,0,159,44,71,29,94,40,66,77,25,54,245,80,216,50,44,118,155,63,155,107,90,59,38,214,21,3,145,203,212,7,72,237,151,10,255,240,86,14,250,160,17,16,77,189,208,20,148,155,147,25,35,134,82,29,14,86,47,241,185,75,238,245,96,109,173,248,215,112,108,252,210,32,43,226,101,61,234,230,188,27,169,235,11,6,104,239,182,187,39,215,1,166,230,211,216,128,165,222,111,157,100,218,106,205,35,196,221,208,226,192,4,246,161,205,179,235,96,201,126,141,62,189,201,144,255,185,16,182,188,180,167,171,125,176,162,251,58,174,21,230,251,170,204,192,184,167,123,221,121,163,198,96,54,155,113,125,247,159,168,91,180,146,31,70,117,150,26,22,50,136,173,11,243,140,116,45,176,129,195,48,113,133,153,144,138,93,46,141,75,89,247,171,8,84,64,182,201,80,69,230,142,78,242,251,79,74,43,221,12,71,156,192,205,67,33,125,130,123,150,96,67,127,79,70,0,114,248,91,193,118,253,11,134,104,74,22,71,108,147,48,4,97,36,45,197,101,233,75,155,17,94,86,90,21,135,112,25,24,48,109,216,28,53,61,159,2,130,32,94,6,91,6,29,11,236,27,220,15,81,166,147,55,230,187,82,51,63,157,17,62,136,128,208,58,141,208,151,36,58,205,86,32,227,235,21,45,84,246,212,41,121,38,169,197,206,59,104,193,23,29,43,204,160,0,234,200,165,80,173,214,18,77,108,210,203,107,47,223,124,118,238,219,193,203,161,227,118,214,96,231,175,240,35,234,24,237,226,238,29,189,165,240,170,160,100,244,115,134,39,249,196,155,230,253,9,253,184,137,190,224,121,141,103,198,58,128,208,219,251,132,213,139,188,154,98,150,125,158,187,176,62,147,12,173,255,151,177,16,176,175,6,13,113,171,223,43,50,166,104,54,243,162,109,102,180,188,218,123,117,184,3,93,54,181,180,64,247,177,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,0,0,76,194,0,0,80,194,0,0,84,194,0,0,88,194,0,0,92,194,0,0,96,194,0,0,100,194,0,0,104,194,0,0,108,194,0,0,112,194,0,0,116,194,0,0,120,194,0,0,124,194,0,0,128,194,0,0,130,194,0,0,132,194,0,0,134,194,0,0,136,194,0,0,138,194,0,0,140,194,0,0,142,194,0,0,144,194,0,0,146,194,0,0,148,194,0,0,150,194,0,0,152,194,0,0,154,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,164,194,0,0,166,194,0,0,168,194,0,0,170,194,0,0,172,194,0,0,174,194,0,0,176,194,0,0,176,194,0,0,178,194,0,0,178,194,0,0,180,194,0,0,182,194,0,0,182,194,0,0,184,194,0,0,186,194,0,0,188,194,0,0,190,194,0,0,192,194,0,0,192,194,0,0,194,194,0,0,196,194,0,0,196,194,0,0,198,194,0,0,198,194,0,0,200,194,0,0,200,194,0,0,202,194,0,0,204,194,0,0,206,194,0,0,208,194,0,0,212,194,0,0,214,194,0,0,214,194,0,0,214,194,0,0,214,194,0,0,210,194,0,0,206,194,0,0,204,194,0,0,202,194,0,0,198,194,0,0,196,194,0,0,192,194,0,0,190,194,0,0,190,194,0,0,192,194,0,0,194,194,0,0,192,194,0,0,190,194,0,0,186,194,0,0,180,194,0,0,160,194,0,0,140,194,0,0,72,194,0,0,32,194,0,0,240,193,0,0,240,193,0,0,240,193,0,0,240,193,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,120,194,0,0,120,194,0,0,130,194,0,0,146,194,0,0,138,194,0,0,136,194,0,0,136,194,0,0,134,194,0,0,140,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,150,194,0,0,158,194,0,0,158,194,0,0,160,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,84,194,0,0,116,194,0,0,132,194,0,0,132,194,0,0,136,194,0,0,134,194,0,0,140,194,0,0,152,194,0,0,152,194,0,0,144,194,0,0,146,194,0,0,150,194,0,0,152,194,0,0,156,194,0,0,158,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,24,194,0,0,32,194,0,0,40,194,0,0,56,194,0,0,64,194,0,0,84,194,0,0,92,194,0,0,120,194,0,0,130,194,0,0,104,194,0,0,96,194,0,0,96,194,0,0,116,194,0,0,112,194,0,0,130,194,0,0,134,194,0,0,138,194,0,0,142,194,0,0,154,194,0,0,154,194,0,0,156,194,0,0,160,194,0,0,164,194,0,0,168,194,0,0,176,194,0,0,186,194,0,0,196,194,0,0,212,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,208,193,0,0,216,193,0,0,232,193,0,0,0,194,0,0,24,194,0,0,64,194,0,0,80,194,0,0,80,194,0,0,72,194,0,0,64,194,0,0,64,194,0,0,76,194,0,0,80,194,0,0,88,194,0,0,112,194,0,0,134,194,0,0,134,194,0,0,132,194,0,0,136,194,0,0,138,194,0,0,146,194,0,0,146,194,0,0,152,194,0,0,160,194,0,0,162,194,0,0,162,194,0,0,170,194,0,0,170,194,0,0,172,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,136,193,0,0,152,193,0,0,160,193,0,0,176,193,0,0,208,193,0,0,224,193,0,0,248,193,0,0,32,194,0,0,60,194,0,0,28,194,0,0,28,194,0,0,32,194,0,0,40,194,0,0,44,194,0,0,60,194,0,0,76,194,0,0,100,194,0,0,80,194,0,0,92,194,0,0,92,194,0,0,112,194,0,0,104,194,0,0,120,194,0,0,124,194,0,0,140,194,0,0,134,194,0,0,138,194,0,0,144,194,0,0,146,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,166,194,0,0,174,194,0,0,180,194,0,0,188,194,0,0,196,194,0,0,208,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,32,193,0,0,48,193,0,0,112,193,0,0,152,193,0,0,200,193,0,0,240,193,0,0,8,194,0,0,248,193,0,0,240,193,0,0,248,193,0,0,232,193,0,0,0,194,0,0,12,194,0,0,40,194,0,0,64,194,0,0,40,194,0,0,48,194,0,0,56,194,0,0,72,194,0,0,72,194,0,0,76,194,0,0,80,194,0,0,108,194,0,0,88,194,0,0,92,194,0,0,92,194,0,0,104,194,0,0,120,194,0,0,124,194,0,0,132,194,0,0,144,194,0,0,146,194,0,0,152,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,160,194,0,0,162,194,0,0,168,194,0,0,176,194,0,0,180,194,0,0,188,194,0,0,196,194,0,0,202,194,0,0,212,194,0,0,220,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,134,194,0,0,134,194,0,0,134,194,0,0,152,194,0,0,144,194,0,0,142,194,0,0,148,194,0,0,152,194,0,0,152,194,0,0,150,194,0,0,156,194,0,0,158,194,0,0,158,194,0,0,162,194,0,0,166,194,0,0,172,194,0,0,178,194,0,0,186,194,0,0,194,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,64,194,0,0,76,194,0,0,92,194,0,0,108,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,134,194,0,0,132,194,0,0,136,194,0,0,138,194,0,0,140,194,0,0,148,194,0,0,158,194,0,0,154,194,0,0,154,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,164,194,0,0,168,194,0,0,172,194,0,0,176,194,0,0,182,194,0,0,190,194,0,0,200,194,0,0,216,194,0,0,232,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,20,194,0,0,20,194,0,0,36,194,0,0,48,194,0,0,64,194,0,0,76,194,0,0,104,194,0,0,120,194,0,0,112,194,0,0,100,194,0,0,108,194,0,0,108,194,0,0,112,194,0,0,124,194,0,0,130,194,0,0,144,194,0,0,142,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,154,194,0,0,152,194,0,0,156,194,0,0,162,194,0,0,162,194,0,0,160,194,0,0,166,194,0,0,172,194,0,0,182,194,0,0,192,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,240,193,0,0,0,194,0,0,0,194,0,0,4,194,0,0,12,194,0,0,36,194,0,0,68,194,0,0,72,194,0,0,68,194,0,0,60,194,0,0,64,194,0,0,64,194,0,0,80,194,0,0,76,194,0,0,100,194,0,0,130,194,0,0,116,194,0,0,108,194,0,0,116,194,0,0,128,194,0,0,138,194,0,0,140,194,0,0,148,194,0,0,154,194,0,0,154,194,0,0,156,194,0,0,162,194,0,0,168,194,0,0,170,194,0,0,174,194,0,0,180,194,0,0,184,194,0,0,192,194,0,0,200,194,0,0,214,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,160,193,0,0,168,193,0,0,184,193,0,0,216,193,0,0,240,193,0,0,12,194,0,0,16,194,0,0,36,194,0,0,56,194,0,0,48,194,0,0,40,194,0,0,32,194,0,0,36,194,0,0,36,194,0,0,44,194,0,0,64,194,0,0,92,194,0,0,84,194,0,0,80,194,0,0,84,194,0,0,96,194,0,0,108,194,0,0,104,194,0,0,112,194,0,0,134,194,0,0,132,194,0,0,138,194,0,0,142,194,0,0,144,194,0,0,150,194,0,0,158,194,0,0,162,194,0,0,168,194,0,0,174,194,0,0,180,194,0,0,186,194,0,0,194,194,0,0,202,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,48,193,0,0,64,193,0,0,64,193,0,0,112,193,0,0,128,193,0,0,160,193,0,0,184,193,0,0,240,193,0,0,20,194,0,0,8,194,0,0,4,194,0,0,8,194,0,0,248,193,0,0,0,194,0,0,0,194,0,0,24,194,0,0,60,194,0,0,48,194,0,0,36,194,0,0,32,194,0,0,60,194,0,0,68,194,0,0,56,194,0,0,56,194,0,0,104,194,0,0,72,194,0,0,72,194,0,0,88,194,0,0,104,194,0,0,120,194,0,0,128,194,0,0,134,194,0,0,134,194,0,0,140,194,0,0,144,194,0,0,152,194,0,0,158,194,0,0,166,194,0,0,174,194,0,0,182,194,0,0,192,194,0,0,200,194,0,0,208,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,124,194,0,0,128,194,0,0,132,194,0,0,134,194,0,0,132,194,0,0,136,194,0,0,150,194,0,0,144,194,0,0,152,194,0,0,150,194,0,0,152,194,0,0,156,194,0,0,158,194,0,0,164,194,0,0,168,194,0,0,170,194,0,0,180,194,0,0,188,194,0,0,202,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,112,194,0,0,112,194,0,0,116,194,0,0,124,194,0,0,132,194,0,0,142,194,0,0,136,194,0,0,140,194,0,0,140,194,0,0,142,194,0,0,144,194,0,0,144,194,0,0,150,194,0,0,162,194,0,0,156,194,0,0,158,194,0,0,164,194,0,0,166,194,0,0,172,194,0,0,180,194,0,0,194,194,0,0,206,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,88,194,0,0,92,194,0,0,100,194,0,0,96,194,0,0,100,194,0,0,92,194,0,0,116,194,0,0,130,194,0,0,112,194,0,0,112,194,0,0,120,194,0,0,124,194,0,0,124,194,0,0,132,194,0,0,136,194,0,0,148,194,0,0,146,194,0,0,150,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,160,194,0,0,164,194,0,0,170,194,0,0,180,194,0,0,192,194,0,0,202,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,64,194,0,0,76,194,0,0,100,194,0,0,76,194,0,0,68,194,0,0,72,194,0,0,76,194,0,0,84,194,0,0,88,194,0,0,108,194,0,0,132,194,0,0,112,194,0,0,120,194,0,0,134,194,0,0,134,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,152,194,0,0,156,194,0,0,162,194,0,0,170,194,0,0,176,194,0,0,188,194,0,0,194,194,0,0,208,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,28,194,0,0,36,194,0,0,40,194,0,0,40,194,0,0,28,194,0,0,24,194,0,0,36,194,0,0,44,194,0,0,80,194,0,0,48,194,0,0,32,194,0,0,28,194,0,0,20,194,0,0,20,194,0,0,32,194,0,0,60,194,0,0,88,194,0,0,72,194,0,0,64,194,0,0,72,194,0,0,92,194,0,0,116,194,0,0,108,194,0,0,120,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,138,194,0,0,138,194,0,0,146,194,0,0,148,194,0,0,148,194,0,0,150,194,0,0,154,194,0,0,158,194,0,0,164,194,0,0,174,194,0,0,182,194,0,0,190,194,0,0,200,194,0,0,216,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,224,193,0,0,208,193,0,0,192,193,0,0,176,193,0,0,160,193,0,0,160,193,0,0,184,193,0,0,232,193,0,0,240,193,0,0,248,193,0,0,224,193,0,0,216,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,12,194,0,0,32,194,0,0,4,194,0,0,0,194,0,0,232,193,0,0,240,193,0,0,240,193,0,0,240,193,0,0,20,194,0,0,52,194,0,0,36,194,0,0,20,194,0,0,24,194,0,0,52,194,0,0,60,194,0,0,60,194,0,0,64,194,0,0,84,194,0,0,68,194,0,0,64,194,0,0,72,194,0,0,68,194,0,0,68,194,0,0,76,194,0,0,80,194,0,0,104,194,0,0,96,194,0,0,100,194,0,0,96,194,0,0,112,194,0,0,116,194,0,0,120,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,156,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,212,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,200,194,0,0,190,194,0,0,182,194,0,0,174,194,0,0,166,194,0,0,160,194,0,0,156,194,0,0,152,194,0,0,156,194,0,0,156,194,0,0,162,194,0,0,166,194,0,0,170,194,0,0,172,194,0,0,170,194,0,0,172,194,0,0,174,194,0,0,180,194,0,0,194,194,0,0,214,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,162,194,0,0,154,194,0,0,146,194,0,0,140,194,0,0,134,194,0,0,134,194,0,0,136,194,0,0,150,194,0,0,146,194,0,0,140,194,0,0,138,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,158,194,0,0,168,194,0,0,166,194,0,0,168,194,0,0,172,194,0,0,176,194,0,0,178,194,0,0,178,194,0,0,186,194,0,0,196,194,0,0,210,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,152,194,0,0,142,194,0,0,136,194,0,0,136,194,0,0,130,194,0,0,124,194,0,0,124,194,0,0,120,194,0,0,120,194,0,0,128,194,0,0,130,194,0,0,128,194,0,0,116,194,0,0,120,194,0,0,124,194,0,0,128,194,0,0,132,194,0,0,136,194,0,0,146,194,0,0,146,194,0,0,148,194,0,0,150,194,0,0,152,194,0,0,162,194,0,0,166,194,0,0,170,194,0,0,176,194,0,0,178,194,0,0,184,194,0,0,190,194,0,0,200,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,160,194,0,0,150,194,0,0,142,194,0,0,136,194,0,0,130,194,0,0,124,194,0,0,120,194,0,0,116,194,0,0,116,194,0,0,116,194,0,0,116,194,0,0,108,194,0,0,96,194,0,0,100,194,0,0,84,194,0,0,72,194,0,0,104,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,80,194,0,0,84,194,0,0,88,194,0,0,104,194,0,0,134,194,0,0,124,194,0,0,134,194,0,0,136,194,0,0,144,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,162,194,0,0,164,194,0,0,170,194,0,0,178,194,0,0,180,194,0,0,186,194,0,0,194,194,0,0,202,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,130,194,0,0,116,194,0,0,108,194,0,0,100,194,0,0,96,194,0,0,92,194,0,0,92,194,0,0,96,194,0,0,96,194,0,0,100,194,0,0,92,194,0,0,84,194,0,0,80,194,0,0,60,194,0,0,48,194,0,0,48,194,0,0,72,194,0,0,48,194,0,0,36,194,0,0,28,194,0,0,28,194,0,0,40,194,0,0,32,194,0,0,56,194,0,0,76,194,0,0,68,194,0,0,72,194,0,0,84,194,0,0,88,194,0,0,124,194,0,0,112,194,0,0,116,194,0,0,120,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,140,194,0,0,146,194,0,0,148,194,0,0,150,194,0,0,152,194,0,0,150,194,0,0,158,194,0,0,170,194,0,0,178,194,0,0,182,194,0,0,192,194,0,0,204,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,80,194,0,0,72,194,0,0,68,194,0,0,68,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,68,194,0,0,72,194,0,0,72,194,0,0,68,194,0,0,56,194,0,0,44,194,0,0,28,194,0,0,12,194,0,0,4,194,0,0,24,194,0,0,16,194,0,0,0,194,0,0,232,193,0,0,0,194,0,0,0,194,0,0,0,194,0,0,12,194,0,0,48,194,0,0,28,194,0,0,24,194,0,0,24,194,0,0,56,194,0,0,72,194,0,0,52,194,0,0,56,194,0,0,84,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,88,194,0,0,88,194,0,0,84,194,0,0,84,194,0,0,96,194,0,0,100,194,0,0,108,194,0,0,132,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,158,194,0,0,166,194,0,0,170,194,0,0,180,194,0,0,194,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,172,194,0,0,160,194,0,0,150,194,0,0,150,194,0,0,158,194,0,0,160,194,0,0,158,194,0,0,160,194,0,0,162,194,0,0,164,194,0,0,176,194,0,0,190,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,176,194,0,0,166,194,0,0,158,194,0,0,156,194,0,0,150,194,0,0,142,194,0,0,134,194,0,0,136,194,0,0,146,194,0,0,146,194,0,0,144,194,0,0,146,194,0,0,150,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,202,194,0,0,192,194,0,0,180,194,0,0,172,194,0,0,162,194,0,0,154,194,0,0,146,194,0,0,138,194,0,0,132,194,0,0,116,194,0,0,120,194,0,0,132,194,0,0,128,194,0,0,120,194,0,0,130,194,0,0,132,194,0,0,140,194,0,0,144,194,0,0,152,194,0,0,162,194,0,0,160,194,0,0,168,194,0,0,180,194,0,0,190,194,0,0,204,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,206,194,0,0,194,194,0,0,184,194,0,0,176,194,0,0,166,194,0,0,158,194,0,0,148,194,0,0,140,194,0,0,132,194,0,0,108,194,0,0,84,194,0,0,104,194,0,0,120,194,0,0,92,194,0,0,88,194,0,0,88,194,0,0,88,194,0,0,104,194,0,0,116,194,0,0,120,194,0,0,144,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,160,194,0,0,166,194], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE);\n/* memory initializer */ allocate([0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,150,194,0,0,140,194,0,0,132,194,0,0,120,194,0,0,96,194,0,0,64,194,0,0,48,194,0,0,64,194,0,0,56,194,0,0,56,194,0,0,44,194,0,0,56,194,0,0,64,194,0,0,64,194,0,0,76,194,0,0,104,194,0,0,104,194,0,0,108,194,0,0,112,194,0,0,120,194,0,0,120,194,0,0,116,194,0,0,116,194,0,0,130,194,0,0,128,194,0,0,130,194,0,0,136,194,0,0,140,194,0,0,148,194,0,0,150,194,0,0,156,194,0,0,162,194,0,0,172,194,0,0,190,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,150,194,0,0,140,194,0,0,130,194,0,0,116,194,0,0,92,194,0,0,68,194,0,0,28,194,0,0,4,194,0,0,32,194,0,0,12,194,0,0,0,194,0,0,24,194,0,0,32,194,0,0,4,194,0,0,12,194,0,0,20,194,0,0,56,194,0,0,36,194,0,0,52,194,0,0,48,194,0,0,56,194,0,0,40,194,0,0,52,194,0,0,56,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,88,194,0,0,88,194,0,0,92,194,0,0,100,194,0,0,120,194,0,0,128,194,0,0,132,194,0,0,136,194,0,0,140,194,0,0,152,194,0,0,162,194,0,0,180,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,180,194,0,0,170,194,0,0,164,194,0,0,166,194,0,0,160,194,0,0,156,194,0,0,168,194,0,0,158,194,0,0,160,194,0,0,166,194,0,0,174,194,0,0,178,194,0,0,182,194,0,0,186,194,0,0,198,194,0,0,212,194,0,0,234,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,150,194,0,0,140,194,0,0,136,194,0,0,148,194,0,0,144,194,0,0,148,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,170,194,0,0,174,194,0,0,184,194,0,0,178,194,0,0,182,194,0,0,190,194,0,0,200,194,0,0,212,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,180,194,0,0,166,194,0,0,150,194,0,0,142,194,0,0,124,194,0,0,128,194,0,0,134,194,0,0,120,194,0,0,128,194,0,0,134,194,0,0,140,194,0,0,146,194,0,0,154,194,0,0,162,194,0,0,168,194,0,0,166,194,0,0,170,194,0,0,178,194,0,0,180,194,0,0,186,194,0,0,196,194,0,0,208,194,0,0,218,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,206,194,0,0,192,194,0,0,176,194,0,0,162,194,0,0,150,194,0,0,136,194,0,0,104,194,0,0,88,194,0,0,96,194,0,0,88,194,0,0,96,194,0,0,96,194,0,0,104,194,0,0,112,194,0,0,124,194,0,0,132,194,0,0,148,194,0,0,138,194,0,0,144,194,0,0,144,194,0,0,150,194,0,0,148,194,0,0,154,194,0,0,162,194,0,0,162,194,0,0,164,194,0,0,168,194,0,0,174,194,0,0,186,194,0,0,192,194,0,0,198,194,0,0,208,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,204,194,0,0,192,194,0,0,182,194,0,0,170,194,0,0,160,194,0,0,148,194,0,0,136,194,0,0,112,194,0,0,76,194,0,0,56,194,0,0,64,194,0,0,56,194,0,0,44,194,0,0,52,194,0,0,60,194,0,0,60,194,0,0,68,194,0,0,64,194,0,0,96,194,0,0,84,194,0,0,92,194,0,0,104,194,0,0,100,194,0,0,124,194,0,0,104,194,0,0,112,194,0,0,132,194,0,0,128,194,0,0,134,194,0,0,140,194,0,0,140,194,0,0,148,194,0,0,154,194,0,0,168,194,0,0,172,194,0,0,178,194,0,0,182,194,0,0,186,194,0,0,188,194,0,0,202,194,0,0,218,194,0,0,236,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,176,194,0,0,166,194,0,0,156,194,0,0,146,194,0,0,136,194,0,0,112,194,0,0,84,194,0,0,48,194,0,0,12,194,0,0,24,194,0,0,24,194,0,0,8,194,0,0,8,194,0,0,16,194,0,0,32,194,0,0,36,194,0,0,48,194,0,0,76,194,0,0,52,194,0,0,56,194,0,0,60,194,0,0,56,194,0,0,88,194,0,0,72,194,0,0,68,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,76,194,0,0,88,194,0,0,100,194,0,0,104,194,0,0,112,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,128,194,0,0,130,194,0,0,136,194,0,0,154,194,0,0,164,194,0,0,174,194,0,0,190,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,204,194,0,0,194,194,0,0,184,194,0,0,174,194,0,0,166,194,0,0,156,194,0,0,150,194,0,0,164,194,0,0,158,194,0,0,166,194,0,0,170,194,0,0,178,194,0,0,184,194,0,0,190,194,0,0,196,194,0,0,202,194,0,0,210,194,0,0,218,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,172,194,0,0,162,194,0,0,156,194,0,0,148,194,0,0,138,194,0,0,148,194,0,0,148,194,0,0,152,194,0,0,158,194,0,0,166,194,0,0,168,194,0,0,172,194,0,0,178,194,0,0,184,194,0,0,194,194,0,0,186,194,0,0,200,194,0,0,206,194,0,0,214,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,174,194,0,0,166,194,0,0,160,194,0,0,150,194,0,0,138,194,0,0,112,194,0,0,132,194,0,0,132,194,0,0,136,194,0,0,140,194,0,0,148,194,0,0,156,194,0,0,158,194,0,0,162,194,0,0,162,194,0,0,166,194,0,0,168,194,0,0,174,194,0,0,186,194,0,0,192,194,0,0,198,194,0,0,206,194,0,0,214,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,178,194,0,0,170,194,0,0,164,194,0,0,156,194,0,0,142,194,0,0,120,194,0,0,92,194,0,0,104,194,0,0,104,194,0,0,88,194,0,0,88,194,0,0,92,194,0,0,108,194,0,0,116,194,0,0,120,194,0,0,140,194,0,0,132,194,0,0,132,194,0,0,134,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,156,194,0,0,168,194,0,0,168,194,0,0,168,194,0,0,176,194,0,0,182,194,0,0,180,194,0,0,190,194,0,0,196,194,0,0,204,194,0,0,206,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,188,194,0,0,180,194,0,0,174,194,0,0,164,194,0,0,158,194,0,0,146,194,0,0,134,194,0,0,104,194,0,0,60,194,0,0,72,194,0,0,52,194,0,0,36,194,0,0,52,194,0,0,64,194,0,0,48,194,0,0,48,194,0,0,68,194,0,0,88,194,0,0,76,194,0,0,64,194,0,0,60,194,0,0,68,194,0,0,72,194,0,0,76,194,0,0,100,194,0,0,104,194,0,0,112,194,0,0,124,194,0,0,138,194,0,0,140,194,0,0,138,194,0,0,142,194,0,0,148,194,0,0,156,194,0,0,164,194,0,0,180,194,0,0,190,194,0,0,202,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,202,194,0,0,194,194,0,0,186,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,154,194,0,0,144,194,0,0,130,194,0,0,96,194,0,0,64,194,0,0,20,194,0,0,32,194,0,0,16,194,0,0,8,194,0,0,32,194,0,0,72,194,0,0,60,194,0,0,24,194,0,0,36,194,0,0,60,194,0,0,24,194,0,0,12,194,0,0,28,194,0,0,24,194,0,0,44,194,0,0,32,194,0,0,52,194,0,0,72,194,0,0,52,194,0,0,48,194,0,0,60,194,0,0,72,194,0,0,92,194,0,0,64,194,0,0,64,194,0,0,80,194,0,0,132,194,0,0,140,194,0,0,152,194,0,0,164,194,0,0,180,194,0,0,194,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,172,194,0,0,158,194,0,0,152,194,0,0,166,194,0,0,162,194,0,0,170,194,0,0,174,194,0,0,178,194,0,0,186,194,0,0,196,194,0,0,204,194,0,0,214,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,172,194,0,0,158,194,0,0,142,194,0,0,154,194,0,0,148,194,0,0,154,194,0,0,158,194,0,0,162,194,0,0,168,194,0,0,170,194,0,0,180,194,0,0,184,194,0,0,186,194,0,0,184,194,0,0,196,194,0,0,202,194,0,0,216,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,174,194,0,0,156,194,0,0,136,194,0,0,130,194,0,0,132,194,0,0,120,194,0,0,130,194,0,0,134,194,0,0,140,194,0,0,146,194,0,0,150,194,0,0,156,194,0,0,164,194,0,0,164,194,0,0,166,194,0,0,168,194,0,0,182,194,0,0,186,194,0,0,196,194,0,0,204,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,164,194,0,0,148,194,0,0,120,194,0,0,100,194,0,0,104,194,0,0,96,194,0,0,76,194,0,0,80,194,0,0,80,194,0,0,88,194,0,0,88,194,0,0,104,194,0,0,132,194,0,0,108,194,0,0,112,194,0,0,124,194,0,0,132,194,0,0,138,194,0,0,146,194,0,0,158,194,0,0,166,194,0,0,168,194,0,0,160,194,0,0,162,194,0,0,162,194,0,0,164,194,0,0,176,194,0,0,184,194,0,0,196,194,0,0,210,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,204,194,0,0,194,194,0,0,184,194,0,0,168,194,0,0,158,194,0,0,138,194,0,0,100,194,0,0,60,194,0,0,80,194,0,0,60,194,0,0,48,194,0,0,52,194,0,0,72,194,0,0,80,194,0,0,40,194,0,0,40,194,0,0,84,194,0,0,44,194,0,0,44,194,0,0,64,194,0,0,76,194,0,0,96,194,0,0,92,194,0,0,80,194,0,0,100,194,0,0,108,194,0,0,116,194,0,0,120,194,0,0,134,194,0,0,142,194,0,0,156,194,0,0,166,194,0,0,172,194,0,0,188,194,0,0,196,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,168,194,0,0,156,194,0,0,140,194,0,0,116,194,0,0,76,194,0,0,36,194,0,0,32,194,0,0,24,194,0,0,32,194,0,0,56,194,0,0,80,194,0,0,76,194,0,0,36,194,0,0,32,194,0,0,56,194,0,0,32,194,0,0,24,194,0,0,24,194,0,0,36,194,0,0,56,194,0,0,36,194,0,0,56,194,0,0,60,194,0,0,44,194,0,0,44,194,0,0,52,194,0,0,36,194,0,0,52,194,0,0,96,194,0,0,134,194,0,0,136,194,0,0,166,194,0,0,174,194,0,0,180,194,0,0,190,194,0,0,204,194,0,0,214,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,218,194,0,0,210,194,0,0,202,194,0,0,192,194,0,0,182,194,0,0,168,194,0,0,154,194,0,0,164,194,0,0,164,194,0,0,170,194,0,0,178,194,0,0,188,194,0,0,200,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,206,194,0,0,196,194,0,0,184,194,0,0,170,194,0,0,160,194,0,0,142,194,0,0,150,194,0,0,144,194,0,0,152,194,0,0,160,194,0,0,168,194,0,0,172,194,0,0,178,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,208,194,0,0,202,194,0,0,194,194,0,0,184,194,0,0,176,194,0,0,168,194,0,0,160,194,0,0,128,194,0,0,132,194,0,0,124,194,0,0,128,194,0,0,132,194,0,0,138,194,0,0,146,194,0,0,154,194,0,0,166,194,0,0,166,194,0,0,172,194,0,0,182,194,0,0,196,194,0,0,208,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,208,194,0,0,202,194,0,0,194,194,0,0,184,194,0,0,180,194,0,0,168,194,0,0,148,194,0,0,100,194,0,0,104,194,0,0,80,194,0,0,92,194,0,0,88,194,0,0,72,194,0,0,80,194,0,0,72,194,0,0,80,194,0,0,124,194,0,0,120,194,0,0,138,194,0,0,152,194,0,0,154,194,0,0,156,194,0,0,156,194,0,0,158,194,0,0,164,194,0,0,176,194,0,0,188,194,0,0,200,194,0,0,212,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,204,194,0,0,196,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,166,194,0,0,156,194,0,0,140,194,0,0,72,194,0,0,72,194,0,0,36,194,0,0,48,194,0,0,68,194,0,0,60,194,0,0,72,194,0,0,72,194,0,0,48,194,0,0,92,194,0,0,56,194,0,0,60,194,0,0,64,194,0,0,64,194,0,0,88,194,0,0,68,194,0,0,68,194,0,0,104,194,0,0,120,194,0,0,142,194,0,0,162,194,0,0,174,194,0,0,184,194,0,0,194,194,0,0,204,194,0,0,216,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,204,194,0,0,196,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,166,194,0,0,156,194,0,0,140,194,0,0,52,194,0,0,44,194,0,0,36,194,0,0,60,194,0,0,72,194,0,0,76,194,0,0,72,194,0,0,68,194,0,0,52,194,0,0,60,194,0,0,36,194,0,0,48,194,0,0,36,194,0,0,28,194,0,0,44,194,0,0,24,194,0,0,20,194,0,0,32,194,0,0,36,194,0,0,48,194,0,0,72,194,0,0,104,194,0,0,130,194,0,0,146,194,0,0,158,194,0,0,170,194,0,0,184,194,0,0,194,194,0,0,202,194,0,0,210,194,0,0,218,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,200,194,0,0,190,194,0,0,174,194,0,0,162,194,0,0,170,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,202,194,0,0,190,194,0,0,176,194,0,0,166,194,0,0,152,194,0,0,146,194,0,0,144,194,0,0,158,194,0,0,168,194,0,0,180,194,0,0,190,194,0,0,200,194,0,0,210,194,0,0,220,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,208,194,0,0,196,194,0,0,184,194,0,0,174,194,0,0,162,194,0,0,140,194,0,0,130,194,0,0,120,194,0,0,134,194,0,0,142,194,0,0,148,194,0,0,160,194,0,0,170,194,0,0,182,194,0,0,190,194,0,0,198,194,0,0,206,194,0,0,216,194,0,0,222,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,206,194,0,0,194,194,0,0,180,194,0,0,170,194,0,0,152,194,0,0,112,194,0,0,96,194,0,0,88,194,0,0,112,194,0,0,120,194,0,0,116,194,0,0,96,194,0,0,124,194,0,0,130,194,0,0,146,194,0,0,148,194,0,0,154,194,0,0,150,194,0,0,156,194,0,0,162,194,0,0,172,194,0,0,174,194,0,0,176,194,0,0,182,194,0,0,188,194,0,0,196,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,194,194,0,0,184,194,0,0,172,194,0,0,162,194,0,0,158,194,0,0,140,194,0,0,100,194,0,0,76,194,0,0,60,194,0,0,76,194,0,0,104,194,0,0,112,194,0,0,96,194,0,0,84,194,0,0,72,194,0,0,104,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,84,194,0,0,92,194,0,0,128,194,0,0,138,194,0,0,142,194,0,0,170,194,0,0,164,194,0,0,156,194,0,0,162,194,0,0,170,194,0,0,190,194,0,0,204,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,194,194,0,0,184,194,0,0,170,194,0,0,166,194,0,0,158,194,0,0,144,194,0,0,68,194,0,0,32,194,0,0,44,194,0,0,44,194,0,0,88,194,0,0,96,194,0,0,76,194,0,0,72,194,0,0,32,194,0,0,44,194,0,0,24,194,0,0,16,194,0,0,12,194,0,0,20,194,0,0,24,194,0,0,20,194,0,0,48,194,0,0,88,194,0,0,112,194,0,0,100,194,0,0,112,194,0,0,140,194,0,0,150,194,0,0,168,194,0,0,184,194,0,0,206,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,204,194,0,0,190,194,0,0,178,194,0,0,164,194,0,0,166,194,0,0,168,194,0,0,180,194,0,0,184,194,0,0,198,194,0,0,214,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,202,194,0,0,190,194,0,0,178,194,0,0,166,194,0,0,144,194,0,0,148,194,0,0,156,194,0,0,170,194,0,0,176,194,0,0,176,194,0,0,180,194,0,0,184,194,0,0,196,194,0,0,210,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,218,194,0,0,206,194,0,0,194,194,0,0,186,194,0,0,174,194,0,0,162,194,0,0,140,194,0,0,140,194,0,0,134,194,0,0,150,194,0,0,146,194,0,0,152,194,0,0,158,194,0,0,162,194,0,0,166,194,0,0,176,194,0,0,178,194,0,0,194,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,200,194,0,0,188,194,0,0,176,194,0,0,166,194,0,0,150,194,0,0,124,194,0,0,108,194,0,0,108,194,0,0,124,194,0,0,132,194,0,0,112,194,0,0,120,194,0,0,134,194,0,0,134,194,0,0,154,194,0,0,152,194,0,0,162,194,0,0,176,194,0,0,172,194,0,0,184,194,0,0,192,194,0,0,204,194,0,0,218,194,0,0,232,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,184,194,0,0,172,194,0,0,162,194,0,0,146,194,0,0,96,194,0,0,80,194,0,0,60,194,0,0,92,194,0,0,112,194,0,0,104,194,0,0,80,194,0,0,76,194,0,0,52,194,0,0,68,194,0,0,72,194,0,0,84,194,0,0,88,194,0,0,116,194,0,0,142,194,0,0,140,194,0,0,138,194,0,0,156,194,0,0,158,194,0,0,174,194,0,0,180,194,0,0,192,194,0,0,208,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,206,194,0,0,192,194,0,0,180,194,0,0,172,194,0,0,156,194,0,0,140,194,0,0,76,194,0,0,40,194,0,0,60,194,0,0,64,194,0,0,92,194,0,0,88,194,0,0,88,194,0,0,84,194,0,0,40,194,0,0,12,194,0,0,224,193,0,0,4,194,0,0,24,194,0,0,20,194,0,0,48,194,0,0,60,194,0,0,68,194,0,0,88,194,0,0,124,194,0,0,136,194,0,0,156,194,0,0,164,194,0,0,178,194,0,0,188,194,0,0,198,194,0,0,208,194,0,0,218,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,180,194,0,0,158,194,0,0,170,194,0,0,162,194,0,0,164,194,0,0,164,194,0,0,178,194,0,0,188,194,0,0,198,194,0,0,206,194,0,0,218,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,194,194,0,0,170,194,0,0,144,194,0,0,148,194,0,0,140,194,0,0,140,194,0,0,140,194,0,0,152,194,0,0,170,194,0,0,182,194,0,0,186,194,0,0,194,194,0,0,206,194,0,0,218,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,224,194,0,0,186,194,0,0,162,194,0,0,136,194,0,0,120,194,0,0,112,194,0,0,112,194,0,0,100,194,0,0,124,194,0,0,140,194,0,0,154,194,0,0,164,194,0,0,180,194,0,0,186,194,0,0,196,194,0,0,208,194,0,0,218,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,226,194,0,0,200,194,0,0,186,194,0,0,168,194,0,0,124,194,0,0,104,194,0,0,64,194,0,0,84,194,0,0,88,194,0,0,80,194,0,0,80,194,0,0,100,194,0,0,128,194,0,0,132,194,0,0,152,194,0,0,166,194,0,0,162,194,0,0,170,194,0,0,170,194,0,0,180,194,0,0,190,194,0,0,196,194,0,0,202,194,0,0,206,194,0,0,212,194,0,0,216,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,190,194,0,0,172,194,0,0,148,194,0,0,84,194,0,0,72,194,0,0,24,194,0,0,44,194,0,0,68,194,0,0,44,194,0,0,40,194,0,0,28,194,0,0,28,194,0,0,56,194,0,0,80,194,0,0,100,194,0,0,96,194,0,0,144,194,0,0,138,194,0,0,148,194,0,0,162,194,0,0,174,194,0,0,184,194,0,0,188,194,0,0,194,194,0,0,198,194,0,0,204,194,0,0,210,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,198,194,0,0,180,194,0,0,152,194,0,0,132,194,0,0,52,194,0,0,44,194,0,0,36,194,0,0,48,194,0,0,60,194,0,0,44,194,0,0,60,194,0,0,32,194,0,0,240,193,0,0,248,193,0,0,248,193,0,0,28,194,0,0,4,194,0,0,32,194,0,0,36,194,0,0,44,194,0,0,84,194,0,0,108,194,0,0,140,194,0,0,146,194,0,0,154,194,0,0,158,194,0,0,164,194,0,0,168,194,0,0,174,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,182,194,0,0,152,194,0,0,150,194,0,0,170,194,0,0,186,194,0,0,196,194,0,0,208,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,182,194,0,0,140,194,0,0,140,194], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);\n/* memory initializer */ allocate([0,0,150,194,0,0,172,194,0,0,178,194,0,0,188,194,0,0,196,194,0,0,202,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,190,194,0,0,160,194,0,0,112,194,0,0,130,194,0,0,128,194,0,0,148,194,0,0,166,194,0,0,176,194,0,0,182,194,0,0,190,194,0,0,198,194,0,0,206,194,0,0,214,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,190,194,0,0,160,194,0,0,104,194,0,0,92,194,0,0,68,194,0,0,132,194,0,0,136,194,0,0,142,194,0,0,156,194,0,0,156,194,0,0,160,194,0,0,176,194,0,0,170,194,0,0,178,194,0,0,194,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,190,194,0,0,160,194,0,0,84,194,0,0,80,194,0,0,36,194,0,0,108,194,0,0,108,194,0,0,68,194,0,0,104,194,0,0,96,194,0,0,124,194,0,0,172,194,0,0,158,194,0,0,180,194,0,0,186,194,0,0,196,194,0,0,206,194,0,0,214,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,194,194,0,0,182,194,0,0,146,194,0,0,52,194,0,0,32,194,0,0,4,194,0,0,84,194,0,0,116,194,0,0,68,194,0,0,88,194,0,0,72,194,0,0,72,194,0,0,112,194,0,0,80,194,0,0,134,194,0,0,148,194,0,0,162,194,0,0,184,194,0,0,192,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,226,194,0,0,212,194,0,0,198,194,0,0,184,194,0,0,154,194,0,0,160,194,0,0,176,194,0,0,194,194,0,0,212,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,232,194,0,0,218,194,0,0,204,194,0,0,190,194,0,0,178,194,0,0,148,194,0,0,144,194,0,0,176,194,0,0,174,194,0,0,190,194,0,0,204,194,0,0,218,194,0,0,232,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,232,194,0,0,218,194,0,0,204,194,0,0,190,194,0,0,178,194,0,0,150,194,0,0,132,194,0,0,148,194,0,0,154,194,0,0,156,194,0,0,172,194,0,0,174,194,0,0,180,194,0,0,192,194,0,0,210,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,230,194,0,0,216,194,0,0,202,194,0,0,188,194,0,0,176,194,0,0,132,194,0,0,96,194,0,0,116,194,0,0,140,194,0,0,130,194,0,0,156,194,0,0,144,194,0,0,166,194,0,0,168,194,0,0,186,194,0,0,196,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,190,194,0,0,178,194,0,0,164,194,0,0,100,194,0,0,80,194,0,0,80,194,0,0,108,194,0,0,96,194,0,0,108,194,0,0,104,194,0,0,138,194,0,0,134,194,0,0,176,194,0,0,164,194,0,0,164,194,0,0,178,194,0,0,188,194,0,0,200,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,202,194,0,0,192,194,0,0,180,194,0,0,166,194,0,0,154,194,0,0,88,194,0,0,44,194,0,0,24,194,0,0,72,194,0,0,64,194,0,0,80,194,0,0,64,194,0,0,40,194,0,0,40,194,0,0,76,194,0,0,80,194,0,0,84,194,0,0,108,194,0,0,130,194,0,0,142,194,0,0,156,194,0,0,170,194,0,0,190,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,210,194,0,0,172,194,0,0,136,194,0,0,156,194,0,0,158,194,0,0,180,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,210,194,0,0,172,194,0,0,132,194,0,0,146,194,0,0,154,194,0,0,176,194,0,0,192,194,0,0,210,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,210,194,0,0,184,194,0,0,160,194,0,0,116,194,0,0,128,194,0,0,136,194,0,0,160,194,0,0,174,194,0,0,184,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,208,194,0,0,182,194,0,0,158,194,0,0,80,194,0,0,112,194,0,0,88,194,0,0,128,194,0,0,138,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,168,194,0,0,170,194,0,0,174,194,0,0,176,194,0,0,180,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,236,194,0,0,200,194,0,0,174,194,0,0,154,194,0,0,68,194,0,0,72,194,0,0,48,194,0,0,104,194,0,0,116,194,0,0,116,194,0,0,134,194,0,0,130,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,130,194,0,0,136,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,230,194,0,0,196,194,0,0,168,194,0,0,120,194,0,0,68,194,0,0,48,194,0,0,24,194,0,0,56,194,0,0,68,194,0,0,68,194,0,0,56,194,0,0,28,194,0,0,20,194,0,0,28,194,0,0,32,194,0,0,40,194,0,0,44,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,176,194,0,0,148,194,0,0,154,194,0,0,164,194,0,0,164,194,0,0,170,194,0,0,180,194,0,0,188,194,0,0,198,194,0,0,208,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,176,194,0,0,132,194,0,0,140,194,0,0,162,194,0,0,160,194,0,0,162,194,0,0,168,194,0,0,176,194,0,0,182,194,0,0,186,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,176,194,0,0,116,194,0,0,124,194,0,0,140,194,0,0,142,194,0,0,148,194,0,0,154,194,0,0,160,194,0,0,166,194,0,0,170,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,172,194,0,0,120,194,0,0,124,194,0,0,120,194,0,0,120,194,0,0,104,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,80,194,0,0,88,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,236,194,0,0,216,194,0,0,168,194,0,0,84,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,92,194,0,0,60,194,0,0,52,194,0,0,32,194,0,0,32,194,0,0,32,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,236,194,0,0,200,194,0,0,146,194,0,0,44,194,0,0,20,194,0,0,40,194,0,0,44,194,0,0,84,194,0,0,24,194,0,0,20,194,0,0,12,194,0,0,12,194,0,0,24,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,182,194,0,0,168,194,0,0,148,194,0,0,160,194,0,0,160,194,0,0,160,194,0,0,160,194,0,0,160,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,182,194,0,0,168,194,0,0,148,194,0,0,136,194,0,0,136,194,0,0,136,194,0,0,136,194,0,0,136,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,172,194,0,0,156,194,0,0,140,194,0,0,112,194,0,0,52,194,0,0,240,193,0,0,168,193,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,174,194,0,0,156,194,0,0,134,194,0,0,64,194,0,0,24,194,0,0,232,193,0,0,168,193,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,172,194,0,0,138,194,0,0,96,194,0,0,52,194,0,0,12,194,0,0,4,194,0,0,232,193,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,166,194,0,0,142,194,0,0,64,194,0,0,216,193,0,0,24,194,0,0,20,194,0,0,8,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,62,180,228,51,9,145,243,51,139,178,1,52,60,32,10,52,35,26,19,52,96,169,28,52,167,215,38,52,75,175,49,52,80,59,61,52,112,135,73,52,35,160,86,52,184,146,100,52,85,109,115,52,136,159,129,52,252,11,138,52,147,4,147,52,105,146,156,52,50,191,166,52,63,149,177,52,147,31,189,52,228,105,201,52,173,128,214,52,54,113,228,52,166,73,243,52,136,140,1,53,192,247,9,53,6,239,18,53,118,123,28,53,192,166,38,53,55,123,49,53,218,3,61,53,94,76,73,53,59,97,86,53,185,79,100,53,252,37,115,53,138,121,129,53,134,227,137,53,124,217,146,53,133,100,156,53,82,142,166,53,51,97,177,53,37,232,188,53,220,46,201,53,206,65,214,53,65,46,228,53,87,2,243,53,143,102,1,54,79,207,9,54,245,195,18,54,152,77,28,54,232,117,38,54,50,71,49,54,116,204,60,54,94,17,73,54,101,34,86,54,206,12,100,54,184,222,114,54,151,83,129,54,28,187,137,54,114,174,146,54,175,54,156,54,129,93,166,54,53,45,177,54,199,176,188,54,228,243,200,54,1,3,214,54,96,235,227,54,30,187,242,54,162,64,1,55,235,166,9,55,241,152,18,55,201,31,28,55,30,69,38,55,61,19,49,55,30,149,60,55,111,214,72,55,162,227,85,55,247,201,99,55,137,151,114,55,175,45,129,55,190,146,137,55,116,131,146,55,230,8,156,55,190,44,166,55,71,249,176,55,121,121,188,55,254,184,200,55,71,196,213,55,146,168,227,55,248,115,242,55,192,26,1,56,147,126,9,56,249,109,18,56,6,242,27,56,98,20,38,56,86,223,48,56,216,93,60,56,146,155,72,56,242,164,85,56,51,135,99,56,110,80,114,56,211,7,129,56,107,106,137,56,130,88,146,56,42,219,155,56,9,252,165,56,104,197,176,56,59,66,188,56,41,126,200,56,160,133,213,56,217,101,227,56,232,44,242,56,233,244,0,57,70,86,9,57,14,67,18,57,81,196,27,57,181,227,37,57,127,171,48,57,162,38,60,57,197,96,72,57,83,102,85,57,131,68,99,57,104,9,114,57,1,226,128,57,36,66,137,57,157,45,146,57,123,173,155,57,99,203,165,57,153,145,176,57,13,11,188,57,102,67,200,57,11,71,213,57,50,35,227,57,237,229,241,57,29,207,0,58,5,46,9,58,48,24,18,58,169,150,27,58,21,179,37,58,183,119,48,58,124,239,59,58,10,38,72,58,199,39,85,58,230,1,99,58,120,194,113,58,59,188,128,58,233,25,137,58,198,2,146,58,219,127,155,58,203,154,165,58,216,93,176,58,239,211,187,58,179,8,200,58,136,8,213,58,159,224,226,58,7,159,241,58,92,169,0,59,208,5,9,59,94,237,17,59,15,105,27,59,132,130,37,59,253,67,48,59,103,184,59,59,97,235,71,59,77,233,84,59,93,191,98,59,156,123,113,59,127,150,128,59,186,241,136,59,249,215,145,59,71,82,155,59,65,106,165,59,39,42,176,59,226,156,187,59,18,206,199,59,23,202,212,59,32,158,226,59,53,88,241,59,166,131,0,60,167,221,8,60,152,194,17,60,130,59,27,60,1,82,37,60,84,16,48,60,97,129,59,60,200,176,71,60,229,170,84,60,232,124,98,60,212,52,113,60,207,112,128,60,150,201,136,60,58,173,145,60,192,36,155,60,197,57,165,60,133,246,175,60,229,101,187,60,130,147,199,60,185,139,212,60,180,91,226,60,121,17,241,60,251,93,0,61,137,181,8,61,223,151,17,61,2,14,27,61,141,33,37,61,185,220,47,61,109,74,59,61,64,118,71,61,145,108,84,61,133,58,98,61,34,238,112,61,42,75,128,61,127,161,136,61,136,130,145,61,72,247,154,61,88,9,165,61,242,194,175,61,248,46,187,61,3,89,199,61,109,77,212,61,92,25,226,61,209,202,240,61,91,56,0,62,119,141,8,62,51,109,17,62,144,224,26,62,39,241,36,62,46,169,47,62,135,19,59,62,202,59,71,62,77,46,84,62,55,248,97,62,132,167,112,62,143,37,128,62,115,121,136,62,226,87,145,62,220,201,154,62,249,216,164,62,109,143,175,62,27,248,186,62,149,30,199,62,51,15,212,62,23,215,225,62,61,132,240,62,198,18,0,63,114,101,8,63,147,66,17,63,43,179,26,63,206,192,36,63,177,117,47,63,178,220,58,63,101,1,71,63,29,240,83,63,251,181,97,63,251,96,112,63,0,0,128,63,0,0,0,0,84,14,0,0,60,109,0,0,92,109,0,0,124,109,0,0,112,14,0,0,0,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,18,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,18,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,4,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,11,0,0,0,112,9,0,0,112,3,0,0,2,0,0,0,64,156,0,0,80,195,0,0,56,49,1,0,100,49,1,0,144,49,1,0,180,120,0,0,228,120,0,0,128,50,1,0,176,53,1,0,128,50,1,0,224,56,1,0,16,57,1,0,160,66,1,0,48,76,1,0,192,85,1,0,92,124,0,0,80,95,1,0,208,3,0,0,48,4,0,0,16,99,1,0,60,99,1,0,104,99,1,0,148,99,1,0,144,4,0,0,192,99,1,0,240,99,1,0,232,4,0,0,244,125,0,0,72,5,0,0,108,166,1,0,96,138,0,0,140,138,0,0,2,0,0,0,32,100,1,0,172,177,1,0,204,109,0,0,176,110,0,0,76,111,0,0,232,111,0,0,132,112,0,0,32,113,0,0,188,113,0,0,88,114,0,0,244,114,0,0,144,115,0,0,44,116,0,0,200,116,0,0,100,117,0,0,0,118,0,0,156,118,0,0,56,119,0,0,212,119,0,0,0,0,0,0,11,0,0,0,16,9,0,0,112,3,0,0,6,0,0,0,64,156,0,0,112,17,1,0,56,49,1,0,100,49,1,0,144,49,1,0,180,120,0,0,228,120,0,0,128,50,1,0,176,53,1,0,128,50,1,0,224,56,1,0,16,57,1,0,160,66,1,0,48,76,1,0,192,85,1,0,92,124,0,0,80,95,1,0,208,3,0,0,48,4,0,0,16,99,1,0,60,99,1,0,104,99,1,0,148,99,1,0,144,4,0,0,192,99,1,0,240,99,1,0,232,4,0,0,244,125,0,0,72,5,0,0,108,166,1,0,96,138,0,0,140,138,0,0,3,0,0,0,32,100,1,0,228,73,2,0,11,0,0,0,176,8,0,0,112,3,0,0,255,255,255,255,64,156,0,0,80,195,0,0,56,49,1,0,100,49,1,0,144,49,1,0,180,120,0,0,228,120,0,0,128,50,1,0,176,53,1,0,128,50,1,0,224,56,1,0,16,57,1,0,160,66,1,0,48,76,1,0,192,85,1,0,92,124,0,0,80,95,1,0,208,3,0,0,48,4,0,0,16,99,1,0,60,99,1,0,104,99,1,0,148,99,1,0,144,4,0,0,192,99,1,0,240,99,1,0,232,4,0,0,244,125,0,0,72,5,0,0,108,166,1,0,96,138,0,0,140,138,0,0,2,0,0,0,32,100,1,0,44,100,1,0,11,0,0,0,80,8,0,0,112,3,0,0,2,0,0,0,144,101,0,0,64,156,0,0,56,49,1,0,100,49,1,0,144,49,1,0,180,120,0,0,228,120,0,0,128,50,1,0,176,53,1,0,128,50,1,0,224,56,1,0,16,57,1,0,160,66,1,0,48,76,1,0,192,85,1,0,92,124,0,0,80,95,1,0,208,3,0,0,48,4,0,0,16,99,1,0,60,99,1,0,104,99,1,0,148,99,1,0,144,4,0,0,192,99,1,0,240,99,1,0,240,7,0,0,244,125,0,0,72,5,0,0,108,166,1,0,96,138,0,0,140,138,0,0,2,0,0,0,32,100,1,0,172,177,1,0,11,0,0,0,144,7,0,0,112,3,0,0,255,255,255,255,144,101,0,0,64,156,0,0,56,49,1,0,100,49,1,0,144,49,1,0,180,120,0,0,228,120,0,0,128,50,1,0,176,53,1,0,128,50,1,0,224,56,1,0,16,57,1,0,160,66,1,0,48,76,1,0,192,85,1,0,92,124,0,0,80,95,1,0,208,3,0,0,48,4,0,0,16,99,1,0,60,99,1,0,104,99,1,0,148,99,1,0,144,4,0,0,192,99,1,0,240,99,1,0,240,7,0,0,244,125,0,0,72,5,0,0,0,0,0,0,96,138,0,0,140,138,0,0,2,0,0,0,32,100,1,0,44,100,1,0,3,0,0,0,112,7,0,0,112,6,0,0,2,0,0,0,56,74,0,0,144,101,0,0,164,25,2,0,176,25,2,0,188,25,2,0,180,120,0,0,228,120,0,0,12,26,2,0,12,26,2,0,12,26,2,0,28,27,2,0,76,27,2,0,124,30,2,0,124,30,2,0,172,33,2,0,92,124,0,0,140,124,0,0,144,6,0,0,144,6,0,0,220,36,2,0,220,36,2,0,232,36,2,0,232,36,2,0,176,6,0,0,248,36,2,0,8,37,2,0,80,7,0,0,244,125,0,0,240,6,0,0,24,37,2,0,96,138,0,0,140,138,0,0,2,0,0,0,216,40,2,0,8,57,2,0,3,0,0,0,48,7,0,0,112,6,0,0,255,255,255,255,56,74,0,0,144,101,0,0,164,25,2,0,176,25,2,0,188,25,2,0,180,120,0,0,228,120,0,0,12,26,2,0,12,26,2,0,12,26,2,0,28,27,2,0,76,27,2,0,124,30,2,0,124,30,2,0,172,33,2,0,92,124,0,0,140,124,0,0,144,6,0,0,144,6,0,0,220,36,2,0,220,36,2,0,232,36,2,0,232,36,2,0,176,6,0,0,248,36,2,0,8,37,2,0,80,7,0,0,244,125,0,0,240,6,0,0,24,37,2,0,96,138,0,0,140,138,0,0,2,0,0,0,216,40,2,0,224,40,2,0,3,0,0,0,16,7,0,0,112,6,0,0,2,0,0,0,152,58,0,0,56,74,0,0,164,25,2,0,176,25,2,0,188,25,2,0,180,120,0,0,228,120,0,0,12,26,2,0,12,26,2,0,12,26,2,0,28,27,2,0,76,27,2,0,124,30,2,0,124,30,2,0,172,33,2,0,92,124,0,0,140,124,0,0,144,6,0,0,144,6,0,0,220,36,2,0,220,36,2,0,232,36,2,0,232,36,2,0,176,6,0,0,248,36,2,0,8,37,2,0,208,6,0,0,244,125,0,0,240,6,0,0,24,37,2,0,96,138,0,0,140,138,0,0,2,0,0,0,216,40,2,0,8,57,2,0,3,0,0,0,80,6,0,0,112,6,0,0,255,255,255,255,152,58,0,0,56,74,0,0,164,25,2,0,176,25,2,0,188,25,2,0,180,120,0,0,228,120,0,0,12,26,2,0,12,26,2,0,12,26,2,0,28,27,2,0,76,27,2,0,124,30,2,0,124,30,2,0,172,33,2,0,92,124,0,0,140,124,0,0,144,6,0,0,144,6,0,0,220,36,2,0,220,36,2,0,232,36,2,0,232,36,2,0,176,6,0,0,248,36,2,0,8,37,2,0,208,6,0,0,244,125,0,0,240,6,0,0,24,37,2,0,96,138,0,0,140,138,0,0,2,0,0,0,216,40,2,0,224,40,2,0,2,0,0,0,56,6,0,0,240,5,0,0,2,0,0,0,40,35,0,0,152,58,0,0,36,22,2,0,36,22,2,0,44,22,2,0,180,120,0,0,228,120,0,0,104,22,2,0,0,0,0,0,104,22,2,0,224,121,0,0,52,23,2,0,52,23,2,0,0,0,0,0,0,0,0,0,92,124,0,0,140,124,0,0,24,3,0,0,0,0,0,0,204,125,0,0,204,125,0,0,212,125,0,0,212,125,0,0,8,6,0,0,220,125,0,0,232,125,0,0,32,6,0,0,244,125,0,0,88,3,0,0,144,135,0,0,96,138,0,0,140,138,0,0,1,0,0,0,152,25,2,0,120,3,1,0,2,0,0,0,216,5,0,0,240,5,0,0,255,255,255,255,40,35,0,0,152,58,0,0,36,22,2,0,36,22,2,0,44,22,2,0,180,120,0,0,228,120,0,0,104,22,2,0,0,0,0,0,104,22,2,0,224,121,0,0,52,23,2,0,52,23,2,0,0,0,0,0,0,0,0,0,92,124,0,0,140,124,0,0,24,3,0,0,0,0,0,0,204,125,0,0,204,125,0,0,212,125,0,0,212,125,0,0,8,6,0,0,220,125,0,0,232,125,0,0,32,6,0,0,244,125,0,0,88,3,0,0,144,135,0,0,96,138,0,0,140,138,0,0,1,0,0,0,152,25,2,0,176,186,0,0,2,0,0,0,192,5,0,0,0,3,0,0,2,0,0,0,64,31,0,0,40,35,0,0,112,120,0,0,112,120,0,0,120,120,0,0,180,120,0,0,228,120,0,0,20,121,0,0,0,0,0,0,20,121,0,0,224,121,0,0,248,121,0,0,248,121,0,0,0,0,0,0,0,0,0,0,92,124,0,0,140,124,0,0,24,3,0,0,0,0,0,0,204,125,0,0,204,125,0,0,212,125,0,0,212,125,0,0,48,3,0,0,220,125,0,0,232,125,0,0,64,3,0,0,244,125,0,0,88,3,0,0,144,135,0,0,96,138,0,0,140,138,0,0,1,0,0,0,172,186,0,0,120,3,1,0,2,0,0,0,168,5,0,0,0,3,0,0,255,255,255,255,64,31,0,0,40,35,0,0,112,120,0,0,112,120,0,0,120,120,0,0,180,120,0,0,228,120,0,0,20,121,0,0,0,0,0,0,20,121,0,0,224,121,0,0,248,121,0,0,248,121,0,0,0,0,0,0,0,0,0,0,92,124,0,0,140,124,0,0,24,3,0,0,0,0,0,0,204,125,0,0,204,125,0,0,212,125,0,0,212,125,0,0,48,3,0,0,220,125,0,0,232,125,0,0,64,3,0,0,244,125,0,0,88,3,0,0,144,135,0,0,96,138,0,0,140,138,0,0,1,0,0,0,172,186,0,0,176,186,0,0,11,0,0,0,160,2,0,0,112,3,0,0,2,0,0,0,80,195,0,0,64,13,3,0,56,49,1,0,100,49,1,0,144,49,1,0,180,120,0,0,228,120,0,0,128,50,1,0,176,53,1,0,128,50,1,0,224,56,1,0,16,57,1,0,160,66,1,0,48,76,1,0,192,85,1,0,92,124,0,0,80,95,1,0,208,3,0,0,48,4,0,0,16,99,1,0,60,99,1,0,104,99,1,0,148,99,1,0,144,4,0,0,192,99,1,0,240,99,1,0,232,4,0,0,244,125,0,0,72,5,0,0,108,166,1,0,96,138,0,0,140,138,0,0,2,0,0,0,32,100,1,0,172,177,1,0,11,0,0,0,160,2,0,0,112,3,0,0,255,255,255,255,80,195,0,0,64,13,3,0,56,49,1,0,100,49,1,0,144,49,1,0,180,120,0,0,228,120,0,0,128,50,1,0,176,53,1,0,128,50,1,0,224,56,1,0,16,57,1,0,160,66,1,0,48,76,1,0,192,85,1,0,92,124,0,0,80,95,1,0,208,3,0,0,48,4,0,0,16,99,1,0,60,99,1,0,104,99,1,0,148,99,1,0,144,4,0,0,192,99,1,0,240,99,1,0,232,4,0,0,244,125,0,0,72,5,0,0,0,0,0,0,96,138,0,0,140,138,0,0,2,0,0,0,32,100,1,0,44,100,1,0,2,0,0,0,160,2,0,0,0,3,0,0,2,0,0,0,0,0,0,0,64,31,0,0,112,120,0,0,112,120,0,0,120,120,0,0,180,120,0,0,228,120,0,0,20,121,0,0,0,0,0,0,20,121,0,0,224,121,0,0,248,121,0,0,248,121,0,0,0,0,0,0,0,0,0,0,92,124,0,0,140,124,0,0,24,3,0,0,0,0,0,0,204,125,0,0,204,125,0,0,212,125,0,0,212,125,0,0,48,3,0,0,220,125,0,0,232,125,0,0,64,3,0,0,244,125,0,0,88,3,0,0,144,135,0,0,96,138,0,0,140,138,0,0,1,0,0,0,172,186,0,0,120,3,1,0,2,0,0,0,160,2,0,0,0,3,0,0,255,255,255,255,0,0,0,0,64,31,0,0,112,120,0,0,112,120,0,0,120,120,0,0,180,120,0,0,228,120,0,0,20,121], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);\n/* memory initializer */ allocate([20,121,0,0,224,121,0,0,248,121,0,0,248,121,0,0,0,0,0,0,0,0,0,0,92,124,0,0,140,124,0,0,24,3,0,0,0,0,0,0,204,125,0,0,204,125,0,0,212,125,0,0,212,125,0,0,48,3,0,0,220,125,0,0,232,125,0,0,64,3,0,0,244,125,0,0,88,3,0,0,144,135,0,0,96,138,0,0,140,138,0,0,1,0,0,0,172,186,0,0,176,186,0,0,0,2,0,0,0,2,0,0,32,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,242,255,255,255,0,0,0,0,0,0,0,0,90,0,0,0,90,0,0,0,95,0,0,0,95,0,0,0,95,0,0,0,95,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,232,255,255,255,226,255,255,255,216,255,255,255,216,255,255,255,211,255,255,255,211,255,255,255,211,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,10,0,0,0,10,0,0,0,255,255,255,255,10,0,0,0,10,0,0,0,255,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,236,255,255,255,236,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,226,255,255,255,216,255,255,255,216,255,255,255,211,255,255,255,211,255,255,255,211,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,14,0,0,0,14,0,0,0,15,0,0,0,15,0,0,0,16,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,64,0,0,0,64,0,0,0,8,0,0,0,8,0,0,0,156,255,255,255,156,255,255,255,151,255,255,255,126,255,255,255,126,255,255,255,116,255,255,255,8,0,0,0,0,0,160,65,0,0,96,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,112,194,0,0,240,193,0,0,32,194,0,0,32,194,0,0,32,194,0,0,32,194,0,0,32,194,0,0,0,64,0,0,150,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,96,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,194,0,0,240,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,0,64,0,0,160,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,64,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,160,193,0,0,160,193,0,0,112,193,0,0,112,193,0,0,112,193,0,0,112,193,0,0,112,193,0,0,0,0,0,0,160,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,32,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,160,193,0,0,112,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,0,0,0,0,160,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,32,65,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,112,193,0,0,112,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,0,0,0,0,170,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,204,242,0,0,224,242,0,0,244,242,0,0,20,243,0,0,52,243,0,0,100,243,0,0,148,243,0,0,168,243,0,0,228,243,0,0,32,244,0,0,240,85,8,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,128,0,0,0,33,0,0,0,8,0,0,0,16,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,66,0,0,0,16,0,0,0,32,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,1,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,128,0,0,0,14,0,0,0,4,0,0,0,58,0,0,0,2,0,0,0,8,0,0,0,28,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,28,0,0,0,8,0,0,0,116,0,0,0,4,0,0,0,16,0,0,0,56,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,1,0,0,4,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,128,0,0,0,8,0,0,0,33,0,0,0,4,0,0,0,16,0,0,0,70,0,0,0,2,0,0,0,6,0,0,0,12,0,0,0,23,0,0,0,46,0,0,0,90], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+30720);\n/* memory initializer */ allocate([112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,128,0,0,0,12,0,0,0,46,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,23,0,0,0,33,0,0,0,70,0,0,0,2,0,0,0,6,0,0,0,10,0,0,0,14,0,0,0,19,0,0,0,28,0,0,0,39,0,0,0,58,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,66,0,0,0,16,0,0,0,32,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,1,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,12,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,4,0,0,93,0,0,0,23,0,0,0,116,1,0,0,6,0,0,0,46,0,0,0,186,0,0,0,238,2,0,0,14,0,0,0,33,0,0,0,65,0,0,0,130,0,0,0,4,1,0,0,44,2,0,0,3,0,0,0,10,0,0,0,18,0,0,0,28,0,0,0,39,0,0,0,55,0,0,0,79,0,0,0,111,0,0,0,158,0,0,0,220,0,0,0,56,1,0,0,208,1,0,0,138,2,0,0,82,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,64,64,0,0,144,65,0,4,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,12,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,8,0,0,186,0,0,0,46,0,0,0,232,2,0,0,12,0,0,0,92,0,0,0,116,1,0,0,220,5,0,0,28,0,0,0,66,0,0,0,130,0,0,0,4,1,0,0,8,2,0,0,88,4,0,0,6,0,0,0,20,0,0,0,36,0,0,0,56,0,0,0,78,0,0,0,110,0,0,0,158,0,0,0,222,0,0,0,60,1,0,0,184,1,0,0,112,2,0,0,160,3,0,0,20,5,0,0,164,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,64,64,0,0,144,65,0,8,0,0,6,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,46,0,0,0,186,0,0,0,16,0,0,0,33,0,0,0,65,0,0,0,93,0,0,0,130,0,0,0,22,1,0,0,7,0,0,0,23,0,0,0,39,0,0,0,55,0,0,0,79,0,0,0,110,0,0,0,156,0,0,0,232,0,0,0,104,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,10,0,0,0,196,242,0,0,192,186,0,0,208,211,0,0,192,186,0,0,240,211,0,0,1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+41038);\n/* memory initializer */ allocate([1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+51008);\n/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+52036);\n/* memory initializer */ allocate([1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,4,239,0,0,4,239,0,0,44,239,0,0,44,239,0,0,1,0,0,0,0,0,0,0,32,0,0,0,16,212,0,0,40,223,0,0,40,223,0,0,80,223,0,0,80,223,0,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+54216);\n/* memory initializer */ allocate([1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,16,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,30,0,0,0,255,255,255,255,50,0,0,0,255,255,255,255,80,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,138,121,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,224,0,0,0,0,0,0,0,225,0,0,40,225,0,0,0,0,0,0,0,0,0,0,80,225,0,0,120,225,0,0,0,0,0,0,0,0,0,0,160,225,0,0,200,225,0,0,240,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,57,121,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,224,227,0,0,0,0,0,0,4,0,0,0,81,0,0,0,232,120,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,212,227,0,0,0,0,0,0,4,0,0,0,113,2,0,0,119,118,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,192,227,0,0,0,0,0,0,4,0,0,0,113,2,0,0,6,116,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,172,227,0,0,0,0,0,0,2,0,0,0,81,0,0,0,181,115,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,136,227,0,0,0,0,0,0,2,0,0,0,81,0,0,0,100,115,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,100,227,0,0,0,0,0,0,4,0,0,0,81,0,0,0,19,115,3,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,88,227,0,0,0,0,0,0,2,0,0,0,121,0,0,0,154,114,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,44,227,0,0,0,0,0,0,2,0,0,0,121,0,0,0,33,114,3,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,0,227,0,0,0,0,0,0,2,0,0,0,121,0,0,0,168,113,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,212,226,0,0,0,0,0,0,2,0,0,0,225,0,0,0,199,112,3,0,1,0,0,0,0,228,91,225,0,224,255,96,4,0,0,0,0,0,0,0,152,226,0,0,0,0,0,0,2,0,0,0,225,0,0,0,230,111,3,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,92,226,0,0,0,0,0,0,2,0,0,0,33,1,0,0,197,110,3,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,24,226,0,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,8,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+56612);\n/* memory initializer */ allocate([1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,25,0,0,0,255,255,255,255,45,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,112,131,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,239,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,240,0,0,0,0,0,0,180,240,0,0,220,240,0,0,0,0,0,0,0,0,0,0,4,241,0,0,44,241,0,0,84,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,31,131,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,184,242,0,0,0,0,0,0,4,0,0,0,81,0,0,0,206,130,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,172,242,0,0,0,0,0,0,4,0,0,0,113,2,0,0,93,128,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,152,242,0,0,0,0,0,0,4,0,0,0,113,2,0,0,236,125,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,132,242,0,0,0,0,0,0,2,0,0,0,81,0,0,0,155,125,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,96,242,0,0,0,0,0,0,2,0,0,0,169,0,0,0,242,124,3,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,44,242,0,0,0,0,0,0,2,0,0,0,25,0,0,0,217,124,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,24,242,0,0,0,0,0,0,4,0,0,0,81,0,0,0,136,124,3,0,1,0,0,0,0,176,19,225,0,176,19,97,2,0,0,0,0,0,0,0,12,242,0,0,0,0,0,0,2,0,0,0,225,0,0,0,167,123,3,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,208,241,0,0,0,0,0,0,2,0,0,0,185,1,0,0,238,121,3,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,124,241,0,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,6,0,0,0,6,0,0,0,176,2,1,0,216,2,1,0,0,3,1,0,40,3,1,0,80,3,1,0,232,1,1,0,16,2,1,0,56,2,1,0,96,2,1,0,136,2,1,0,168,0,1,0,208,0,1,0,248,0,1,0,32,1,1,0,72,1,1,0,112,1,1,0,152,1,1,0,192,1,1,0,104,255,0,0,144,255,0,0,184,255,0,0,224,255,0,0,8,0,1,0,48,0,1,0,88,0,1,0,128,0,1,0,136,253,0,0,176,253,0,0,216,253,0,0,0,254,0,0,40,254,0,0,80,254,0,0,120,254,0,0,160,254,0,0,200,254,0,0,240,254,0,0,24,255,0,0,64,255,0,0,168,251,0,0,208,251,0,0,248,251,0,0,32,252,0,0,72,252,0,0,112,252,0,0,152,252,0,0,192,252,0,0,232,252,0,0,16,253,0,0,56,253,0,0,96,253,0,0,224,250,0,0,8,251,0,0,48,251,0,0,88,251,0,0,128,251,0,0,136,248,0,0,176,248,0,0,216,248,0,0,0,249,0,0,40,249,0,0,80,249,0,0,120,249,0,0,160,249,0,0,200,249,0,0,240,249,0,0,24,250,0,0,64,250,0,0,104,250,0,0,144,250,0,0,184,250,0,0,48,246,0,0,88,246,0,0,128,246,0,0,168,246,0,0,208,246,0,0,248,246,0,0,32,247,0,0,72,247,0,0,112,247,0,0,152,247,0,0,192,247,0,0,232,247,0,0,16,248,0,0,56,248,0,0,96,248,0,0,80,244,0,0,120,244,0,0,160,244,0,0,200,244,0,0,240,244,0,0,24,245,0,0,64,245,0,0,104,245,0,0,144,245,0,0,184,245,0,0,224,245,0,0,8,246,0,0,1,0,0,0,8,0,0,0,216,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,152,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,88,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,216,133,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,184,133,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,56,133,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,38,133,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,244,132,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,116,132,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,98,132,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,48,132,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,176,131,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,112,139,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,104,139,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,104,138,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,40,138,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,168,137,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,136,137,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,8,137,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,232,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,104,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,86,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,36,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,164,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,146,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,96,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,224,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,16,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,8,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,8,143,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,200,142,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,72,142,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,40,142,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,168,141,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,136,141,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,8,141,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,246,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,196,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,68,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,50,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,0,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,128,139,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,135,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,131,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,121,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,96,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,32,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,175,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,111,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,47,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,175,147,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,143,147,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,15,147,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,253,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,203,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,75,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,57,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,7,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,135,145,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,223,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,159,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,95,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,223,150,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,191,150,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,63,150,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,45,150,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,251,149,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,123,149,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,105,149,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,55,149,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,183,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,171,153,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,171,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,162,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,137,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,73,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,64,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,39,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,231,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,175,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,175,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,166,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,141,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,77,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,68,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,43,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,235,153,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,86,156,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,82,156,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,72,156,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,47,156,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,239,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,189,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,185,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,175,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,150,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,86,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,3,1,0,152,28,1,0,136,3,1,0,184,28,1,0,1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+60672);\n/* memory initializer */ allocate([1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+67588);\n/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+68616);\n/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+70668);\n/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,168,44,1,0,168,44,1,0,208,44,1,0,208,44,1,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,240,39,1,0,240,39,1,0,24,40,1,0,24,40,1,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+71824);\n/* memory initializer */ allocatei8\", ALLOC_NONE, Runtime.GLOBAL_BASE+75244);\n/* memory initializer */ allocate([4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,1,0,0,0,4,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,10,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,0,0,0,0,3,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,249,255,255,255,252,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,0,0,0,0,2,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,252,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,1,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,252,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,228,255,255,255,232,255,255,255,234,255,255,255,240,255,255,255,244,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,253,255,255,255,255,255,255,255,0,0,0,0,222,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,247,255,255,255,251,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,228,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,251,255,255,255,254,255,255,255,0,0,0,0,222,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,234,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,238,255,255,255,239,255,255,255,240,255,255,255,244,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,228,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,250,255,255,255,254,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,240,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,234,255,255,255,236,255,255,255,241,255,255,255,246,255,255,255,248,255,255,255,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,7,0,0,0,220,255,255,255,220,255,255,255,220,255,255,255,220,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,249,255,255,255,220,255,255,255,220,255,255,255,220,255,255,255,220,255,255,255,222,255,255,255,226,255,255,255,228,255,255,255,230,255,255,255,232,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,236,255,255,255,242,255,255,255,248,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,2,0,0,0,218,255,255,255,218,255,255,255,218,255,255,255,218,255,255,255,220,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,238,255,255,255,240,255,255,255,244,255,255,255,246,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,218,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,228,255,255,255,236,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,221,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,236,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,252,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,20,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,246,255,255,255,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,6,0,0,0,15,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,246,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,252,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,1,0,0,0,4,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,0,0,0,0,3,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,252,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,0,0,0,0,2,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,251,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,1,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,249,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,240,255,255,255,244,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,253,255,255,255,255,255,255,255,0,0,0,0,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,247,255,255,255,248,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,251,255,255,255,254,255,255,255,0,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,238,255,255,255,240,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,243,255,255,255,243,255,255,255,244,255,255,255,246,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,252,255,255,255,0,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,238,255,255,255,239,255,255,255,240,255,255,255,244,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,7,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,250,255,255,255,254,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,230,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,240,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,2,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,234,255,255,255,238,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,249,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,236,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,14,0,0,0,14,0,0,0,14,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,16,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,7,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,32,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,32,0,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,0,1,0,0,128,0,0,0,128,0,0,0,0,1,0,0,0,2,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,156,255,255,255,156,255,255,255,156,255,255,255,156,255,255,255,156,255,255,255,156,255,255,255,151,255,255,255,151,255,255,255,151,255,255,255,151,255,255,255,146,255,255,255,136,255,255,255,126,255,255,255,126,255,255,255,126,255,255,255,126,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,106,255,255,255,232,165,1,0,20,166,1,0,64,166,1,0,192,186,0,0,132,100,1,0,192,186,0,0,196,100,1,0,192,186,0,0,4,101,1,0,192,186,0,0,68,101,1,0,192,186,0,0,132,101,1,0,192,186,0,0,196,101,1,0,192,186,0,0,4,102,1,0,192,186,0,0,68,102,1,0,192,186,0,0,132,102,1,0,192,186,0,0,196,102,1,0,192,186,0,0,4,103,1,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,32,162,1,0,32,162,1,0,72,162,1,0,72,162,1,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,8,163,1,0,8,163,1,0,72,162,1,0,72,162,1,0,1,0,0,0,0,0,0,0,16,0,0,0,236,227,0,0,88,158,1,0,88,158,1,0,128,158,1,0,128,158,1,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,64,159,1,0,64,159,1,0,128,158,1,0,128,158,1,0,1,0,0,0,0,0,0,0,16,0,0,0,236,227,0,0,136,154,1,0,136,154,1,0,176,154,1,0,176,154,1,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,112,155,1,0,112,155,1,0,176,154,1,0,176,154,1,0,1,0,0,0,0,0,0,0,16,0,0,0,236,227,0,0,176,150,1,0,176,150,1,0,216,150,1,0,216,150,1,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,152,151,1,0,152,151,1,0,216,150,1,0,216,150,1,0,1,0,0,0,0,0,0,0,16,0,0,0,236,227,0,0,192,146,1,0,192,146,1,0,232,146,1,0,232,146,1,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,168,147,1,0,168,147,1,0,232,146,1,0,232,146,1,0,1,0,0,0,0,0,0,0,16,0,0,0,236,227,0,0,192,142,1,0,192,142,1,0,232,142,1,0,232,142,1,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,168,143,1,0,168,143,1,0,232,142,1,0,232,142,1,0,1,0,0,0,0,0,0,0,16,0,0,0,16,212,0,0,220,137,1,0,220,137,1,0,4,138,1,0,4,138,1,0,1,0,0,0,0,0,0,0,32,0,0,0,16,212,0,0,196,138,1,0,196,138,1,0,4,138,1,0,4,138,1,0,1,0,0,0,0,0,0,0,16,0,0,0,16,212,0,0,240,132,1,0,240,132,1,0,24,133,1,0,24,133,1,0,1,0,0,0,0,0,0,0,32,0,0,0,16,212,0,0,216,133,1,0,216,133,1,0,24,133,1,0,24,133,1,0,1,0,0,0,0,0,0,0,16,0,0,0,16,212,0,0,156,127,1,0,156,127,1,0,196,127,1,0,196,127,1,0,1,0,0,0,0,0,0,0,32,0,0,0,16,212,0,0,132,128,1,0,132,128,1,0,196,127,1,0,196,127,1,0,1,0,0,0,0,0,0,0,16,0,0,0,68,103,1,0,8,121,1,0,8,121,1,0,48,121,1,0,48,121,1,0,1,0,0,0,0,0,0,0,32,0,0,0,68,103,1,0,240,121,1,0,240,121,1,0,48,121,1,0,48,121,1,0,1,0,0,0,0,0,0,0,16,0,0,0,68,103,1,0,92,114,1,0,92,114,1,0,132,114,1,0,132,114,1,0,1,0,0,0,0,0,0,0,32,0,0,0,68,103,1,0,68,115,1,0,68,115,1,0,132,114,1,0,132,114,1,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+85484);\n/* memory initializer */ allocate([1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,71,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,208,240,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,115,1,0,0,0,0,0,0,0,0,0,0,0,0,0,148,115,1,0,0,0,0,0,0,0,0,0,0,0,0,0,188,115,1,0,0,0,0,0,0,0,0,0,0,0,0,0,228,115,1,0,0,0,0,0,12,116,1,0,52,116,1,0,0,0,0,0,0,0,0,0,92,116,1,0,132,116,1,0,0,0,0,0,0,0,0,0,172,116,1,0,212,116,1,0,0,0,0,0,0,0,0,0,252,116,1,0,36,117,1,0,0,0,0,0,0,0,0,0,76,117,1,0,116,117,1,0,156,117,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,117,228,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,127,240,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,252,120,1,0,0,0,0,0,4,0,0,0,113,2,0,0,14,238,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,232,120,1,0,0,0,0,0,2,0,0,0,81,0,0,0,189,237,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,196,120,1,0,0,0,0,0,2,0,0,0,33,1,0,0,156,236,3,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,128,120,1,0,0,0,0,0,4,0,0,0,81,0,0,0,75,236,3,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,116,120,1,0,0,0,0,0,2,0,0,0,121,0,0,0,210,235,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,72,120,1,0,0,0,0,0,2,0,0,0,169,0,0,0,41,235,3,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,20,120,1,0,0,0,0,0,2,0,0,0,25,0,0,0,16,235,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,0,120,1,0,0,0,0,0,2,0,0,0,169,0,0,0,103,234,3,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,204,119,1,0,0,0,0,0,2,0,0,0,121,0,0,0,238,233,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,160,119,1,0,0,0,0,0,2,0,0,0,225,0,0,0,13,233,3,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,100,119,1,0,0,0,0,0,2,0,0,0,185,1,0,0,84,231,3,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,16,119,1,0,0,0,0,0,2,0,0,0,225,0,0,0,115,230,3,0,1,0,0,0,0,117,153,225,0,24,61,97,4,0,0,0,0,0,0,0,212,118,1,0,0,0,0,0,2,0,0,0,105,1,0,0,10,229,3,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,136,118,1,0,0,0,0,0,1,0,0,0,49,0,0,0,217,228,3,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,196,117,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,255,252,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,122,1,0,0,0,0,0,0,0,0,0,0,0,0,0,64,122,1,0,0,0,0,0,0,0,0,0,0,0,0,0,104,122,1,0,0,0,0,0,0,0,0,0,0,0,0,0,144,122,1,0,0,0,0,0,184,122,1,0,224,122,1,0,0,0,0,0,0,0,0,0,8,123,1,0,48,123,1,0,0,0,0,0,0,0,0,0,88,123,1,0,128,123,1,0,0,0,0,0,0,0,0,0,168,123,1,0,208,123,1,0,0,0,0,0,0,0,0,0,248,123,1,0,32,124,1,0,72,124,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,52,241,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,174,252,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,144,127,1,0,0,0,0,0,4,0,0,0,113,2,0,0,61,250,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,124,127,1,0,0,0,0,0,2,0,0,0,81,0,0,0,236,249,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,88,127,1,0,0,0,0,0,2,0,0,0,33,1,0,0,203,248,3,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,20,127,1,0,0,0,0,0,4,0,0,0,81,0,0,0,122,248,3,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,8,127,1,0,0,0,0,0,2,0,0,0,121,0,0,0,1,248,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,220,126,1,0,0,0,0,0,2,0,0,0,169,0,0,0,88,247,3,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,168,126,1,0,0,0,0,0,2,0,0,0,25,0,0,0,63,247,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,148,126,1,0,0,0,0,0,2,0,0,0,169,0,0,0,150,246,3,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,96,126,1,0,0,0,0,0,2,0,0,0,121,0,0,0,29,246,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,52,126,1,0,0,0,0,0,2,0,0,0,225,0,0,0,60,245,3,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,248,125,1,0,0,0,0,0,2,0,0,0,185,1,0,0,131,243,3,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,164,125,1,0,0,0,0,0,2,0,0,0,81,0,0,0,50,243,3,0,1,0,0,0,0,24,125,225,0,24,61,97,4,0,0,0,0,0,0,0,128,125,1,0,0,0,0,0,2,0,0,0,105,1,0,0,201,241,3,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,52,125,1,0,0,0,0,0,1,0,0,0,49,0,0,0,152,241,3,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,112,124,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,252,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,128,1,0,0,0,0,0,0,0,0,0,0,0,0,0,212,128,1,0,0,0,0,0,0,0,0,0,0,0,0,0,252,128,1,0,0,0,0,0,0,0,0,0,0,0,0,0,36,129,1,0,0,0,0,0,0,0,0,0,0,0,0,0,76,129,1,0,0,0,0,0,0,0,0,0,0,0,0,0,116,129,1,0,0,0,0,0,156,129,1,0,196,129,1,0,0,0,0,0,0,0,0,0,236,129,1,0,20,130,1,0,0,0,0,0,0,0,0,0,60,130,1,0,100,130,1,0,140,130,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,99,253,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,171,6,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,228,132,1,0,0,0,0,0,4,0,0,0,81,0,0,0,90,6,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,216,132,1,0,0,0,0,0,4,0,0,0,113,2,0,0,233,3,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,196,132,1,0,0,0,0,0,4,0,0,0,113,2,0,0,120,1,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,176,132,1,0,0,0,0,0,2,0,0,0,81,0,0,0,39,1,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,140,132,1,0,0,0,0,0,2,0,0,0,81,0,0,0,214,0,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,104,132,1,0,0,0,0,0,4,0,0,0,81,0,0,0,133,0,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,92,132,1,0,0,0,0,0,2,0,0,0,121,0,0,0,12,0,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,48,132,1,0,0,0,0,0,2,0,0,0,121,0,0,0,147,255,3,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,4,132,1,0,0,0,0,0,2,0,0,0,121,0,0,0,26,255,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,216,131,1,0,0,0,0,0,2,0,0,0,121,0,0,0,161,254,3,0,1,0,0,0,0,226,120,225,0,232,51,97,4,0,0,0,0,0,0,0,172,131,1,0,0,0,0,0,2,0,0,0,169,0,0,0,248,253,3,0,1,0,0,0,0,96,18,225,0,128,184,96,4,0,0,0,0,0,0,0,120,131,1,0,0,0,0,0,1,0,0,0,49,0,0,0,199,253,3,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,180,130,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,137,18,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,1,0,0,0,0,0,0,0,0,0,0,0,0,0,40,134,1,0,0,0,0,0,0,0,0,0,0,0,0,0,80,134,1,0,0,0,0,0,0,0,0,0,0,0,0,0,120,134,1,0,0,0,0,0,0,0,0,0,0,0,0,0,160,134,1,0,0,0,0,0,0,0,0,0,0,0,0,0,200,134,1,0,0,0,0,0,240,134,1,0,24,135,1,0,0,0,0,0,0,0,0,0,64,135,1,0,104,135,1,0,0,0,0,0,0,0,0,0,144,135,1,0,184,135,1,0,224,135,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,96,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,56,18,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,208,137,1,0,0,0,0,0,4,0,0,0,81,0,0,0,231,17,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,196,137,1,0,0,0,0,0,4,0,0,0,113,2,0,0,118,15,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,176,137,1,0,0,0,0,0,4,0,0,0,113,2,0,0,5,13,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,156,137,1,0,0,0,0,0,2,0,0,0,81,0,0,0,180,12,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,120,137,1,0,0,0,0,0,2,0,0,0,81,0,0,0,99,12,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,84,137,1,0,0,0,0,0,4,0,0,0,81,0,0,0,18,12,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,72,137,1,0,0,0,0,0,2,0,0,0,121,0,0,0,153,11,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,28,137,1,0,0,0,0,0,2,0,0,0,121,0,0,0,32,11,4,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,240,136,1,0,0,0,0,0,2,0,0,0,121,0,0,0,167,10,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,196,136,1,0,0,0,0,0,2,0,0,0,225,0,0,0,198,9,4,0,1,0,0,0,0,228,91,225,0,224,255,96,4,0,0,0,0,0,0,0,136,136,1,0,0,0,0,0,2,0,0,0,225,0,0,0,229,8,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,76,136,1,0,0,0,0,0,2,0,0,0,33,1,0,0,196,7,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,8,136,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,222,29,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,138,1,0,0,0,0,0,0,0,0,0,0,0,0,0,20,139,1,0,0,0,0,0,0,0,0,0,0,0,0,0,60,139,1,0,0,0,0,0,0,0,0,0,0,0,0,0,100,139,1,0,0,0,0,0,0,0,0,0,0,0,0,0,140,139,1,0,0,0,0,0,0,0,0,0,0,0,0,0,180,139,1,0,0,0,0,0,220,139,1,0,4,140,1,0,0,0,0,0,0,0,0,0,44,140,1,0,84,140,1,0,0,0,0,0,0,0,0,0,124,140,1,0,164,140,1,0,204,140,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,237,18,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,141,29,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,180,142,1,0,0,0,0,0,4,0,0,0,81,0,0,0,60,29,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,168,142,1,0,0,0,0,0,4,0,0,0,113,2,0,0,203,26,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,148,142,1,0,0,0,0,0,4,0,0,0,113,2,0,0,90,24,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,128,142,1,0,0,0,0,0,2,0,0,0,81,0,0,0,9,24,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,92,142,1,0,0,0,0,0,2,0,0,0,81,0,0,0,184,23,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,56,142,1,0,0,0,0,0,4,0,0,0,81,0,0,0,103,23,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,44,142,1,0,0,0,0,0,2,0,0,0,121,0,0,0,238,22,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,0,142,1,0,0,0,0,0,2,0,0,0,121,0,0,0,117,22,4,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,212,141,1,0,0,0,0,0,2,0,0,0,121,0,0,0,252,21,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,168,141,1,0,0,0,0,0,2,0,0,0,169,0,0,0,83,21,4,0,1,0,0,0,0,232,87,225,0,224,255,96,4,0,0,0,0,0,0,0,116,141,1,0,0,0,0,0,2,0,0,0,225,0,0,0,114,20,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,56,141,1,0,0,0,0,0,2,0,0,0,33,1,0,0,81,19,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,244,140,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,196,39,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,248,143,1,0,0,0,0,0,0,0,0,0,0,0,0,0,32,144,1,0,0,0,0,0,0,0,0,0,0,0,0,0,72,144,1,0,0,0,0,0,0,0,0,0,0,0,0,0,112,144,1,0,0,0,0,0,152,144,1,0,192,144,1,0,0,0,0,0,0,0,0,0,232,144,1,0,16,145,1,0,56,145,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,66,30,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,115,39,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,180,146,1,0,0,0,0,0,4,0,0,0,81,0,0,0,34,39,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,168,146,1,0,0,0,0,0,4,0,0,0,113,2,0,0,177,36,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,148,146,1,0,0,0,0,0,4,0,0,0,113,2,0,0,64,34,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,128,146,1,0,0,0,0,0,2,0,0,0,81,0,0,0,239,33,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,92,146,1,0,0,0,0,0,2,0,0,0,169,0,0,0,70,33,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,40,146,1,0,0,0,0,0,2,0,0,0,25,0,0,0,45,33,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,20,146,1,0,0,0,0,0,2,0,0,0,169,0,0,0,132,32,4,0,1,0,0,0,0,232,87,225,0,224,255,96,4,0,0,0,0,0,0,0,224,145,1,0,0,0,0,0,2,0,0,0,225,0,0,0,163,31,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,164,145,1,0,0,0,0,0,2,0,0,0,33,1,0,0,130,30,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,96,145,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,46,49,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,147,1,0,0,0,0,0,0,0,0,0,0,0,0,0,248,147,1,0,0,0,0,0,0,0,0,0,0,0,0,0,32,148,1,0,0,0,0,0,0,0,0,0,0,0,0,0,72,148,1,0,0,0,0,0,0,0,0,0,0,0,0,0,112,148,1,0,0,0,0,0,152,148,1,0,192,148,1,0,0,0,0,0,0,0,0,0,232,148,1,0,16,149,1,0,56,149,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,4,40,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,221,48,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,164,150,1,0,0,0,0,0,4,0,0,0,81,0,0,0,140,48,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,152,150,1,0,0,0,0,0,4,0,0,0,113,2,0,0,27,46,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,132,150,1,0,0,0,0,0,4,0,0,0,113,2,0,0,170,43,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,112,150,1,0,0,0,0,0,2,0,0,0,81,0,0,0,89,43,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,76,150,1,0,0,0,0,0,2,0,0,0,169,0,0,0,176,42,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,24,150,1,0,0,0,0,0,2,0,0,0,25,0,0,0,151,42,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,4,150,1,0,0,0,0,0,2,0,0,0,81,0,0,0,70,42,4,0,1,0,0,0,0,224,63,225,0,224,255,96,4,0,0,0,0,0,0,0,224,149,1,0,0,0,0,0,2,0,0,0,225,0,0,0,101,41,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,164,149,1,0,0,0,0,0,2,0,0,0,33,1,0,0,68,40,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,96,149,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,232,57,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,151,1,0,0,0,0,0,0,0,0,0,0,0,0,0,232,151,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,152,1,0,0,0,0,0,0,0,0,0,0,0,0,0,56,152,1,0,0,0,0,0,0,0,0,0,0,0,0,0,96,152,1,0,0,0,0,0,136,152,1,0,176,152,1,0,0,0,0,0,0,0,0,0,216,152,1,0,0,153,1,0,40,153,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,110,49,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,151,57,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,124,154,1,0,0,0,0,0,4,0,0,0,81,0,0,0,70,57,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,112,154,1,0,0,0,0,0,4,0,0,0,113,2,0,0,213,54,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,92,154,1,0,0,0,0,0,4,0,0,0,113,2,0,0,100,52,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,72,154,1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+94296);\n/* memory initializer */ allocate([2,0,0,0,81,0,0,0,19,52,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,36,154,1,0,0,0,0,0,2,0,0,0,169,0,0,0,106,51,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,240,153,1,0,0,0,0,0,2,0,0,0,25,0,0,0,81,51,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,220,153,1,0,0,0,0,0,2,0,0,0,81,0,0,0,0,51,4,0,1,0,0,0,0,32,53,225,0,32,245,96,4,0,0,0,0,0,0,0,184,153,1,0,0,0,0,0,2,0,0,0,169,0,0,0,87,50,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,132,153,1,0,0,0,0,0,2,0,0,0,169,0,0,0,174,49,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,80,153,1,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,130,66,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,155,1,0,0,0,0,0,0,0,0,0,0,0,0,0,192,155,1,0,0,0,0,0,0,0,0,0,0,0,0,0,232,155,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,156,1,0,0,0,0,0,0,0,0,0,0,0,0,0,56,156,1,0,0,0,0,0,96,156,1,0,136,156,1,0,0,0,0,0,0,0,0,0,176,156,1,0,216,156,1,0,0,157,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,40,58,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,49,66,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,76,158,1,0,0,0,0,0,4,0,0,0,81,0,0,0,224,65,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,64,158,1,0,0,0,0,0,4,0,0,0,113,2,0,0,111,63,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,44,158,1,0,0,0,0,0,4,0,0,0,113,2,0,0,254,60,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,24,158,1,0,0,0,0,0,2,0,0,0,81,0,0,0,173,60,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,244,157,1,0,0,0,0,0,2,0,0,0,169,0,0,0,4,60,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,192,157,1,0,0,0,0,0,2,0,0,0,25,0,0,0,235,59,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,172,157,1,0,0,0,0,0,2,0,0,0,49,0,0,0,186,59,4,0,1,0,0,0,0,176,31,225,0,32,245,96,3,0,0,0,0,0,0,0,144,157,1,0,0,0,0,0,2,0,0,0,169,0,0,0,17,59,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,92,157,1,0,0,0,0,0,2,0,0,0,169,0,0,0,104,58,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,40,157,1,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,92,77,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,159,1,0,0,0,0,0,0,0,0,0,0,0,0,0,144,159,1,0,0,0,0,0,0,0,0,0,0,0,0,0,184,159,1,0,0,0,0,0,0,0,0,0,0,0,0,0,224,159,1,0,0,0,0,0,0,0,0,0,0,0,0,0,8,160,1,0,0,0,0,0,48,160,1,0,88,160,1,0,0,0,0,0,0,0,0,0,128,160,1,0,168,160,1,0,208,160,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,194,66,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,11,77,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,20,162,1,0,0,0,0,0,4,0,0,0,81,0,0,0,186,76,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,8,162,1,0,0,0,0,0,4,0,0,0,113,2,0,0,73,74,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,244,161,1,0,0,0,0,0,4,0,0,0,113,2,0,0,216,71,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,224,161,1,0,0,0,0,0,2,0,0,0,81,0,0,0,135,71,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,188,161,1,0,0,0,0,0,2,0,0,0,169,0,0,0,222,70,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,136,161,1,0,0,0,0,0,2,0,0,0,25,0,0,0,197,70,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,116,161,1,0,0,0,0,0,4,0,0,0,113,2,0,0,84,68,4,0,1,0,0,0,0,32,21,225,0,32,245,96,3,0,0,0,0,0,0,0,96,161,1,0,0,0,0,0,2,0,0,0,169,0,0,0,171,67,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,44,161,1,0,0,0,0,0,2,0,0,0,169,0,0,0,2,67,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,248,160,1,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,54,88,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,163,1,0,0,0,0,0,0,0,0,0,0,0,0,0,88,163,1,0,0,0,0,0,0,0,0,0,0,0,0,0,128,163,1,0,0,0,0,0,0,0,0,0,0,0,0,0,168,163,1,0,0,0,0,0,0,0,0,0,0,0,0,0,208,163,1,0,0,0,0,0,248,163,1,0,32,164,1,0,0,0,0,0,0,0,0,0,72,164,1,0,112,164,1,0,152,164,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,156,77,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,229,87,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,220,165,1,0,0,0,0,0,4,0,0,0,81,0,0,0,148,87,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,208,165,1,0,0,0,0,0,4,0,0,0,113,2,0,0,35,85,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,188,165,1,0,0,0,0,0,4,0,0,0,113,2,0,0,178,82,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,168,165,1,0,0,0,0,0,2,0,0,0,81,0,0,0,97,82,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,132,165,1,0,0,0,0,0,2,0,0,0,169,0,0,0,184,81,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,80,165,1,0,0,0,0,0,2,0,0,0,25,0,0,0,159,81,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,60,165,1,0,0,0,0,0,4,0,0,0,113,2,0,0,46,79,4,0,1,0,0,0,0,32,21,225,0,32,245,96,3,0,0,0,0,0,0,0,40,165,1,0,0,0,0,0,2,0,0,0,169,0,0,0,133,78,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,244,164,1,0,0,0,0,0,2,0,0,0,169,0,0,0,220,77,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,192,164,1,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,0,0,128,63,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,224,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,64,65,0,0,72,65,0,0,80,65,0,0,88,65,0,0,96,65,0,0,104,65,0,0,112,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,0,0,128,63,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,64,65,0,0,72,65,0,0,80,65,0,0,88,65,0,0,96,65,0,0,104,65,0,0,112,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,0,0,128,63,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,64,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,64,0,0,224,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,136,3,1,0,4,178,1,0,136,3,1,0,68,178,1,0,136,3,1,0,132,178,1,0,136,3,1,0,196,178,1,0,136,3,1,0,4,179,1,0,136,3,1,0,68,179,1,0,136,3,1,0,132,179,1,0,136,3,1,0,196,179,1,0,136,3,1,0,4,180,1,0,136,3,1,0,68,180,1,0,136,3,1,0,132,180,1,0,2,0,0,0,0,0,0,0,32,0,0,0,188,238,1,0,196,12,2,0,236,12,2,0,20,13,2,0,212,13,2,0,2,0,0,0,0,0,0,0,32,0,0,0,188,238,1,0,148,14,2,0,188,14,2,0,20,13,2,0,212,13,2,0,2,0,0,0,0,0,0,0,16,0,0,0,188,238,1,0,100,3,2,0,140,3,2,0,180,3,2,0,116,4,2,0,2,0,0,0,0,0,0,0,32,0,0,0,188,238,1,0,52,5,2,0,92,5,2,0,180,3,2,0,116,4,2,0,2,0,0,0,0,0,0,0,16,0,0,0,188,238,1,0,212,249,1,0,252,249,1,0,36,250,1,0,228,250,1,0,2,0,0,0,0,0,0,0,32,0,0,0,188,238,1,0,164,251,1,0,204,251,1,0,36,250,1,0,228,250,1,0,2,0,0,0,0,0,0,0,16,0,0,0,216,28,1,0,184,233,1,0,184,233,1,0,224,233,1,0,224,233,1,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,160,234,1,0,160,234,1,0,224,233,1,0,224,233,1,0,2,0,0,0,0,0,0,0,16,0,0,0,216,28,1,0,172,228,1,0,172,228,1,0,212,228,1,0,212,228,1,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,148,229,1,0,148,229,1,0,212,228,1,0,212,228,1,0,2,0,0,0,0,0,0,0,16,0,0,0,216,28,1,0,144,223,1,0,144,223,1,0,184,223,1,0,184,223,1,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,120,224,1,0,120,224,1,0,184,223,1,0,184,223,1,0,2,0,0,0,0,0,0,0,16,0,0,0,216,28,1,0,100,218,1,0,100,218,1,0,140,218,1,0,140,218,1,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,76,219,1,0,76,219,1,0,140,218,1,0,140,218,1,0,2,0,0,0,0,0,0,0,16,0,0,0,196,180,1,0,216,211,1,0,216,211,1,0,0,212,1,0,0,212,1,0,2,0,0,0,0,0,0,0,32,0,0,0,196,180,1,0,192,212,1,0,192,212,1,0,0,212,1,0,0,212,1,0,2,0,0,0,0,0,0,0,16,0,0,0,196,180,1,0,76,205,1,0,76,205,1,0,116,205,1,0,116,205,1,0,2,0,0,0,0,0,0,0,32,0,0,0,196,180,1,0,52,206,1,0,52,206,1,0,116,205,1,0,116,205,1,0,2,0,0,0,0,0,0,0,16,0,0,0,196,180,1,0,152,198,1,0,152,198,1,0,192,198,1,0,192,198,1,0,2,0,0,0,0,0,0,0,32,0,0,0,196,180,1,0,128,199,1,0,128,199,1,0,192,198,1,0,192,198,1,0,2,0,0,0,0,0,0,0,16,0,0,0,196,180,1,0,220,191,1,0,220,191,1,0,4,192,1,0,4,192,1,0,2,0,0,0,0,0,0,0,32,0,0,0,196,180,1,0,196,192,1,0,196,192,1,0,4,192,1,0,4,192,1,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+104536);\n/* memory initializer */ allocate([1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,71,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,71,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,89,101,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,192,1,0,0,0,0,0,0,0,0,0,0,0,0,0,20,193,1,0,0,0,0,0,0,0,0,0,0,0,0,0,60,193,1,0,0,0,0,0,0,0,0,0,0,0,0,0,100,193,1,0,0,0,0,0,140,193,1,0,180,193,1,0,0,0,0,0,0,0,0,0,220,193,1,0,4,194,1,0,0,0,0,0,0,0,0,0,44,194,1,0,84,194,1,0,0,0,0,0,0,0,0,0,124,194,1,0,164,194,1,0,0,0,0,0,0,0,0,0,204,194,1,0,244,194,1,0,28,195,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,118,88,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,8,101,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,140,198,1,0,0,0,0,0,4,0,0,0,113,2,0,0,151,98,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,120,198,1,0,0,0,0,0,2,0,0,0,81,0,0,0,70,98,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,84,198,1,0,0,0,0,0,2,0,0,0,33,1,0,0,37,97,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,16,198,1,0,0,0,0,0,4,0,0,0,81,0,0,0,212,96,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,4,198,1,0,0,0,0,0,2,0,0,0,121,0,0,0,91,96,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,216,197,1,0,0,0,0,0,2,0,0,0,169,0,0,0,178,95,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,164,197,1,0,0,0,0,0,2,0,0,0,25,0,0,0,153,95,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,144,197,1,0,0,0,0,0,2,0,0,0,169,0,0,0,240,94,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,92,197,1,0,0,0,0,0,2,0,0,0,121,0,0,0,119,94,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,48,197,1,0,0,0,0,0,2,0,0,0,225,0,0,0,150,93,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,244,196,1,0,0,0,0,0,2,0,0,0,185,1,0,0,221,91,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,160,196,1,0,0,0,0,0,2,0,0,0,105,1,0,0,116,90,4,0,1,0,0,0,128,93,176,225,0,24,61,97,5,0,0,0,0,0,0,0,84,196,1,0,0,0,0,0,2,0,0,0,105,1,0,0,11,89,4,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,8,196,1,0,0,0,0,0,1,0,0,0,49,0,0,0,218,88,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,68,195,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,88,114,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,199,1,0,0,0,0,0,0,0,0,0,0,0,0,0,208,199,1,0,0,0,0,0,0,0,0,0,0,0,0,0,248,199,1,0,0,0,0,0,0,0,0,0,0,0,0,0,32,200,1,0,0,0,0,0,72,200,1,0,112,200,1,0,0,0,0,0,0,0,0,0,152,200,1,0,192,200,1,0,0,0,0,0,0,0,0,0,232,200,1,0,16,201,1,0,0,0,0,0,0,0,0,0,56,201,1,0,96,201,1,0,0,0,0,0,0,0,0,0,136,201,1,0,176,201,1,0,216,201,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,189,101,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,7,114,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,64,205,1,0,0,0,0,0,4,0,0,0,113,2,0,0,150,111,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,44,205,1,0,0,0,0,0,2,0,0,0,81,0,0,0,69,111,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,8,205,1,0,0,0,0,0,2,0,0,0,33,1,0,0,36,110,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,196,204,1,0,0,0,0,0,4,0,0,0,81,0,0,0,211,109,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,184,204,1,0,0,0,0,0,2,0,0,0,121,0,0,0,90,109,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,140,204,1,0,0,0,0,0,2,0,0,0,169,0,0,0,177,108,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,88,204,1,0,0,0,0,0,2,0,0,0,25,0,0,0,152,108,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,68,204,1,0,0,0,0,0,2,0,0,0,169,0,0,0,239,107,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,16,204,1,0,0,0,0,0,2,0,0,0,121,0,0,0,118,107,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,228,203,1,0,0,0,0,0,2,0,0,0,225,0,0,0,149,106,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,168,203,1,0,0,0,0,0,2,0,0,0,185,1,0,0,220,104,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,84,203,1,0,0,0,0,0,2,0,0,0,33,1,0,0,187,103,4,0,1,0,0,0,0,24,157,225,0,24,61,97,5,0,0,0,0,0,0,0,16,203,1,0,0,0,0,0,2,0,0,0,105,1,0,0,82,102,4,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,196,202,1,0,0,0,0,0,1,0,0,0,49,0,0,0,33,102,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,0,202,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,31,126,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,206,1,0,0,0,0,0,0,0,0,0,0,0,0,0,132,206,1,0,0,0,0,0,0,0,0,0,0,0,0,0,172,206,1,0,0,0,0,0,0,0,0,0,0,0,0,0,212,206,1,0,0,0,0,0,252,206,1,0,36,207,1,0,0,0,0,0,0,0,0,0,76,207,1,0,116,207,1,0,0,0,0,0,0,0,0,0,156,207,1,0,196,207,1,0,0,0,0,0,0,0,0,0,236,207,1,0,20,208,1,0,0,0,0,0,0,0,0,0,60,208,1,0,100,208,1,0,140,208,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,188,114,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,206,125,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,204,211,1,0,0,0,0,0,4,0,0,0,113,2,0,0,93,123,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,184,211,1,0,0,0,0,0,2,0,0,0,81,0,0,0,12,123,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,148,211,1,0,0,0,0,0,2,0,0,0,33,1,0,0,235,121,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,80,211,1,0,0,0,0,0,4,0,0,0,81,0,0,0,154,121,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,68,211,1,0,0,0,0,0,2,0,0,0,121,0,0,0,33,121,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,24,211,1,0,0,0,0,0,2,0,0,0,169,0,0,0,120,120,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,228,210,1,0,0,0,0,0,2,0,0,0,25,0,0,0,95,120,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,208,210,1,0,0,0,0,0,2,0,0,0,169,0,0,0,182,119,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,156,210,1,0,0,0,0,0,2,0,0,0,121,0,0,0,61,119,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,112,210,1,0,0,0,0,0,2,0,0,0,225,0,0,0,92,118,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,52,210,1,0,0,0,0,0,2,0,0,0,185,1,0,0,163,116,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,224,209,1,0,0,0,0,0,2,0,0,0,169,0,0,0,250,115,4,0,1,0,0,0,0,220,125,225,0,232,51,97,4,0,0,0,0,0,0,0,172,209,1,0,0,0,0,0,2,0,0,0,169,0,0,0,81,115,4,0,1,0,0,0,0,96,18,225,0,128,184,96,4,0,0,0,0,0,0,0,120,209,1,0,0,0,0,0,1,0,0,0,49,0,0,0,32,115,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,180,208,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,230,137,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,212,1,0,0,0,0,0,0,0,0,0,0,0,0,0,16,213,1,0,0,0,0,0,0,0,0,0,0,0,0,0,56,213,1,0,0,0,0,0,0,0,0,0,0,0,0,0,96,213,1,0,0,0,0,0,136,213,1,0,176,213,1,0,0,0,0,0,0,0,0,0,216,213,1,0,0,214,1,0,0,0,0,0,0,0,0,0,40,214,1,0,80,214,1,0,0,0,0,0,0,0,0,0,120,214,1,0,160,214,1,0,0,0,0,0,0,0,0,0,200,214,1,0,240,214,1,0,24,215,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,131,126,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,149,137,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,88,218,1,0,0,0,0,0,4,0,0,0,113,2,0,0,36,135,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,68,218,1,0,0,0,0,0,2,0,0,0,81,0,0,0,211,134,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,32,218,1,0,0,0,0,0,2,0,0,0,33,1,0,0,178,133,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,220,217,1,0,0,0,0,0,4,0,0,0,81,0,0,0,97,133,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,208,217,1,0,0,0,0,0,2,0,0,0,121,0,0,0,232,132,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,164,217,1,0,0,0,0,0,2,0,0,0,169,0,0,0,63,132,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,112,217,1,0,0,0,0,0,2,0,0,0,25,0,0,0,38,132,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,92,217,1,0,0,0,0,0,2,0,0,0,169,0,0,0,125,131,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,40,217,1,0,0,0,0,0,2,0,0,0,121,0,0,0,4,131,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,252,216,1,0,0,0,0,0,2,0,0,0,225,0,0,0,35,130,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,192,216,1,0,0,0,0,0,2,0,0,0,185,1,0,0,106,128,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,108,216,1,0,0,0,0,0,2,0,0,0,169,0,0,0,193,127,4,0,1,0,0,0,0,220,125,225,0,232,51,97,4,0,0,0,0,0,0,0,56,216,1,0,0,0,0,0,2,0,0,0,169,0,0,0,24,127,4,0,1,0,0,0,0,96,18,225,0,128,184,96,4,0,0,0,0,0,0,0,4,216,1,0,0,0,0,0,1,0,0,0,49,0,0,0,231,126,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,64,215,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,59,176,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,219,1,0,0,0,0,0,0,0,0,0,0,0,0,0,156,219,1,0,0,0,0,0,0,0,0,0,0,0,0,0,196,219,1,0,0,0,0,0,0,0,0,0,0,0,0,0,236,219,1,0,0,0,0,0,0,0,0,0,0,0,0,0,20,220,1,0,0,0,0,0,0,0,0,0,0,0,0,0,60,220,1,0,0,0,0,0,100,220,1,0,140,220,1,0,0,0,0,0,0,0,0,0,180,220,1,0,220,220,1,0,0,0,0,0,0,0,0,0,4,221,1,0,44,221,1,0,84,221,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,74,138,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,154,150,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,132,223,1,0,0,0,0,0,4,0,0,0,113,2,0,0,41,148,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,112,223,1,0,0,0,0,0,4,0,0,0,113,2,0,0,184,145,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,92,223,1,0,0,0,0,0,2,0,0,0,81,0,0,0,103,145,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,56,223,1,0,0,0,0,0,2,0,0,0,81,0,0,0,22,145,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,20,223,1,0,0,0,0,0,2,0,0,0,33,1,0,0,245,143,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,208,222,1,0,0,0,0,0,4,0,0,0,81,0,0,0,164,143,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,196,222,1,0,0,0,0,0,2,0,0,0,121,0,0,0,43,143,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,152,222,1,0,0,0,0,0,2,0,0,0,169,0,0,0,130,142,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,100,222,1,0,0,0,0,0,2,0,0,0,25,0,0,0,105,142,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,80,222,1,0,0,0,0,0,2,0,0,0,225,0,0,0,136,141,4,0,1,0,0,0,0,134,115,225,0,80,22,97,4,0,0,0,0,0,0,0,20,222,1,0,0,0,0,0,2,0,0,0,33,1,0,0,103,140,4,0,1,0,0,0,0,0,245,224,0,0,149,96,5,0,0,0,0,0,0,0,208,221,1,0,0,0,0,0,2,0,0,0,185,1,0,0,174,138,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,124,221,1,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,24,214,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,224,1,0,0,0,0,0,0,0,0,0,0,0,0,0,200,224,1,0,0,0,0,0,0,0,0,0,0,0,0,0,240,224,1,0,0,0,0,0,0,0,0,0,0,0,0,0,24,225,1,0,0,0,0,0,0,0,0,0,0,0,0,0,64,225,1,0,0,0,0,0,0,0,0,0,0,0,0,0,104,225,1,0,0,0,0,0,144,225,1,0,184,225,1,0,0,0,0,0,0,0,0,0,224,225,1,0,8,226,1,0,0,0,0,0,0,0,0,0,48,226,1,0,88,226,1,0,128,226,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,159,176,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,119,188,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,160,228,1,0,0,0,0,0,4,0,0,0,113,2,0,0,6,186,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,140,228,1,0,0,0,0,0,4,0,0,0,113,2,0,0,149,183,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,120,228,1,0,0,0,0,0,2,0,0,0,81,0,0,0,68,183,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,84,228,1,0,0,0,0,0,2,0,0,0,81,0,0,0,243,182,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,48,228,1,0,0,0,0,0,2,0,0,0,33,1,0,0,210,181,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,236,227,1,0,0,0,0,0,4,0,0,0,81,0,0,0,129,181,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,224,227,1,0,0,0,0,0,2,0,0,0,121,0,0,0,8,181,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,180,227,1,0,0,0,0,0,2,0,0,0,169,0,0,0,95,180,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,128,227,1,0,0,0,0,0,2,0,0,0,25,0,0,0,70,180,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,108,227,1,0,0,0,0,0,2,0,0,0,169,0,0,0,157,179,4,0,1,0,0,0,0,136,93,225,0,176,19,97,4,0,0,0,0,0,0,0,56,227,1,0,0,0,0,0,2,0,0,0,225,0,0,0,188,178,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,252,226,1,0,0,0,0,0,2,0,0,0,185,1,0,0,3,177,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,168,226,1,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,93,251,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,229,1,0,0,0,0,0,0,0,0,0,0,0,0,0,228,229,1,0,0,0,0,0,0,0,0,0,0,0,0,0,12,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,52,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,92,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,132,230,1,0,0,0,0,0,172,230,1,0,212,230,1,0,0,0,0,0,0,0,0,0,252,230,1,0,36,231,1,0,0,0,0,0,0,0,0,0,76,231,1,0,116,231,1,0,156,231,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,124,214,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,188,225,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,172,233,1], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+114136);\n/* memory initializer */ allocate([4,0,0,0,113,2,0,0,75,223,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,152,233,1,0,0,0,0,0,4,0,0,0,113,2,0,0,218,220,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,132,233,1,0,0,0,0,0,2,0,0,0,81,0,0,0,137,220,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,96,233,1,0,0,0,0,0,2,0,0,0,81,0,0,0,56,220,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,60,233,1,0,0,0,0,0,2,0,0,0,33,1,0,0,23,219,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,248,232,1,0,0,0,0,0,4,0,0,0,81,0,0,0,198,218,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,236,232,1,0,0,0,0,0,2,0,0,0,121,0,0,0,77,218,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,192,232,1,0,0,0,0,0,2,0,0,0,169,0,0,0,164,217,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,140,232,1,0,0,0,0,0,2,0,0,0,25,0,0,0,139,217,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,120,232,1,0,0,0,0,0,2,0,0,0,169,0,0,0,226,216,4,0,1,0,0,0,0,232,87,225,0,224,255,96,4,0,0,0,0,0,0,0,68,232,1,0,0,0,0,0,2,0,0,0,225,0,0,0,1,216,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,8,232,1,0,0,0,0,0,2,0,0,0,33,1,0,0,224,214,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,196,231,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,106,32,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,234,1,0,0,0,0,0,0,0,0,0,0,0,0,0,240,234,1,0,0,0,0,0,0,0,0,0,0,0,0,0,24,235,1,0,0,0,0,0,0,0,0,0,0,0,0,0,64,235,1,0,0,0,0,0,0,0,0,0,0,0,0,0,104,235,1,0,0,0,0,0,0,0,0,0,0,0,0,0,144,235,1,0,0,0,0,0,184,235,1,0,224,235,1,0,0,0,0,0,0,0,0,0,8,236,1,0,48,236,1,0,0,0,0,0,0,0,0,0,88,236,1,0,128,236,1,0,168,236,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,193,251,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,201,6,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,176,238,1,0,0,0,0,0,4,0,0,0,113,2,0,0,88,4,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,156,238,1,0,0,0,0,0,4,0,0,0,113,2,0,0,231,1,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,136,238,1,0,0,0,0,0,2,0,0,0,81,0,0,0,150,1,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,100,238,1,0,0,0,0,0,2,0,0,0,81,0,0,0,69,1,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,64,238,1,0,0,0,0,0,2,0,0,0,33,1,0,0,36,0,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,252,237,1,0,0,0,0,0,4,0,0,0,81,0,0,0,211,255,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,240,237,1,0,0,0,0,0,2,0,0,0,121,0,0,0,90,255,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,196,237,1,0,0,0,0,0,2,0,0,0,169,0,0,0,177,254,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,144,237,1,0,0,0,0,0,2,0,0,0,25,0,0,0,152,254,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,124,237,1,0,0,0,0,0,2,0,0,0,169,0,0,0,239,253,4,0,1,0,0,0,0,184,84,225,0,160,251,96,4,0,0,0,0,0,0,0,72,237,1,0,0,0,0,0,2,0,0,0,169,0,0,0,70,253,4,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,20,237,1,0,0,0,0,0,2,0,0,0,33,1,0,0,37,252,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,208,236,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,9,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+124380);\n/* memory initializer */ allocate([1,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,3,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,105,101,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,24,101,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,212,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,252,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,2,0,0,0,0,0,116,0,2,0,156,0,2,0,0,0,0,0,0,0,0,0,196,0,2,0,236,0,2,0,0,0,0,0,0,0,0,0,20,1,2,0,60,1,2,0,100,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,251,1,0,0,0,0,0,0,0,0,0,0,0,0,0,28,252,1,0,0,0,0,0,0,0,0,0,0,0,0,0,68,252,1,0,0,0,0,0,0,0,0,0,0,0,0,0,108,252,1,0,0,0,0,0,0,0,0,0,0,0,0,0,148,252,1,0,0,0,0,0,188,252,1,0,228,252,1,0,0,0,0,0,0,0,0,0,12,253,1,0,52,253,1,0,0,0,0,0,0,0,0,0,92,253,1,0,132,253,1,0,172,253,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,31,33,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,206,32,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,163,41,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,160,255,1,0,0,0,0,0,4,0,0,0,113,2,0,0,50,39,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,140,255,1,0,0,0,0,0,2,0,0,0,81,0,0,0,225,38,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,104,255,1,0,0,0,0,0,2,0,0,0,81,0,0,0,144,38,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,68,255,1,0,0,0,0,0,2,0,0,0,33,1,0,0,111,37,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,0,255,1,0,0,0,0,0,4,0,0,0,81,0,0,0,30,37,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,244,254,1,0,0,0,0,0,2,0,0,0,121,0,0,0,165,36,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,200,254,1,0,0,0,0,0,2,0,0,0,169,0,0,0,252,35,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,148,254,1,0,0,0,0,0,2,0,0,0,25,0,0,0,227,35,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,128,254,1,0,0,0,0,0,2,0,0,0,169,0,0,0,58,35,5,0,1,0,0,0,0,184,84,225,0,160,251,96,4,0,0,0,0,0,0,0,76,254,1,0,0,0,0,0,2,0,0,0,169,0,0,0,145,34,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,24,254,1,0,0,0,0,0,2,0,0,0,33,1,0,0,112,33,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,212,253,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,161,25,0,0,119,75,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,88,3,2,0,0,0,0,0,4,0,0,0,113,2,0,0,6,73,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,68,3,2,0,0,0,0,0,2,0,0,0,81,0,0,0,181,72,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,32,3,2,0,0,0,0,0,2,0,0,0,81,0,0,0,100,72,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,252,2,2,0,0,0,0,0,2,0,0,0,33,1,0,0,67,71,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,184,2,2,0,0,0,0,0,4,0,0,0,81,0,0,0,242,70,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,172,2,2,0,0,0,0,0,2,0,0,0,121,0,0,0,121,70,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,128,2,2,0,0,0,0,0,2,0,0,0,169,0,0,0,208,69,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,76,2,2,0,0,0,0,0,2,0,0,0,25,0,0,0,183,69,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,56,2,2,0,0,0,0,0,2,0,0,0,169,0,0,0,14,69,5,0,1,0,0,0,0,184,84,225,0,160,251,96,4,0,0,0,0,0,0,0,4,2,2,0,0,0,0,0,2,0,0,0,169,0,0,0,101,68,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,208,1,2,0,0,0,0,0,2,0,0,0,33,1,0,0,68,67,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,140,1,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,81,0,0,0,197,171,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,116,171,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,84,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,124,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,164,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,204,9,2,0,0,0,0,0,244,9,2,0,28,10,2,0,0,0,0,0,0,0,0,0,68,10,2,0,108,10,2,0,0,0,0,0,0,0,0,0,148,10,2,0,188,10,2,0,228,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,172,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,212,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,252,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,36,6,2,0,0,0,0,0,76,6,2,0,116,6,2,0,0,0,0,0,0,0,0,0,156,6,2,0,196,6,2,0,0,0,0,0,0,0,0,0,236,6,2,0,20,7,2,0,60,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,11,102,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,186,101,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,55,110,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,32,9,2,0,0,0,0,0,4,0,0,0,113,2,0,0,198,107,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,12,9,2,0,0,0,0,0,2,0,0,0,81,0,0,0,117,107,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,232,8,2,0,0,0,0,0,2,0,0,0,81,0,0,0,36,107,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,196,8,2,0,0,0,0,0,2,0,0,0,33,1,0,0,3,106,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,128,8,2,0,0,0,0,0,4,0,0,0,81,0,0,0,178,105,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,116,8,2,0,0,0,0,0,2,0,0,0,121,0,0,0,57,105,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,72,8,2,0,0,0,0,0,2,0,0,0,169,0,0,0,144,104,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,20,8,2,0,0,0,0,0,2,0,0,0,25,0,0,0,119,104,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,0,8,2,0,0,0,0,0,2,0,0,0,81,0,0,0,38,104,5,0,1,0,0,0,0,160,59,225,0,160,251,96,4,0,0,0,0,0,0,0,220,7,2,0,0,0,0,0,2,0,0,0,169,0,0,0,125,103,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,168,7,2,0,0,0,0,0,2,0,0,0,33,1,0,0,92,102,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,100,7,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,161,25,0,0,211,145,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,184,12,2,0,0,0,0,0,4,0,0,0,113,2,0,0,98,143,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,164,12,2,0,0,0,0,0,2,0,0,0,81,0,0,0,17,143,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,128,12,2,0,0,0,0,0,2,0,0,0,81,0,0,0,192,142,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,92,12,2,0,0,0,0,0,2,0,0,0,33,1,0,0,159,141,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,24,12,2,0,0,0,0,0,4,0,0,0,81,0,0,0,78,141,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,12,12,2,0,0,0,0,0,2,0,0,0,121,0,0,0,213,140,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,224,11,2,0,0,0,0,0,2,0,0,0,169,0,0,0,44,140,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,172,11,2,0,0,0,0,0,2,0,0,0,25,0,0,0,19,140,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,152,11,2,0,0,0,0,0,4,0,0,0,113,2,0,0,162,137,5,0,1,0,0,0,0,160,27,225,0,160,251,96,3,0,0,0,0,0,0,0,132,11,2,0,0,0,0,0,2,0,0,0,169,0,0,0,249,136,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,80,11,2,0,0,0,0,0,2,0,0,0,33,1,0,0,216,135,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,12,11,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,81,0,0,0,33,242,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,208,241,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,18,2,0,0,0,0,0,0,0,0,0,0,0,0,0,180,18,2,0,0,0,0,0,0,0,0,0,0,0,0,0,220,18,2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,44,19,2,0,0,0,0,0,84,19,2,0,124,19,2,0,0,0,0,0,0,0,0,0,164,19,2,0,204,19,2,0,0,0,0,0,0,0,0,0,244,19,2,0,28,20,2,0,68,20,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,228,14,2,0,0,0,0,0,0,0,0,0,0,0,0,0,12,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,52,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,92,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,132,15,2,0,0,0,0,0,172,15,2,0,212,15,2,0,0,0,0,0,0,0,0,0,252,15,2,0,36,16,2,0,0,0,0,0,0,0,0,0,76,16,2,0,116,16,2,0,156,16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,103,172,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,22,172,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,147,180,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,128,18,2,0,0,0,0,0,4,0,0,0,113,2,0,0,34,178,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,108,18,2,0,0,0,0,0,2,0,0,0,81,0,0,0,209,177,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,72,18,2,0,0,0,0,0,2,0,0,0,81,0,0,0,128,177,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,36,18,2,0,0,0,0,0,2,0,0,0,33,1,0,0,95,176,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,224,17,2,0,0,0,0,0,4,0,0,0,81,0,0,0,14,176,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,212,17,2,0,0,0,0,0,2,0,0,0,121,0,0,0,149,175,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,168,17,2,0,0,0,0,0,2,0,0,0,169,0,0,0,236,174,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,116,17,2,0,0,0,0,0,2,0,0,0,25,0,0,0,211,174,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,96,17,2,0,0,0,0,0,2,0,0,0,81,0,0,0,130,174,5,0,1,0,0,0,0,160,59,225,0,160,251,96,4,0,0,0,0,0,0,0,60,17,2,0,0,0,0,0,2,0,0,0,169,0,0,0,217,173,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,8,17,2,0,0,0,0,0,2,0,0,0,33,1,0,0,184,172,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,196,16,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,161,25,0,0,47,216,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,24,22,2,0,0,0,0,0,4,0,0,0,113,2,0,0,190,213,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,4,22,2,0,0,0,0,0,2,0,0,0,81,0,0,0,109,213,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,224,21,2,0,0,0,0,0,2,0,0,0,81,0,0,0,28,213,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,188,21,2,0,0,0,0,0,2,0,0,0,33,1,0,0,251,211,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,120,21,2,0,0,0,0,0,4,0,0,0,81,0,0,0,170,211,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,108,21,2,0,0,0,0,0,2,0,0,0,121,0,0,0,49,211,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,64,21,2,0,0,0,0,0,2,0,0,0,169,0,0,0,136,210,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,12,21,2,0,0,0,0,0,2,0,0,0,25,0,0,0,111,210,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,248,20,2,0,0,0,0,0,4,0,0,0,113,2,0,0,254,207,5,0,1,0,0,0,0,160,27,225,0,160,251,96,3,0,0,0,0,0,0,0,228,20,2,0,0,0,0,0,2,0,0,0,169,0,0,0,85,207,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,176,20,2,0,0,0,0,0,2,0,0,0,33,1,0,0,52,206,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,108,20,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,242,255,255,255,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,10,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,156,25,2,0,6,0,0,0,6,0,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,22,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,242,255,255,255,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,236,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,255,255,255,255,10,0,0,0,10,0,0,0,255,255,255,255,20,0,0,0,20,0,0,0,255,255,255,255,20,0,0,0,20,0,0,0,255,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,14,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,15,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,10,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,249,255,255,255,251,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,238,255,255,255,238,255,255,255,238,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,14,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,4,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+128976);\n/* memory initializer */ allocate([226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,12,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,14,0,0,0,20,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,12,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,236,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,0,1,0,0,0,1,0,0,15,39,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,156,255,255,255,156,255,255,255,156,255,255,255,151,255,255,255,126,255,255,255,126,255,255,255,126,255,255,255,116,255,255,255,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,64,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,240,56,2,0,252,56,2,0,192,186,0,0,248,40,2,0,192,186,0,0,24,41,2,0,192,186,0,0,88,41,2,0,1,0,0,0,0,0,0,0,32,0,0,0,236,227,0,0,48,53,2,0,48,53,2,0,88,53,2,0,88,53,2,0,1,0,0,0,0,0,0,0,32,0,0,0,16,212,0,0,68,48,2,0,68,48,2,0,108,48,2,0,108,48,2,0,1,0,0,0,0,0,0,0,32,0,0,0,16,212,0,0,44,49,2,0,44,49,2,0,108,48,2,0,108,48,2,0,1,0,0,0,0,0,0,0,32,0,0,0,68,103,1,0,152,41,2,0,152,41,2,0,192,41,2,0,192,41,2,0,1,0,0,0,0,0,0,0,32,0,0,0,68,103,1,0,128,42,2,0,128,42,2,0,192,41,2,0,192,41,2,0,2,0,0,0,100,0,0,0,205,254,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,42,2,0,0,0,0,0,0,0,0,0,0,0,0,0,208,42,2,0,0,0,0,0,0,0,0,0,0,0,0,0,248,42,2,0,0,0,0,0,0,0,0,0,0,0,0,0,32,43,2,0,0,0,0,0,72,43,2,0,112,43,2,0,0,0,0,0,0,0,0,0,152,43,2,0,192,43,2,0,0,0,0,0,0,0,0,0,232,43,2,0,16,44,2,0,0,0,0,0,0,0,0,0,56,44,2,0,96,44,2,0,0,0,0,0,0,0,0,0,136,44,2,0,176,44,2,0,216,44,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,114,242,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,124,254,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,56,48,2,0,0,0,0,0,4,0,0,0,113,2,0,0,11,252,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,36,48,2,0,0,0,0,0,2,0,0,0,81,0,0,0,186,251,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,0,48,2,0,0,0,0,0,2,0,0,0,33,1,0,0,153,250,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,188,47,2,0,0,0,0,0,4,0,0,0,81,0,0,0,72,250,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,176,47,2,0,0,0,0,0,2,0,0,0,121,0,0,0,207,249,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,132,47,2,0,0,0,0,0,2,0,0,0,169,0,0,0,38,249,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,80,47,2,0,0,0,0,0,2,0,0,0,25,0,0,0,13,249,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,60,47,2,0,0,0,0,0,2,0,0,0,169,0,0,0,100,248,5,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,8,47,2,0,0,0,0,0,2,0,0,0,121,0,0,0,235,247,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,220,46,2,0,0,0,0,0,2,0,0,0,225,0,0,0,10,247,5,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,160,46,2,0,0,0,0,0,2,0,0,0,185,1,0,0,81,245,5,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,76,46,2,0,0,0,0,0,2,0,0,0,225,0,0,0,112,244,5,0,1,0,0,0,0,117,153,225,0,24,61,97,4,0,0,0,0,0,0,0,16,46,2,0,0,0,0,0,2,0,0,0,105,1,0,0,7,243,5,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,196,45,2,0,0,0,0,0,1,0,0,0,49,0,0,0,214,242,5,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,0,45,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,90,10,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,49,2,0,0,0,0,0,0,0,0,0,0,0,0,0,124,49,2,0,0,0,0,0,0,0,0,0,0,0,0,0,164,49,2,0,0,0,0,0,0,0,0,0,0,0,0,0,204,49,2,0,0,0,0,0,0,0,0,0,0,0,0,0,244,49,2,0,0,0,0,0,0,0,0,0,0,0,0,0,28,50,2,0,0,0,0,0,68,50,2,0,108,50,2,0,0,0,0,0,0,0,0,0,148,50,2,0,188,50,2,0,0,0,0,0,0,0,0,0,228,50,2,0,12,51,2,0,52,51,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,49,255,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,9,10,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,36,53,2,0,0,0,0,0,4,0,0,0,81,0,0,0,184,9,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,24,53,2,0,0,0,0,0,4,0,0,0,113,2,0,0,71,7,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,4,53,2,0,0,0,0,0,4,0,0,0,113,2,0,0,214,4,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,240,52,2,0,0,0,0,0,2,0,0,0,81,0,0,0,133,4,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,204,52,2,0,0,0,0,0,2,0,0,0,81,0,0,0,52,4,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,168,52,2,0,0,0,0,0,4,0,0,0,81,0,0,0,227,3,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,156,52,2,0,0,0,0,0,2,0,0,0,121,0,0,0,106,3,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,112,52,2,0,0,0,0,0,2,0,0,0,121,0,0,0,241,2,6,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,68,52,2,0,0,0,0,0,2,0,0,0,121,0,0,0,120,2,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,24,52,2,0,0,0,0,0,2,0,0,0,225,0,0,0,151,1,6,0,1,0,0,0,0,228,91,225,0,224,255,96,4,0,0,0,0,0,0,0,220,51,2,0,0,0,0,0,2,0,0,0,225,0,0,0,182,0,6,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,160,51,2,0,0,0,0,0,2,0,0,0,33,1,0,0,149,255,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,92,51,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,64,20,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,54,2,0,0,0,0,0,0,0,0,0,0,0,0,0,64,54,2,0,0,0,0,0,0,0,0,0,0,0,0,0,104,54,2,0,0,0,0,0,0,0,0,0,0,0,0,0,144,54,2,0,0,0,0,0,0,0,0,0,0,0,0,0,184,54,2,0,0,0,0,0,224,54,2,0,8,55,2,0,0,0,0,0,0,0,0,0,48,55,2,0,88,55,2,0,128,55,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,239,19,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,228,56,2,0,0,0,0,0,4,0,0,0,81,0,0,0,158,19,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,216,56,2,0,0,0,0,0,4,0,0,0,113,2,0,0,45,17,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,196,56,2,0,0,0,0,0,4,0,0,0,113,2,0,0,188,14,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,176,56,2,0,0,0,0,0,2,0,0,0,81,0,0,0,107,14,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,140,56,2,0,0,0,0,0,2,0,0,0,169,0,0,0,194,13,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,88,56,2,0,0,0,0,0,2,0,0,0,25,0,0,0,169,13,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,68,56,2,0,0,0,0,0,4,0,0,0,81,0,0,0,88,13,6,0,1,0,0,0,0,176,19,225,0,176,19,97,2,0,0,0,0,0,0,0,56,56,2,0,0,0,0,0,2,0,0,0,225,0,0,0,119,12,6,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,252,55,2,0,0,0,0,0,2,0,0,0,185,1,0,0,190,10,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,168,55,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,9,0,0,0,3,0,0,0,3,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,136,3,1,0,32,57,2,0,136,3,1,0,64,57,2,0,136,3,1,0,128,57,2,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,84,69,2,0,84,69,2,0,124,69,2,0,124,69,2,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,116,64,2,0,116,64,2,0,156,64,2,0,156,64,2,0,2,0,0,0,0,0,0,0,32,0,0,0,216,28,1,0,92,65,2,0,92,65,2,0,156,64,2,0,156,64,2,0,2,0,0,0,0,0,0,0,32,0,0,0,196,180,1,0,192,57,2,0,192,57,2,0,232,57,2,0,232,57,2,0,2,0,0,0,0,0,0,0,32,0,0,0,196,180,1,0,168,58,2,0,168,58,2,0,232,57,2,0,232,57,2,0,2,0,0,0,100,0,0,0,27,33,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,58,2,0,0,0,0,0,0,0,0,0,0,0,0,0,248,58,2,0,0,0,0,0,0,0,0,0,0,0,0,0,32,59,2,0,0,0,0,0,0,0,0,0,0,0,0,0,72,59,2,0,0,0,0,0,112,59,2,0,152,59,2,0,0,0,0,0,0,0,0,0,192,59,2,0,232,59,2,0,0,0,0,0,0,0,0,0,16,60,2,0,56,60,2,0,0,0,0,0,0,0,0,0,96,60,2,0,136,60,2,0,0,0,0,0,0,0,0,0,176,60,2,0,216,60,2,0,0,61,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,128,20,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,202,32,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,104,64,2,0,0,0,0,0,4,0,0,0,113,2,0,0,89,30,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,84,64,2,0,0,0,0,0,2,0,0,0,81,0,0,0,8,30,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,48,64,2,0,0,0,0,0,2,0,0,0,33,1,0,0,231,28,6,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,236,63,2,0,0,0,0,0,4,0,0,0,81,0,0,0,150,28,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,224,63,2,0,0,0,0,0,2,0,0,0,121,0,0,0,29,28,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,180,63,2,0,0,0,0,0,2,0,0,0,169,0,0,0,116,27,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,128,63,2,0,0,0,0,0,2,0,0,0,25,0,0,0,91,27,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,108,63,2,0,0,0,0,0,2,0,0,0,169,0,0,0,178,26,6,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,56,63,2,0,0,0,0,0,2,0,0,0,121,0,0,0,57,26,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,12,63,2,0,0,0,0,0,2,0,0,0,225,0,0,0,88,25,6,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,208,62,2,0,0,0,0,0,2,0,0,0,185,1,0,0,159,23,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,124,62,2,0,0,0,0,0,2,0,0,0,33,1,0,0,126,22,6,0,1,0,0,0,0,24,157,225,0,24,61,97,5,0,0,0,0,0,0,0,56,62,2,0,0,0,0,0,2,0,0,0,105,1,0,0,21,21,6,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,236,61,2,0,0,0,0,0,1,0,0,0,49,0,0,0,228,20,6,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,40,61,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,135,68,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,65,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,65,2,0,0,0,0,0,0,0,0,0,0,0,0,0,212,65,2,0,0,0,0,0,0,0,0,0,0,0,0,0,252,65,2,0,0,0,0,0,0,0,0,0,0,0,0,0,36,66,2,0,0,0,0,0,76,66,2,0,116,66,2,0,0,0,0,0,0,0,0,0,156,66,2,0,196,66,2,0,0,0,0,0,0,0,0,0,236,66,2,0,20,67,2,0,60,67,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,127,33,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,230,42,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,72,69,2,0,0,0,0,0,4,0,0,0,113,2,0,0,117,40,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,52,69,2,0,0,0,0,0,2,0,0,0,81,0,0,0,36,40,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,16,69,2,0,0,0,0,0,2,0,0,0,81,0,0,0,211,39,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,236,68,2,0,0,0,0,0,2,0,0,0,33,1,0,0,178,38,6,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,168,68,2,0,0,0,0,0,4,0,0,0,81,0,0,0,97,38,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,156,68,2,0,0,0,0,0,2,0,0,0,121,0,0,0,232,37,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,112,68,2,0,0,0,0,0,2,0,0,0,169,0,0,0,63,37,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,60,68,2,0,0,0,0,0,2,0,0,0,25,0,0,0,38,37,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,40,68,2,0,0,0,0,0,2,0,0,0,169,0,0,0,125,36,6,0,1,0,0,0,0,136,93,225,0,176,19,97,4,0,0,0,0,0,0,0,244,67,2,0,0,0,0,0,2,0,0,0,225,0,0,0,156,35,6,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,184,67,2,0,0,0,0,0,2,0,0,0,185,1,0,0,227,33,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,100,67,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,55,103,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,70,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,70,2,0,0,0,0,0,0,0,0,0,0,0,0,0,140,70,2,0,0,0,0,0,0,0,0,0,0,0,0,0,180,70,2,0,0,0,0,0,0,0,0,0,0,0,0,0,220,70,2,0,0,0,0,0,4,71,2,0,44,71,2,0,0,0,0,0,0,0,0,0,84,71,2,0,124,71,2,0,0,0,0,0,0,0,0,0,164,71,2,0,204,71,2,0,244,71,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,150,77,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,216,73,2,0,0,0,0,0,4,0,0,0,113,2,0,0,37,75,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,196,73,2,0,0,0,0,0,2,0,0,0,81,0,0,0,212,74,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,160,73,2,0,0,0,0,0,2,0,0,0,81,0,0,0,131,74,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,124,73,2,0,0,0,0,0,2,0,0,0,33,1,0,0,98,73,6,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,56,73,2,0,0,0,0,0,4,0,0,0,81,0,0,0,17,73,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,44,73,2,0,0,0,0,0,2,0,0,0,121,0,0,0,152,72,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,0,73,2,0,0,0,0,0,2,0,0,0,169,0,0,0,239,71,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,204,72,2,0,0,0,0,0,2,0,0,0,25,0,0,0,214,71,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,184,72,2,0,0,0,0,0,4,0,0,0,81,0,0,0,133,71,6,0,1,0,0,0,0,176,19,225,0,176,19,97,2,0,0,0,0,0,0,0,172,72,2,0,0,0,0,0,2,0,0,0,225,0,0,0,164,70,6], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+139216);\n/* memory initializer */ allocate([1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,112,72,2,0,0,0,0,0,2,0,0,0,185,1,0,0,235,68,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,28,72,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,60,74,2,0,76,99,2,0,60,74,2,0,172,99,2,0,60,74,2,0,12,100,2,0,60,74,2,0,108,100,2,0,60,74,2,0,204,100,2,0,60,74,2,0,44,101,2,0,140,101,2,0,156,126,2,0,140,101,2,0,252,126,2,0,140,101,2,0,92,127,2,0,140,101,2,0,188,127,2,0,140,101,2,0,28,128,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,30,0,0,0,96,208,2,0,128,231,2,0,128,231,2,0,168,231,2,0,168,231,2,0,2,0,0,0,0,0,0,0,30,0,0,0,96,208,2,0,104,232,2,0,104,232,2,0,168,231,2,0,168,231,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,144,232,2,0,144,232,2,0,184,232,2,0,184,232,2,0,2,0,0,0,0,0,0,0,15,0,0,0,96,208,2,0,124,225,2,0,124,225,2,0,164,225,2,0,164,225,2,0,2,0,0,0,0,0,0,0,30,0,0,0,96,208,2,0,100,226,2,0,100,226,2,0,164,225,2,0,164,225,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,140,226,2,0,140,226,2,0,180,226,2,0,180,226,2,0,2,0,0,0,0,0,0,0,15,0,0,0,96,208,2,0,120,219,2,0,120,219,2,0,160,219,2,0,160,219,2,0,2,0,0,0,0,0,0,0,30,0,0,0,96,208,2,0,96,220,2,0,96,220,2,0,160,219,2,0,160,219,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,136,220,2,0,136,220,2,0,176,220,2,0,176,220,2,0,2,0,0,0,0,0,0,0,15,0,0,0,236,177,2,0,236,201,2,0,236,201,2,0,20,202,2,0,20,202,2,0,2,0,0,0,0,0,0,0,30,0,0,0,236,177,2,0,212,202,2,0,212,202,2,0,20,202,2,0,20,202,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,252,202,2,0,252,202,2,0,36,203,2,0,36,203,2,0,2,0,0,0,0,0,0,0,15,0,0,0,236,177,2,0,120,195,2,0,120,195,2,0,160,195,2,0,160,195,2,0,2,0,0,0,0,0,0,0,30,0,0,0,236,177,2,0,96,196,2,0,96,196,2,0,160,195,2,0,160,195,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,136,196,2,0,136,196,2,0,176,196,2,0,176,196,2,0,2,0,0,0,0,0,0,0,15,0,0,0,236,177,2,0,4,189,2,0,4,189,2,0,44,189,2,0,44,189,2,0,2,0,0,0,0,0,0,0,30,0,0,0,236,177,2,0,236,189,2,0,236,189,2,0,44,189,2,0,44,189,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,20,190,2,0,20,190,2,0,60,190,2,0,60,190,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+149456);\n/* memory initializer */ allocate([2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+160268);\n/* memory initializer */ allocate([2,0,0,0,0,0,0,0,15,0,0,0,124,128,2,0,120,171,2,0,120,171,2,0,160,171,2,0,160,171,2,0,2,0,0,0,0,0,0,0,30,0,0,0,124,128,2,0,96,172,2,0,96,172,2,0,160,171,2,0,160,171,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,136,172,2,0,136,172,2,0,176,172,2,0,176,172,2,0,2,0,0,0,0,0,0,0,15,0,0,0,124,128,2,0,208,167,2,0,208,167,2,0,248,167,2,0,248,167,2,0,2,0,0,0,0,0,0,0,30,0,0,0,124,128,2,0,184,168,2,0,184,168,2,0,248,167,2,0,248,167,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,188,151,2,0,188,151,2,0,228,151,2,0,228,151,2,0,2,0,0,0,0,0,0,0,15,0,0,0,124,128,2,0,16,163,2,0,16,163,2,0,56,163,2,0,56,163,2,0,2,0,0,0,0,0,0,0,30,0,0,0,124,128,2,0,248,163,2,0,248,163,2,0,56,163,2,0,56,163,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,188,151,2,0,188,151,2,0,228,151,2,0,228,151,2,0,2,0,0,0,0,0,0,0,15,0,0,0,124,128,2,0,72,158,2,0,72,158,2,0,112,158,2,0,112,158,2,0,2,0,0,0,0,0,0,0,30,0,0,0,124,128,2,0,48,159,2,0,48,159,2,0,112,158,2,0,112,158,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,188,151,2,0,188,151,2,0,228,151,2,0,228,151,2,0,2,0,0,0,0,0,0,0,15,0,0,0,124,128,2,0,148,139,2,0,148,139,2,0,188,139,2,0,188,139,2,0,2,0,0,0,0,0,0,0,30,0,0,0,124,128,2,0,124,140,2,0,124,140,2,0,188,139,2,0,188,139,2,0,1,0,0,0,2,0,0,0,6,0,0,0,164,140,2,0,188,151,2,0,188,151,2,0,228,151,2,0,228,151,2,0,0,0,0,0,255,255,255,255,255,255,255,255,8,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+163476);\n/* memory initializer */ allocate([1,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,152,171,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,154,2,0,0,0,0,0,0,0,0,0,176,154,2,0,0,0,0,0,0,0,0,0,216,154,2,0,0,155,2,0,0,0,0,0,0,0,0,0,40,155,2,0,80,155,2,0,0,0,0,0,0,0,0,0,120,155,2,0,160,155,2,0,0,0,0,0,0,0,0,0,200,155,2,0,240,155,2,0,160,155,2,0,0,0,0,0,24,156,2,0,64,156,2,0,104,156,2,0,144,156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,156,104,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+166288);\n/* memory initializer */ allocatei8\", ALLOC_NONE, Runtime.GLOBAL_BASE+169396);\n/* memory initializer */ allocate([1,0,0,0,1,0,0,0,2,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,190,152,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,192,2,0,0,0,0,0,0,0,0,0,8,193,2,0,0,0,0,0,0,0,0,0,48,193,2,0,88,193,2,0,0,0,0,0,0,0,0,0,128,193,2,0,168,193,2,0,0,0,0,0,0,0,0,0,208,193,2,0,248,193,2,0,0,0,0,0,0,0,0,0,32,194,2,0,72,194,2,0,248,193,2,0,0,0,0,0,112,194,2,0,152,194,2,0,116,191,2,0,156,191,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,64,108,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,60,108,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,190,2,0,36,191,2,0,0,0,0,0,0,0,0,0,76,191,2,0,116,191,2,0,156,191,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,147,107,7,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,172,192,2,0,0,0,0,0,2,0,0,0,25,0,0,0,122,107,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,152,192,2,0,0,0,0,0,2,0,0,0,9,0,0,0,113,107,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,140,192,2,0,0,0,0,0,1,0,0,0,25,0,0,0,88,107,7,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,40,192,2,0,0,0,0,0,1,0,0,0,25,0,0,0,63,107,7,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,196,191,2,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,203,151,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,108,195,2,0,0,0,0,0,5,0,0,0,53,12,0,0,150,139,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,88,195,2,0,0,0,0,0,5,0,0,0,243,0,0,0,163,138,7,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,76,195,2,0,0,0,0,0,5,0,0,0,243,0,0,0,176,137,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,64,195,2,0,0,0,0,0,5,0,0,0,243,0,0,0,189,136,7,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,52,195,2,0,0,0,0,0,5,0,0,0,53,12,0,0,136,124,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,32,195,2,0,0,0,0,0,5,0,0,0,53,12,0,0,83,112,7,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,12,195,2,0,0,0,0,0,1,0,0,0,7,0,0,0,76,112,7,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,240,194,2,0,0,0,0,0,5,0,0,0,243,0,0,0,89,111,7,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,228,194,2,0,0,0,0,0,5,0,0,0,243,0,0,0,102,110,7,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,216,194,2,0,0,0,0,0,5,0,0,0,243,0,0,0,115,109,7,0,1,0,0,0,0,76,93,225,0,76,93,97,2,0,0,0,0,0,0,0,204,194,2,0,0,0,0,0,5,0,0,0,243,0,0,0,128,108,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,192,194,2,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,125,198,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,199,2,0,0,0,0,0,0,0,0,0,124,199,2,0,0,0,0,0,0,0,0,0,164,199,2,0,204,199,2,0,0,0,0,0,0,0,0,0,244,199,2,0,28,200,2,0,0,0,0,0,0,0,0,0,68,200,2,0,108,200,2,0,0,0,0,0,0,0,0,0,148,200,2,0,188,200,2,0,108,200,2,0,0,0,0,0,228,200,2,0,12,201,2,0,232,197,2,0,16,198,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,255,153,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,251,153,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,197,2,0,152,197,2,0,0,0,0,0,0,0,0,0,192,197,2,0,232,197,2,0,16,198,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,82,153,7,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,32,199,2,0,0,0,0,0,2,0,0,0,25,0,0,0,57,153,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,12,199,2,0,0,0,0,0,2,0,0,0,9,0,0,0,48,153,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,0,199,2,0,0,0,0,0,1,0,0,0,25,0,0,0,23,153,7,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,156,198,2,0,0,0,0,0,1,0,0,0,25,0,0,0,254,152,7,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,56,198,2,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,138,197,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,224,201,2,0,0,0,0,0,5,0,0,0,53,12,0,0,85,185,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,204,201,2,0,0,0,0,0,5,0,0,0,243,0,0,0,98,184,7,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,192,201,2,0,0,0,0,0,5,0,0,0,243,0,0,0,111,183,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,180,201,2,0,0,0,0,0,5,0,0,0,243,0,0,0,124,182,7,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,168,201,2,0,0,0,0,0,5,0,0,0,53,12,0,0,71,170,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,148,201,2,0,0,0,0,0,5,0,0,0,53,12,0,0,18,158,7,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,128,201,2,0,0,0,0,0,1,0,0,0,7,0,0,0,11,158,7,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,100,201,2,0,0,0,0,0,5,0,0,0,243,0,0,0,24,157,7,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,88,201,2,0,0,0,0,0,5,0,0,0,243,0,0,0,37,156,7,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,76,201,2,0,0,0,0,0,5,0,0,0,243,0,0,0,50,155,7,0,1,0,0,0,0,76,93,225,0,76,93,97,2,0,0,0,0,0,0,0,64,201,2,0,0,0,0,0,5,0,0,0,243,0,0,0,63,154,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,52,201,2,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,60,244,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,205,2,0,0,0,0,0,0,0,0,0,240,205,2,0,0,0,0,0,0,0,0,0,24,206,2,0,64,206,2,0,0,0,0,0,0,0,0,0,104,206,2,0,144,206,2,0,0,0,0,0,0,0,0,0,184,206,2,0,224,206,2,0,0,0,0,0,0,0,0,0,8,207,2,0,48,207,2,0,224,206,2,0,0,0,0,0,88,207,2,0,128,207,2,0,92,204,2,0,132,204,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,190,199,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,186,199,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,228,203,2,0,12,204,2,0,0,0,0,0,0,0,0,0,52,204,2,0,92,204,2,0,132,204,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,17,199,7,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,148,205,2,0,0,0,0,0,2,0,0,0,25,0,0,0,248,198,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,128,205,2,0,0,0,0,0,2,0,0,0,9,0,0,0,239,198,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,116,205,2,0,0,0,0,0,1,0,0,0,25,0,0,0,214,198,7,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,16,205,2,0,0,0,0,0,1,0,0,0,25,0,0,0,189,198,7,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,172,204,2,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,73,243,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,84,208,2,0,0,0,0,0,5,0,0,0,53,12,0,0,20,231,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,64,208,2,0,0,0,0,0,5,0,0,0,243,0,0,0,33,230,7,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,52,208,2,0,0,0,0,0,5,0,0,0,243,0,0,0,46,229,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,40,208,2,0,0,0,0,0,5,0,0,0,243,0,0,0,59,228,7,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,28,208,2,0,0,0,0,0,5,0,0,0,53,12,0,0,6,216,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,8,208,2,0,0,0,0,0,5,0,0,0,53,12,0,0,209,203,7,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,244,207,2,0,0,0,0,0,1,0,0,0,7,0,0,0,202,203,7,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,216,207,2,0,0,0,0,0,5,0,0,0,243,0,0,0,215,202,7,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,204,207,2,0,0,0,0,0,5,0,0,0,243,0,0,0,228,201,7,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,192,207,2,0,0,0,0,0,5,0,0,0,243,0,0,0,241,200,7,0,1,0,0,0,0,76,93,225,0,76,93,97,2,0,0,0,0,0,0,0,180,207,2,0,0,0,0,0,5,0,0,0,243,0,0,0,254,199,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,168,207,2,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,7,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+178944);\n/* memory initializer */ allocatei8\", ALLOC_NONE, Runtime.GLOBAL_BASE+186740);\n/* memory initializer */ allocate([213,102,136,62,171,76,137,62,255,50,138,62,209,25,139,62,32,1,140,62,233,232,140,62,46,209,141,62,236,185,142,62,34,163,143,62,208,140,144,62,244,118,145,62,142,97,146,62,156,76,147,62,29,56,148,62,17,36,149,62,118,16,150,62,76,253,150,62,144,234,151,62,67,216,152,62,99,198,153,62,239,180,154,62,230,163,155,62,71,147,156,62,17,131,157,62,67,115,158,62,219,99,159,62,218,84,160,62,60,70,161,62,3,56,162,62,43,42,163,62,181,28,164,62,160,15,165,62,233,2,166,62,145,246,166,62,149,234,167,62,245,222,168,62,176,211,169,62,197,200,170,62,50,190,171,62,246,179,172,62,17,170,173,62,129,160,174,62,69,151,175,62,91,142,176,62,196,133,177,62,125,125,178,62,133,117,179,62,220,109,180,62,128,102,181,62,112,95,182,62,171,88,183,62,47,82,184,62,252,75,185,62,17,70,186,62,108,64,187,62,11,59,188,62,239,53,189,62,22,49,190,62,126,44,191,62,38,40,192,62,13,36,193,62,51,32,194,62,150,28,195,62,52,25,196,62,12,22,197,62,30,19,198,62,104,16,199,62,233,13,200,62,159,11,201,62,138,9,202,62,169,7,203,62,249,5,204,62,123,4,205,62,44,3,206,62,11,2,207,62,24,1,208,62,81,0,209,62,181,255,209,62,66,255,210,62,248,254,211,62,213,254,212,62,216,254,213,62,255,254,214,62,75,255,215,62,184,255,216,62,71,0,218,62,245,0,219,62,195,1,220,62,173,2,221,62,180,3,222,62,214,4,223,62,17,6,224,62,101,7,225,62,208,8,226,62,81,10,227,62,231,11,228,62,144,13,229,62,76,15,230,62,25,17,231,62,245,18,232,62,224,20,233,62,217,22,234,62,221,24,235,62,236,26,236,62,5,29,237,62,39,31,238,62,79,33,239,62,125,35,240,62,176,37,241,62,230,39,242,62,31,42,243,62,88,44,244,62,145,46,245,62,200,48,246,62,253,50,247,62,45,53,248,62,88,55,249,62,124,57,250,62,153,59,251,62,172,61,252,62,181,63,253,62,179,65,254,62,163,67,255,62,195,34,0,63,173,163,0,63,142,36,1,63,102,165,1,63,53,38,2,63,250,166,2,63,180,39,3,63,99,168,3,63,5,41,4,63,155,169,4,63,36,42,5,63,159,170,5,63,12,43,6,63,105,171,6,63,183,43,7,63,244,171,7,63,32,44,8,63,59,172,8,63,68,44,9,63,58,172,9,63,28,44,10,63,235,171,10,63,164,43,11,63,73,171,11,63,216,42,12,63,80,170,12,63,177,41,13,63,251,168,13,63,44,40,14,63,69,167,14,63,68,38,15,63,41,165,15,63,243,35,16,63,162,162,16,63,53,33,17,63,172,159,17,63,5,30,18,63,65,156,18,63,95,26,19,63,94,152,19,63,61,22,20,63,252,147,20,63,155,17,21,63,24,143,21,63,116,12,22,63,173,137,22,63,195,6,23,63,182,131,23,63,133,0,24,63,46,125,24,63,179,249,24,63,18,118,25,63,74,242,25,63,91,110,26,63,69,234,26,63,6,102,27,63,159,225,27,63,14,93,28,63,84,216,28,63,111,83,29,63,95,206,29,63,36,73,30,63,188,195,30,63,40,62,31,63,102,184,31,63,119,50,32,63,90,172,32,63,14,38,33,63,146,159,33,63,230,24,34,63,10,146,34,63,253,10,35,63,190,131,35,63,77,252,35,63,169,116,36,63,211,236,36,63,200,100,37,63,138,220,37,63,22,84,38,63,110,203,38,63,143,66,39,63,122,185,39,63,47,48,40,63,172,166,40,63,241,28,41,63,254,146,41,63,210,8,42,63,108,126,42,63,205,243,42,63,243,104,43,63,223,221,43,63,143,82,44,63,3,199,44,63,59,59,45,63,54,175,45,63,244,34,46,63,116,150,46,63,182,9,47,63,185,124,47,63,125,239,47,63,1,98,48,63,69,212,48,63,72,70,49,63,10,184,49,63,139,41,50,63,202,154,50,63,198,11,51,63,127,124,51,63,246,236,51,63,40,93,52,63,22,205,52,63,191,60,53,63,36,172,53,63,66,27,54,63,27,138,54,63,174,248,54,63,249,102,55,63,254,212,55,63,187,66,56,63,47,176,56,63,91,29,57,63,63,138,57,63,217,246,57,63,41,99,58,63,48,207,58,63,236,58,59,63,93,166,59,63,130,17,60,63,93,124,60,63,235,230,60,63,44,81,61,63,33,187,61,63,201,36,62,63,35,142,62,63,48,247,62,63,238,95,63,63,94,200,63,63,126,48,64,63,80,152,64,63,209,255,64,63,3,103,65,63,228,205,65,63,117,52,66,63,181,154,66,63,163,0,67,63,64,102,67,63,139,203,67,63,131,48,68,63,41,149,68,63,124,249,68,63,123,93,69,63,39,193,69,63,127,36,70,63,132,135,70,63,51,234,70,63,142,76,71,63,148,174,71,63,68,16,72,63,159,113,72,63,164,210,72,63,83,51,73,63,172,147,73,63,174,243,73,63,89,83,74,63,173,178,74,63,169,17,75,63,77,112,75,63,154,206,75,63,143,44,76,63,43,138,76,63,110,231,76,63,89,68,77,63,234,160,77,63,34,253,77,63,0,89,78,63,133,180,78,63,176,15,79,63,128,106,79,63,246,196,79,63,18,31,80,63,210,120,80,63,56,210,80,63,66,43,81,63,242,131,81,63,69,220,81,63,61,52,82,63,217,139,82,63,24,227,82,63,252,57,83,63,131,144,83,63,174,230,83,63,123,60,84,63,236,145,84,63,0,231,84,63,183,59,85,63,16,144,85,63,12,228,85,63,170,55,86,63,235,138,86,63,206,221,86,63,83,48,87,63,121,130,87,63,66,212,87,63,172,37,88,63,184,118,88,63,101,199,88,63,180,23,89,63,164,103,89,63,53,183,89,63,104,6,90,63,59,85,90,63,175,163,90,63,197,241,90,63,123,63,91,63,210,140,91,63,201,217,91,63,97,38,92,63,154,114,92,63,115,190,92,63,237,9,93,63,7,85,93,63,194,159,93,63,29,234,93,63,24,52,94,63,179,125,94,63,239,198,94,63,203,15,95,63,72,88,95,63,100,160,95,63,33,232,95,63,126,47,96,63,123,118,96,63,24,189,96,63,85,3,97,63,51,73,97,63,177,142,97,63,207,211,97,63,141,24,98,63,236,92,98,63,235,160,98,63,138,228,98,63,202,39,99,63,170,106,99,63,42,173,99,63,75,239,99,63,13,49,100,63,111,114,100,63,114,179,100,63,21,244,100,63,90,52,101,63,63,116,101,63,197,179,101,63,236,242,101,63,180,49,102,63,29,112,102,63,39,174,102,63,211,235,102,63,32,41,103,63,15,102,103,63,159,162,103,63,209,222,103,63,164,26,104,63,26,86,104,63,49,145,104,63,235,203,104,63,71,6,105,63,69,64,105,63,230,121,105,63,42,179,105,63,16,236,105,63,153,36,106,63,197,92,106,63,148,148,106,63,7,204,106,63,29,3,107,63,214,57,107,63,52,112,107,63,53,166,107,63,218,219,107,63,36,17,108,63,18,70,108,63,164,122,108,63,220,174,108,63,184,226,108,63,57,22,109,63,96,73,109,63,44,124,109,63,157,174,109,63,181,224,109,63,115,18,110,63,214,67,110,63,225,116,110,63,146,165,110,63,233,213,110,63,232,5,111,63,142,53,111,63,219,100,111,63,209,147,111,63,110,194,111,63,179,240,111,63,160,30,112,63,54,76,112,63,117,121,112,63,93,166,112,63,239,210,112,63,41,255,112,63,14,43,113,63,156,86,113,63,213,129,113,63,184,172,113,63,70,215,113,63,127,1,114,63,99,43,114,63,243,84,114,63,46,126,114,63,21,167,114,63,169,207,114,63,233,247,114,63,214,31,115,63,113,71,115,63,184,110,115,63,173,149,115,63,80,188,115,63,162,226,115,63,161,8,116,63,80,46,116,63,174,83,116,63,187,120,116,63,119,157,116,63,228,193,116,63,1,230,116,63,206,9,117,63,76,45,117,63,123,80,117,63,92,115,117,63,238,149,117,63,51,184,117,63,42,218,117,63,211,251,117,63,48,29,118,63,64,62,118,63,3,95,118,63,122,127,118,63,166,159,118,63,134,191,118,63,27,223,118,63,101,254,118,63,101,29,119,63,27,60,119,63,135,90,119,63,169,120,119,63,131,150,119,63,19,180,119,63,91,209,119,63,91,238,119,63,20,11,120,63,132,39,120,63,174,67,120,63,145,95,120,63,46,123,120,63,132,150,120,63,149,177,120,63,96,204,120,63,231,230,120,63,41,1,121,63,38,27,121,63,223,52,121,63,85,78,121,63,136,103,121,63,120,128,121,63,37,153,121,63,144,177,121,63,185,201,121,63,161,225,121,63,72,249,121,63,174,16,122,63,212,39,122,63,185,62,122,63,96,85,122,63,198,107,122,63,238,129,122,63,216,151,122,63,131,173,122,63,241,194,122,63,33,216,122,63,20,237,122,63,202,1,123,63,68,22,123,63,130,42,123,63,133,62,123,63,77,82,123,63,217,101,123,63,43,121,123,63,68,140,123,63,34,159,123,63,200,177,123,63,52,196,123,63,104,214,123,63,99,232,123,63,39,250,123,63,180,11,124,63,9,29,124,63,40,46,124,63,17,63,124,63,196,79,124,63,65,96,124,63,137,112,124,63,156,128,124,63,124,144,124,63,39,160,124,63,158,175,124,63,226,190,124,63,244,205,124,63,211,220,124,63,128,235,124,63,251,249,124,63,69,8,125,63,94,22,125,63,71,36,125,63,255,49,125,63,136,63,125,63,225,76,125,63,11,90,125,63,7,103,125,63,212,115,125,63,115,128,125,63,229,140,125,63,42,153,125,63,66,165,125,63,46,177,125,63,238,188,125,63,130,200,125,63,235,211,125,63,41,223,125,63,61,234,125,63,38,245,125,63,230,255,125,63,124,10,126,63,234,20,126,63,47,31,126,63,75,41,126,63,64,51,126,63,13,61,126,63,180,70,126,63,51,80,126,63,140,89,126,63,191,98,126,63,205,107,126,63,181,116,126,63,120,125,126,63,23,134,126,63,146,142,126,63,233,150,126,63,28,159,126,63,44,167,126,63,26,175,126,63,229,182,126,63,142,190,126,63,22,198,126,63,124,205,126,63,194,212,126,63,231,219,126,63,235,226,126,63,208,233,126,63,149,240,126,63,59,247,126,63,195,253,126,63,44,4,127,63,118,10,127,63,163,16,127,63,179,22,127,63,165,28,127,63,123,34,127,63,52,40,127,63,210,45,127,63,83,51,127,63,186,56,127,63,5,62,127,63,53,67,127,63,75,72,127,63,72,77,127,63,42,82,127,63,243,86,127,63,163,91,127,63,58,96,127,63,185,100,127,63,32,105,127,63,111,109,127,63,166,113,127,63,199,117,127,63,208,121,127,63,196,125,127,63,161,129,127,63,104,133,127,63,25,137,127,63,182,140,127,63,61,144,127,63,176,147,127,63,14,151,127,63,89,154,127,63,143,157,127,63,179,160,127,63,195,163,127,63,192,166,127,63,171,169,127,63,132,172,127,63,74,175,127,63,255,177,127,63,163,180,127,63,53,183,127,63,183,185,127,63,40,188,127,63,137,190,127,63,217,192,127,63,26,195,127,63,76,197,127,63,111,199,127,63,130,201,127,63,135,203,127,63,126,205,127,63,102,207,127,63,65,209,127,63,14,211,127,63,205,212,127,63,128,214,127,63,38,216,127,63,191,217,127,63,76,219,127,63,204,220,127,63,65,222,127,63,170,223,127,63,8,225,127,63,91,226,127,63,163,227,127,63,224,228,127,63,19,230,127,63,59,231,127,63,90,232,127,63,110,233,127,63,122,234,127,63,124,235,127,63,116,236,127,63,100,237,127,63,75,238,127,63,42,239,127,63,1,240,127,63,207,240,127,63,149,241,127,63,84,242,127,63,12,243,127,63,188,243,127,63,101,244,127,63,7,245,127,63,162,245,127,63,55,246,127,63,198,246,127,63,78,247,127,63,209,247,127,63,77,248,127,63,196,248,127,63,54,249,127,63,162,249,127,63,9,250,127,63,108,250,127,63,201,250,127,63,34,251,127,63,118,251,127,63,198,251,127,63,18,252,127,63,89,252,127,63,157,252,127,63,221,252,127,63,26,253,127,63,83,253,127,63,136,253,127,63,187,253,127,63,234,253,127,63,22,254,127,63,64,254,127,63,103,254,127,63,139,254,127,63,173,254,127,63,204,254,127,63,234,254,127,63,5,255,127,63,30,255,127,63,53,255,127,63,74,255,127,63,94,255,127,63,112,255,127,63,128,255,127,63,143,255,127,63,157,255,127,63,169,255,127,63,180,255,127,63,191,255,127,63,200,255,127,63,208,255,127,63,215,255,127,63,221,255,127,63,227,255,127,63,232,255,127,63,236,255,127,63,239,255,127,63,243,255,127,63,245,255,127,63,248,255,127,63,249,255,127,63,251,255,127,63,252,255,127,63,253,255,127,63,254,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,204,8,120,52,171,134,11,54,79,202,193,54,190,233,61,55,238,247,156,55,192,123,234,55,43,192,35,56,161,2,90,56,189,2,140,56,76,228,174,56,227,165,213,56,199,35,0,57,168,100,23,57,134,149,48,57,104,182,75,57,64,199,104,57,7,228,131,57,105,92,148,57,191,204,165,57,6,53,184,57,65,149,203,57,105,237,223,57,120,61,245,57,184,194,5,58,166,98,17,58,134,126,29,58,81,22,42,58,9,42,55,58,172,185,68,58,54,197,82,58,165,76,97,58,250,79,112,58,47,207,127,58,34,229,135,58,154,32,144,58,255,153,152,58,80,81,161,58,139,70,170,58,174,121,179,58,186,234,188,58,171,153,198,58,129,134,208,58,58,177,218,58,212,25,229,58,79,192,239,58,167,164,250,58,109,227,2,59,117,147,8,59,105,98,14,59,73,80,20,59,19,93,26,59,199,136,32,59,100,211,38,59,232,60,45,59,83,197,51,59,164,108,58,59,218,50,65,59,243,23,72,59,239,27,79,59,204,62,86,59,138,128,93,59,38,225,100,59,161,96,108,59,249,254,115,59,45,188,123,59,29,204,129,59,145,201,133,59,113,214,137,59,188,242,141,59,113,30,146,59,145,89,150,59,26,164,154,59,12,254,158,59,102,103,163,59,40,224,167,59,80,104,172,59,222,255,176,59,209,166,181,59,40,93,186,59,228,34,191,59,2,248,195,59,131,220,200,59,101,208,205,59,168,211,210,59,74,230,215,59,76,8,221,59,172,57,226,59,105,122,231,59,131,202,236,59,249,41,242,59,202,152,247,59,245,22,253,59,60,82,1,60,170,32,4,60,196,246,6,60,137,212,9,60,249,185,12,60,19,167,15,60,216,155,18,60,69,152,21,60,92,156,24,60,26,168,27,60,129,187,30,60,143,214,33,60,69,249,36,60,160,35,40,60,162,85,43,60,73,143,46,60,149,208,49,60,133,25,53,60,26,106,56,60,81,194,59,60,44,34,63,60,168,137,66,60,199,248,69,60,134,111,73,60,230,237,76,60,231,115,80,60,134,1,84,60,197,150,87,60,162,51,91,60,28,216,94,60,52,132,98,60,232,55,102,60,56,243,105,60,35,182,109,60,170,128,113,60,202,82,117,60,131,44,121,60,214,13,125,60,96,123,128,60,161,115,130,60,174,111,132,60,134,111,134,60,40,115,136,60,149,122,138,60,205,133,140,60,206,148,142,60,152,167,144,60,44,190,146,60,136,216,148,60,173,246,150,60,154,24,153,60,78,62,155,60,202,103,157,60,13,149,159,60,23,198,161,60,231,250,163,60,125,51,166,60,217,111,168,60,249,175,170,60,223,243,172,60,137,59,175,60,247,134,177,60,40,214,179,60,29,41,182,60,213,127,184,60,80,218,186,60,140,56,189,60,138,154,191,60,74,0,194,60,202,105,196,60,11,215,198,60,12,72,201,60,205,188,203,60,77,53,206,60,140,177,208,60,137,49,211,60,69,181,213,60,189,60,216,60,243,199,218,60,230,86,221,60,149,233,223,60,0,128,226,60,39,26,229,60,8,184,231,60,164,89,234,60,250,254,236,60,9,168,239,60,210,84,242,60,83,5,245,60,141,185,247,60,126,113,250,60,39,45,253,60,134,236,255,60,206,87,1,61,52,187,2,61,117,32,4,61,144,135,5,61,133,240,6,61,84,91,8,61,253,199,9,61,128,54,11,61,219,166,12,61,16,25,14,61,29,141,15,61,3,3,17,61,193,122,18,61,87,244,19,61,197,111,21,61,10,237,22,61,39,108,24,61,26,237,25,61,228,111,27,61,132,244,28,61,251,122,30,61,71,3,32,61,105,141,33,61,96,25,35,61,45,167,36,61,206,54,38,61,67,200,39,61,141,91,41,61,171,240,42,61,156,135,44,61,96,32,46,61,248,186,47,61,99,87,49,61,160,245,50,61,175,149,52,61,144,55,54,61,67,219,55,61,199,128,57,61,28,40,59,61,65,209,60,61,56,124,62,61,254,40,64,61,148,215,65,61,250,135,67,61,47,58,69,61,51,238,70,61,5,164,72,61,166,91,74,61,20,21,76,61,80,208,77,61,90,141,79,61,49,76,81,61,212,12,83,61,68,207,84,61,128,147,86,61,135,89,88,61,90,33,90,61,248,234,91,61,97,182,93,61,148,131,95,61,145,82,97,61,88,35,99,61,232,245,100,61,65,202,102,61,100,160,104,61,78,120,106,61,1,82,108,61,123,45,110,61,188,10,112,61,197,233,113,61,148,202,115,61,41,173,117,61,133,145,119,61,166,119,121,61,140,95,123,61,55,73,125,61,166,52,127,61,237,144,128,61,105,136,129,61,198,128,130,61,5,122,131,61,37,116,132,61,39,111,133,61,9,107,134,61,204,103,135,61,112,101,136,61,244,99,137,61,88,99,138,61,157,99,139,61,193,100,140,61,196,102,141,61,167,105,142,61,106,109,143,61,11,114,144,61,139,119,145,61,234,125,146,61,40,133,147,61,67,141,148,61,61,150,149,61,20,160,150,61,201,170,151,61,92,182,152,61,203,194,153,61,24,208,154,61,66,222,155,61,72,237,156,61,42,253,157,61,233,13,159,61,132,31,160,61,250,49,161,61,76,69,162,61,122,89,163,61,130,110,164,61,101,132,165,61,35,155,166,61,188,178,167,61,47,203,168,61,124,228,169,61,162,254,170,61,163,25,172,61,124,53,173,61,47,82,174,61,187,111,175,61,31,142,176,61,92,173,177,61,113,205,178,61,94,238,179,61,35,16,181,61,192,50,182,61,52,86,183,61,127,122,184,61,160,159,185,61,153,197,186,61,104,236,187,61,13,20,189,61,136,60,190,61,217,101,191,61,255,143,192,61,250,186,193,61,202,230,194,61,111,19,196,61,233,64,197,61,55,111,198,61,89,158,199,61,78,206,200,61,23,255,201,61,179,48,203,61,35,99,204,61,101,150,205,61,121,202,206,61,96,255,207,61,25,53,209,61,164,107,210,61,0,163,211,61,45,219,212,61,44,20,214,61,251,77,215,61,154,136,216,61,10,196,217,61,74,0,219,61,89,61,220,61,56,123,221,61,230,185,222,61,99,249,223,61,174,57,225,61,200,122,226,61,176,188,227,61,102,255,228,61,233,66,230,61,58,135,231,61,88,204,232,61,66,18,234,61,249,88,235,61,124,160,236,61,203,232,237,61,230,49,239,61,204,123,240,61,125,198,241,61,249,17,243,61,63,94,244,61,79,171,245,61,42,249,246,61,206,71,248,61,60,151,249,61,114,231,250,61,114,56,252,61,58,138,253,61,202,220,254,61,17,24,0,62,33,194,0,62,149,108,1,62,108,23,2,62,166,194,2,62,68,110,3,62,69,26,4,62,168,198,4,62,111,115,5,62,152,32,6,62,35,206,6,62,17,124,7,62,98,42,8,62,20,217,8,62,40,136,9,62,157,55,10,62,117,231,10,62,173,151,11,62,71,72,12,62,66,249,12,62,158,170,13,62,91,92,14,62,120,14,15,62,246,192,15,62,213,115,16,62,19,39,17,62,177,218,17,62,175,142,18,62,13,67,19,62,202,247,19,62,231,172,20,62,99,98,21,62,62,24,22,62,120,206,22,62,16,133,23,62,7,60,24,62,92,243,24,62,16,171,25,62,33,99,26,62,145,27,27,62,94,212,27,62,137,141,28,62,17,71,29,62,246,0,30,62,56,187,30,62,215,117,31,62,211,48,32,62,43,236,32,62,224,167,33,62,241,99,34,62,93,32,35,62,38,221,35,62,74,154,36,62,202,87,37,62,165,21,38,62,219,211,38,62,108,146,39,62,88,81,40,62,159,16,41,62,64,208,41,62,59,144,42,62,144,80,43,62,63,17,44,62,72,210,44,62,170,147,45,62,102,85,46,62,122,23,47,62,232,217,47,62,175,156,48,62,206,95,49,62,69,35,50,62,21,231,50,62,61,171,51,62,189,111,52,62,148,52,53,62,195,249,53,62,73,191,54,62,38,133,55,62,91,75,56,62,230,17,57,62,199,216,57,62,255,159,58,62,141,103,59,62,113,47,60,62,171,247,60,62,59,192,61,62,31,137,62,62,89,82,63,62,232,27,64,62,204,229,64,62,5,176,65,62,146,122,66,62,115,69,67,62,168,16,68,62,49,220,68,62,14,168,69,62,62,116,70,62,194,64,71,62,152,13,72,62,193,218,72,62,61,168,73,62,12,118,74,62,44,68,75,62,159,18,76,62,100,225,76,62,122,176,77,62,225,127,78,62,154,79,79,62,164,31,80,62,255,239,80,62,170,192,81,62,166,145,82,62,242,98,83,62,141,52,84,62,121,6,85,62,180,216,85,62,63,171,86,62,25,126,87,62,65,81,88,62,185,36,89,62,126,248,89,62,147,204,90,62,245,160,91,62,165,117,92,62,163,74,93,62,238,31,94,62,135,245,94,62,109,203,95,62,159,161,96,62,30,120,97,62,233,78,98,62,1,38,99,62,100,253,99,62,19,213,100,62,14,173,101,62,84,133,102,62,229,93,103,62,193,54,104,62,231,15,105,62,88,233,105,62,19,195,106,62,24,157,107,62,103,119,108,62,255,81,109,62,224,44,110,62,11,8,111,62,126,227,111,62,58,191,112,62,62,155,113,62,139,119,114,62,31,84,115,62,251,48,116,62,31,14,117,62,138,235,117,62,59,201,118,62,52,167,119,62,115,133,120,62,248,99,121,62,196,66,122,62,213,33,123,62,44,1,124,62,200,224,124,62,170,192,125,62,208,160,126,62,59,129,127,62,245,48,128,62,111,161,128,62,11,18,129,62,201,130,129,62,168,243,129,62,169,100,130,62,204,213,130,62,15,71,131,62,117,184,131,62,251,41,132,62,162,155,132,62,107,13,133,62,84,127,133,62,93,241,133,62,136,99,134,62,210,213,134,62,61,72,135,62,200,186,135,62,116,45,136,62,63,160,136,62,42,19,137,62,52,134,137,62,94,249,137,62,168,108,138,62,17,224,138,62,153,83,139,62,64,199,139,62,6,59,140,62,235,174,140,62,239,34,141,62,17,151,141,62,82,11,142,62,177,127,142,62,46,244,142,62,201,104,143,62,130,221,143,62,89,82,144,62,78,199,144,62,96,60,145,62,143,177,145,62,220,38,146,62,70,156,146,62,205,17,147,62,113,135,147,62,50,253,147,62,16,115,148,62,9,233,148,62,32,95,149,62,82,213,149,62,161,75,150,62,12,194,150,62,146,56,151,62,53,175,151,62,243,37,152,62,204,156,152,62,193,19,153,62,209,138,153,62,252,1,154,62,66,121,154,62,163,240,154,62,31,104,155,62,181,223,155,62,101,87,156,62,48,207,156,62,21,71,157,62,20,191,157,62,45,55,158,62,96,175,158,62,172,39,159,62,18,160,159,62,145,24,160,62,41,145,160,62,218,9,161,62,165,130,161,62,136,251,161,62,132,116,162,62,152,237,162,62,197,102,163,62,10,224,163,62,103,89,164,62,220,210,164,62,105,76,165,62,14,198,165,62,202,63,166,62,158,185,166,62,137,51,167,62,139,173,167,62,164,39,168,62,213,161,168,62,27,28,169,62,121,150,169,62,237,16,170,62,119,139,170,62,24,6,171,62,206,128,171,62,155,251,171,62,125,118,172,62,117,241,172,62,130,108,173,62,165,231,173,62,221,98,174,62,42,222,174,62,140,89,175,62,2,213,175,62,142,80,176,62,46,204,176,62,226,71,177,62,170,195,177,62,135,63,178,62,119,187,178,62,124,55,179,62,148,179,179,62,191,47,180,62,254,171,180,62,80,40,181,62,181,164,181,62,45,33,182,62,184,157,182,62,85,26,183,62,5,151,183,62,199,19,184,62,156,144,184,62,130,13,185,62,123,138,185,62,133,7,186,62,161,132,186,62,206,1,187,62,13,127,187,62,93,252,187,62,190,121,188,62,48,247,188,62,178,116,189,62,70,242,189,62,233,111,190,62,157,237,190,62,98,107,191,62,54,233,191,62,26,103,192,62,14,229,192,62,17,99,193,62,36,225,193,62,70,95,194,62,119,221,194,62,184,91,195,62,7,218,195,62,100,88,196,62,209,214,196,62,75,85,197,62,212,211,197,62,107,82,198,62,16,209,198,62,195,79,199,62,132,206,199,62,82,77,200,62,45,204,200,62,21,75,201,62,11,202,201,62,13,73,202,62,29,200,202,62,56,71,203,62,97,198,203,62,149,69,204,62,214,196,204,62,34,68,205,62,123,195,205,62,223,66,206,62,79,194,206,62,202,65,207,62,81,193,207,62,226,64,208,62,127,192,208,62,38,64,209,62,216,191,209,62,148,63,210,62,91,191,210,62,44,63,211,62,7,191,211,62,235,62,212,62,218,190,212,62,210,62,213,62,211,190,213,62,222,62,214,62,242,190,214,62,15,63,215,62,53,191,215,62,99,63,216,62,154,191,216,62,217,63,217,62,32,192,217,62,112,64,218,62,199,192,218,62,38,65,219,62,140,193,219,62,250,65,220,62,112,194,220,62,236,66,221,62,112,195,221,62,250,67,222,62,139,196,222,62,34,69,223,62,192,197,223,62,100,70,224,62,14,199,224,62,189,71,225,62,115,200,225,62,46,73,226,62,239,201,226,62,181,74,227,62,127,203,227,62,79,76,228,62,36,205,228,62,253,77,229,62,219,206,229,62,190,79,230,62,164,208,230,62,142,81,231,62,125,210,231,62,111,83,232,62,100,212,232,62,93,85,233,62,89,214,233,62,89,87,234,62,91,216,234,62,96,89,235,62,104,218,235,62,114,91,236,62,126,220,236,62,141,93,237,62,158,222,237,62,176,95,238,62,196,224,238,62,218,97,239,62,241,226,239,62,10,100,240,62,35,229,240,62,62,102,241,62,89,231,241,62,116,104,242,62,145,233,242,62,173,106,243,62,202,235,243,62,230,108,244,62,3,238,244,62,31,111,245,62,59,240,245,62,86,113,246,62,112,242,246,62,137,115,247,62,161,244,247,62,184,117,248,62,206,246,248,62,226,119,249,62,244,248,249,62,4,122,250,62,18,251,250,62,30,124,251,62,40,253,251,62,47,126,252,62,52,255,252,62,54,128,253,62,52,1,254,62,48,130,254,62,40,3,255,62,29,132,255,62,135,2,0,63,254,66,0,63,115,131,0,63,230,195,0,63,86,4,1,63,197,68,1,63,49,133,1,63,155,197,1,63,3,6,2,63,103,70,2,63,202,134,2,63,42,199,2,63,135,7,3,63,225,71,3,63,56,136,3,63,141,200,3,63,222,8,4,63,44,73,4,63,119,137,4,63,191,201,4,63,3,10,5,63,68,74,5,63,130,138,5,63,188,202,5,63,242,10,6,63,36,75,6,63,83,139,6,63,126,203,6,63,165,11,7,63,199,75,7,63,230,139,7,63,1,204,7,63,23,12,8,63,41,76,8,63,54,140,8,63,63,204,8,63,67,12,9,63,67,76,9,63,62,140,9,63,52,204,9,63,37,12,10,63,18,76,10,63,249,139,10,63,219,203,10,63,184,11,11,63,144,75,11,63,98,139,11,63,47,203,11,63,246,10,12,63,184,74,12,63,116,138,12,63,43,202,12,63,219,9,13,63,134,73,13,63,43,137,13,63,202,200,13,63,98,8,14,63,245,71,14,63,129,135,14,63,7,199,14,63,135,6,15,63,0,70,15,63,114,133,15,63,222,196,15,63,67,4,16,63,161,67,16,63,249,130,16,63,73,194,16,63,147,1,17,63,213,64,17,63,17,128,17,63,69,191,17,63,114,254,17,63,151,61,18,63,181,124,18,63,203,187,18,63,218,250,18,63,225,57,19,63,225,120,19,63,216,183,19,63,200,246,19,63,176,53,20,63,143,116,20,63,103,179,20,63,54,242,20,63,253,48,21,63,188,111,21,63,114,174,21,63,32,237,21,63,197,43,22,63,98,106,22,63,246,168,22,63,129,231,22,63,3,38,23,63,125,100,23,63,237,162,23,63,84,225,23,63,178,31,24,63,7,94,24,63,83,156,24,63,149,218,24,63,206,24,25,63,253,86,25,63,35,149,25,63,63,211,25,63,82,17,26,63,90,79,26,63,89,141,26,63,78,203,26,63,57,9,27,63,25,71,27,63,240,132,27,63,188,194,27,63,126,0,28,63,54,62,28,63,227,123,28,63,134,185,28,63,30,247,28,63,172,52,29,63,47,114,29,63,167,175,29,63,20,237,29,63,118,42,30,63,206,103,30,63,26,165,30,63,91,226,30,63,145,31,31,63,188,92,31,63,219,153,31,63,239,214,31,63,247,19,32,63,244,80,32,63,230,141,32,63,203,202,32,63,165,7,33,63,115,68,33,63,53,129,33,63,235,189,33,63,150,250,33,63,52,55,34,63,198,115,34,63,75,176,34,63,197,236,34,63,50,41,35,63,146,101,35,63,230,161,35,63,46,222,35,63,105,26,36,63,151,86,36,63,185,146,36,63,205,206,36,63,213,10,37,63,208,70,37,63,190,130,37,63,158,190,37,63,114,250,37,63,56,54,38,63,241,113,38,63,157,173,38,63,59,233,38,63,204,36,39,63,79,96,39,63,197,155,39,63,45,215,39,63,135,18,40,63,211,77,40,63,18,137,40,63,66,196,40,63,101,255,40,63,121,58,41,63,128,117,41,63,120,176,41,63,98,235,41,63,62,38,42,63,11,97,42,63,202,155,42,63,122,214,42,63,28,17,43,63,175,75,43,63,52,134,43,63,170,192,43,63,16,251,43,63,105,53,44,63,178,111,44,63,236,169,44,63,23,228,44,63,51,30,45,63,64,88,45,63,61,146,45,63,43,204,45,63,10,6,46,63,218,63,46,63,154,121,46,63,74,179,46,63,235,236,46,63,124,38,47,63,254,95,47,63,112,153,47,63,210,210,47,63,36,12,48,63,102,69,48,63,152,126,48,63,186,183,48,63,204,240,48,63,205,41,49,63,191,98,49,63,160,155,49,63,113,212,49,63,49,13,50,63,225,69,50,63,128,126,50,63,15,183,50,63,141,239,50,63,251,39,51,63,87,96,51,63,163,152,51,63,222,208,51,63,8,9,52,63,34,65,52,63,42,121,52,63,33,177,52,63,7,233,52,63,219,32,53,63,159,88,53,63,81,144,53,63,242,199,53,63,129,255,53,63,255,54,54,63,108,110,54,63,198,165,54,63,16,221,54,63,71,20,55,63,109,75,55,63,129,130,55,63,131,185,55,63,116,240,55,63,82,39,56,63,30,94,56,63,217,148,56,63,129,203,56,63,23,2,57,63,155,56,57,63,13,111,57,63,108,165,57,63,185,219,57,63,244,17,58,63,28,72,58,63,50,126,58,63,53,180,58,63,38,234,58,63,4,32,59,63,207,85,59,63,135,139,59,63,45,193,59,63,192,246,59,63,64,44,60,63,173,97,60,63,7,151,60,63,78,204,60,63,130,1,61,63,163,54,61,63,177,107,61,63,171,160,61,63,146,213,61,63,102,10,62,63,39,63,62,63,212,115,62,63,110,168,62,63,244,220,62,63,103,17,63,63,198,69,63,63,17,122,63,63,73,174,63,63,109,226,63,63,126,22,64,63,122,74,64,63,99,126,64,63,56,178,64,63,248,229,64,63,165,25,65,63,62,77,65,63,195,128,65,63,52,180,65,63,144,231,65,63,216,26,66,63,13,78,66,63,44,129,66,63,56,180,66,63,47,231,66,63,18,26,67,63,224,76,67,63,154,127,67,63,64,178,67,63,208,228,67,63,77,23,68,63,180,73,68,63,7,124,68,63,69,174,68,63,111,224,68,63,131,18,69,63,131,68,69,63,110,118,69,63,68,168,69,63,5,218,69,63,177,11,70,63,72,61,70,63,202,110,70,63,55,160,70,63,143,209,70,63,210,2,71,63,255,51,71,63,23,101,71,63,26,150,71,63,8,199,71,63,224,247,71,63,163,40,72,63,81,89,72,63,233,137,72,63,107,186,72,63,216,234,72,63,48,27,73,63,114,75,73,63,158,123,73,63,181,171,73,63,181,219,73,63,161,11,74,63,118,59,74,63,54,107,74,63,224,154,74,63,116,202,74,63,242,249,74,63,90,41,75,63,173,88,75,63,233,135,75,63,15,183,75,63,32,230,75,63,26,21,76,63,254,67,76,63,204,114,76,63,132,161,76,63,38,208,76,63,177,254,76,63,38,45,77,63,133,91,77,63,206,137,77,63,0,184,77,63,28,230,77,63,34,20,78,63,17,66,78,63,234,111,78,63,172,157,78,63,88,203,78,63,238,248,78,63,108,38,79,63,213,83,79,63,38,129,79,63,97,174,79,63,134,219,79,63,147,8,80,63,138,53,80,63,107,98,80,63,52,143,80,63,231,187,80,63,131,232,80,63,8,21,81,63,119,65,81,63,206,109,81,63,15,154,81,63,57,198,81,63,76,242,81,63,71,30,82,63,44,74,82,63,250,117,82,63,177,161,82,63,81,205,82,63,218,248,82,63,76,36,83,63,166,79,83,63,234,122,83,63,22,166,83,63,44,209,83,63,42,252,83,63,17,39,84,63,224,81,84,63,153,124,84,63,58,167,84,63,196,209,84,63,54,252,84,63,146,38,85,63,214,80,85,63,2,123,85,63,24,165,85,63,22,207,85,63,252,248,85,63,204,34,86,63,131,76,86,63,36,118,86,63,172,159,86,63,30,201,86,63,120,242,86,63,186,27,87,63,229,68,87,63,248,109,87,63,244,150,87,63,216,191,87,63,165,232,87,63,90,17,88,63,248,57,88,63,126,98,88,63,236,138,88,63,67,179,88,63,130,219,88,63,169,3,89,63,185,43,89,63,177,83,89,63,145,123,89,63,90,163,89,63,11,203,89,63,164,242,89,63,37,26,90,63,143,65,90,63,225,104,90,63,27,144,90,63,62,183,90,63,72,222,90,63,59,5,91,63,22,44,91,63,217,82,91,63,133,121,91,63,24,160,91,63,148,198,91,63,248,236,91,63,68,19,92,63,120,57,92,63,149,95,92,63,153,133,92,63,134,171,92,63,91,209,92,63,24,247,92,63,189,28,93,63,74,66,93,63,191,103,93,63,28,141,93,63,98,178,93,63,143,215,93,63,165,252,93,63,162,33,94,63,136,70,94,63,86,107,94,63,11,144,94,63,169,180,94,63,47,217,94,63,157,253,94,63,243,33,95,63,49,70,95,63,88,106,95,63,102,142,95,63,92,178,95,63,59,214,95,63,1,250,95,63,175,29,96,63,70,65,96,63,196,100,96,63,43,136,96,63,122,171,96,63,176,206,96,63,207,241,96,63,214,20,97,63,197,55,97,63,155,90,97,63,90,125,97,63,1,160,97,63,144,194,97,63,8,229,97,63,103,7,98,63,174,41,98,63,221,75,98,63,245,109,98,63,244,143,98,63,220,177,98,63,171,211,98,63,99,245,98,63,3,23,99,63,139,56,99,63,251,89,99,63,83,123,99,63,147,156,99,63,188,189,99,63,204,222,99,63,197,255,99,63,166,32,100,63,110,65,100,63,32,98,100,63,185,130,100,63,58,163,100,63,164,195,100,63,245,227,100,63,47,4,101,63,82,36,101,63,92,68,101,63,78,100,101,63,41,132,101,63,236,163,101,63,151,195,101,63,43,227,101,63,167,2,102,63,11,34,102,63,87,65,102,63,139,96,102,63,168,127,102,63,174,158,102,63,155,189,102,63,113,220,102,63,47,251,102,63,214,25,103,63,101,56,103,63,220,86,103,63,59,117,103,63,132,147,103,63,180,177,103,63,205,207,103,63,206,237,103,63,184,11,104,63,138,41,104,63,69,71,104,63,233,100,104,63,116,130,104,63,233,159,104,63,69,189,104,63,139,218,104,63,185,247,104,63,207,20,105,63,207,49,105,63,182,78,105,63,135,107,105,63,64,136,105,63,225,164,105,63,108,193,105,63,223,221,105,63,59,250,105,63,127,22,106,63,172,50,106,63,195,78,106,63,193,106,106,63,169,134,106,63,121,162,106,63,51,190,106,63,213,217,106,63,96,245,106,63,212,16,107,63,48,44,107,63,118,71,107,63,165,98,107,63,188,125,107,63,189,152,107,63,167,179,107,63,121,206,107,63,53,233,107,63,218,3,108,63,104,30,108,63,223,56,108,63,63,83,108,63,136,109,108,63,187,135,108,63,214,161,108,63,219,187,108,63,201,213,108,63,161,239,108,63,97,9,109,63,11,35,109,63,159,60,109,63,27,86,109,63,129,111,109,63,209,136,109,63,9,162,109,63,44,187,109,63,56,212,109,63,45,237,109,63,12,6,110,63,212,30,110,63,134,55,110,63,33,80,110,63,166,104,110,63,21,129,110,63,110,153,110,63,176,177,110,63,220,201,110,63,241,225,110,63,241,249,110,63,218,17,111,63,173,41,111,63,106,65,111,63,16,89,111,63,161,112,111,63,28,136,111,63,128,159,111,63,207,182,111,63,7,206,111,63,42,229,111,63,54,252,111,63,45,19,112,63,14,42,112,63,217,64,112,63,142,87,112,63,46,110,112,63,184,132,112,63,43,155,112,63,138,177,112,63,210,199,112,63,5,222,112,63,35,244,112,63,42,10,113,63,29,32,113,63,249,53,113,63,193,75,113,63,114,97,113,63,15,119,113,63,150,140,113,63,7,162,113,63,99,183,113,63,170,204,113,63,220,225,113,63,249,246,113,63,0,12,114,63,242,32,114,63,207,53,114,63,151,74,114,63,73,95,114,63,231,115,114,63,112,136,114,63,227,156,114,63,66,177,114,63,140,197,114,63,193,217,114,63,225,237,114,63,236,1,115,63,227,21,115,63,197,41,115,63,146,61,115,63,74,81,115,63,238,100,115,63,125,120,115,63,248,139,115,63,94,159,115,63,175,178,115,63,236,197,115,63,21,217,115,63,41,236,115,63,41,255,115,63,21,18,116,63,236,36,116,63,175,55,116,63,94,74,116,63,248,92,116,63,127,111,116,63,241,129,116,63,80,148,116,63,154,166,116,63,208,184,116,63,242,202,116,63,1,221,116,63,251,238,116,63,226,0,117,63,181,18,117,63,116,36,117,63,31,54,117,63,183,71,117,63,59,89,117,63,171,106,117,63,8,124,117,63,81,141,117,63,135,158,117,63,169,175,117,63,184,192,117,63,179,209,117,63,155,226,117,63,112,243,117,63,50,4,118,63,224,20,118,63,123,37,118,63,3,54,118,63,120,70,118,63,217,86,118,63,40,103,118,63,100,119,118,63,140,135,118,63,162,151,118,63,165,167,118,63,149,183,118,63,114,199,118,63,61,215,118,63,245,230,118,63,154,246,118,63,44,6,119,63,172,21,119,63,26,37,119,63,117,52,119,63,189,67,119,63,243,82,119,63,22,98,119,63,40,113,119,63,39,128,119,63,19,143,119,63,238,157,119,63,182,172,119,63,108,187,119,63,16,202,119,63,162,216,119,63,34,231,119,63,144,245,119,63,236,3,120,63,55,18,120,63,111,32,120,63,150,46,120,63,170,60,120,63,174,74,120,63,159,88,120,63,127,102,120,63,77,116,120,63,10,130,120,63,181,143,120,63,79,157,120,63,215,170,120,63,78,184,120,63,180,197,120,63,8,211,120,63,76,224,120,63,126,237,120,63,158,250,120,63,174,7,121,63,173,20,121,63,155,33,121,63,119,46,121,63,67,59,121,63,254,71,121,63,168,84,121,63,66,97,121,63,202,109,121,63,66,122,121,63,169,134,121,63,0,147,121,63,70,159,121,63,124,171,121,63,161,183,121,63,181,195,121,63,186,207,121,63,173,219,121,63,145,231,121,63,100,243,121,63,40,255,121,63,219,10,122,63,126,22,122,63,16,34,122,63,147,45,122,63,6,57,122,63,105,68,122,63,188,79,122,63,255,90,122,63,51,102,122,63,86,113,122,63,106,124,122,63,111,135,122,63,99,146,122,63,72,157,122,63,30,168,122,63,228,178,122,63,155,189,122,63,66,200,122,63,218,210,122,63,99,221,122,63,221,231,122,63,71,242,122,63,162,252,122,63,238,6,123,63,43,17,123,63,89,27,123,63,120,37,123,63,137,47,123,63,138,57,123,63,124,67,123,63,96,77,123,63,53,87,123,63,252,96,123,63,179,106,123,63,92,116,123,63,247,125,123,63,131,135,123,63,1,145,123,63,112,154,123,63,209,163,123,63,36,173,123,63,104,182,123,63,158,191,123,63,198,200,123,63,224,209,123,63,236,218,123,63,234,227,123,63,218,236,123,63,188,245,123,63,144,254,123,63,86,7,124,63,14,16,124,63,185,24,124,63,86,33,124,63,230,41,124,63,104,50,124,63,220,58,124,63,67,67,124,63,156,75,124,63,232,83,124,63,39,92,124,63,88,100,124,63,124,108,124,63,147,116,124,63,157,124,124,63,153,132,124,63,137,140,124,63,107,148,124,63,65,156,124,63,9,164,124,63,197,171,124,63,116,179,124,63,22,187,124,63,172,194,124,63,52,202,124,63,176,209,124,63,32,217,124,63,131,224,124,63,217,231,124,63,35,239,124,63,97,246,124,63,146,253,124,63,183,4,125,63,208,11,125,63,221,18,125,63,221,25,125,63,209,32,125,63,185,39,125,63,150,46,125,63,102,53,125,63,42,60,125,63,227,66,125,63,143,73,125,63,48,80,125,63,197,86,125,63,78,93,125,63,204,99,125,63,62,106,125,63,165,112,125,63,0,119,125,63,80,125,125,63,148,131,125,63,205,137,125,63,251,143,125,63,29,150,125,63,52,156,125,63,64,162,125,63,65,168,125,63,55,174,125,63,34,180,125,63,2,186,125,63,215,191,125,63,161,197,125,63,96,203,125,63,21,209,125,63,190,214,125,63,93,220,125,63,242,225,125,63,124,231,125,63,251,236,125,63,112,242,125,63,218,247,125,63,58,253,125,63,143,2,126,63,219,7,126,63,28,13,126,63,82,18,126,63,127,23,126,63,161,28,126,63,186,33,126,63,200,38,126,63,204,43,126,63,199,48,126,63,183,53,126,63,158,58,126,63,123,63,126,63,78,68,126,63,23,73,126,63,215,77,126,63,141,82,126,63,58,87,126,63,221,91,126,63,118,96,126,63,6,101,126,63,141,105,126,63,10,110,126,63,126,114,126,63,233,118,126,63,75,123,126,63,164,127,126,63,243,131,126,63,57,136,126,63,119,140,126,63,171,144,126,63,214,148,126,63,249,152,126,63,18,157,126,63,35,161,126,63,44,165,126,63,43,169,126,63,34,173,126,63,16,177,126,63,246,180,126,63,211,184,126,63,167,188,126,63,115,192,126,63,55,196,126,63,243,199,126,63,166,203,126,63,81,207,126,63,243,210,126,63,142,214,126,63,32,218,126,63,171,221,126,63,45,225,126,63,167,228,126,63,26,232,126,63,132,235,126,63,231,238,126,63,66,242,126,63,149,245,126,63,224,248,126,63,36,252,126,63,96,255,126,63,148,2,127,63,193,5,127,63,230,8,127,63,4,12,127,63,27,15,127,63,42,18,127,63,50,21,127,63,50,24,127,63,43,27,127,63,29,30,127,63,8,33,127,63,236,35,127,63,201,38,127,63,158,41,127,63,109,44,127,63,53,47,127,63,246,49,127,63,175,52,127,63,99,55,127,63,15,58,127,63,181,60,127,63,83,63,127,63,236,65,127,63,125,68,127,63,8,71,127,63,141,73,127,63,11,76,127,63,131,78,127,63,244,80,127,63,95,83,127,63,195,85,127,63,33,88,127,63,121,90,127,63,203,92,127,63,23,95,127,63,92,97,127,63,155,99,127,63,213,101,127,63,8,104,127,63,54,106,127,63,93,108,127,63,127,110,127,63,155,112,127,63,177,114,127,63,193,116,127,63,203,118,127,63,208,120,127,63,207,122,127,63,201,124,127,63,189,126,127,63,171,128,127,63,148,130,127,63,120,132,127,63,86,134,127,63,47,136,127,63,2,138,127,63,209,139,127,63,153,141,127,63,93,143,127,63,28,145,127,63,213,146,127,63,137,148,127,63,57,150,127,63,227,151,127,63,136,153,127,63,40,155,127,63,196,156,127,63,90,158,127,63,236,159,127,63,121,161,127,63,1,163,127,63,132,164,127,63,3,166,127,63,125,167,127,63,242,168,127,63,99,170,127,63,207,171,127,63,55,173,127,63], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+196980);\n/* memory initializer */ allocate([154,174,127,63,249,175,127,63,84,177,127,63,170,178,127,63,251,179,127,63,73,181,127,63,146,182,127,63,215,183,127,63,24,185,127,63,85,186,127,63,141,187,127,63,193,188,127,63,242,189,127,63,30,191,127,63,71,192,127,63,107,193,127,63,140,194,127,63,168,195,127,63,193,196,127,63,214,197,127,63,231,198,127,63,245,199,127,63,255,200,127,63,5,202,127,63,7,203,127,63,6,204,127,63,1,205,127,63,249,205,127,63,237,206,127,63,222,207,127,63,203,208,127,63,181,209,127,63,156,210,127,63,127,211,127,63,95,212,127,63,59,213,127,63,20,214,127,63,234,214,127,63,189,215,127,63,141,216,127,63,90,217,127,63,35,218,127,63,233,218,127,63,173,219,127,63,109,220,127,63,43,221,127,63,229,221,127,63,156,222,127,63,81,223,127,63,3,224,127,63,178,224,127,63,94,225,127,63,7,226,127,63,174,226,127,63,82,227,127,63,243,227,127,63,146,228,127,63,46,229,127,63,199,229,127,63,94,230,127,63,242,230,127,63,132,231,127,63,19,232,127,63,160,232,127,63,42,233,127,63,178,233,127,63,56,234,127,63,187,234,127,63,60,235,127,63,187,235,127,63,55,236,127,63,177,236,127,63,41,237,127,63,159,237,127,63,18,238,127,63,132,238,127,63,243,238,127,63,96,239,127,63,204,239,127,63,53,240,127,63,156,240,127,63,1,241,127,63,101,241,127,63,198,241,127,63,37,242,127,63,131,242,127,63,222,242,127,63,56,243,127,63,144,243,127,63,231,243,127,63,59,244,127,63,142,244,127,63,223,244,127,63,46,245,127,63,124,245,127,63,200,245,127,63,19,246,127,63,91,246,127,63,163,246,127,63,233,246,127,63,45,247,127,63,111,247,127,63,177,247,127,63,240,247,127,63,47,248,127,63,108,248,127,63,167,248,127,63,225,248,127,63,26,249,127,63,82,249,127,63,136,249,127,63,188,249,127,63,240,249,127,63,34,250,127,63,83,250,127,63,131,250,127,63,178,250,127,63,224,250,127,63,12,251,127,63,55,251,127,63,97,251,127,63,138,251,127,63,178,251,127,63,217,251,127,63,255,251,127,63,36,252,127,63,72,252,127,63,107,252,127,63,141,252,127,63,173,252,127,63,205,252,127,63,237,252,127,63,11,253,127,63,40,253,127,63,69,253,127,63,96,253,127,63,123,253,127,63,149,253,127,63,174,253,127,63,199,253,127,63,222,253,127,63,245,253,127,63,12,254,127,63,33,254,127,63,54,254,127,63,74,254,127,63,93,254,127,63,112,254,127,63,130,254,127,63,148,254,127,63,165,254,127,63,181,254,127,63,197,254,127,63,212,254,127,63,227,254,127,63,241,254,127,63,254,254,127,63,11,255,127,63,24,255,127,63,36,255,127,63,47,255,127,63,59,255,127,63,69,255,127,63,79,255,127,63,89,255,127,63,99,255,127,63,108,255,127,63,116,255,127,63,124,255,127,63,132,255,127,63,140,255,127,63,147,255,127,63,154,255,127,63,160,255,127,63,166,255,127,63,172,255,127,63,178,255,127,63,183,255,127,63,188,255,127,63,193,255,127,63,197,255,127,63,202,255,127,63,206,255,127,63,209,255,127,63,213,255,127,63,216,255,127,63,220,255,127,63,223,255,127,63,225,255,127,63,228,255,127,63,230,255,127,63,233,255,127,63,235,255,127,63,237,255,127,63,239,255,127,63,240,255,127,63,242,255,127,63,243,255,127,63,245,255,127,63,246,255,127,63,247,255,127,63,248,255,127,63,249,255,127,63,250,255,127,63,251,255,127,63,251,255,127,63,252,255,127,63,252,255,127,63,253,255,127,63,253,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,198,63,120,51,98,136,11,53,151,200,193,53,80,233,61,54,183,247,156,54,46,124,234,54,153,192,35,55,244,2,90,55,56,3,140,55,227,228,174,55,177,166,213,55,108,36,0,56,146,101,23,56,201,150,48,56,18,184,75,56,81,201,104,56,94,229,131,56,29,94,148,56,229,206,165,56,167,55,184,56,128,152,203,56,85,241,223,56,36,66,245,56,126,197,5,57,238,101,17,57,99,130,29,57,207,26,42,57,63,47,55,57,179,191,68,57,30,204,82,57,141,84,97,57,243,88,112,57,94,217,127,57,227,234,135,57,18,39,144,57,64,161,152,57,105,89,161,57,146,79,170,57,181,131,179,57,215,245,188,57,245,165,198,57,14,148,208,57,34,192,218,57,46,42,229,57,57,210,239,57,60,184,250,57,27,238,2,58,22,159,8,58,13,111,14,58,0,94,20,58,239,107,26,58,218,152,32,58,192,228,38,58,161,79,45,58,124,217,51,58,83,130,58,58,37,74,65,58,240,48,72,58,182,54,79,58,116,91,86,58,45,159,93,58,222,1,101,58,136,131,108,58,42,36,116,58,196,227,123,58,44,225,129,58,241,223,133,58,49,238,137,58,238,11,142,58,37,57,146,58,215,117,150,58,5,194,154,58,174,29,159,58,209,136,163,58,110,3,168,58,134,141,172,58,24,39,177,58,36,208,181,58,169,136,186,58,169,80,191,58,33,40,196,58,19,15,201,58,126,5,206,58,98,11,211,58,191,32,216,58,148,69,221,58,225,121,226,58,166,189,231,58,227,16,237,58,152,115,242,58,196,229,247,58,103,103,253,58,65,124,1,59,137,76,4,59,141,36,7,59,76,4,10,59,198,235,12,59,251,218,15,59,235,209,18,59,149,208,21,59,251,214,24,59,26,229,27,59,244,250,30,59,136,24,34,59,215,61,37,59,223,106,40,59,161,159,43,59,29,220,46,59,83,32,50,59,66,108,53,59,234,191,56,59,76,27,60,59,103,126,63,59,59,233,66,59,199,91,70,59,12,214,73,59,10,88,77,59,193,225,80,59,48,115,84,59,86,12,88,59,53,173,91,59,204,85,95,59,26,6,99,59,32,190,102,59,222,125,106,59,82,69,110,59,127,20,114,59,97,235,117,59,251,201,121,59,76,176,125,59,41,207,128,59,8,202,130,59,194,200,132,59,87,203,134,59,198,209,136,59,17,220,138,59,55,234,140,59,55,252,142,59,18,18,145,59,199,43,147,59,87,73,149,59,194,106,151,59,6,144,153,59,37,185,155,59,30,230,157,59,241,22,160,59,158,75,162,59,37,132,164,59,134,192,166,59,192,0,169,59,212,68,171,59,193,140,173,59,137,216,175,59,41,40,178,59,163,123,180,59,245,210,182,59,33,46,185,59,38,141,187,59,4,240,189,59,186,86,192,59,73,193,194,59,177,47,197,59,242,161,199,59,10,24,202,59,251,145,204,59,196,15,207,59,102,145,209,59,223,22,212,59,49,160,214,59,90,45,217,59,91,190,219,59,51,83,222,59,227,235,224,59,107,136,227,59,201,40,230,59,255,204,232,59,12,117,235,59,240,32,238,59,171,208,240,59,61,132,243,59,165,59,246,59,228,246,248,59,250,181,251,59,229,120,254,59,212,159,0,60,32,5,2,60,87,108,3,60,121,213,4,60,134,64,6,60,126,173,7,60,96,28,9,60,45,141,10,60,229,255,11,60,136,116,13,60,21,235,14,60,141,99,16,60,239,221,17,60,59,90,19,60,114,216,20,60,147,88,22,60,158,218,23,60,147,94,25,60,115,228,26,60,60,108,28,60,240,245,29,60,141,129,31,60,20,15,33,60,133,158,34,60,224,47,36,60,36,195,37,60,82,88,39,60,105,239,40,60,106,136,42,60,84,35,44,60,40,192,45,60,229,94,47,60,139,255,48,60,26,162,50,60,146,70,52,60,243,236,53,60,61,149,55,60,112,63,57,60,140,235,58,60,145,153,60,60,126,73,62,60,84,251,63,60,18,175,65,60,185,100,67,60,72,28,69,60,192,213,70,60,31,145,72,60,103,78,74,60,151,13,76,60,175,206,77,60,176,145,79,60,152,86,81,60,103,29,83,60,31,230,84,60,190,176,86,60,69,125,88,60,179,75,90,60,9,28,92,60,71,238,93,60,107,194,95,60,119,152,97,60,106,112,99,60,68,74,101,60,5,38,103,60,173,3,105,60,60,227,106,60,178,196,108,60,14,168,110,60,81,141,112,60,123,116,114,60,139,93,116,60,130,72,118,60,95,53,120,60,34,36,122,60,203,20,124,60,90,7,126,60,208,251,127,60,22,249,128,60,54,245,129,60,74,242,130,60,80,240,131,60,73,239,132,60,53,239,133,60,19,240,134,60,229,241,135,60,169,244,136,60,95,248,137,60,8,253,138,60,164,2,140,60,50,9,141,60,178,16,142,60,37,25,143,60,139,34,144,60,226,44,145,60,44,56,146,60,104,68,147,60,150,81,148,60,182,95,149,60,201,110,150,60,205,126,151,60,196,143,152,60,172,161,153,60,135,180,154,60,83,200,155,60,17,221,156,60,193,242,157,60,98,9,159,60,245,32,160,60,122,57,161,60,241,82,162,60,89,109,163,60,178,136,164,60,253,164,165,60,57,194,166,60,103,224,167,60,134,255,168,60,151,31,170,60,152,64,171,60,139,98,172,60,111,133,173,60,68,169,174,60,10,206,175,60,193,243,176,60,105,26,178,60,2,66,179,60,139,106,180,60,6,148,181,60,113,190,182,60,205,233,183,60,26,22,185,60,87,67,186,60,133,113,187,60,163,160,188,60,177,208,189,60,177,1,191,60,160,51,192,60,128,102,193,60,80,154,194,60,16,207,195,60,193,4,197,60,97,59,198,60,242,114,199,60,114,171,200,60,227,228,201,60,67,31,203,60,147,90,204,60,211,150,205,60,3,212,206,60,34,18,208,60,49,81,209,60,48,145,210,60,30,210,211,60,252,19,213,60,201,86,214,60,133,154,215,60,49,223,216,60,204,36,218,60,86,107,219,60,208,178,220,60,56,251,221,60,144,68,223,60,214,142,224,60,12,218,225,60,48,38,227,60,67,115,228,60,69,193,229,60,54,16,231,60,21,96,232,60,227,176,233,60,160,2,235,60,75,85,236,60,228,168,237,60,108,253,238,60,226,82,240,60,70,169,241,60,153,0,243,60,218,88,244,60,8,178,245,60,37,12,247,60,48,103,248,60,41,195,249,60,15,32,251,60,228,125,252,60,166,220,253,60,85,60,255,60,121,78,0,61,63,255,0,61,123,176,1,61,46,98,2,61,88,20,3,61,248,198,3,61,15,122,4,61,156,45,5,61,161,225,5,61,27,150,6,61,12,75,7,61,116,0,8,61,82,182,8,61,167,108,9,61,113,35,10,61,179,218,10,61,106,146,11,61,152,74,12,61,60,3,13,61,87,188,13,61,231,117,14,61,238,47,15,61,107,234,15,61,94,165,16,61,199,96,17,61,166,28,18,61,251,216,18,61,198,149,19,61,7,83,20,61,190,16,21,61,234,206,21,61,141,141,22,61,165,76,23,61,52,12,24,61,56,204,24,61,177,140,25,61,161,77,26,61,6,15,27,61,224,208,27,61,48,147,28,61,246,85,29,61,49,25,30,61,226,220,30,61,8,161,31,61,164,101,32,61,181,42,33,61,59,240,33,61,55,182,34,61,168,124,35,61,142,67,36,61,233,10,37,61,186,210,37,61,255,154,38,61,186,99,39,61,234,44,40,61,143,246,40,61,168,192,41,61,55,139,42,61,59,86,43,61,180,33,44,61,161,237,44,61,4,186,45,61,219,134,46,61,38,84,47,61,231,33,48,61,28,240,48,61,198,190,49,61,229,141,50,61,120,93,51,61,127,45,52,61,251,253,52,61,236,206,53,61,81,160,54,61,42,114,55,61,120,68,56,61,58,23,57,61,112,234,57,61,27,190,58,61,58,146,59,61,204,102,60,61,211,59,61,61,79,17,62,61,62,231,62,61,161,189,63,61,120,148,64,61,195,107,65,61,130,67,66,61,181,27,67,61,92,244,67,61,118,205,68,61,4,167,69,61,6,129,70,61,124,91,71,61,101,54,72,61,194,17,73,61,146,237,73,61,214,201,74,61,141,166,75,61,184,131,76,61,86,97,77,61,104,63,78,61,236,29,79,61,229,252,79,61,80,220,80,61,46,188,81,61,128,156,82,61,69,125,83,61,125,94,84,61,40,64,85,61,69,34,86,61,214,4,87,61,218,231,87,61,81,203,88,61,58,175,89,61,150,147,90,61,101,120,91,61,167,93,92,61,91,67,93,61,130,41,94,61,28,16,95,61,40,247,95,61,167,222,96,61,152,198,97,61,251,174,98,61,209,151,99,61,25,129,100,61,212,106,101,61,0,85,102,61,159,63,103,61,176,42,104,61,51,22,105,61,41,2,106,61,144,238,106,61,105,219,107,61,180,200,108,61,113,182,109,61,160,164,110,61,65,147,111,61,84,130,112,61,216,113,113,61,206,97,114,61,54,82,115,61,15,67,116,61,89,52,117,61,22,38,118,61,67,24,119,61,226,10,120,61,243,253,120,61,117,241,121,61,104,229,122,61,204,217,123,61,162,206,124,61,232,195,125,61,160,185,126,61,201,175,127,61,49,83,128,61,183,206,128,61,117,74,129,61,107,198,129,61,154,66,130,61,1,191,130,61,160,59,131,61,120,184,131,61,136,53,132,61,209,178,132,61,81,48,133,61,10,174,133,61,251,43,134,61,37,170,134,61,134,40,135,61,32,167,135,61,242,37,136,61,252,164,136,61,62,36,137,61,184,163,137,61,106,35,138,61,84,163,138,61,118,35,139,61,209,163,139,61,99,36,140,61,45,165,140,61,46,38,141,61,104,167,141,61,218,40,142,61,131,170,142,61,100,44,143,61,125,174,143,61,206,48,144,61,86,179,144,61,23,54,145,61,14,185,145,61,62,60,146,61,165,191,146,61,67,67,147,61,26,199,147,61,39,75,148,61,109,207,148,61,234,83,149,61,158,216,149,61,138,93,150,61,173,226,150,61,7,104,151,61,153,237,151,61,98,115,152,61,99,249,152,61,155,127,153,61,10,6,154,61,176,140,154,61,142,19,155,61,163,154,155,61,239,33,156,61,114,169,156,61,44,49,157,61,29,185,157,61,69,65,158,61,165,201,158,61,59,82,159,61,8,219,159,61,13,100,160,61,72,237,160,61,186,118,161,61,99,0,162,61,67,138,162,61,90,20,163,61,167,158,163,61,43,41,164,61,230,179,164,61,216,62,165,61,0,202,165,61,95,85,166,61,245,224,166,61,193,108,167,61,196,248,167,61,254,132,168,61,110,17,169,61,20,158,169,61,241,42,170,61,4,184,170,61,78,69,171,61,206,210,171,61,133,96,172,61,113,238,172,61,149,124,173,61,238,10,174,61,126,153,174,61,67,40,175,61,63,183,175,61,114,70,176,61,218,213,176,61,120,101,177,61,77,245,177,61,88,133,178,61,152,21,179,61,15,166,179,61,187,54,180,61,158,199,180,61,182,88,181,61,4,234,181,61,137,123,182,61,67,13,183,61,50,159,183,61,88,49,184,61,179,195,184,61,68,86,185,61,11,233,185,61,7,124,186,61,57,15,187,61,160,162,187,61,61,54,188,61,16,202,188,61,24,94,189,61,85,242,189,61,200,134,190,61,112,27,191,61,78,176,191,61,97,69,192,61,170,218,192,61,39,112,193,61,218,5,194,61,194,155,194,61,224,49,195,61,50,200,195,61,186,94,196,61,119,245,196,61,104,140,197,61,143,35,198,61,235,186,198,61,124,82,199,61,66,234,199,61,61,130,200,61,108,26,201,61,209,178,201,61,106,75,202,61,57,228,202,61,59,125,203,61,115,22,204,61,224,175,204,61,129,73,205,61,86,227,205,61,97,125,206,61,159,23,207,61,19,178,207,61,187,76,208,61,151,231,208,61,168,130,209,61,237,29,210,61,103,185,210,61,21,85,211,61,248,240,211,61,14,141,212,61,89,41,213,61,216,197,213,61,140,98,214,61,115,255,214,61,143,156,215,61,223,57,216,61,99,215,216,61,27,117,217,61,7,19,218,61,38,177,218,61,122,79,219,61,2,238,219,61,189,140,220,61,173,43,221,61,208,202,221,61,39,106,222,61,178,9,223,61,112,169,223,61,98,73,224,61,136,233,224,61,226,137,225,61,111,42,226,61,47,203,226,61,35,108,227,61,74,13,228,61,165,174,228,61,52,80,229,61,245,241,229,61,234,147,230,61,19,54,231,61,110,216,231,61,253,122,232,61,191,29,233,61,180,192,233,61,221,99,234,61,56,7,235,61,199,170,235,61,136,78,236,61,125,242,236,61,164,150,237,61,255,58,238,61,140,223,238,61,76,132,239,61,63,41,240,61,101,206,240,61,189,115,241,61,73,25,242,61,7,191,242,61,247,100,243,61,26,11,244,61,112,177,244,61,248,87,245,61,179,254,245,61,160,165,246,61,192,76,247,61,18,244,247,61,151,155,248,61,77,67,249,61,55,235,249,61,82,147,250,61,159,59,251,61,31,228,251,61,209,140,252,61,181,53,253,61,203,222,253,61,19,136,254,61,141,49,255,61,57,219,255,61,140,66,0,62,148,151,0,62,181,236,0,62,238,65,1,62,65,151,1,62,173,236,1,62,49,66,2,62,206,151,2,62,132,237,2,62,83,67,3,62,59,153,3,62,59,239,3,62,84,69,4,62,134,155,4,62,209,241,4,62,52,72,5,62,176,158,5,62,68,245,5,62,242,75,6,62,183,162,6,62,150,249,6,62,141,80,7,62,156,167,7,62,196,254,7,62,5,86,8,62,94,173,8,62,207,4,9,62,89,92,9,62,252,179,9,62,183,11,10,62,138,99,10,62,118,187,10,62,122,19,11,62,150,107,11,62,203,195,11,62,24,28,12,62,125,116,12,62,250,204,12,62,144,37,13,62,62,126,13,62,4,215,13,62,227,47,14,62,217,136,14,62,232,225,14,62,15,59,15,62,78,148,15,62,165,237,15,62,20,71,16,62,155,160,16,62,58,250,16,62,241,83,17,62,193,173,17,62,168,7,18,62,167,97,18,62,190,187,18,62,237,21,19,62,51,112,19,62,146,202,19,62,9,37,20,62,151,127,20,62,61,218,20,62,251,52,21,62,209,143,21,62,190,234,21,62,195,69,22,62,224,160,22,62,21,252,22,62,97,87,23,62,197,178,23,62,64,14,24,62,211,105,24,62,126,197,24,62,64,33,25,62,26,125,25,62,11,217,25,62,20,53,26,62,52,145,26,62,108,237,26,62,187,73,27,62,34,166,27,62,160,2,28,62,53,95,28,62,226,187,28,62,166,24,29,62,129,117,29,62,116,210,29,62,126,47,30,62,159,140,30,62,215,233,30,62,39,71,31,62,141,164,31,62,11,2,32,62,160,95,32,62,76,189,32,62,16,27,33,62,234,120,33,62,219,214,33,62,228,52,34,62,3,147,34,62,58,241,34,62,135,79,35,62,235,173,35,62,103,12,36,62,249,106,36,62,162,201,36,62,98,40,37,62,56,135,37,62,38,230,37,62,42,69,38,62,69,164,38,62,119,3,39,62,192,98,39,62,31,194,39,62,149,33,40,62,33,129,40,62,197,224,40,62,126,64,41,62,79,160,41,62,54,0,42,62,51,96,42,62,72,192,42,62,114,32,43,62,179,128,43,62,11,225,43,62,121,65,44,62,253,161,44,62,152,2,45,62,73,99,45,62,16,196,45,62,238,36,46,62,226,133,46,62,237,230,46,62,13,72,47,62,68,169,47,62,145,10,48,62,245,107,48,62,110,205,48,62,254,46,49,62,163,144,49,62,95,242,49,62,49,84,50,62,25,182,50,62,23,24,51,62,43,122,51,62,85,220,51,62,148,62,52,62,234,160,52,62,86,3,53,62,216,101,53,62,111,200,53,62,28,43,54,62,223,141,54,62,184,240,54,62,167,83,55,62,171,182,55,62,197,25,56,62,245,124,56,62,59,224,56,62,150,67,57,62,7,167,57,62,141,10,58,62,41,110,58,62,219,209,58,62,162,53,59,62,126,153,59,62,112,253,59,62,120,97,60,62,149,197,60,62,199,41,61,62,15,142,61,62,108,242,61,62,222,86,62,62,102,187,62,62,3,32,63,62,181,132,63,62,125,233,63,62,90,78,64,62,75,179,64,62,83,24,65,62,111,125,65,62,160,226,65,62,231,71,66,62,66,173,66,62,179,18,67,62,57,120,67,62,211,221,67,62,131,67,68,62,71,169,68,62,33,15,69,62,15,117,69,62,18,219,69,62,42,65,70,62,87,167,70,62,153,13,71,62,240,115,71,62,91,218,71,62,219,64,72,62,111,167,72,62,25,14,73,62,215,116,73,62,169,219,73,62,144,66,74,62,140,169,74,62,157,16,75,62,193,119,75,62,251,222,75,62,73,70,76,62,171,173,76,62,34,21,77,62,173,124,77,62,76,228,77,62,0,76,78,62,200,179,78,62,164,27,79,62,149,131,79,62,154,235,79,62,179,83,80,62,225,187,80,62,34,36,81,62,120,140,81,62,225,244,81,62,95,93,82,62,241,197,82,62,151,46,83,62,81,151,83,62,31,0,84,62,1,105,84,62,247,209,84,62,0,59,85,62,30,164,85,62,79,13,86,62,149,118,86,62,238,223,86,62,91,73,87,62,219,178,87,62,112,28,88,62,24,134,88,62,211,239,88,62,163,89,89,62,134,195,89,62,124,45,90,62,134,151,90,62,164,1,91,62,213,107,91,62,26,214,91,62,114,64,92,62,221,170,92,62,92,21,93,62,239,127,93,62,148,234,93,62,77,85,94,62,26,192,94,62,249,42,95,62,236,149,95,62,242,0,96,62,11,108,96,62,55,215,96,62,119,66,97,62,202,173,97,62,47,25,98,62,168,132,98,62,52,240,98,62,210,91,99,62,132,199,99,62,73,51,100,62,32,159,100,62,11,11,101,62,8,119,101,62,24,227,101,62,59,79,102,62,113,187,102,62,186,39,103,62,21,148,103,62,131,0,104,62,3,109,104,62,151,217,104,62,60,70,105,62,245,178,105,62,192,31,106,62,157,140,106,62,141,249,106,62,144,102,107,62,165,211,107,62,204,64,108,62,6,174,108,62,82,27,109,62,176,136,109,62,33,246,109,62,164,99,110,62,57,209,110,62,225,62,111,62,154,172,111,62,102,26,112,62,68,136,112,62,52,246,112,62,55,100,113,62,75,210,113,62,113,64,114,62,169,174,114,62,243,28,115,62,80,139,115,62,190,249,115,62,61,104,116,62,207,214,116,62,115,69,117,62,40,180,117,62,239,34,118,62,200,145,118,62,179,0,119,62,175,111,119,62,189,222,119,62,221,77,120,62,14,189,120,62,80,44,121,62,165,155,121,62,10,11,122,62,130,122,122,62,10,234,122,62,164,89,123,62,80,201,123,62,13,57,124,62,219,168,124,62,186,24,125,62,171,136,125,62,173,248,125,62,192,104,126,62,228,216,126,62,26,73,127,62,96,185,127,62,220,20,128,62,16,77,128,62,77,133,128,62,147,189,128,62,225,245,128,62,55,46,129,62,150,102,129,62,253,158,129,62,109,215,129,62,229,15,130,62,102,72,130,62,238,128,130,62,128,185,130,62,25,242,130,62,187,42,131,62,102,99,131,62,24,156,131,62,211,212,131,62,150,13,132,62,98,70,132,62,53,127,132,62,17,184,132,62,245,240,132,62,226,41,133,62,214,98,133,62,211,155,133,62,216,212,133,62,229,13,134,62,250,70,134,62,23,128,134,62,61,185,134,62,106,242,134,62,160,43,135,62,221,100,135,62,35,158,135,62,112,215,135,62,198,16,136,62,35,74,136,62,137,131,136,62,247,188,136,62,108,246,136,62,233,47,137,62,111,105,137,62,252,162,137,62,145,220,137,62,46,22,138,62,211,79,138,62,127,137,138,62,52,195,138,62,240,252,138,62,180,54,139,62,128,112,139,62,84,170,139,62,47,228,139,62,18,30,140,62,253,87,140,62,239,145,140,62,233,203,140,62,235,5,141,62,245,63,141,62,6,122,141,62,31,180,141,62,63,238,141,62,103,40,142,62,150,98,142,62,205,156,142,62,12,215,142,62,82,17,143,62,159,75,143,62,245,133,143,62,81,192,143,62,181,250,143,62,33,53,144,62,147,111,144,62,14,170,144,62,143,228,144,62,25,31,145,62,169,89,145,62,65,148,145,62,224,206,145,62,134,9,146,62,52,68,146,62,233,126,146,62,165,185,146,62,105,244,146,62,52,47,147,62,6,106,147,62,223,164,147,62,191,223,147,62,167,26,148,62,150,85,148,62,139,144,148,62,136,203,148,62,140,6,149,62,152,65,149,62,170,124,149,62,195,183,149,62,227,242,149,62,11,46,150,62,57,105,150,62,111,164,150,62,171,223,150,62,238,26,151,62,56,86,151,62,138,145,151,62,226,204,151,62,65,8,152,62,167,67,152,62,19,127,152,62,135,186,152,62,1,246,152,62,130,49,153,62,10,109,153,62,153,168,153,62,47,228,153,62,203,31,154,62,110,91,154,62,24,151,154,62,200,210,154,62,127,14,155,62,61,74,155,62,2,134,155,62,205,193,155,62,158,253,155,62,119,57,156,62,85,117,156,62,59,177,156,62,39,237,156,62,25,41,157,62,18,101,157,62,18,161,157,62,24,221,157,62,36,25,158,62,55,85,158,62,80,145,158,62,112,205,158,62,150,9,159,62,195,69,159,62,246,129,159,62,47,190,159,62,111,250,159,62,180,54,160,62,1,115,160,62,83,175,160,62,172,235,160,62,11,40,161,62,112,100,161,62,219,160,161,62,77,221,161,62,196,25,162,62,66,86,162,62,198,146,162,62,81,207,162,62,225,11,163,62,119,72,163,62,20,133,163,62,182,193,163,62,95,254,163,62,13,59,164,62,194,119,164,62,125,180,164,62,61,241,164,62,4,46,165,62,208,106,165,62,162,167,165,62,123,228,165,62,89,33,166,62,61,94,166,62,39,155,166,62,23,216,166,62,12,21,167,62,7,82,167,62,8,143,167,62,15,204,167,62,28,9,168,62,46,70,168,62,70,131,168,62,100,192,168,62,136,253,168,62,177,58,169,62,223,119,169,62,20,181,169,62,78,242,169,62,141,47,170,62,211,108,170,62,29,170,170,62,109,231,170,62,195,36,171,62,31,98,171,62,127,159,171,62,230,220,171,62,81,26,172,62,194,87,172,62,57,149,172,62,181,210,172,62,54,16,173,62,189,77,173,62,73,139,173,62,218,200,173,62,113,6,174,62,13,68,174,62,174,129,174,62,85,191,174,62,0,253,174,62,177,58,175,62,103,120,175,62,35,182,175,62,227,243,175,62,169,49,176,62,116,111,176,62,68,173,176,62,25,235,176,62,243,40,177,62,210,102,177,62,182,164,177,62,160,226,177,62,142,32,178,62,129,94,178,62,121,156,178,62,119,218,178,62,121,24,179,62,128,86,179,62,140,148,179,62,157,210,179,62,178,16,180,62,205,78,180,62,236,140,180,62,16,203,180,62,57,9,181,62,103,71,181,62,154,133,181,62,209,195,181,62,13,2,182,62,78,64,182,62,147,126,182,62,221,188,182,62,44,251,182,62,127,57,183,62,215,119,183,62,52,182,183,62,149,244,183,62,251,50,184,62,101,113,184,62,212,175,184,62,71,238,184,62,191,44,185,62,59,107,185,62,188,169,185,62,65,232,185,62,202,38,186,62,88,101,186,62,235,163,186,62,129,226,186,62,28,33,187,62,188,95,187,62,95,158,187,62,7,221,187,62,180,27,188,62,100,90,188,62,25,153,188,62,210,215,188,62,143,22,189,62,80,85,189,62,22,148,189,62,223,210,189,62,173,17,190,62,127,80,190,62,85,143,190,62,47,206,190,62,13,13,191,62,239,75,191,62,213,138,191,62,191,201,191,62,173,8,192,62,159,71,192,62,149,134,192,62,143,197,192,62,141,4,193,62,143,67,193,62,148,130,193,62,158,193,193,62,171,0,194,62,188,63,194,62,209,126,194,62,234,189,194,62,6,253,194,62,38,60,195,62,74,123,195,62,113,186,195,62,157,249,195,62,204,56,196,62,254,119,196,62,52,183,196,62,110,246,196,62,171,53,197,62,236,116,197,62,49,180,197,62,121,243,197,62,196,50,198,62,19,114,198,62,102,177,198,62,188,240,198,62,21,48,199,62,114,111,199,62,210,174,199,62,54,238,199,62,157,45,200,62,7,109,200,62,117,172,200,62,230,235,200,62,90,43,201,62,209,106,201,62,76,170,201,62,202,233,201,62,75,41,202,62,208,104,202,62,88,168,202,62,226,231,202,62,112,39,203,62,1,103,203,62,149,166,203,62,45,230,203,62,199,37,204,62,100,101,204,62,4,165,204,62,168,228,204,62,78,36,205,62,248,99,205,62,164,163,205,62,83,227,205,62,5,35,206,62,186,98,206,62,114,162,206,62,45,226,206,62,234,33,207,62,171,97,207,62,110,161,207,62,52,225,207,62,253,32,208,62,200,96,208,62,150,160,208,62,103,224,208,62,59,32,209,62,17,96,209,62,234,159,209,62,198,223,209,62,164,31,210,62,133,95,210,62,104,159,210,62,78,223,210,62,55,31,211,62,33,95,211,62,15,159,211,62,255,222,211,62,241,30,212,62,230,94,212,62,221,158,212,62,215,222,212,62,211,30,213,62,209,94,213,62,210,158,213,62,213,222,213,62,219,30,214,62,226,94,214,62,236,158,214,62,248,222,214,62,7,31,215,62,24,95,215,62,42,159,215,62,63,223,215,62,87,31,216,62,112,95,216,62,139,159,216,62,169,223,216,62,200,31,217,62,234,95,217,62,14,160,217,62,51,224,217,62,91,32,218,62,133,96,218,62,176,160,218,62,222,224,218,62,13,33,219,62,63,97,219,62,114,161,219,62,167,225,219,62,222,33,220,62,23,98,220,62,82,162,220,62,142,226,220,62,204,34,221,62,12,99,221,62,78,163,221,62,146,227,221,62,215,35,222,62,29,100,222,62,102,164,222,62,176,228,222,62,252,36,223,62,73,101,223,62,152,165,223,62,232,229,223,62,58,38,224,62,142,102,224,62,227,166,224,62,57,231,224,62,145,39,225,62,234,103,225,62,69,168,225,62,161,232,225,62,255,40,226,62,94,105,226,62,190,169,226,62,32,234,226,62,131,42,227,62,231,106,227,62,76,171,227,62,179,235,227,62,27,44,228,62,132,108,228,62,238,172,228,62,90,237,228,62,199,45,229,62,52,110,229,62,163,174,229,62,19,239,229,62,133,47,230,62,247,111,230,62,106,176,230,62,222,240,230,62,83,49,231,62,202,113,231,62,65,178,231,62,185,242,231,62,50,51,232,62,172,115,232,62,38,180,232,62,162,244,232,62,31,53,233,62,156,117,233,62,26,182,233,62,153,246,233,62,25,55,234,62,153,119,234,62,26,184,234,62,156,248,234,62,31,57,235,62,162,121,235,62,38,186,235,62,170,250,235,62,47,59,236,62,181,123,236,62,59,188,236,62,194,252,236,62,73,61,237,62,209,125,237,62,89,190,237,62,226,254,237,62,107,63,238,62,245,127,238,62,127,192,238,62,10,1,239,62,149,65,239,62,32,130,239,62,171,194,239,62,55,3,240,62,196,67,240,62,80,132,240,62,221,196,240,62,106,5,241,62,247,69,241,62,132,134,241,62,18,199,241,62,160,7,242,62,45,72,242,62,187,136,242,62,74,201,242,62,216,9,243,62,102,74,243,62,244,138,243,62,131,203,243,62,17,12,244,62,159,76,244,62,46,141,244,62,188,205,244,62,74,14,245,62,216,78,245,62,102,143,245,62,244,207,245,62,129,16,246,62,15,81,246,62,156,145,246,62,41,210,246,62,182,18,247,62,67,83,247,62,207,147,247,62,91,212,247,62,231,20,248,62,115,85,248,62,254,149,248,62,136,214,248,62,19,23,249,62,157,87,249,62,38,152,249,62,175,216,249,62,56,25,250,62,192,89,250,62,72,154,250,62,207,218,250,62,86,27,251,62,220,91,251,62,97,156,251,62,230,220,251,62,106,29,252,62,238,93,252,62,113,158,252,62,243,222,252,62,117,31,253,62,245,95,253,62,118,160,253,62,245,224,253,62,116,33,254,62,241,97,254,62,110,162,254,62,235,226,254,62,102,35,255,62,224,99,255,62,90,164,255,62,211,228,255,62,165,18,0,63,225,50,0,63,27,83,0,63,86,115,0,63,144,147,0,63,201,179,0,63,2,212,0,63,58,244,0,63,114,20,1,63,169,52,1,63,224,84,1,63,22,117,1,63,76,149,1,63,129,181,1,63,181,213,1,63,233,245,1,63,28,22,2,63,78,54,2,63,128,86,2,63,178,118,2,63,226,150,2,63,18,183,2,63,65,215,2,63,112,247,2,63,157,23,3,63,203,55,3,63,247,87,3,63,35,120,3,63,78,152,3,63,120,184,3,63,161,216,3,63,202,248,3,63,242,24,4,63,25,57,4,63,63,89,4,63,101,121,4,63,137,153,4,63,173,185,4,63,208,217,4,63,243,249,4,63,20,26,5,63,52,58,5,63,84,90,5,63,115,122,5,63,145,154,5,63,173,186,5,63,202,218,5,63,229,250,5,63,255,26,6,63,24,59,6,63,48,91,6,63,72,123,6,63,94,155,6,63,116,187,6,63,136,219,6,63,155,251,6,63,174,27,7,63,191,59,7,63,208,91,7,63,223,123,7,63,237,155,7,63,250,187,7,63,7,220,7,63,18,252,7,63,28,28,8,63,37,60,8,63,44,92,8,63,51,124,8,63,57,156,8,63,61,188,8,63,64,220,8,63,67,252,8,63,68,28,9,63,68,60,9,63,66,92,9,63,64,124,9,63,60,156,9,63,55,188,9,63,49,220,9,63,41,252,9,63,33,28,10,63,23,60,10,63,12,92,10,63,255,123,10,63,242,155,10,63,227,187,10,63,211,219,10,63,193,251,10,63,174,27,11,63,154,59,11,63,133,91,11,63,110,123,11,63,86,155,11,63,60,187,11,63,33,219,11,63,5,251,11,63,231,26,12,63,200,58,12,63,168,90,12,63,134,122,12,63,98,154,12,63,62,186,12,63,23,218,12,63,240,249,12,63,199,25,13,63,156,57,13,63,112,89,13,63,66,121,13,63,19,153,13,63,227,184,13,63,176,216,13,63,125,248,13,63,72,24,14,63,17,56,14,63,216,87,14,63,159,119,14,63,99,151,14,63,38,183,14,63,232,214,14,63,167,246,14,63,101,22,15,63,34,54,15,63,221,85,15,63,150,117,15,63,78,149,15,63,4,181,15,63,184,212,15,63,106,244,15,63,27,20,16,63,202,51,16,63,120,83,16,63,36,115,16,63,206,146,16,63,118,178,16,63,28,210,16,63,193,241,16,63,100,17,17,63,6,49,17,63,165,80,17,63,67,112,17,63,223,143,17,63,121,175,17,63,17,207,17,63,167,238,17,63,60,14,18,63,206,45,18,63,95,77,18,63,238,108,18,63,123,140,18,63,7,172,18,63,144,203,18,63,23,235,18,63,157,10,19,63,32,42,19,63,162,73,19,63,34,105,19,63,159,136,19,63,27,168,19,63,149,199,19,63,13,231,19,63,131,6,20,63,247,37,20,63,104,69,20,63,216,100,20,63,70,132,20,63,178,163,20,63,27,195,20,63,131,226,20,63,233,1,21,63,76,33,21,63,174,64,21,63,13,96,21,63,106,127,21,63,197,158,21,63,31,190,21,63,117,221,21,63,202,252,21,63,29,28,22,63,109,59,22,63,188,90,22,63,8,122,22,63,82,153,22,63,153,184,22,63,223,215,22,63,34,247,22,63,100,22,23,63,162,53,23,63,223,84,23,63,26,116,23,63,82,147,23,63,136,178,23,63,187,209,23,63,237,240,23,63,28,16,24,63,73,47,24,63,115,78,24,63,155,109,24,63,193,140,24,63,228,171,24,63,6,203,24,63,36,234,24,63,65,9,25,63,91,40,25,63,115,71,25,63,136,102,25,63,155,133,25,63,171,164,25,63,185,195,25,63,197,226,25,63,206,1,26,63,213,32,26,63,217,63,26,63,219,94,26,63,218,125,26,63,215,156,26,63,210,187,26,63,202,218,26,63,191,249,26,63,178,24,27,63,162,55,27,63,144,86,27,63,123,117,27,63,100,148,27,63,74,179,27,63,46,210,27,63,15,241,27,63,237,15,28,63,201,46,28,63,162,77,28,63,121,108,28,63,77,139,28,63,31,170,28,63,237,200,28,63,185,231,28,63,131,6,29,63,74,37,29,63,14,68,29,63,207,98,29,63,142,129,29,63,74,160,29,63,3,191,29,63,186,221,29,63,110,252,29,63,31,27,30,63,205,57,30,63,121,88,30,63,34,119,30,63,200,149,30,63,107,180,30,63,12,211,30,63,170,241,30,63,69,16,31,63,221,46,31,63,114,77,31,63,5,108,31,63,148,138,31,63,33,169,31,63,171,199,31,63,50,230,31,63,182,4,32,63,56,35,32,63,182,65,32,63,50,96,32,63,170,126,32,63,32,157,32,63,147,187,32,63,3,218,32,63,112,248,32,63,218,22,33,63,65,53,33,63,165,83,33,63,6,114,33,63,100,144,33,63,191,174,33,63,23,205,33,63,108,235,33,63,190,9,34,63,13,40,34,63,89,70,34,63,162,100,34,63,232,130,34,63,43,161,34,63,107,191,34,63,167,221,34,63,225,251,34,63,24,26,35,63,75,56,35,63,123,86,35,63,168,116,35,63,211,146,35,63,249,176,35,63,29,207,35,63,62,237,35,63,91,11,36,63,118,41,36,63,141,71,36,63,161,101,36,63,177,131,36,63,191,161,36,63,201,191,36,63,208,221,36,63,212,251,36,63,213,25,37,63,210,55,37,63,204,85,37,63,195,115,37,63,183,145,37,63,167,175,37,63,148,205,37,63,126,235,37,63,101,9,38,63,72,39,38,63,40,69,38,63,4,99,38,63,221,128,38,63,179,158,38,63,134,188,38,63,85,218,38,63,33,248,38,63,233,21,39,63,174,51,39,63,112,81,39,63,46,111,39,63,233,140,39,63,160,170,39,63,84,200,39,63,4,230,39,63,178,3,40,63,91,33,40,63,1,63,40,63,164,92,40,63,67,122,40,63,223,151,40,63,120,181,40,63,12,211,40,63,158,240,40,63,43,14,41,63,182,43,41,63,60,73,41,63,192,102,41,63,63,132,41,63,187,161,41,63,52,191,41,63,169,220,41,63,26,250,41,63,136,23,42,63,242,52,42,63,89,82,42,63,188,111,42,63,28,141,42,63,119,170,42,63,208,199,42,63,36,229,42,63,117,2,43,63,194,31,43,63,12,61,43,63,82,90,43,63,148,119,43,63,211,148,43,63,14,178,43,63,69,207,43,63,120,236,43,63,168,9,44,63,212,38,44,63,252,67,44,63,33,97,44,63,66,126,44,63,95,155,44,63,120,184,44,63,142,213,44,63,159,242,44,63,173,15,45,63,184,44,45,63,190,73,45,63,193,102,45,63,191,131,45,63,186,160,45,63,177,189,45,63,165,218,45,63,148,247,45,63,128,20,46,63,103,49,46,63,75,78,46,63,43,107,46,63,7,136,46,63,224,164,46,63,180,193,46,63,132,222,46,63,81,251,46,63,26,24,47,63,222,52,47,63,159,81,47,63,92,110,47,63,21,139,47,63,202,167,47,63,123,196,47,63,40,225,47,63,209,253,47,63,118,26,48,63,23,55,48,63,180,83,48,63,77,112,48,63,226,140,48,63,115,169,48,63,0,198,48,63,137,226,48,63,14,255,48,63,142,27,49,63,11,56,49,63,132,84,49,63,248,112,49,63,105,141,49,63,214,169,49,63,62,198,49,63,162,226,49,63,2,255,49,63,95,27,50,63,182,55,50,63,10,84,50,63,90,112,50,63,166,140,50,63,237,168,50,63,48,197,50,63,111,225,50,63,170,253,50,63,225,25,51,63,19,54,51,63,66,82,51,63,108,110,51,63,146,138,51,63,180,166,51,63,209,194,51,63,234,222,51,63,0,251,51,63,16,23,52,63,29,51,52,63,37,79,52,63,41,107,52,63,41,135,52,63,37,163,52,63,28,191,52,63,15,219,52,63,253,246,52,63,232,18,53,63,206,46,53,63,176,74,53,63,141,102,53,63,102,130,53,63,59,158,53,63,11,186,53,63,215,213,53,63,159,241,53,63,98,13,54,63,33,41,54,63,220,68,54,63,146,96,54,63,68,124,54,63,241,151,54,63,154,179,54,63,63,207,54,63,223,234,54,63,123,6,55,63,18,34,55,63,165,61,55,63,52,89,55,63,190,116,55,63,67,144,55,63,196,171,55,63,65,199,55,63,185,226,55,63,45,254,55,63,156,25,56,63,7,53,56,63,109,80,56,63,207,107,56,63,44,135,56,63,133,162,56,63,217,189,56,63,40,217,56,63,115,244,56,63,186,15,57,63,252,42,57,63,57,70,57,63,114,97,57,63,166,124,57,63,214,151,57,63,1,179,57,63,40,206,57,63,74,233,57,63,103,4,58,63,128,31,58,63,148,58,58,63,163,85,58,63,174,112,58,63,180,139,58,63,182,166,58,63,179,193,58,63,171,220,58,63,159,247,58,63,142,18,59,63,120,45,59,63,94,72,59,63,63,99,59,63,27,126,59,63,243,152,59,63,197,179,59,63,148,206,59,63,93,233,59,63,34,4,60,63,226,30,60,63,157,57,60,63,84,84,60,63,5,111,60,63,178,137,60,63,91,164,60,63,254,190,60,63,157,217,60,63,55,244,60,63,204,14,61,63,93,41,61,63,232,67,61,63,111,94,61,63,241,120,61,63,110,147,61,63,231,173,61,63,91,200,61,63,201,226,61,63,51,253,61,63,152,23,62,63,249,49,62,63,84,76,62,63,171,102,62,63,252,128,62,63,73,155,62,63,145,181,62,63,212,207,62,63,19,234,62,63,76,4,63,63,128,30,63,63,176,56,63,63,219,82,63,63,0,109,63,63,33,135,63,63,61,161,63,63,84,187,63,63,102,213,63,63,115,239,63,63,123,9,64,63,127,35,64,63,125,61,64,63,118,87,64,63,106,113,64,63,90,139,64,63,68,165,64,63,42,191,64,63,10,217,64,63,229,242,64,63,188,12,65,63,141,38,65,63,90,64,65,63,33,90,65,63,228,115,65,63,161,141,65,63,89,167,65,63,13,193,65,63,187,218,65,63,100,244,65,63,8,14,66,63,167,39,66,63,65,65,66,63,214,90,66,63,102,116,66,63,241,141,66,63,119,167,66,63,248,192,66,63,115,218,66,63,234,243,66,63,91,13,67,63,199,38,67,63,47,64,67,63,145,89,67,63,238,114,67,63,69,140,67,63,152,165,67,63,230,190,67,63,46,216,67,63,113,241,67,63,175,10,68,63,232,35,68,63,28,61,68,63,75,86,68,63,116,111,68,63,153,136,68,63,184,161,68,63,210,186,68,63,230,211,68,63,246,236,68,63,0,6,69,63,5,31,69,63,5,56,69,63,0,81,69,63,245,105,69,63,230,130,69,63,209,155,69,63,182,180,69,63,151,205,69,63,114,230,69,63,72,255,69,63,25,24,70,63,229,48,70,63,171,73,70,63,108,98,70,63,40,123,70,63,222,147,70,63,143,172,70,63,59,197,70,63,226,221,70,63,131,246,70,63,31,15,71,63,182,39,71,63,71,64,71,63,211,88,71,63,90,113,71,63,220,137,71,63,88,162,71,63,207,186,71,63,64,211,71,63,172,235,71,63,19,4,72,63,116,28,72,63,209,52,72,63,39,77,72,63,121,101,72,63,197,125,72,63,11,150,72,63,77,174,72,63,137,198,72,63,191,222,72,63,240,246,72,63,28,15,73,63,66,39,73,63,99,63,73,63,127,87,73,63,149,111,73,63,166,135,73,63,177,159,73,63,183,183,73,63,183,207,73,63,178,231,73,63,168,255,73,63,152,23,74,63,131,47,74,63,104,71,74,63,72,95,74,63,34,119,74,63,247,142,74,63,199,166,74,63,145,190,74,63,85,214,74,63,20,238,74,63,206,5,75,63,130,29,75,63,49,53,75,63,218,76,75,63,126,100,75,63,28,124,75,63,181,147,75,63,72,171,75,63,213,194,75,63,93,218,75,63,224,241,75,63,93,9,76,63,213,32,76,63,71,56,76,63,179,79,76,63,26,103,76,63,124,126,76,63,216,149,76,63,46,173,76,63,127,196,76,63,202,219,76,63,16,243,76,63,80,10,77,63,139,33,77,63,192,56,77,63,240,79,77,63,26,103,77,63,62,126,77,63,93,149,77,63,118,172,77,63,137,195,77,63,151,218,77,63,160,241,77,63,163,8,78,63,160,31,78,63,151,54,78,63,137,77,78,63,118,100,78,63,93,123,78,63,62,146,78,63,25,169,78,63,239,191,78,63,192,214,78,63,138,237,78,63,79,4,79,63,15,27,79,63,201,49,79,63,125,72,79,63,43,95,79,63,212,117,79,63,119,140,79,63,21,163,79,63,172,185,79,63,63,208,79,63,203,230,79,63,82,253,79,63,211,19,80,63,79,42,80,63,197,64,80,63,53,87,80,63,159,109,80,63], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+207220);\n/* memory initializer */ allocate([4,132,80,63,99,154,80,63,189,176,80,63,16,199,80,63,94,221,80,63,167,243,80,63,233,9,81,63,38,32,81,63,93,54,81,63,143,76,81,63,187,98,81,63,225,120,81,63,1,143,81,63,28,165,81,63,48,187,81,63,64,209,81,63,73,231,81,63,77,253,81,63,75,19,82,63,67,41,82,63,53,63,82,63,34,85,82,63,9,107,82,63,234,128,82,63,198,150,82,63,155,172,82,63,107,194,82,63,53,216,82,63,250,237,82,63,185,3,83,63,113,25,83,63,37,47,83,63,210,68,83,63,121,90,83,63,27,112,83,63,183,133,83,63,77,155,83,63,222,176,83,63,104,198,83,63,237,219,83,63,108,241,83,63,230,6,84,63,89,28,84,63,199,49,84,63,46,71,84,63,145,92,84,63,237,113,84,63,67,135,84,63,148,156,84,63,223,177,84,63,35,199,84,63,99,220,84,63,156,241,84,63,207,6,85,63,253,27,85,63,37,49,85,63,71,70,85,63,99,91,85,63,121,112,85,63,138,133,85,63,149,154,85,63,153,175,85,63,152,196,85,63,146,217,85,63,133,238,85,63,114,3,86,63,90,24,86,63,60,45,86,63,24,66,86,63,238,86,86,63,190,107,86,63,136,128,86,63,76,149,86,63,11,170,86,63,196,190,86,63,118,211,86,63,35,232,86,63,203,252,86,63,108,17,87,63,7,38,87,63,156,58,87,63,44,79,87,63,182,99,87,63,58,120,87,63,183,140,87,63,47,161,87,63,162,181,87,63,14,202,87,63,116,222,87,63,213,242,87,63,47,7,88,63,132,27,88,63,211,47,88,63,28,68,88,63,95,88,88,63,156,108,88,63,211,128,88,63,4,149,88,63,47,169,88,63,85,189,88,63,116,209,88,63,142,229,88,63,162,249,88,63,175,13,89,63,183,33,89,63,185,53,89,63,181,73,89,63,171,93,89,63,155,113,89,63,134,133,89,63,106,153,89,63,72,173,89,63,33,193,89,63,243,212,89,63,192,232,89,63,135,252,89,63,71,16,90,63,2,36,90,63,183,55,90,63,102,75,90,63,15,95,90,63,178,114,90,63,79,134,90,63,230,153,90,63,119,173,90,63,3,193,90,63,136,212,90,63,7,232,90,63,129,251,90,63,244,14,91,63,98,34,91,63,201,53,91,63,43,73,91,63,135,92,91,63,220,111,91,63,44,131,91,63,118,150,91,63,186,169,91,63,248,188,91,63,47,208,91,63,97,227,91,63,141,246,91,63,179,9,92,63,212,28,92,63,238,47,92,63,2,67,92,63,16,86,92,63,24,105,92,63,26,124,92,63,23,143,92,63,13,162,92,63,253,180,92,63,232,199,92,63,204,218,92,63,171,237,92,63,131,0,93,63,86,19,93,63,34,38,93,63,233,56,93,63,169,75,93,63,100,94,93,63,24,113,93,63,199,131,93,63,112,150,93,63,18,169,93,63,175,187,93,63,70,206,93,63,215,224,93,63,97,243,93,63,230,5,94,63,101,24,94,63,222,42,94,63,81,61,94,63,190,79,94,63,36,98,94,63,133,116,94,63,224,134,94,63,53,153,94,63,132,171,94,63,205,189,94,63,16,208,94,63,77,226,94,63,132,244,94,63,181,6,95,63,224,24,95,63,5,43,95,63,36,61,95,63,61,79,95,63,80,97,95,63,93,115,95,63,101,133,95,63,102,151,95,63,97,169,95,63,86,187,95,63,69,205,95,63,46,223,95,63,18,241,95,63,239,2,96,63,198,20,96,63,151,38,96,63,98,56,96,63,40,74,96,63,231,91,96,63,160,109,96,63,84,127,96,63,1,145,96,63,168,162,96,63,73,180,96,63,229,197,96,63,122,215,96,63,10,233,96,63,147,250,96,63,22,12,97,63,148,29,97,63,11,47,97,63,125,64,97,63,232,81,97,63,77,99,97,63,173,116,97,63,6,134,97,63,90,151,97,63,167,168,97,63,239,185,97,63,48,203,97,63,108,220,97,63,162,237,97,63,209,254,97,63,251,15,98,63,30,33,98,63,60,50,98,63,84,67,98,63,101,84,98,63,113,101,98,63,119,118,98,63,119,135,98,63,112,152,98,63,100,169,98,63,82,186,98,63,58,203,98,63,28,220,98,63,247,236,98,63,205,253,98,63,157,14,99,63,103,31,99,63,43,48,99,63,233,64,99,63,161,81,99,63,83,98,99,63,255,114,99,63,165,131,99,63,69,148,99,63,224,164,99,63,116,181,99,63,2,198,99,63,138,214,99,63,13,231,99,63,137,247,99,63,255,7,100,63,112,24,100,63,218,40,100,63,62,57,100,63,157,73,100,63,246,89,100,63,72,106,100,63,149,122,100,63,219,138,100,63,28,155,100,63,87,171,100,63,140,187,100,63,186,203,100,63,227,219,100,63,6,236,100,63,35,252,100,63,58,12,101,63,75,28,101,63,86,44,101,63,91,60,101,63,91,76,101,63,84,92,101,63,71,108,101,63,53,124,101,63,28,140,101,63,254,155,101,63,217,171,101,63,175,187,101,63,126,203,101,63,72,219,101,63,12,235,101,63,202,250,101,63,130,10,102,63,52,26,102,63,224,41,102,63,134,57,102,63,38,73,102,63,193,88,102,63,85,104,102,63,227,119,102,63,108,135,102,63,238,150,102,63,107,166,102,63,226,181,102,63,83,197,102,63,190,212,102,63,35,228,102,63,130,243,102,63,219,2,103,63,46,18,103,63,124,33,103,63,195,48,103,63,5,64,103,63,64,79,103,63,118,94,103,63,166,109,103,63,208,124,103,63,244,139,103,63,18,155,103,63,42,170,103,63,61,185,103,63,73,200,103,63,80,215,103,63,80,230,103,63,75,245,103,63,64,4,104,63,47,19,104,63,24,34,104,63,251,48,104,63,217,63,104,63,176,78,104,63,130,93,104,63,78,108,104,63,20,123,104,63,212,137,104,63,142,152,104,63,66,167,104,63,240,181,104,63,153,196,104,63,60,211,104,63,217,225,104,63,112,240,104,63,1,255,104,63,140,13,105,63,17,28,105,63,145,42,105,63,11,57,105,63,127,71,105,63,237,85,105,63,85,100,105,63,183,114,105,63,20,129,105,63,106,143,105,63,187,157,105,63,6,172,105,63,75,186,105,63,139,200,105,63,196,214,105,63,248,228,105,63,38,243,105,63,78,1,106,63,112,15,106,63,141,29,106,63,163,43,106,63,180,57,106,63,191,71,106,63,196,85,106,63,196,99,106,63,189,113,106,63,177,127,106,63,159,141,106,63,135,155,106,63,106,169,106,63,70,183,106,63,29,197,106,63,238,210,106,63,186,224,106,63,127,238,106,63,63,252,106,63,249,9,107,63,173,23,107,63,91,37,107,63,4,51,107,63,167,64,107,63,68,78,107,63,219,91,107,63,109,105,107,63,249,118,107,63,127,132,107,63,255,145,107,63,122,159,107,63,238,172,107,63,94,186,107,63,199,199,107,63,42,213,107,63,136,226,107,63,224,239,107,63,51,253,107,63,128,10,108,63,198,23,108,63,8,37,108,63,67,50,108,63,121,63,108,63,169,76,108,63,211,89,108,63,248,102,108,63,23,116,108,63,48,129,108,63,68,142,108,63,82,155,108,63,90,168,108,63,92,181,108,63,89,194,108,63,80,207,108,63,65,220,108,63,45,233,108,63,19,246,108,63,243,2,109,63,206,15,109,63,163,28,109,63,114,41,109,63,60,54,109,63,0,67,109,63,190,79,109,63,119,92,109,63,42,105,109,63,215,117,109,63,127,130,109,63,33,143,109,63,189,155,109,63,84,168,109,63,229,180,109,63,113,193,109,63,247,205,109,63,119,218,109,63,242,230,109,63,103,243,109,63,214,255,109,63,64,12,110,63,164,24,110,63,3,37,110,63,91,49,110,63,175,61,110,63,253,73,110,63,69,86,110,63,135,98,110,63,196,110,110,63,252,122,110,63,45,135,110,63,90,147,110,63,128,159,110,63,161,171,110,63,189,183,110,63,211,195,110,63,227,207,110,63,238,219,110,63,243,231,110,63,243,243,110,63,237,255,110,63,226,11,111,63,209,23,111,63,186,35,111,63,158,47,111,63,125,59,111,63,85,71,111,63,41,83,111,63,247,94,111,63,191,106,111,63,130,118,111,63,63,130,111,63,247,141,111,63,169,153,111,63,86,165,111,63,253,176,111,63,159,188,111,63,59,200,111,63,210,211,111,63,99,223,111,63,239,234,111,63,117,246,111,63,246,1,112,63,114,13,112,63,231,24,112,63,88,36,112,63,195,47,112,63,40,59,112,63,137,70,112,63,227,81,112,63,56,93,112,63,136,104,112,63,210,115,112,63,23,127,112,63,87,138,112,63,145,149,112,63,197,160,112,63,244,171,112,63,30,183,112,63,66,194,112,63,97,205,112,63,123,216,112,63,143,227,112,63,157,238,112,63,167,249,112,63,171,4,113,63,169,15,113,63,162,26,113,63,150,37,113,63,132,48,113,63,109,59,113,63,81,70,113,63,47,81,113,63,8,92,113,63,219,102,113,63,170,113,113,63,114,124,113,63,54,135,113,63,244,145,113,63,173,156,113,63,96,167,113,63,14,178,113,63,183,188,113,63,91,199,113,63,249,209,113,63,146,220,113,63,37,231,113,63,179,241,113,63,60,252,113,63,192,6,114,63,62,17,114,63,183,27,114,63,43,38,114,63,154,48,114,63,3,59,114,63,103,69,114,63,197,79,114,63,31,90,114,63,115,100,114,63,194,110,114,63,11,121,114,63,79,131,114,63,143,141,114,63,200,151,114,63,253,161,114,63,44,172,114,63,87,182,114,63,123,192,114,63,155,202,114,63,182,212,114,63,203,222,114,63,219,232,114,63,230,242,114,63,235,252,114,63,236,6,115,63,231,16,115,63,221,26,115,63,206,36,115,63,186,46,115,63,160,56,115,63,130,66,115,63,94,76,115,63,53,86,115,63,7,96,115,63,212,105,115,63,155,115,115,63,94,125,115,63,27,135,115,63,211,144,115,63,134,154,115,63,52,164,115,63,221,173,115,63,128,183,115,63,31,193,115,63,184,202,115,63,77,212,115,63,220,221,115,63,102,231,115,63,235,240,115,63,107,250,115,63,230,3,116,63,92,13,116,63,204,22,116,63,56,32,116,63,159,41,116,63,0,51,116,63,93,60,116,63,180,69,116,63,6,79,116,63,84,88,116,63,156,97,116,63,223,106,116,63,29,116,116,63,87,125,116,63,139,134,116,63,186,143,116,63,228,152,116,63,9,162,116,63,41,171,116,63,68,180,116,63,91,189,116,63,108,198,116,63,120,207,116,63,127,216,116,63,129,225,116,63,127,234,116,63,119,243,116,63,106,252,116,63,89,5,117,63,66,14,117,63,38,23,117,63,6,32,117,63,225,40,117,63,182,49,117,63,135,58,117,63,83,67,117,63,26,76,117,63,220,84,117,63,153,93,117,63,81,102,117,63,4,111,117,63,179,119,117,63,92,128,117,63,1,137,117,63,160,145,117,63,59,154,117,63,209,162,117,63,98,171,117,63,239,179,117,63,118,188,117,63,249,196,117,63,118,205,117,63,239,213,117,63,99,222,117,63,210,230,117,63,61,239,117,63,162,247,117,63,3,0,118,63,95,8,118,63,182,16,118,63,8,25,118,63,86,33,118,63,159,41,118,63,227,49,118,63,34,58,118,63,92,66,118,63,146,74,118,63,195,82,118,63,239,90,118,63,22,99,118,63,57,107,118,63,86,115,118,63,112,123,118,63,132,131,118,63,148,139,118,63,158,147,118,63,165,155,118,63,166,163,118,63,163,171,118,63,155,179,118,63,142,187,118,63,125,195,118,63,103,203,118,63,76,211,118,63,45,219,118,63,9,227,118,63,224,234,118,63,178,242,118,63,128,250,118,63,74,2,119,63,14,10,119,63,206,17,119,63,137,25,119,63,64,33,119,63,242,40,119,63,160,48,119,63,72,56,119,63,237,63,119,63,140,71,119,63,39,79,119,63,190,86,119,63,79,94,119,63,220,101,119,63,101,109,119,63,233,116,119,63,105,124,119,63,228,131,119,63,90,139,119,63,204,146,119,63,57,154,119,63,162,161,119,63,6,169,119,63,101,176,119,63,192,183,119,63,23,191,119,63,105,198,119,63,182,205,119,63,255,212,119,63,68,220,119,63,132,227,119,63,191,234,119,63,246,241,119,63,41,249,119,63,87,0,120,63,129,7,120,63,166,14,120,63,198,21,120,63,227,28,120,63,250,35,120,63,14,43,120,63,28,50,120,63,39,57,120,63,45,64,120,63,46,71,120,63,44,78,120,63,36,85,120,63,25,92,120,63,9,99,120,63,244,105,120,63,219,112,120,63,190,119,120,63,156,126,120,63,118,133,120,63,76,140,120,63,29,147,120,63,234,153,120,63,179,160,120,63,119,167,120,63,55,174,120,63,242,180,120,63,169,187,120,63,92,194,120,63,11,201,120,63,181,207,120,63,91,214,120,63,252,220,120,63,154,227,120,63,51,234,120,63,199,240,120,63,88,247,120,63,228,253,120,63,108,4,121,63,240,10,121,63,111,17,121,63,234,23,121,63,97,30,121,63,211,36,121,63,66,43,121,63,172,49,121,63,18,56,121,63,116,62,121,63,209,68,121,63,42,75,121,63,127,81,121,63,208,87,121,63,29,94,121,63,101,100,121,63,170,106,121,63,234,112,121,63,38,119,121,63,93,125,121,63,145,131,121,63,193,137,121,63,236,143,121,63,19,150,121,63,54,156,121,63,85,162,121,63,112,168,121,63,134,174,121,63,153,180,121,63,167,186,121,63,178,192,121,63,184,198,121,63,186,204,121,63,184,210,121,63,178,216,121,63,168,222,121,63,154,228,121,63,135,234,121,63,113,240,121,63,87,246,121,63,56,252,121,63,22,2,122,63,239,7,122,63,197,13,122,63,150,19,122,63,100,25,122,63,45,31,122,63,243,36,122,63,180,42,122,63,113,48,122,63,43,54,122,63,224,59,122,63,146,65,122,63,63,71,122,63,233,76,122,63,142,82,122,63,48,88,122,63,206,93,122,63,103,99,122,63,253,104,122,63,143,110,122,63,29,116,122,63,167,121,122,63,45,127,122,63,175,132,122,63,45,138,122,63,168,143,122,63,30,149,122,63,145,154,122,63,255,159,122,63,106,165,122,63,209,170,122,63,52,176,122,63,147,181,122,63,239,186,122,63,70,192,122,63,154,197,122,63,234,202,122,63,54,208,122,63,126,213,122,63,194,218,122,63,3,224,122,63,64,229,122,63,121,234,122,63,174,239,122,63,223,244,122,63,13,250,122,63,55,255,122,63,93,4,123,63,127,9,123,63,157,14,123,63,184,19,123,63,207,24,123,63,227,29,123,63,242,34,123,63,254,39,123,63,6,45,123,63,10,50,123,63,11,55,123,63,8,60,123,63,1,65,123,63,247,69,123,63,233,74,123,63,215,79,123,63,193,84,123,63,168,89,123,63,139,94,123,63,107,99,123,63,71,104,123,63,31,109,123,63,243,113,123,63,196,118,123,63,146,123,123,63,91,128,123,63,33,133,123,63,228,137,123,63,163,142,123,63,94,147,123,63,22,152,123,63,202,156,123,63,122,161,123,63,39,166,123,63,208,170,123,63,118,175,123,63,24,180,123,63,183,184,123,63,82,189,123,63,233,193,123,63,125,198,123,63,14,203,123,63,155,207,123,63,36,212,123,63,170,216,123,63,45,221,123,63,172,225,123,63,39,230,123,63,159,234,123,63,19,239,123,63,132,243,123,63,242,247,123,63,92,252,123,63,195,0,124,63,38,5,124,63,133,9,124,63,226,13,124,63,58,18,124,63,144,22,124,63,226,26,124,63,48,31,124,63,123,35,124,63,195,39,124,63,7,44,124,63,72,48,124,63,134,52,124,63,192,56,124,63,247,60,124,63,42,65,124,63,90,69,124,63,135,73,124,63,176,77,124,63,214,81,124,63,249,85,124,63,24,90,124,63,52,94,124,63,77,98,124,63,98,102,124,63,116,106,124,63,131,110,124,63,142,114,124,63,150,118,124,63,155,122,124,63,157,126,124,63,155,130,124,63,150,134,124,63,142,138,124,63,130,142,124,63,116,146,124,63,98,150,124,63,77,154,124,63,52,158,124,63,24,162,124,63,249,165,124,63,215,169,124,63,178,173,124,63,137,177,124,63,94,181,124,63,47,185,124,63,253,188,124,63,199,192,124,63,143,196,124,63,83,200,124,63,20,204,124,63,211,207,124,63,141,211,124,63,69,215,124,63,250,218,124,63,171,222,124,63,90,226,124,63,5,230,124,63,173,233,124,63,82,237,124,63,244,240,124,63,147,244,124,63,46,248,124,63,199,251,124,63,93,255,124,63,239,2,125,63,127,6,125,63,11,10,125,63,148,13,125,63,27,17,125,63,158,20,125,63,30,24,125,63,155,27,125,63,21,31,125,63,140,34,125,63,0,38,125,63,114,41,125,63,224,44,125,63,75,48,125,63,179,51,125,63,24,55,125,63,122,58,125,63,217,61,125,63,54,65,125,63,143,68,125,63,229,71,125,63,56,75,125,63,137,78,125,63,214,81,125,63,33,85,125,63,104,88,125,63,173,91,125,63,239,94,125,63,46,98,125,63,106,101,125,63,163,104,125,63,217,107,125,63,12,111,125,63,61,114,125,63,106,117,125,63,149,120,125,63,189,123,125,63,226,126,125,63,4,130,125,63,36,133,125,63,64,136,125,63,90,139,125,63,112,142,125,63,133,145,125,63,150,148,125,63,164,151,125,63,176,154,125,63,185,157,125,63,191,160,125,63,194,163,125,63,194,166,125,63,192,169,125,63,187,172,125,63,179,175,125,63,168,178,125,63,155,181,125,63,139,184,125,63,120,187,125,63,99,190,125,63,74,193,125,63,48,196,125,63,18,199,125,63,241,201,125,63,206,204,125,63,169,207,125,63,128,210,125,63,85,213,125,63,39,216,125,63,247,218,125,63,196,221,125,63,142,224,125,63,85,227,125,63,26,230,125,63,220,232,125,63,156,235,125,63,89,238,125,63,19,241,125,63,203,243,125,63,128,246,125,63,51,249,125,63,227,251,125,63,144,254,125,63,59,1,126,63,227,3,126,63,137,6,126,63,44,9,126,63,204,11,126,63,106,14,126,63,6,17,126,63,158,19,126,63,53,22,126,63,200,24,126,63,90,27,126,63,232,29,126,63,116,32,126,63,254,34,126,63,133,37,126,63,10,40,126,63,140,42,126,63,12,45,126,63,137,47,126,63,4,50,126,63,124,52,126,63,242,54,126,63,101,57,126,63,214,59,126,63,68,62,126,63,176,64,126,63,26,67,126,63,129,69,126,63,230,71,126,63,72,74,126,63,168,76,126,63,5,79,126,63,96,81,126,63,185,83,126,63,15,86,126,63,99,88,126,63,181,90,126,63,4,93,126,63,81,95,126,63,155,97,126,63,227,99,126,63,41,102,126,63,108,104,126,63,173,106,126,63,236,108,126,63,40,111,126,63,98,113,126,63,154,115,126,63,208,117,126,63,3,120,126,63,51,122,126,63,98,124,126,63,142,126,126,63,184,128,126,63,224,130,126,63,5,133,126,63,40,135,126,63,73,137,126,63,104,139,126,63,132,141,126,63,159,143,126,63,183,145,126,63,204,147,126,63,224,149,126,63,241,151,126,63,0,154,126,63,13,156,126,63,24,158,126,63,32,160,126,63,38,162,126,63,42,164,126,63,44,166,126,63,44,168,126,63,41,170,126,63,37,172,126,63,30,174,126,63,21,176,126,63,10,178,126,63,253,179,126,63,238,181,126,63,220,183,126,63,201,185,126,63,179,187,126,63,155,189,126,63,129,191,126,63,101,193,126,63,71,195,126,63,39,197,126,63,5,199,126,63,224,200,126,63,186,202,126,63,145,204,126,63,103,206,126,63,58,208,126,63,12,210,126,63,219,211,126,63,168,213,126,63,115,215,126,63,61,217,126,63,4,219,126,63,201,220,126,63,140,222,126,63,77,224,126,63,12,226,126,63,202,227,126,63,133,229,126,63,62,231,126,63,245,232,126,63,170,234,126,63,94,236,126,63,15,238,126,63,190,239,126,63,108,241,126,63,23,243,126,63,193,244,126,63,104,246,126,63,14,248,126,63,178,249,126,63,84,251,126,63,243,252,126,63,145,254,126,63,46,0,127,63,200,1,127,63,96,3,127,63,247,4,127,63,139,6,127,63,30,8,127,63,175,9,127,63,62,11,127,63,203,12,127,63,86,14,127,63,223,15,127,63,103,17,127,63,237,18,127,63,112,20,127,63,242,21,127,63,115,23,127,63,241,24,127,63,110,26,127,63,233,27,127,63,98,29,127,63,217,30,127,63,78,32,127,63,194,33,127,63,52,35,127,63,164,36,127,63,18,38,127,63,127,39,127,63,234,40,127,63,83,42,127,63,186,43,127,63,32,45,127,63,131,46,127,63,230,47,127,63,70,49,127,63,165,50,127,63,2,52,127,63,93,53,127,63,182,54,127,63,14,56,127,63,100,57,127,63,185,58,127,63,12,60,127,63,93,61,127,63,172,62,127,63,250,63,127,63,70,65,127,63,145,66,127,63,217,67,127,63,33,69,127,63,102,70,127,63,170,71,127,63,236,72,127,63,45,74,127,63,108,75,127,63,169,76,127,63,229,77,127,63,31,79,127,63,88,80,127,63,143,81,127,63,196,82,127,63,248,83,127,63,42,85,127,63,91,86,127,63,138,87,127,63,184,88,127,63,228,89,127,63,14,91,127,63,55,92,127,63,94,93,127,63,132,94,127,63,169,95,127,63,203,96,127,63,237,97,127,63,12,99,127,63,42,100,127,63,71,101,127,63,98,102,127,63,124,103,127,63,148,104,127,63,171,105,127,63,192,106,127,63,212,107,127,63,230,108,127,63,247,109,127,63,6,111,127,63,20,112,127,63,33,113,127,63,44,114,127,63,53,115,127,63,61,116,127,63,68,117,127,63,73,118,127,63,77,119,127,63,79,120,127,63,80,121,127,63,80,122,127,63,78,123,127,63,75,124,127,63,70,125,127,63,64,126,127,63,57,127,127,63,48,128,127,63,38,129,127,63,27,130,127,63,14,131,127,63,0,132,127,63,240,132,127,63,223,133,127,63,205,134,127,63,185,135,127,63,164,136,127,63,142,137,127,63,118,138,127,63,93,139,127,63,67,140,127,63,40,141,127,63,11,142,127,63,237,142,127,63,205,143,127,63,173,144,127,63,139,145,127,63,103,146,127,63,67,147,127,63,29,148,127,63,246,148,127,63,205,149,127,63,164,150,127,63,121,151,127,63,77,152,127,63,31,153,127,63,241,153,127,63,193,154,127,63,144,155,127,63,93,156,127,63,42,157,127,63,245,157,127,63,191,158,127,63,136,159,127,63,79,160,127,63,22,161,127,63,219,161,127,63,159,162,127,63,98,163,127,63,36,164,127,63,228,164,127,63,163,165,127,63,98,166,127,63,31,167,127,63,219,167,127,63,149,168,127,63,79,169,127,63,7,170,127,63,190,170,127,63,117,171,127,63,42,172,127,63,221,172,127,63,144,173,127,63,66,174,127,63,242,174,127,63,162,175,127,63,80,176,127,63,253,176,127,63,169,177,127,63,85,178,127,63,254,178,127,63,167,179,127,63,79,180,127,63,246,180,127,63,156,181,127,63,64,182,127,63,228,182,127,63,134,183,127,63,40,184,127,63,200,184,127,63,103,185,127,63,6,186,127,63,163,186,127,63,63,187,127,63,219,187,127,63,117,188,127,63,14,189,127,63,166,189,127,63,61,190,127,63,212,190,127,63,105,191,127,63,253,191,127,63,144,192,127,63,34,193,127,63,180,193,127,63,68,194,127,63,211,194,127,63,98,195,127,63,239,195,127,63,123,196,127,63,7,197,127,63,145,197,127,63,27,198,127,63,163,198,127,63,43,199,127,63,178,199,127,63,56,200,127,63,189,200,127,63,65,201,127,63,196,201,127,63,70,202,127,63,199,202,127,63,71,203,127,63,199,203,127,63,69,204,127,63,195,204,127,63,64,205,127,63,187,205,127,63,54,206,127,63,177,206,127,63,42,207,127,63,162,207,127,63,26,208,127,63,144,208,127,63,6,209,127,63,123,209,127,63,239,209,127,63,98,210,127,63,213,210,127,63,70,211,127,63,183,211,127,63,39,212,127,63,150,212,127,63,4,213,127,63,114,213,127,63,222,213,127,63,74,214,127,63,181,214,127,63,32,215,127,63,137,215,127,63,242,215,127,63,89,216,127,63,192,216,127,63,39,217,127,63,140,217,127,63,241,217,127,63,85,218,127,63,184,218,127,63,27,219,127,63,124,219,127,63,221,219,127,63,61,220,127,63,157,220,127,63,251,220,127,63,89,221,127,63,183,221,127,63,19,222,127,63,111,222,127,63,202,222,127,63,36,223,127,63,126,223,127,63,215,223,127,63,47,224,127,63,134,224,127,63,221,224,127,63,51,225,127,63,137,225,127,63,221,225,127,63,49,226,127,63,133,226,127,63,215,226,127,63,41,227,127,63,122,227,127,63,203,227,127,63,27,228,127,63,106,228,127,63,185,228,127,63,7,229,127,63,84,229,127,63,161,229,127,63,237,229,127,63,56,230,127,63,131,230,127,63,205,230,127,63,23,231,127,63,96,231,127,63,168,231,127,63,239,231,127,63,54,232,127,63,125,232,127,63,195,232,127,63,8,233,127,63,76,233,127,63,144,233,127,63,212,233,127,63,23,234,127,63,89,234,127,63,154,234,127,63,219,234,127,63,28,235,127,63,92,235,127,63,155,235,127,63,218,235,127,63,24,236,127,63,86,236,127,63,147,236,127,63,207,236,127,63,11,237,127,63,71,237,127,63,130,237,127,63,188,237,127,63,246,237,127,63,47,238,127,63,104,238,127,63,160,238,127,63,216,238,127,63,15,239,127,63,69,239,127,63,123,239,127,63,177,239,127,63,230,239,127,63,27,240,127,63,79,240,127,63,130,240,127,63,182,240,127,63,232,240,127,63,26,241,127,63,76,241,127,63,125,241,127,63,174,241,127,63,222,241,127,63,14,242,127,63,61,242,127,63,108,242,127,63,154,242,127,63,200,242,127,63,245,242,127,63,34,243,127,63,79,243,127,63,123,243,127,63,166,243,127,63,209,243,127,63,252,243,127,63,38,244,127,63,80,244,127,63,121,244,127,63,162,244,127,63,203,244,127,63,243,244,127,63,27,245,127,63,66,245,127,63,105,245,127,63,143,245,127,63,181,245,127,63,219,245,127,63,0,246,127,63,37,246,127,63,73,246,127,63,109,246,127,63,145,246,127,63,180,246,127,63,215,246,127,63,250,246,127,63,28,247,127,63,62,247,127,63,95,247,127,63,128,247,127,63,160,247,127,63,193,247,127,63,225,247,127,63,0,248,127,63,31,248,127,63,62,248,127,63,93,248,127,63,123,248,127,63,152,248,127,63,182,248,127,63,211,248,127,63,240,248,127,63,12,249,127,63,40,249,127,63,68,249,127,63,95,249,127,63,122,249,127,63,149,249,127,63,175,249,127,63,202,249,127,63,227,249,127,63,253,249,127,63,22,250,127,63,47,250,127,63,71,250,127,63,96,250,127,63,120,250,127,63,143,250,127,63,166,250,127,63,190,250,127,63,212,250,127,63,235,250,127,63,1,251,127,63,23,251,127,63,44,251,127,63,66,251,127,63,87,251,127,63,108,251,127,63,128,251,127,63,148,251,127,63,168,251,127,63,188,251,127,63,208,251,127,63,227,251,127,63,246,251,127,63,8,252,127,63,27,252,127,63,45,252,127,63,63,252,127,63,81,252,127,63,98,252,127,63,115,252,127,63,132,252,127,63,149,252,127,63,165,252,127,63,182,252,127,63,198,252,127,63,213,252,127,63,229,252,127,63,244,252,127,63,3,253,127,63,18,253,127,63,33,253,127,63,47,253,127,63,62,253,127,63,76,253,127,63,89,253,127,63,103,253,127,63,116,253,127,63,130,253,127,63,143,253,127,63,155,253,127,63,168,253,127,63,181,253,127,63,193,253,127,63,205,253,127,63,217,253,127,63,228,253,127,63,240,253,127,63,251,253,127,63,6,254,127,63,17,254,127,63,28,254,127,63,38,254,127,63,49,254,127,63,59,254,127,63,69,254,127,63,79,254,127,63,89,254,127,63,98,254,127,63,108,254,127,63,117,254,127,63,126,254,127,63,135,254,127,63,144,254,127,63,152,254,127,63,161,254,127,63,169,254,127,63,177,254,127,63,185,254,127,63,193,254,127,63,201,254,127,63,208,254,127,63,216,254,127,63,223,254,127,63,230,254,127,63,237,254,127,63,244,254,127,63,251,254,127,63,2,255,127,63,8,255,127,63,14,255,127,63,21,255,127,63,27,255,127,63,33,255,127,63,39,255,127,63,45,255,127,63,50,255,127,63,56,255,127,63,61,255,127,63,67,255,127,63,72,255,127,63,77,255,127,63,82,255,127,63,87,255,127,63,92,255,127,63,96,255,127,63,101,255,127,63,105,255,127,63,110,255,127,63,114,255,127,63,118,255,127,63,122,255,127,63,126,255,127,63,130,255,127,63,134,255,127,63,138,255,127,63,142,255,127,63,145,255,127,63,149,255,127,63,152,255,127,63,155,255,127,63,159,255,127,63,162,255,127,63,165,255,127,63,168,255,127,63,171,255,127,63,174,255,127,63,176,255,127,63,179,255,127,63,182,255,127,63,184,255,127,63,187,255,127,63,189,255,127,63,192,255,127,63,194,255,127,63,196,255,127,63,198,255,127,63,201,255,127,63,203,255,127,63,205,255,127,63,207,255,127,63,209,255,127,63,210,255,127,63,212,255,127,63,214,255,127,63,216,255,127,63,217,255,127,63,219,255,127,63,220,255,127,63,222,255,127,63,223,255,127,63,225,255,127,63,226,255,127,63,227,255,127,63,229,255,127,63,230,255,127,63,231,255,127,63,232,255,127,63,233,255,127,63,234,255,127,63,235,255,127,63,236,255,127,63,237,255,127,63,238,255,127,63,239,255,127,63,240,255,127,63,241,255,127,63,241,255,127,63,242,255,127,63,243,255,127,63,244,255,127,63,244,255,127,63,245,255,127,63,246,255,127,63,246,255,127,63,247,255,127,63,247,255,127,63,248,255,127,63,248,255,127,63,249,255,127,63,249,255,127,63,250,255,127,63,250,255,127,63,250,255,127,63,251,255,127,63,251,255,127,63,251,255,127,63,252,255,127,63,252,255,127,63,252,255,127,63,253,255,127,63,253,255,127,63,253,255,127,63,253,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,86,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,27,0,0,0,56,88,8,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,110,3,0,88,105,112,104,46,79,114,103,32,108,105,98,86,111,114,98,105,115,32,73,32,50,48,49,53,48,49,48,53,32,40,226,155,132,226,155,132,226,155,132,226,155,132,41,0,2,5,4,6,6,8,8,8,8,8,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,8,9,9,9,9,9,9,9,9,9,7,7,7,8,8,9,9,9,9,9,9,9,9,9,10,10,9,7,7,7,8,8,9,9,9,9,9,9,9,9,9,9,10,10,8,8,8,9,9,9,9,10,10,10,9,10,10,10,10,10,10,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,9,9,7,7,8,8,10,10,11,11,4,7,7,9,9,10,10,8,8,10,10,10,11,10,11,4,7,7,9,9,10,10,8,8,10,9,11,11,11,11,7,9,9,12,12,11,12,10,10,11,10,12,11,11,11,7,9,9,11,11,13,12,9,9,11,10,11,11,12,11,9,10,10,12,12,14,14,10,10,11,12,12,11,11,11,9,10,11,11,13,14,13,10,11,11,11,12,11,12,12,7,8,8,10,9,11,10,11,12,12,11,12,14,12,13,7,8,8,9,10,10,11,12,12,12,11,12,12,12,13,9,9,9,11,11,13,12,12,12,12,11,12,12,13,12,8,10,10,11,10,11,12,12,12,12,12,12,14,12,12,9,11,11,11,12,12,12,12,13,13,12,12,13,13,12,10,11,11,12,11,12,12,12,11,12,13,12,12,12,13,11,11,12,12,12,13,12,12,11,12,13,13,12,12,13,12,11,12,12,13,13,12,13,12,13,13,13,13,14,13,1,4,4,11,11,11,11,11,11,11,11,11,11,11,11,3,11,8,11,11,11,11,11,11,11,11,11,11,11,11,3,9,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,5,5,6,6,7,7,7,7,8,8,5,6,6,7,7,7,7,8,8,8,8,5,6,6,7,7,7,7,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,7,8,8,8,8,8,8,9,8,9,9,8,8,8,8,8,8,8,9,9,9,9,8,8,8,8,8,8,8,9,9,9,9,1,4,4,6,6,8,8,10,10,11,11,4,6,6,7,7,9,9,11,11,13,12,4,6,6,7,7,9,9,11,11,12,12,6,7,7,9,9,11,11,12,12,13,13,6,7,7,9,9,11,11,12,12,13,13,8,9,9,11,11,12,12,13,13,14,14,8,9,9,11,11,12,12,13,13,14,14,9,11,11,12,12,13,13,14,14,15,15,9,11,11,12,12,13,13,14,14,15,14,11,12,12,13,13,14,14,15,15,16,16,11,12,12,13,13,14,14,15,15,15,15,2,4,4,6,6,7,7,8,8,8,8,4,5,5,7,7,8,8,9,9,9,9,4,5,5,7,7,8,8,9,9,9,9,6,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,1,4,4,5,7,7,5,7,7,5,9,9,8,10,10,8,10,10,5,9,9,7,10,10,8,10,10,4,10,10,9,12,12,9,11,11,7,12,11,10,11,13,10,13,13,7,12,12,10,13,12,10,13,13,4,10,10,9,12,12,9,12,12,7,12,12,10,13,13,10,12,13,7,11,12,10,13,13,10,13,11,3,4,4,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,4,4,4,6,6,7,7,9,9,6,6,6,7,7,8,8,9,9,6,6,6,7,7,8,8,9,9,7,7,7,8,8,8,9,10,10,7,7,7,8,8,9,8,10,10,9,9,9,9,9,10,10,10,10,9,9,9,9,9,10,10,10,10,1,4,4,7,7,7,7,9,9,4,6,5,8,7,8,8,10,10,4,6,6,8,8,8,8,10,10,7,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,8,8,8,9,9,10,10,12,11,8,8,8,9,9,10,10,11,11,9,10,10,11,11,11,11,13,12,9,10,10,11,11,12,12,12,13,4,5,5,9,9,6,7,7,9,9,6,7,7,9,9,9,9,9,11,11,9,9,9,11,11,6,7,7,9,9,7,7,8,9,10,7,7,8,9,10,9,9,10,10,11,9,9,10,10,12,6,7,7,9,9,7,8,7,10,9,7,8,7,10,9,9,10,9,12,11,10,10,9,12,10,9,10,10,12,11,9,10,10,12,11,9,10,10,12,12,11,11,12,12,13,11,11,12,12,13,9,9,10,12,11,9,10,10,12,12,10,10,10,12,12,11,12,11,13,12,11,12,11,13,12,6,7,7,9,9,7,8,8,10,10,7,8,7,10,9,10,10,10,12,12,10,10,10,12,11,7,8,7,10,10,7,7,9,10,11,8,9,9,11,10,10,10,11,10,12,10,10,11,12,12,7,8,8,10,10,7,9,8,11,10,8,8,9,11,11,10,11,10,12,11,10,11,11,12,12,9,10,10,12,12,9,10,10,12,12,10,11,11,13,12,11,10,12,10,14,12,12,12,13,14,9,10,10,12,12,9,11,10,12,12,10,11,11,12,12,11,12,11,14,12,12,12,12,14,14,5,7,7,9,9,7,7,7,9,10,7,8,8,10,10,10,10,10,11,11,10,10,10,12,12,7,8,8,10,10,8,9,8,11,10,7,8,9,10,11,10,10,10,11,12,10,10,11,11,13,6,7,8,10,10,8,9,9,10,10,7,9,7,11,10,10,11,10,12,12,10,11,10,12,10,9,10,10,12,12,10,11,11,13,12,9,10,10,12,12,12,12,12,14,13,11,11,12,11,14,9,10,10,11,12,10,11,11,12,13,9,10,10,12,12,12,12,12,14,13,11,12,10,14,11,9,9,10,11,12,9,10,10,12,12,9,10,10,12,12,12,12,12,14,14,11,12,12,13,12,9,10,9,12,12,9,10,11,12,13,10,11,10,13,11,12,12,13,13,14,12,12,12,13,13,9,10,10,12,12,10,11,10,13,12,10,10,11,12,13,12,13,12,14,13,12,12,12,13,14,11,12,11,14,13,10,10,11,13,13,12,12,12,14,13,12,10,14,10,15,13,14,14,14,14,11,11,12,13,14,10,12,11,13,13,12,12,12,13,15,12,13,11,15,12,13,13,14,14,14,9,10,9,12,12,9,10,10,12,12,10,10,10,12,12,11,11,12,12,13,12,12,12,14,14,9,10,10,12,12,10,11,10,13,12,10,10,11,12,13,12,12,12,14,13,12,12,13,13,14,9,10,10,12,13,10,10,11,11,12,9,11,10,13,12,12,12,12,13,14,12,13,12,14,13,11,12,11,13,13,12,13,12,14,13,10,11,12,13,13,13,13,13,14,15,12,11,14,12,14,11,11,12,12,13,12,12,12,13,14,10,12,10,14,13,13,13,13,14,15,12,14,11,15,10,1,5,5,7,7,6,7,7,9,9,6,7,7,9,9,8,10,9,11,11,9,9,9,11,11,6,8,8,10,10,8,10,10,11,11,8,9,10,11,11,10,11,11,12,12,10,11,11,12,13,6,8,8,10,10,8,10,9,11,11,8,10,9,11,11,10,11,11,12,12,10,11,11,12,12,9,11,11,14,13,10,12,11,14,14,10,12,11,14,13,12,13,13,15,14,12,13,13,15,14,8,11,11,13,14,10,11,12,13,15,10,11,12,14,14,12,13,13,14,15,12,13,13,14,15,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,13,11,12,12,13,14,8,10,10,12,12,9,11,12,13,14,10,12,12,13,13,12,12,13,14,14,11,13,13,15,15,7,10,10,12,12,9,12,11,14,12,10,11,12,13,14,12,13,12,14,14,12,13,13,15,16,10,12,12,15,14,11,12,13,15,15,11,13,13,15,16,14,14,15,15,16,13,14,15,17,15,9,12,12,14,15,11,13,12,15,15,11,13,13,15,15,13,14,13,15,14,13,14,14,17,0,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,7,10,10,12,12,10,12,12,13,13,9,11,12,12,13,11,12,13,15,15,11,12,13,14,15,8,10,10,12,12,10,12,11,13,13,10,12,11,13,13,11,13,13,15,14,12,13,12,15,13,9,12,12,14,14,11,13,13,16,15,11,12,13,16,15,13,14,15,16,16,13,13,15,15,16,10,12,12,15,14,11,13,13,14,16,11,13,13,15,16,13,15,15,16,17,13,15,14,16,15,8,11,11,14,15,10,12,12,15,15,10,12,12,15,16,14,15,15,16,17,13,14,14,16,16,9,12,12,15,15,11,13,14,15,17,11,13,13,15,16,14,15,16,19,17,13,15,15,0,17,9,12,12,15,15,11,14,13,16,15,11,13,13,15,16,15,15,15,18,17,13,15,15,17,17,11,15,14,18,16,12,14,15,17,17,12,15,15,18,18,15,15,16,15,19,14,16,16,0,0,11,14,14,16,17,12,15,14,18,17,12,15,15,18,18,15,17,15,18,16,14,16,16,18,18,7,11,11,14,14,10,12,12,15,15,10,12,13,15,15,13,14,15,16,16,14,15,15,18,18,9,12,12,15,15,11,13,13,16,15,11,12,13,16,16,14,15,15,17,16,15,16,16,17,17,9,12,12,15,15,11,13,13,15,17,11,14,13,16,15,13,15,15,17,17,15,15,15,18,17,11,14,14,17,15,12,14,15,17,18,13,13,15,17,17,14,16,16,19,18,16,15,17,17,0,11,14,14,17,17,12,15,15,18,0,12,15,14,18,16,14,17,17,19,0,16,18,15,0,16,3,4,5,5,6,6,5,6,6,5,7,6,6,7,8,6,7,8,5,6,6,6,8,7,6,8,7,5,6,6,7,8,8,6,7,7,6,8,7,7,7,9,8,9,9,6,7,8,7,9,7,8,9,9,5,6,6,6,7,7,7,8,8,6,8,7,8,9,9,7,7,9,6,7,8,8,9,9,7,9,7,1,4,4,5,7,7,5,7,7,5,8,8,7,9,10,7,9,9,5,8,8,7,10,9,7,9,9,5,8,8,8,10,10,8,10,10,7,10,10,9,10,12,10,12,12,7,10,10,9,12,11,10,12,12,5,8,8,8,10,10,8,10,10,7,10,10,10], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+217460);\n/* memory initializer */ allocate([12,12,9,11,12,7,10,10,10,12,12,9,12,10,4,7,13,9,15,9,16,8,10,13,7,5,8,6,9,7,10,7,10,11,11,6,7,8,8,9,9,9,12,16,8,5,8,6,8,6,9,7,10,12,11,7,7,7,6,7,7,7,11,15,7,5,8,6,7,5,7,6,9,13,13,9,9,8,6,6,5,5,9,14,8,6,8,6,6,4,5,3,5,13,9,9,11,8,10,7,8,4,5,12,11,16,17,15,17,12,13,8,8,15,1,6,5,7,7,9,9,9,9,10,12,12,10,11,11,10,11,11,11,10,11,6,8,8,9,9,10,10,9,10,11,11,10,11,11,11,11,10,11,11,11,11,6,7,8,9,9,9,10,11,10,11,12,11,10,11,11,11,11,11,11,12,10,8,9,9,10,9,10,10,9,10,10,10,10,10,9,10,10,10,10,9,10,10,9,9,9,9,10,10,9,9,10,10,11,10,9,12,10,11,10,9,10,10,10,8,9,9,10,9,10,9,9,10,10,9,10,9,11,10,10,10,10,10,9,10,8,8,9,9,10,9,11,9,8,9,9,10,11,10,10,10,11,12,9,9,11,8,9,8,11,10,11,10,10,9,11,10,10,10,10,10,10,10,11,11,11,11,8,9,9,9,10,10,10,11,11,12,11,12,11,10,10,10,12,11,11,11,10,8,10,9,11,10,10,11,12,10,11,12,11,11,12,11,12,12,10,11,11,10,9,9,10,11,12,10,10,10,11,10,11,11,10,12,12,10,11,10,11,12,10,9,10,10,11,10,11,11,11,11,11,12,11,11,11,9,11,10,11,10,11,10,9,9,10,11,11,11,10,10,11,12,12,11,12,11,11,11,12,12,12,12,11,9,11,11,12,10,11,11,11,11,11,11,12,11,11,12,11,11,11,10,11,11,9,11,10,11,11,11,10,10,10,11,11,11,12,10,11,10,11,11,11,11,12,9,11,10,11,11,10,10,11,11,9,11,11,12,10,10,10,10,10,11,11,10,9,10,11,11,12,11,10,10,12,11,11,12,11,12,11,11,10,10,11,11,10,12,11,10,11,10,11,10,10,10,11,11,10,10,11,11,11,11,10,10,10,12,11,11,11,11,10,9,10,11,11,11,12,11,11,11,12,10,11,11,11,9,10,11,11,11,11,11,11,10,10,11,11,12,11,10,11,12,11,10,10,11,9,10,11,11,11,11,11,10,11,11,10,12,11,11,11,12,11,11,11,10,10,11,11,1,5,5,5,5,10,10,11,11,11,11,11,11,11,11,5,7,6,8,8,9,10,11,11,11,11,11,11,11,11,6,6,7,9,7,11,10,11,11,11,11,11,11,11,11,5,6,6,11,8,11,11,11,11,11,11,11,11,11,11,5,6,6,9,10,11,10,11,11,11,11,11,11,11,11,7,10,10,11,11,11,11,11,11,11,11,11,11,11,11,7,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,6,6,4,6,5,7,7,4,5,6,7,7,6,7,7,7,7,6,7,7,7,7,1,4,4,7,7,9,9,11,11,12,12,16,16,3,6,6,9,9,11,11,12,12,13,14,18,16,3,6,7,9,9,11,11,13,12,14,14,17,16,7,9,9,11,11,12,12,14,14,14,14,17,16,7,9,9,11,11,13,12,13,13,14,14,17,0,9,11,11,12,13,14,14,14,13,15,14,17,17,9,11,11,12,12,14,14,13,14,14,15,0,0,11,12,12,15,14,15,14,15,14,15,16,17,0,11,12,13,13,13,14,14,15,14,15,15,0,0,12,14,14,15,15,14,16,15,15,17,16,0,18,13,14,14,15,14,15,14,15,16,17,16,0,0,17,17,18,0,16,18,16,0,0,0,17,0,0,16,0,0,16,16,0,15,0,17,0,0,0,0,1,4,4,7,7,7,7,9,9,4,6,6,8,7,8,8,10,10,4,6,6,8,8,8,8,10,10,6,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,7,8,8,9,9,10,10,12,11,7,8,8,9,9,10,10,11,11,9,10,10,11,11,11,12,12,12,9,10,10,11,11,12,12,12,12,3,5,5,8,8,5,6,7,9,9,6,7,6,9,9,9,9,9,10,11,9,9,9,11,10,6,7,7,10,10,7,7,8,10,10,7,8,8,10,10,10,10,10,10,11,9,10,10,11,12,6,7,7,10,10,7,8,8,10,10,7,8,7,10,10,9,10,10,12,11,10,10,10,11,10,9,10,10,12,11,10,10,10,13,11,9,10,10,12,12,11,11,12,12,13,11,11,11,12,13,9,10,10,12,12,10,10,11,12,12,10,10,11,12,12,11,11,11,13,13,11,12,12,13,13,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,11,11,12,12,10,11,10,12,12,7,8,8,11,11,7,8,9,10,11,8,9,9,11,11,11,10,11,10,12,10,11,11,12,13,7,8,8,10,11,8,9,8,12,10,8,9,9,11,12,10,11,10,13,11,10,11,11,13,12,9,11,10,13,12,10,10,11,12,12,10,11,11,13,13,12,10,13,11,14,11,12,12,15,13,9,11,11,13,13,10,11,11,13,12,10,11,11,12,14,12,13,11,14,12,12,12,12,14,14,5,7,7,10,10,7,8,8,10,10,7,8,8,11,10,10,11,11,12,12,10,11,10,12,12,7,8,8,10,11,8,9,9,12,11,8,8,9,10,11,10,11,11,12,13,11,10,11,11,13,6,8,8,10,11,8,9,9,11,11,7,9,7,11,10,10,11,11,12,12,10,11,10,13,10,9,11,10,13,12,10,12,11,13,13,10,10,11,12,13,11,12,13,15,14,11,11,13,12,13,9,10,11,12,13,10,11,11,12,13,10,11,10,13,12,12,13,13,13,14,12,12,11,14,11,8,10,10,12,13,10,11,11,13,13,10,11,10,13,13,12,13,14,15,14,12,12,12,14,13,9,10,10,13,12,10,10,12,13,13,10,11,11,15,12,12,12,13,15,14,12,13,13,15,13,9,10,11,12,13,10,12,10,13,12,10,11,11,12,13,12,14,12,15,13,12,12,12,15,14,11,12,11,14,13,11,11,12,14,14,12,13,13,14,13,13,11,15,11,15,14,14,14,16,15,11,12,12,13,14,11,13,11,14,14,12,12,13,14,15,12,14,12,15,12,13,15,14,16,15,8,10,10,12,12,10,10,10,12,13,10,11,11,13,13,12,12,12,13,14,13,13,13,15,15,9,10,10,12,12,10,11,11,13,12,10,10,11,13,13,12,12,12,14,14,12,12,13,15,14,9,10,10,13,12,10,10,12,12,13,10,11,10,13,13,12,13,13,14,14,12,13,12,14,13,11,12,12,14,13,12,13,12,14,14,10,12,12,14,14,14,14,14,16,14,13,12,14,12,15,10,12,12,14,15,12,13,13,14,16,11,12,11,15,14,13,14,14,14,15,13,14,11,14,12,1,5,5,7,7,6,7,7,9,9,6,7,7,9,9,8,10,9,11,11,8,9,9,11,11,6,8,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,12,12,10,11,11,12,13,6,8,8,10,10,8,10,10,11,11,8,10,10,11,11,9,10,11,12,12,10,11,11,12,12,8,11,11,14,13,10,12,11,15,13,10,12,11,14,14,12,13,12,16,14,12,14,12,16,15,8,11,11,13,14,10,11,12,13,15,10,11,12,13,15,11,12,13,14,15,12,12,14,14,16,5,8,8,11,11,9,11,11,12,12,8,10,11,12,12,11,12,12,15,14,11,12,12,14,14,7,11,10,13,12,10,11,12,13,14,10,12,12,14,13,12,13,13,14,15,12,13,13,15,15,7,10,11,12,13,10,12,11,14,13,10,12,13,13,15,12,13,12,14,14,11,13,13,15,16,9,12,12,15,14,11,13,13,15,16,11,13,13,16,16,13,14,15,15,15,12,14,15,17,16,9,12,12,14,15,11,13,13,15,16,11,13,13,16,18,13,14,14,17,16,13,15,15,17,18,5,8,9,11,11,8,11,11,12,12,8,10,11,12,12,11,12,12,14,14,11,12,12,14,15,7,11,10,12,13,10,12,12,14,13,10,11,12,13,14,11,13,13,15,14,12,13,13,14,15,7,10,11,13,13,10,12,12,13,14,10,12,12,13,13,11,13,13,16,16,12,13,13,15,14,9,12,12,16,15,10,13,13,15,15,11,13,13,17,15,12,15,15,18,17,13,14,14,15,16,9,12,12,15,15,11,13,13,15,16,11,13,13,15,15,12,15,15,16,16,13,15,14,17,15,7,11,11,15,15,10,13,13,16,15,10,13,13,15,16,14,15,15,17,19,13,15,14,15,18,9,12,12,16,16,11,13,14,17,16,11,13,13,17,16,15,15,16,17,19,13,15,16,0,18,9,12,12,16,15,11,14,13,17,17,11,13,14,16,16,15,16,16,19,18,13,15,15,17,19,11,14,14,19,16,12,14,15,0,18,12,16,15,18,17,15,15,18,16,19,14,15,17,19,19,11,14,14,18,19,13,15,14,19,19,12,16,15,18,17,15,17,15,0,16,14,17,16,19,0,7,11,11,14,14,10,12,12,15,15,10,13,13,16,15,13,15,15,17,0,14,15,15,16,19,9,12,12,16,16,11,14,14,16,16,11,13,13,16,16,14,17,16,19,0,14,18,17,17,19,9,12,12,15,16,11,13,13,15,17,12,14,13,19,16,13,15,15,17,19,15,17,16,17,19,11,14,14,19,16,12,15,15,19,17,13,14,15,17,19,14,16,17,19,19,16,15,16,17,19,11,15,14,16,16,12,15,15,19,0,12,14,15,19,19,14,16,16,0,18,15,19,14,18,16,2,4,4,5,6,6,5,6,6,5,7,7,6,7,8,6,7,8,5,7,7,6,8,8,7,9,7,5,7,7,7,9,9,7,8,8,6,9,8,7,7,10,8,10,10,6,8,8,8,10,8,8,10,10,5,7,7,7,8,8,7,8,9,6,8,8,8,10,10,8,8,10,6,8,9,8,10,10,7,10,8,1,4,4,5,7,7,5,7,7,5,8,8,8,10,10,7,10,10,5,8,8,7,10,10,8,10,10,4,9,8,8,11,11,8,11,11,7,11,11,10,11,13,10,13,13,7,11,11,10,13,12,10,13,13,5,9,8,8,11,11,8,11,11,7,11,11,9,13,13,10,12,13,7,11,11,10,13,13,10,13,11,4,7,11,9,12,8,7,10,6,4,5,5,7,5,6,16,9,5,5,6,7,7,9,16,7,4,6,5,7,5,7,17,10,7,7,8,7,7,8,18,7,5,6,4,5,4,5,15,7,6,7,5,6,4,5,15,12,13,18,12,17,11,9,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,4,8,4,8,4,8,5,8,5,8,6,8,4,8,4,8,5,8,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,4,3,5,4,6,4,6,5,7,6,7,6,8,6,8,7,9,8,10,8,12,9,13,10,15,10,15,11,14,0,4,4,4,4,4,4,3,4,4,4,4,4,5,4,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,4,3,4,4,5,5,6,6,7,7,7,8,8,11,8,9,9,9,10,11,11,11,9,10,10,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,4,5,4,5,4,6,4,6,5,6,5,7,5,7,6,8,6,8,6,8,7,8,7,9,7,9,8,0,4,5,4,4,4,5,4,4,4,5,4,5,4,5,3,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,5,3,5,4,5,4,5,4,5,5,5,5,6,5,6,5,7,5,8,6,8,6,8,6,8,6,8,7,9,7,9,7,11,9,11,11,12,11,14,12,14,16,14,16,13,16,14,16,12,15,13,16,14,16,13,14,12,15,13,15,13,13,13,15,12,14,14,15,13,15,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,2,4,5,4,5,4,5,4,5,5,5,5,5,5,6,5,6,5,6,6,7,6,7,6,8,7,8,7,8,7,8,7,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,6,6,6,6,5,6,6,7,6,7,6,7,6,7,6,8,7,8,7,8,7,8,7,8,7,9,7,9,7,9,7,9,8,9,8,10,8,10,8,10,7,10,6,10,8,10,8,11,7,10,7,11,8,11,11,12,12,11,11,12,11,13,11,13,11,13,12,15,12,13,13,14,14,14,14,14,15,15,15,16,14,17,19,19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,2,4,6,17,4,5,7,17,8,7,10,17,17,17,17,17,3,4,6,15,3,3,6,15,7,6,9,17,17,17,17,17,6,8,10,17,6,6,8,16,9,8,10,17,17,15,16,17,17,17,17,17,12,15,15,16,12,15,15,16,16,16,16,16,3,3,3,14,5,4,4,11,8,6,6,10,17,12,11,17,6,5,5,15,5,3,4,11,8,5,5,8,16,9,10,14,10,8,9,17,8,6,6,13,10,7,7,10,16,11,13,14,17,17,17,17,17,16,16,16,16,15,16,16,16,16,16,16,1,2,3,6,5,4,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,5,7,5,7,7,7,7,7,5,7,5,7,5,7,5,7,7,7,7,7,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,4,3,4,4,4,5,5,6,5,6,5,7,6,6,6,7,7,7,8,9,9,9,12,10,11,10,10,12,10,10,0,3,4,4,4,4,4,4,4,4,5,4,5,4,5,4,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,3,7,3,7,5,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,4,4,4,4,4,5,5,5,5,6,6,7,6,7,6,8,6,9,7,9,7,9,9,11,9,12,10,12,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,4,3,4,4,5,4,5,5,5,6,6,6,7,6,8,6,8,6,9,7,10,7,10,7,10,7,12,7,12,7,12,9,12,11,12,10,12,10,12,11,12,12,12,10,12,10,12,10,12,9,12,11,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,10,10,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,4,5,4,5,4,5,4,5,5,5,5,5,5,6,5,6,5,6,6,6,6,7,7,7,7,7,7,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,5,7,5,7,4,7,4,8,4,8,4,8,4,8,3,8,4,9,4,9,4,9,4,9,4,9,5,9,5,9,6,9,7,9,8,9,9,9,10,9,11,9,14,9,15,10,15,10,15,10,15,10,15,11,15,10,14,12,14,11,14,13,14,13,15,15,15,12,15,15,15,13,15,13,15,13,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,7,6,7,6,7,6,7,6,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,5,6,5,7,5,7,5,7,5,8,5,8,5,8,5,9,5,9,6,10,6,10,6,11,6,11,6,11,6,11,6,11,6,11,6,11,6,12,7,11,7,11,7,11,7,11,7,10,7,11,7,11,7,12,7,11,8,11,8,11,8,11,8,13,8,12,9,11,9,11,9,11,10,12,10,12,9,12,10,12,11,14,12,16,12,12,11,14,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,2,4,7,13,4,5,7,15,8,7,10,16,16,14,16,16,2,4,7,16,3,4,7,14,8,8,10,16,16,16,15,16,6,8,11,16,7,7,9,16,11,9,13,16,16,16,15,16,16,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,3,3,6,16,5,5,7,16,9,8,11,16,16,16,16,16,5,5,8,16,5,5,7,16,8,7,9,16,16,16,16,16,9,9,12,16,6,8,11,16,9,10,11,16,16,16,16,16,16,16,16,16,13,16,16,16,15,16,16,16,16,16,16,16,5,4,7,16,6,5,8,16,9,8,10,16,16,16,16,16,5,5,7,15,5,4,6,15,7,6,8,16,16,16,16,16,9,9,11,15,7,7,9,16,8,8,9,16,16,16,16,16,16,16,16,16,15,15,15,16,15,15,14,16,16,16,16,16,8,8,11,16,8,9,10,16,11,10,14,16,16,16,16,16,6,8,10,16,6,7,10,16,8,8,11,16,14,16,16,16,10,11,14,16,9,9,11,16,10,10,11,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,12,16,15,16,12,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,1,2,3,6,4,7,5,7,2,6,8,9,7,11,13,13,1,3,5,5,6,6,12,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,6,3,6,4,7,4,7,5,9,5,11,6,11,6,11,7,11,6,11,6,11,9,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,4,2,5,3,5,4,6,6,6,7,7,8,7,8,7,8,7,9,8,9,8,9,8,10,8,11,9,12,9,12,0,4,5,4,5,4,5,4,5,3,5,3,5,3,5,4,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,3,8,3,10,3,8,3,9,3,8,4,9,4,9,5,9,6,10,6,9,7,11,7,12,9,13,10,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,4,3,4,4,4,4,5,5,5,5,5,6,5,7,5,8,6,8,6,9,7,10,7,10,8,10,8,11,9,11,0,4,5,4,5,3,5,3,5,3,5,4,4,4,4,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,4,5,4,5,4,5,5,6,5,6,5,7,5,7,6,7,6,8,7,8,7,8,7,9,8,9,9,9,9,10,10,10,11,9,12,9,12,9,15,10,14,9,13,10,13,10,12,10,12,10,13,10,12,11,13,11,14,12,13,13,14,14,13,14,15,14,16,13,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,1,5,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,6,7,7,7,7,8,7,8,8,9,8,10,9,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,5,8,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,8,4,8,4,9,5,9,5,9,5,9,5,9,6,10,6,10,7,10,8,11,9,11,11,12,13,12,14,13,15,13,15,14,16,14,17,15,17,15,15,16,16,15,16,16,16,15,18,16,15,17,17,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,2,5,5,4,5,4,5,4,5,4,6,5,6,5,6,5,6,5,7,5,7,6,8,6,8,6,8,6,9,6,9,6,5,5,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,7,5,7,5,7,5,7,5,8,6,8,6,8,6,9,6,9,6,10,6,10,6,11,6,11,7,11,7,12,7,12,7,12,7,12,7,12,7,12,7,12,7,12,8,13,8,12,8,12,8,13,8,13,9,13,9,13,9,13,9,12,10,12,10,13,10,14,11,14,12,14,13,14,13,14,14,15,16,15,15,15,14,15,17,21,22,22,21,22,22,22,22,22,22,21,21,21,21,21,21,21,21,21,21,2,3,7,13,4,4,7,15,8,6,9,17,21,16,15,21,2,5,7,11,5,5,7,14,9,7,10,16,17,15,16,21,4,7,10,17,7,7,9,15,11,9,11,16,21,18,15,21,18,21,21,21,15,17,17,19,21,19,18,20,21,21,21,20,1,5,7,21,5,8,9,21,10,9,12,20,20,16,20,20,4,8,9,20,6,8,9,20,11,11,13,20,20,15,17,20,9,11,14,20,8,10,15,20,11,13,15,20,20,20,20,20,20,20,20,20,13,20,20,20,18,18,20,20,20,20,20,20,3,6,8,20,6,7,9,20,10,9,12,20,20,20,20,20,5,7,9,20,6,6,9,20,10,9,12,20,20,20,20,20,8,10,13,20,8,9,12,20,11,10,12,20,20,20,20,20,18,20,20,20,15,17,18,20,18,17,18,20,20,20,20,20,7,10,12,20,8,9,11,20,14,13,14,20,20,20,20,20,6,9,12,20,7,8,11,20,12,11,13,20,20,20,20,20,9,11,15,20,8,10,14,20,12,11,14,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,11,16,18,20,15,15,17,20,20,17,20,20,20,20,20,20,9,14,16,20,12,12,15,20,17,15,18,20,20,20,20,20,16,19,18,20,15,16,20,20,17,17,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,4,2,6,3,7,5,7,2,10,8,14,7,12,11,14,1,5,3,7,4,9,7,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,2,4,3,5,4,5,5,5,5,6,6,6,6,6,6,6,7,7,8,6,9,7,12,11,16,13,16,12,15,13,15,12,14,12,15,15,15,0,0,0,0,0,0,0,0,0,0,3,3,3,4,3,4,4,4,4,4,5,5,5,6,6,0,0,0,0,2,3,2,3,3,3,1,3,2,3,4,5,6,11,5,5,6,10,7,7,6,6,14,13,9,9,6,6,6,10,6,6,6,9,8,7,7,9,14,12,8,11,8,7,7,11,8,8,7,11,9,9,7,9,13,11,9,13,19,19,18,19,15,16,16,19,11,11,10,13,10,10,9,15,5,5,6,13,6,6,6,11,8,7,6,7,14,11,10,11,6,6,6,12,7,6,6,11,8,7,7,11,13,11,9,11,9,7,6,12,8,7,6,12,9,8,8,11,13,10,7,13,19,19,17,19,17,14,14,19,12,10,8,12,13,10,9,16,7,8,7,12,7,7,7,11,8,7,7,8,12,12,11,11,8,8,7,12,8,7,6,11,8,7,7,10,10,11,10,11,9,8,8,13,9,8,7,12,10,9,7,11,9,8,7,11,18,18,15,18,18,16,17,18,15,11,10,18,11,9,9,18,16,16,13,16,12,11,10,16,12,11,9,6,15,12,11,13,16,16,14,14,13,11,12,16,12,9,9,13,13,10,10,12,17,18,17,17,14,15,14,16,14,12,14,15,12,10,11,12,18,18,18,18,18,18,18,18,18,12,13,18,16,11,9,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,4,3,4,4,4,5,4,7,5,8,5,11,6,10,6,12,7,12,7,12,8,12,8,12,10,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,6,3,6,4,7,4,7,4,7,4,8,4,8,4,8,4,8,4,9,4,9,5,10,5,10,7,10,8,10,8,0,4,4,4,4,4,4,4,5,3,5,3,5,4,6,4,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,5,3,5,3,5,4,7,5,10,7,10,7,12,10,14,10,14,9,14,11,14,14,14,13,13,13,13,13,13,13,0,4,5,4,6,4,8,3,9,3,9,2,9,3,8,4,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,5,3,5,3,6,3,6,4,6,4,7,4,7,5,8,5,8,6,9,7,9,7,9,8,10,9,10,9,11,10,11,11,11,11,11,11,12,12,12,13,12,13,12,14,12,15,12,14,12,16,13,17,13,17,14,17,14,16,13,17,14,17,14,17,15,17,15,15,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,2,5,5,4,5,4,5,4,5,5,5,5,5,5,6,5,6,5,6,5,7,6,7,6,7,6,8,6,9,7,9,7,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,7,5,7,5,7,5,7,5,7,5,7,5,8,5,8,5,8,5,8,5,8,6,8,6,8,6,9,6,9,6,9,6,9,6,9,7,9,7,9,7,9,7,10,7,10,8,10,8,10,8,10,8,10,8,11,8,11,8,11,8,11,8,11,9,12,9,12,9,12,9,12,9,12,10,12,10,13,11,13,11,14,12,14,13,15,14,16,14,17,15,18,16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,3,6,10,17,4,8,11,20,8,10,11,20,20,20,20,20,2,4,8,18,4,6,8,17,7,8,10,20,20,17,20,20,3,5,8,17,3,4,6,17,8,8,10,17,17,12,16,20,13,13,15,20,10,10,12,20,15,14,15,20,20,20,19,19,1,4,10,19,3,8,13,19,7,12,19,19,19,19,19,19,2,6,11,19,8,13,19,19,9,11,19,19,19,19,19,19,6,7,13,19,9,13,19,19,10,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,1,3,4,7,2,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,6,3,7,3,8,4,8,5,8,8,8,9,7,8,8,7,7,7,8,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,5,4,6,4,6,4,7,4,7,4,8,4,8,4,9,4,9,4,10,4,10,5,10,5,11,5,12,6,12,6,0,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,3,8,4,8,4,8,6,8,5,8,4,8,4,8,6,8,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,4,4,4,5,4,5,4,6,5,7,5,7,6,8,6,8,6,9,7,9,7,10,7,9,8,11,8,11,0,4,5,4,5,4,5,3,5,3,5,3,5,4,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,5,3,6,4,6,4,7,4,7,4,7,4,8,4,8,4,9,5,9,5,9,5,9,6,10,6,10,6,11,7,10,7,10,8,11,9,11,9,11,10,11,11,12,11,11,12,15,15,12,14,11,14,12,14,11,14,13,14,12,14,11,14,11,14,12,14,11,14,11,14,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,6,5,6,5,6,5,7,6,7,6,7,6,8,6,8,6,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,6,6,6,7,6,7,6,7,6,7,6,7,6,7,6,8,6,8,6,8,7,8,7,8,7,8,7,9,7,9,8,9,8,9,8,10,8,10,9,10,9,10,9,11,9,11,9,10,10,11,10,11,10,11,11,11,11,11,11,12,13,14,14,14,15,15,16,16,16,17,15,16,15,16,16,17,17,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,6,9,17,7,6,8,17,12,9,11,16,16,16,16,16,5,4,7,16,5,3,6,14,9,6,8,15,16,16,16,16,5,4,6,13,3,2,4,11,7,4,6,13,16,11,10,14,12,12,12,16,9,7,10,15,12,9,11,16,16,15,15,16,1,6,12,16,4,12,15,16,9,15,16,16,16,16,16,16,2,5,11,16,5,11,13,16,9,13,16,16,16,16,16,16,4,8,12,16,5,9,12,16,9,13,15,16,16,16,16,16,15,16,16,16,11,14,13,16,12,15,16,16,16,16,16,15,1,6,3,7,2,4,5,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,4,3,6,3,7,3,8,5,8,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,0,0,0,0,0,0,0,0,0,2,3,3,4,3,4,4,5,4,6,5,6,7,6,8,8,0,3,3,3,3,2,4,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,2,5,3,5,3,6,3,6,4,7,6,7,8,7,9,8,9,9,9,10,9,11,13,11,13,10,10,13,13,13,13,13,13,12,12,12,12,0,0,0,0,0,0,0,0,0,3,4,3,4,3,5,3,6,3,6,4,6,4,7,5,7,0,2,3,3,3,3,4,3,4,5,6,8,15,6,9,10,15,10,11,12,15,15,15,15,15,4,6,7,15,6,7,8,15,9,8,9,15,15,15,15,15,6,8,9,15,7,7,8,15,10,9,10,15,15,15,15,15,15,13,15,15,15,10,11,15,15,13,13,15,15,15,15,15,4,6,7,15,6,8,9,15,10,10,12,15,15,15,15,15,2,5,6,15,5,6,7,15,8,6,7,15,15,15,15,15,5,6,8,15,5,6,7,15,9,6,7,15,15,15,15,15,14,12,13,15,12,10,11,15,15,15,15,15,15,15,15,15,7,8,9,15,9,10,10,15,15,14,14,15,15,15,15,15,5,6,7,15,7,8,9,15,12,9,10,15,15,15,15,15,7,7,9,15,7,7,8,15,12,8,9,15,15,15,15,15,13,13,14,15,12,11,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,13,13,13,15,15,15,15,15,15,15,15,15,15,15,15,15,15,12,13,15,15,12,13,15,15,14,15,15,15,15,15,15,15,15,15,15,15,15,13,15,15,15,15,15,15,15,15,15,7,5,5,9,9,6,6,9,12,8,7,8,11,8,9,15,6,3,3,7,7,4,3,6,9,6,5,6,8,6,8,15,8,5,5,9,8,5,4,6,10,7,5,5,11,8,7,15,14,15,13,13,13,13,8,11,15,10,7,6,11,9,10,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,2,7,3,8,4,9,5,9,8,10,11,11,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,0,0,0,0,0,0,0,0,0,3,4,3,6,3,6,3,6,3,7,3,8,4,9,4,9,0,3,3,2,3,3,4,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,3,5,3,5,4,5,4,5,5,5,5,6,5,6,5,6,5,6,5,6,5,7,8,9,11,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,3,3,3,4,4,4,4,5,4,5,4,5,4,6,4,6,0,3,3,3,3,3,3,3,3,8,13,17,17,8,11,17,17,11,13,17,17,17,17,17,17,6,10,16,17,6,10,15,17,8,10,16,17,17,17,17,17,9,13,15,17,8,11,17,17,10,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,11,15,17,7,10,15,17,8,10,17,17,17,15,17,17,4,8,13,17,4,7,13,17,6,8,15,17,16,15,17,17,6,11,15,17,6,9,13,17,8,10,17,17,15,17,17,17,16,17,17,17,12,14,15,17,13,14,15,17,17,17,17,17,5,10,14,17,5,9,14,17,7,9,15,17,15,15,17,17,3,7,12,17,3,6,11,17,5,7,13,17,12,12,17,17,5,9,14,17,3,7,11,17,5,8,13,17,13,11,16,17,12,17,17,17,9,14,15,17,10,11,14,17,16,14,17,17,8,12,17,17,8,12,17,17,10,12,17,17,17,17,17,17,5,10,17,17,5,9,15,17,7,9,17,17,13,13,17,17,7,11,17,17,6,10,15,17,7,9,15,17,12,11,17,17,12,15,17,17,11,14,17,17,11,10,15,17,17,16,17,17,10,7,8,13,9,6,7,11,10,8,8,12,17,17,17,17,7,5,5,9,6,4,4,8,8,5,5,8,16,14,13,16,7,5,5,7,6,3,3,5,8,5,4,7,14,12,12,15,10,7,8,9,7,5,5,6,9,6,5,5,15,12,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,3,5,3,6,4,7,4,7,5,7,6,7,6,7,8,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,3,5,3,5,4,5,4,6,4,6,0,0,0,0,2,2,3,3,3,3,2,2,2,2,6,7,7,12,6,6,7,12,7,6,6,10,15,12,11,13,7,7,8,13,7,7,8,12,7,7,7,11,12,12,11,13,10,9,9,11,9,9,9,10,10,8,8,12,14,12,12,14,11,11,12,14,11,12,11,15,15,12,13,15,15,15,15,15,6,6,7,10,6,6,6,11,7,6,6,9,14,12,11,13,7,7,7,10,6,6,7,9,7,7,6,10,13,12,10,12,9,9,9,11,9,9,8,9,9,8,8,10,13,12,10,12,12,12,11,13,12,12,11,12,15,13,12,15,15,15,14,14,6,6,6,8,6,6,5,6,7,7,6,5,11,10,9,8,7,6,6,7,6,6,5,6,7,7,6,6,11,10,9,8,8,8,8,9,8,8,7,8,8,8,6,7,11,10,9,9,14,11,10,14,14,11,10,15,13,11,9,11,15,12,12,11,11,9,8,8,10,9,8,9,11,10,9,8,12,11,12,11,13,10,8,9,11,10,8,9,10,9,8,9,10,8,12,12,15,11,10,10,13,11,10,10,8,8,7,12,10,9,11,12,15,12,11,15,13,11,11,15,12,14,11,13,15,15,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,3,5,3,5,4,6,5,6,5,7,6,6,7,7,9,9,11,11,16,11,14,10,11,11,13,16,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,3,3,4,3,4,3,4,4,5,4,5,4,6,5,6,0,0,0,0,3,2,3,2,3,3,2,2,2,2,7,7,7,11,6,6,7,11,7,6,6,10,12,10,10,13,7,7,8,11,7,7,7,11,7,6,7,10,11,10,10,13,10,10,9,12,9,9,9,11,8,8,8,11,13,11,10,14,15,15,14,15,15,14,13,14,15,12,12,17,17,17,17,17,7,7,6,9,6,6,6,9,7,6,6,8,11,11,10,12,7,7,7,9,7,6,6,9,7,6,6,9,13,10,10,11,10,9,8,10,9,8,8,10,8,8,7,9,13,12,10,11,17,14,14,13,15,14,12,13,17,13,12,15,17,17,14,17,7,6,6,7,6,6,5,7,6,6,6,6,11,9,9,9,7,7,6,7,7,6,6,7,6,6,6,6,10,9,8,9,10,9,8,8,9,8,7,8,8,7,6,8,11,10,9,10,17,17,12,15,15,15,12,14,14,14,10,12,15,13,12,13,11,10,8,10,11,10,8,8,10,9,7,7,10,9,9,11,11,11,9,10,11,10,8,9,10,8,6,8,10,9,9,11,14,13,10,12,12,11,10,10,8,7,8,10,10,11,11,12,17,17,15,17,17,17,17,17,17,13,12,17,17,17,14,17,2,4,4,6,6,7,7,8,8,8,8,9,8,9,9,9,9,9,9,9,9,11,11,12,7,7,7,7,8,8,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,7,7,7,7,8,8,9,8,9,9,9,9,9,9,10,10,10,10,11,11,12,8,8,8,8,8,8,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,7,7,8,8,8,8,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,12,11,9,9,8,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,8,8,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,12,11,12,11,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,12,11,12,11,11,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,12,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,12,11,11,12,11,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,12,11,12,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,12,11,12,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,12,11,11,12,11,11,12,10,10,11,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,12,12,11,12,11,11,12,12,12,11,11,10,10,10,10,10,10,10,10,10,11,12,12,11,12,12,11,12,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,5,5,7,7,9,9,11,11,12,12,13,13,6,5,5,6,6,9,9,10,10,12,12,12,13,15,14,6,5,5,7,7,9,9,10,10,12,12,12,13,14,13,17,7,7,8,8,10,10,11,11,12,13,13,13,13,13,17,7,7,8,8,10,10,11,11,13,13,13,13,14,14,17,11,11,9,9,11,11,12,12,12,13,13,14,15,13,17,12,12,9,9,11,11,12,12,13,13,13,13,14,16,17,17,17,11,12,12,12,13,13,13,14,15,14,15,15,17,17,17,12,12,11,11,13,13,14,14,15,14,15,15,17,17,17,15,15,13,13,14,14,15,14,15,15,16,15,17,17,17,15,15,13,13,13,14,14,15,15,15,15,16,17,17,17,17,16,14,15,14,14,15,14,14,15,15,15,17,17,17,17,17,14,14,16,14,15,15,15,15,15,15,17,17,17,17,17,17,16,16,15,17,15,15,14,17,15,17,16,17,17,17,17,16,15,14,15,15,15,15,15,15,1,3,3,10,10,10,10,10,10,10,10,10,10,5,6,6,10,10,10,10,10,10,10,10,10,10,6,7,8,10,10,10,10,10,10,10,10], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+227700);\n/* memory initializer */ allocate([10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,8,8,8,8,9,9,10,10,7,5,5,7,7,8,8,8,8,9,10,11,11,7,5,5,7,7,8,8,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,9,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,9,10,9,10,11,11,11,0,13,12,9,8,9,9,10,10,11,11,12,11,0,0,0,9,9,9,9,10,10,11,11,12,12,0,0,0,10,10,9,9,10,10,11,11,12,12,0,0,0,13,13,10,10,11,11,12,11,13,12,0,0,0,14,14,10,10,11,10,11,11,12,12,0,0,0,0,0,12,12,11,11,12,12,13,13,0,0,0,0,0,12,12,11,10,12,11,13,12,2,3,3,5,5,7,7,7,7,7,7,10,10,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,6,6,6,7,6,6,4,7,7,10,9,9,10,9,9,5,7,7,10,9,9,10,9,9,6,10,10,10,10,10,11,10,10,6,9,9,10,9,10,11,10,10,6,9,9,10,9,9,11,9,10,7,10,10,11,11,11,11,10,10,6,9,9,10,10,10,11,9,9,6,9,9,10,10,10,10,9,9,1,3,3,5,5,8,8,8,8,9,9,10,10,11,11,11,11,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,9,9,8,8,10,10,10,10,11,11,12,12,12,12,0,0,0,9,9,8,8,10,10,10,10,11,11,12,12,12,12,0,0,0,10,10,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,10,10,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,11,11,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,11,12,12,13,13,0,0,0,0,0,10,10,11,11,11,11,12,12,13,12,13,13,0,0,0,0,0,0,0,11,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,13,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,13,13,14,14,1,3,3,4,5,6,6,8,8,0,0,0,8,8,7,7,9,9,0,0,0,8,8,7,7,9,9,0,0,0,9,10,8,8,9,9,0,0,0,10,10,8,8,9,9,0,0,0,11,10,8,8,10,10,0,0,0,11,11,8,8,10,10,0,0,0,12,12,9,9,10,10,0,0,0,0,0,9,9,10,10,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,8,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,10,8], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+237940);\n/* memory initializer */ allocate([4,6,18,8,11,8,8,9,9,10,4,4,18,5,9,5,6,7,8,10,18,18,18,18,17,17,17,17,17,17,7,5,17,6,11,6,7,8,9,12,12,9,17,12,8,8,9,10,10,13,7,5,17,6,8,4,5,6,8,10,6,5,17,6,8,5,4,5,7,9,7,7,17,8,9,6,5,5,6,8,8,8,17,9,11,8,6,6,6,7,9,10,17,12,12,10,9,7,7,8,1,5,5,7,7,8,7,8,8,10,10,9,9,10,10,10,11,11,10,12,11,12,12,12,9,8,8,8,8,8,9,10,10,10,10,11,11,11,10,11,11,12,12,11,12,8,8,7,7,8,9,10,10,10,9,10,10,9,10,10,11,11,11,11,11,11,9,9,9,9,8,9,10,10,11,10,10,11,11,12,10,10,12,12,11,11,10,9,9,10,8,9,10,10,10,9,10,10,11,11,10,11,10,10,10,12,12,12,9,10,9,10,9,9,10,10,11,11,11,11,10,10,10,11,12,11,12,11,12,10,11,10,11,9,10,9,10,9,10,10,9,10,10,11,10,11,11,11,11,12,11,9,10,10,10,10,11,11,11,11,11,10,11,11,11,11,10,12,10,12,12,11,12,10,10,11,10,9,11,10,11,9,10,11,10,10,10,11,11,11,11,12,12,10,9,9,11,10,9,12,11,10,12,12,11,11,11,11,10,11,11,12,11,10,12,9,11,10,11,10,10,11,10,11,9,10,10,10,11,12,11,11,12,11,10,10,11,11,9,10,10,12,10,11,10,10,10,9,10,10,10,10,9,10,10,11,11,11,11,12,11,10,10,10,10,11,11,10,11,11,9,11,10,12,10,12,11,10,11,10,10,10,11,10,10,11,11,10,11,10,10,10,10,11,11,12,10,10,10,11,10,11,12,11,10,11,10,10,11,11,10,12,10,9,10,10,11,11,11,10,12,10,10,11,11,11,10,10,11,10,10,10,11,10,11,10,12,11,11,10,10,10,12,10,10,11,9,10,11,11,11,10,10,11,10,10,9,11,11,12,12,11,12,11,11,11,11,11,11,9,10,11,10,12,10,10,10,10,11,10,10,11,10,10,12,10,10,10,10,10,9,12,10,10,10,10,12,9,11,10,10,11,10,12,12,10,12,12,12,10,10,10,10,9,10,11,10,10,12,10,10,12,11,10,11,10,10,12,11,10,12,10,10,11,9,11,10,9,10,9,10,1,4,4,5,5,10,8,11,11,11,11,11,11,11,11,6,6,6,7,6,11,10,11,11,11,11,11,11,11,11,7,5,6,6,6,8,7,11,11,11,11,11,11,11,11,11,7,8,8,8,9,9,11,11,11,11,11,11,11,11,11,9,8,7,8,9,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,3,4,5,5,7,6,6,6,5,7,7,7,6,6,7,7,7,6,6,7,7,7,6,6,1,4,4,7,6,7,7,7,7,8,8,9,9,7,6,6,7,7,8,8,7,7,8,9,10,10,7,6,6,7,7,8,7,7,7,9,9,10,12,0,8,8,8,8,8,9,8,8,9,9,10,10,0,8,8,8,8,8,9,8,9,9,9,11,10,0,0,13,9,8,9,9,9,9,10,10,11,11,0,13,0,9,9,9,9,9,9,11,10,11,11,0,0,0,8,9,10,9,10,10,13,11,12,12,0,0,0,8,9,9,9,10,10,13,12,12,13,0,0,0,12,0,10,10,12,11,10,11,12,12,0,0,0,13,13,10,10,10,11,12,0,13,0,0,0,0,0,0,13,11,0,12,12,12,13,12,0,0,0,0,0,0,13,13,11,13,13,11,12,1,3,3,6,6,8,8,9,9,9,9,10,10,10,7,7,8,8,9,9,9,9,10,10,9,7,7,8,8,9,9,9,9,10,10,10,8,8,9,9,9,9,9,9,10,10,10,8,8,9,9,9,9,8,9,10,10,10,8,8,9,9,9,10,10,10,10,10,10,9,9,9,9,9,9,10,10,11,10,11,9,9,9,9,10,10,10,10,11,11,11,10,10,9,9,10,10,10,9,11,10,10,10,10,10,10,9,9,10,10,11,11,10,10,10,9,9,9,10,10,10,1,4,4,7,6,6,7,6,6,4,7,7,11,9,10,12,9,10,4,7,7,10,10,10,11,9,9,6,11,10,11,11,12,11,11,11,6,10,10,11,11,12,11,10,10,6,9,10,11,11,11,11,10,10,7,10,11,12,11,11,12,11,12,6,9,9,10,9,9,11,10,10,6,9,9,10,10,10,11,10,10,1,3,3,6,6,8,8,9,9,8,8,10,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,11,0,0,0,8,8,9,9,10,10,9,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,9,9,11,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,11,12,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,10,10,10,10,11,11,10,10,11,11,12,12,13,13,0,0,0,0,0,10,9,10,11,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,9,10,11,12,12,13,13,14,13,0,0,0,0,0,9,9,9,10,10,10,11,11,13,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,11,11,12,12,13,14,14,14,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,14,13,0,0,0,0,0,0,0,11,11,12,12,13,13,14,14,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,5,5,7,6,8,8,0,0,0,7,7,7,7,8,8,0,0,0,7,7,7,7,8,9,0,0,0,8,8,8,8,9,9,0,0,0,8,8,8,8,9,9,0,0,0,9,9,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,4,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,9,0,0,0,0,0,0,8,9,11,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,8,11,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+246105);\n/* memory initializer */ allocate([4,5,18,7,10,6,7,8,9,10,5,2,18,5,7,5,6,7,8,11,17,17,17,17,17,17,17,17,17,17,7,4,17,6,9,6,8,10,12,15,11,7,17,9,6,6,7,9,11,15,6,4,17,6,6,4,5,8,11,16,6,6,17,8,6,5,6,9,13,16,8,9,17,11,9,8,8,11,13,17,9,12,17,15,14,13,12,13,14,17,12,15,17,17,17,17,17,16,17,17,3,9,13,13,14,15,14,14,15,15,5,5,9,10,12,12,13,14,16,15,10,6,6,6,8,11,12,13,16,15,11,7,5,3,5,8,10,12,15,15,10,10,7,4,3,5,8,10,12,12,12,12,9,7,5,4,6,8,10,13,13,12,11,9,7,5,5,6,9,12,14,12,12,10,8,6,6,6,7,11,13,12,14,13,10,8,7,7,7,10,11,11,12,13,12,11,10,8,8,9,2,4,4,5,4,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,6,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,8,7,8,7,9,8,10,9,10,10,11,11,12,12,4,7,6,9,9,10,9,9,8,10,10,11,10,12,10,13,12,13,12,4,6,6,9,9,9,9,9,9,10,10,11,11,11,12,12,12,12,12,7,9,8,11,10,10,10,11,10,11,11,12,12,13,12,13,13,13,13,7,8,9,10,10,11,11,10,10,11,11,11,12,13,13,13,13,14,14,8,9,9,11,11,12,11,12,12,13,12,12,13,13,14,15,14,14,14,8,9,9,10,11,11,11,12,12,13,12,13,13,14,14,14,15,14,16,8,9,9,11,10,12,12,12,12,15,13,13,13,17,14,15,15,15,14,8,9,9,10,11,11,12,13,12,13,13,13,14,15,14,14,14,16,15,9,11,10,12,12,13,13,13,13,14,14,16,15,14,14,14,15,15,17,9,10,10,11,11,13,13,13,14,14,13,15,14,15,14,15,16,15,16,10,11,11,12,12,13,14,15,14,15,14,14,15,17,16,15,15,17,17,10,12,11,13,12,14,14,13,14,15,15,15,15,16,17,17,15,17,16,11,12,12,14,13,15,14,15,16,17,15,17,15,17,15,15,16,17,15,11,11,12,14,14,14,14,14,15,15,16,15,17,17,17,16,17,16,15,12,12,13,14,14,14,15,14,15,15,16,16,17,16,17,15,17,17,16,12,14,12,14,14,15,15,15,14,14,16,16,16,15,16,16,15,17,15,12,13,13,14,15,14,15,17,15,17,16,17,17,17,16,17,16,17,17,12,13,13,14,16,15,15,15,16,15,17,17,15,17,15,17,16,16,17,1,3,3,11,11,11,11,11,11,11,11,11,11,11,11,4,10,11,11,11,11,11,11,11,11,11,11,11,11,11,4,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,8,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,10,9,10,9,10,10,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,8,9,9,10,9,11,10,4,6,6,8,8,9,9,9,9,10,10,11,10,12,10,4,6,6,8,8,9,10,9,9,10,10,11,11,12,12,7,8,8,10,10,11,11,10,10,11,11,12,12,13,12,7,8,8,10,10,11,11,10,10,11,11,12,12,12,13,8,10,9,11,11,12,12,11,11,12,12,13,13,14,13,8,9,9,11,11,12,12,11,12,12,12,13,13,14,13,8,9,9,10,10,12,11,13,12,13,13,14,13,15,14,8,9,9,10,10,11,12,12,12,13,13,13,14,14,14,9,10,10,12,11,13,12,13,13,14,13,14,14,14,15,9,10,10,11,12,12,12,13,13,14,14,14,15,15,15,10,11,11,12,12,13,13,14,14,14,14,15,14,16,15,10,11,11,12,12,13,13,13,14,14,14,14,14,15,16,11,12,12,13,13,14,13,14,14,15,14,15,16,16,16,11,12,12,13,13,14,13,14,14,15,15,15,16,15,15,5,6,6,7,7,7,7,7,7,7,7,6,6,6,7,7,7,7,7,7,7,7,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,7,7,7,7,7,7,8,8,7,7,7,7,7,7,7,8,7,8,8,7,7,7,7,7,7,7,8,8,8,8,1,4,5,6,6,7,7,8,9,10,10,11,11,5,6,6,7,7,8,8,9,9,10,10,11,11,5,6,6,7,7,8,8,9,9,10,10,11,11,6,7,7,8,8,9,9,10,10,11,11,12,12,6,7,7,8,8,9,9,10,10,11,11,12,12,8,8,8,9,9,10,10,11,11,12,12,13,13,8,8,8,9,9,10,10,11,11,12,12,13,13,9,9,9,10,10,11,11,12,12,13,13,13,13,9,9,9,10,10,11,11,12,12,13,13,14,14,10,10,10,11,11,12,12,13,13,14,13,15,14,10,10,10,11,11,12,12,13,13,14,14,14,14,11,11,12,12,12,13,13,14,14,14,14,15,15,11,11,12,12,12,13,13,14,14,14,15,15,15,4,4,4,5,5,4,5,4,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,2,4,4,6,6,7,7,8,8,9,9,10,10,4,6,5,7,7,8,8,8,8,9,9,10,10,4,5,6,7,7,8,8,8,8,9,9,10,10,6,7,7,8,8,8,8,9,9,10,10,10,10,6,7,7,8,8,8,8,9,9,10,10,10,10,7,8,8,8,8,9,9,9,9,10,10,11,11,7,8,8,8,8,9,9,9,9,10,10,11,11,8,8,8,9,9,9,9,9,10,10,10,11,11,8,8,8,9,9,9,9,10,9,10,10,11,11,9,9,9,10,10,10,10,10,11,11,11,11,12,9,9,9,10,10,10,10,10,10,11,10,12,11,10,10,10,10,10,11,11,11,11,11,12,12,12,10,10,10,10,10,11,11,11,11,12,11,12,12,5,5,5,6,6,7,7,7,7,7,7,5,6,6,6,6,7,7,7,7,8,7,5,6,6,6,6,7,7,7,7,7,7,6,6,6,7,7,7,7,7,7,8,8,6,6,6,7,7,7,7,7,7,8,8,7,7,7,7,7,8,7,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,8,7,8,8,8,8,8,8,7,7,7,7,8,8,8,8,8,8,8,7,8,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,1,4,4,5,7,7,5,7,7,5,8,8,8,9,9,7,9,9,5,8,8,7,9,9,8,9,9,5,8,8,8,10,10,8,10,10,7,10,10,9,10,12,9,11,11,7,10,10,9,11,10,9,11,12,5,8,8,8,10,10,8,10,10,7,10,10,9,12,11,9,10,11,7,10,10,9,11,11,10,12,10,4,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,5,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,5,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,6,6,6,7,6,7,7,8,8,9,9,10,10,11,11,12,11,6,6,6,6,7,7,7,8,8,9,9,10,10,11,11,11,12,7,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,7,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,8,8,8,8,8,9,8,10,9,10,10,11,10,12,11,13,12,8,8,8,8,8,9,9,9,10,10,10,10,11,11,12,12,12,8,8,8,9,9,9,9,10,10,11,10,12,11,12,12,13,12,8,8,8,9,9,9,9,10,10,10,11,11,11,12,12,12,13,9,9,9,10,10,10,10,11,10,11,11,12,11,13,12,13,13,9,9,10,10,10,10,10,10,11,11,11,11,12,12,13,13,13,10,11,10,11,11,11,11,12,11,12,12,13,12,13,13,14,13,10,10,10,11,11,11,11,11,12,12,12,12,13,13,13,13,14,11,11,11,12,11,12,12,12,12,13,13,13,13,14,13,14,14,11,11,11,11,12,12,12,12,12,12,13,13,13,13,14,14,14,3,4,4,5,5,7,7,8,8,4,5,5,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,9,9,5,6,6,7,7,8,8,9,9,7,7,7,8,8,9,9,10,10,7,7,7,8,8,9,9,10,10,8,9,9,10,9,10,10,11,11,8,9,9,9,10,10,10,11,11,3,5,5,8,8,5,7,7,9,9,6,7,7,9,9,8,9,9,11,10,8,9,9,11,11,6,7,7,9,9,7,8,8,10,10,7,8,8,9,10,9,10,10,11,11,9,9,10,11,11,6,7,7,9,9,7,8,8,10,9,7,8,8,10,10,9,10,9,11,11,9,10,10,11,11,8,9,9,11,11,9,10,10,12,11,9,10,10,11,12,11,11,11,13,13,11,11,11,12,13,8,9,9,11,11,9,10,10,11,11,9,10,10,12,11,11,12,11,13,12,11,11,12,13,13,6,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,11,12,7,8,8,10,10,8,9,9,11,11,8,9,9,10,10,10,11,11,12,12,10,10,11,12,12,7,8,8,10,10,8,9,8,10,10,8,9,9,10,10,10,11,10,12,11,10,10,11,12,12,9,10,10,11,12,10,11,11,12,12,10,11,10,12,12,12,12,12,13,13,11,12,12,13,13,9,10,10,11,11,9,10,10,12,12,10,11,11,12,13,11,12,11,13,12,12,12,12,13,14,6,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,11,11,9,10,10,11,12,7,8,8,10,10,8,9,9,11,10,8,8,9,10,10,10,11,10,12,12,10,10,11,11,12,7,8,8,10,10,8,9,9,10,10,8,9,9,10,10,10,11,10,12,12,10,11,10,12,12,9,10,10,12,11,10,11,11,12,12,9,10,10,12,12,12,12,12,13,13,11,11,12,12,14,9,10,10,11,12,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,12,12,12,13,13,8,9,9,11,11,9,10,10,12,11,9,10,10,12,12,11,12,11,13,13,11,11,12,13,13,9,10,10,12,12,10,11,11,12,12,10,11,11,12,12,12,12,12,14,14,12,12,12,13,13,9,10,10,12,11,10,11,10,12,12,10,11,11,12,12,11,12,12,14,13,12,12,12,13,14,11,12,11,13,13,11,12,12,13,13,12,12,12,14,14,13,13,13,13,15,13,13,14,15,15,11,11,11,13,13,11,12,11,13,13,11,12,12,13,13,12,13,12,15,13,13,13,14,14,15,8,9,9,11,11,9,10,10,11,12,9,10,10,11,12,11,12,11,13,13,11,12,12,13,13,9,10,10,11,12,10,11,10,12,12,10,10,11,12,13,12,12,12,14,13,11,12,12,13,14,9,10,10,12,12,10,11,11,12,12,10,11,11,12,12,12,12,12,14,13,12,12,12,14,13,11,11,11,13,13,11,12,12,14,13,11,11,12,13,13,13,13,13,15,14,12,12,13,13,15,11,12,12,13,13,12,12,12,13,14,11,12,12,13,13,13,13,14,14,15,13,13,13,14,14,1,5,5,5,7,7,5,7,7,5,7,7,7,9,9,7,9,9,5,7,7,7,9,9,7,9,9,5,7,7,7,9,9,7,9,9,8,9,9,9,10,11,9,11,11,7,9,9,9,11,10,9,11,11,5,7,7,7,9,9,8,9,10,7,9,9,9,11,11,9,10,11,7,9,10,9,11,11,9,11,10,9,16,18,18,17,17,17,17,17,17,5,8,11,12,11,12,17,17,16,16,6,6,8,8,9,10,14,15,16,16,6,7,7,4,6,9,13,16,16,16,6,6,7,4,5,8,11,15,17,16,7,6,7,6,6,8,9,10,14,16,11,8,8,7,6,6,3,4,10,15,14,12,12,10,5,6,3,3,8,13,15,17,15,11,6,8,6,6,9,14,17,15,15,12,8,10,9,9,12,15,3,9,13,14,14,15,14,14,15,15,5,4,6,8,10,12,12,14,15,15,9,5,4,5,8,10,11,13,16,16,10,7,4,3,5,7,9,11,13,13,10,9,7,4,4,6,8,10,12,14,13,11,9,6,5,5,6,8,12,14,13,11,10,8,7,6,6,7,10,14,13,11,12,10,8,7,6,6,9,13,12,11,14,12,11,9,8,7,9,11,11,12,14,13,14,11,10,8,8,9,2,3,4,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,8,7,8,6,9,7,10,8,11,10,11,11,11,11,4,7,6,9,9,10,9,9,9,10,10,11,10,11,10,11,11,13,11,4,7,7,9,9,9,9,9,9,10,10,11,10,11,11,11,12,11,12,7,9,8,11,11,11,11,10,10,11,11,12,12,12,12,12,12,14,13,7,8,9,10,11,11,11,10,10,11,11,11,11,12,12,14,12,13,14,8,9,9,11,11,11,11,11,11,12,12,14,12,15,14,14,14,15,14,8,9,9,11,11,11,11,12,11,12,12,13,13,13,13,13,13,14,14,8,9,9,11,10,12,11,12,12,13,13,13,13,15,14,14,14,16,16,8,9,9,10,11,11,12,12,12,13,13,13,14,14,14,15,16,15,15,9,10,10,11,12,12,13,13,13,14,14,16,14,14,16,16,16,16,15,9,10,10,11,11,12,13,13,14,15,14,16,14,15,16,16,16,16,15,10,11,11,12,13,13,14,15,15,15,15,15,16,15,16,15,16,15,15,10,11,11,13,13,14,13,13,15,14,15,15,16,15,15,15,16,15,16,10,12,12,14,14,14,14,14,16,16,15,15,15,16,16,16,16,16,16,11,12,12,14,14,14,14,15,15,16,15,16,15,16,15,16,16,16,16,12,12,13,14,14,15,16,16,16,16,16,16,15,16,16,16,16,16,16,12,13,13,14,14,14,14,15,16,15,16,16,16,16,16,16,16,16,16,12,13,14,14,14,16,15,16,15,16,16,16,16,16,16,16,16,16,16,12,14,13,14,15,15,15,16,15,16,16,15,16,16,16,16,16,16,16,1,3,3,9,9,9,9,9,9,4,9,9,9,9,9,9,9,9,5,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,4,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,10,9,10,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,9,10,10,9,10,8,9,8,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,8,9,8,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,9,10,10,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,7,9,8,10,9,11,10,4,6,6,8,8,10,9,9,9,10,10,11,10,12,10,4,6,6,8,8,10,10,9,9,10,10,11,11,11,12,7,8,8,10,10,11,11,11,10,12,11,12,12,13,11,7,8,8,10,10,11,11,10,10,11,11,12,12,13,13,8,10,10,11,11,12,11,12,11,13,12,13,12,14,13,8,10,9,11,11,12,12,12,12,12,12,13,13,14,13,8,9,9,11,10,12,11,13,12,13,13,14,13,14,13,8,9,9,10,11,12,12,12,12,13,13,14,15,14,14,9,10,10,12,11,13,12,13,13,14,13,14,14,14,14,9,10,10,12,12,12,12,13,13,14,14,14,15,14,14,10,11,11,13,12,13,12,14,14,14,14,14,14,15,15,10,11,11,12,12,13,13,14,14,14,15,15,14,16,15,11,12,12,13,12,14,14,14,13,15,14,15,15,15,17,11,12,12,13,13,14,14,14,15,15,14,15,15,14,17,4,5,5,6,6,7,7,7,7,7,7,5,6,6,7,7,7,7,7,7,7,7,5,6,6,7,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,8,8,6,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,7,8,8,8,8,7,7,7,7,7,7,7,8,8,8,8,7,7,7,8,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,1,4,5,6,6,7,7,8,8,10,10,11,11,5,6,6,7,7,8,8,9,9,11,10,12,11,5,6,6,7,7,8,8,9,9,10,11,11,12,6,7,7,8,8,9,9,10,10,11,11,12,12,6,7,7,8,8,9,9,10,10,11,12,13,12,7,8,8,9,9,10,10,11,11,12,12,13,13,8,8,8,9,9,10,10,11,11,12,12,13,13,9,9,9,10,10,11,11,12,12,13,13,14,14,9,9,9,10,10,11,11,12,12,13,13,14,14,10,11,11,12,11,13,12,13,13,14,14,15,15,10,11,11,11,12,12,13,13,14,14,14,15,15,11,12,12,13,13,14,13,15,14,15,15,16,15,11,11,12,13,13,13,14,14,14,15,15,15,16,3,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,4,4,6,6,7,7,8,8,9,9,10,10,4,6,5,7,7,8,8,8,8,9,9,10,10,4,6,6,7,7,8,8,8,8,9,9,10,10,6,7,7,7,8,8,8,8,9,9,10,10,10,6,7,7,8,8,8,8,9,8,10,9,11,10,7,8,8,8,8,8,9,9,9,10,10,11,11,7,8,8,8,8,9,8,9,9,10,10,11,11,8,8,8,9,9,9,9,9,10,10,10,11,11,8,8,8,9,9,9,9,10,9,10,10,11,11,9,9,9,9,10,10,10,10,10,10,11,11,12,9,9,9,10,9,10,10,10,10,11,10,12,11,10,10,10,10,10,11,11,11,11,11,12,12,12,10,10,10,10,11,11,11,11,11,12,11,12,12,4,5,5,6,6,7,7,7,7,8,8,5,5,5,6,6,7,7,8,8,8,8,5,5,5,6,6,7,7,7,8,8,8,6,6,6,7,7,7,7,8,8,8,8,6,6,6,7,7,7,7,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,8,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,8,8,8,8,8,8,8,8,9,9,1,4,4,5,7,7,5,7,7,5,8,8,8,9,9,7,9,9,5,8,8,7,9,9,8,9,9,5,8,8,8,10,10,8,10,10,7,10,10,9,10,12,9,12,11,7,10,10,9,11,10,9,11,12,5,8,8,8,10,10,8,10,10,7,10,10,9,11,11,9,10,11,7,10,10,9,11,11,10,12,10,4,4,4,6,6,7,7,8,8,8,8,10,10,11,11,11,11,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,6,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,6,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,7,7,7,8,8,9,8,10,9,10,9,11,10,12,11,13,12,7,7,7,8,8,8,9,9,10,9,10,10,11,11,12,12,13,8,8,8,9,9,9,9,10,10,11,10,11,11,12,12,13,13,8,8,8,9,9,9,10,10,10,10,11,11,11,12,12,12,13,8,9,9,9,9,10,9,11,10,11,11,12,11,13,12,13,13,8,9,9,9,9,9,10,10,11,11,11,11,12,12,13,13,13,10,10,10,10,10,11,10,11,11,12,11,13,12,13,13,14,13,10,10,10,10,10,10,11,11,11,11,12,12,13,13,13,13,14,11,11,11,11,11,12,11,12,12,13,12,13,13,14,13,14,14,11,11,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,11,12,12,12,12,13,12,13,12,13,13,14,13,14,14,14,14,11,12,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,3,4,4,5,5,7,7,9,9,4,5,4,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,10,10,6,6,6,7,7,8,8,10,10,7,7,7,8,8,9,9,11,10,7,7,7,8,8,9,9,10,11,9,9,9,10,10,11,10,12,11,9,9,9,9,10,11,11,11,12,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,8,9,9,11,11,8,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,11,12,5,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,9,12,11,9,10,10,12,12,8,9,9,12,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,14,11,11,12,13,14,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,11,13,13,11,12,12,14,14,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,11,12,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,12,13,10,11,11,12,13,6,8,8,10,10,8,9,8,11,10,8,9,9,11,11,10,11,10,13,12,10,11,11,13,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,12,13,13,14,12,13,13,14,14,9,10,10,12,12,10,11,10,13,12,10,11,11,13,13,11,13,12,14,13,12,13,13,14,14,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,12,12,7,8,8,10,10,8,9,9,11,11,8,8,9,10,11,10,11,11,13,13,10,10,11,12,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,13,13,10,11,11,13,12,9,10,10,12,12,10,11,11,13,13,10,10,11,12,13,12,13,13,14,14,12,12,13,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,15,14,12,13,13,14,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,12,12,12,14,13,11,12,12,14,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,14,15,12,13,13,14,15,9,10,10,12,12,10,11,10,13,12,10,11,11,13,13,12,13,12,15,14,12,13,13,14,15,11,12,12,14,14,12,13,13,14,14,12,13,13,15,14,14,14,14,14,16,14,14,15,16,16,11,12,12,14,14,11,12,12,14,14,12,13,13,14,15,13,14,13,16,14,14,14,14,16,16,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,14,14,9,10,10,12,12,10,11,11,13,13,10,10,11,12,13,12,13,13,15,14,12,12,13,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,14,14,12,13,13,15,14,11,12,12,14,13,12,13,13,15,14,11,12,12,13,14,14,15,14,16,15,13,13,14,13,16,11,12,12,14,14,12,13,13,14,15,12,13,12,15,14,14,14,14,16,15,14,15,13,16,14,1,5,5,5,7,7,5,7,7,5,7,7,8,9,9,7,9,9,5,7,7,7,9,9,8,9,9,5,7,7,7,9,9,7,9,9,7,9,9,9,10,11,9,11,10,7,9,9,9,11,10,9,10,11,5,7,7,7,9,9,7,9,9,7,9,9,9,11,10,9,10,10,8,9,9,9,11,11,9,11,10,6,14,18,18,17,17,17,17,17,17,4,7,9,9,10,13,15,17,17,17,6,7,5,6,8,11,16,17,16,17,5,7,5,4,6,10,14,17,17,17,6,6,6,5,7,10,13,16,17,17,7,6,7,7,7,8,7,10,15,16,12,9,9,6,6,5,3,5,11,15,14,14,13,5,5,7,3,4,8,15,17,17,13,7,7,10,6,6,10,15,17,17,16,10,11,14,10,10,15,17,3,9,14,13,15,14,16,13,13,14,5,5,7,7,8,9,11,10,12,15,10,6,5,6,6,9,10,10,13,16,10,6,6,6,6,8,9,9,12,15,14,7,6,6,5,6,6,8,12,15,10,8,7,7,6,7,7,7,11,13,14,10,9,8,5,6,4,5,9,12,10,9,9,8,6,6,5,3,6,11,12,11,12,12,10,9,8,5,5,8,10,11,15,13,13,13,12,8,6,7,2,4,4,4,4,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,1,4,4,6,5,8,6,9,8,10,9,11,10,4,6,6,8,8,9,9,11,10,11,11,11,11,4,6,6,8,8,10,9,11,11,11,11,11,12,6,8,8,10,10,11,11,12,12,13,12,13,13,6,8,8,10,10,11,11,12,12,12,13,14,13,8,10,10,11,11,12,13,14,14,14,14,15,15,8,10,10,11,12,12,13,13,14,14,14,14,15,9,11,11,13,13,14,14,15,14,16,15,17,15,9,11,11,12,13,14,14,15,14,15,15,15,16,10,12,12,13,14,15,15,15,15,16,17,16,17,10,13,12,13,14,14,16,16,16,16,15,16,17,11,13,13,14,15,14,17,15,16,17,17,17,17,11,13,13,14,15,15,15,15,17,17,16,17,16,1,3,3,10,10,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,4,5,5,6,6,7,7,7,7,7,7,5,6,6,7,7,7,7,7,7,7,7,5,6,6,6,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,8,8,6,7,7,7,7,7,7,7,7,8,8,7,7,7,7,7,8,7,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,1,4,4,6,6,8,8,10,10,11,11,4,6,6,7,7,9,9,11,10,12,12,5,6,5,7,7,9,9,10,11,12,12,6,7,7,8,8,10,10,11,11,13,13,6,7,7,8,8,10,10,11,12,13,13,8,9,9,10,10,11,11,12,12,14,14,8,9,9,10,10,11,11,12,12,14,14,10,10,10,11,11,13,12,14,14,15,15,10,10,10,12,12,13,13,14,14,15,15,11,12,12,13,13,14,14,15,14,16,15,11,12,12,13,13,14,14,15,15,15,16,3,4,4,6,6,7,7,8,8,8,8,4,5,5,6,6,8,7,8,8,8,8,4,5,5,6,6,7,8,8,8,8,8,6,7,6,7,7,8,8,9,9,9,9,6,6,7,7,7,8,8,9,9,9,9,7,8,7,8,8,9,9,9,9,9,9,7,7,8,8,8,9,9,9,9,9,9,8,8,8,9,9,9,9,10,9,9,9,8,8,8,9,9,9,9,9,9,9,10,8,8,8,9,9,9,9,10,9,10,10,8,8,8,9,9,9,9,9,10,10,10,1,4,4,5,7,7,5,7,7,5,9,8,8,9,9,7,10,10,5,8,9,7,9,10,8,9,9,4,9,9,9,11,10,8,10,10,7,11,10,10,10,12,10,12,12,7,10,10,10,12,11,10,12,12,5,9,9,8,10,10,9,11,11,7,11,10,10,12,12,10,11,12,7,10,11,10,12,12,10,12,10,3,4,4,5,5,7,7,9,9,4,5,4,6,6,8,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,10,10,5,6,6,7,7,8,8,10,10,7,8,7,8,8,10,9,11,11,7,7,8,8,8,9,10,11,11,9,9,9,10,10,11,10,12,11,9,9,9,10,10,11,11,11,12,2,3,3,6,6,7,8,10,10,4,5,5,8,7,8,8,11,11,3,5,5,7,7,8,9,11,11,6,8,7,9,9,10,10,12,12,6,7,8,9,10,10,10,12,12,8,8,8,10,10,12,11,13,13,8,8,9,10,10,11,11,13,13,10,11,11,12,12,13,13,14,14,10,11,11,12,12,13,13,14,14,4,5,5,8,8,6,7,6,9,9,6,6,7,9,9,8,9,9,11,11,8,9,9,10,11,6,7,7,9,9,7,8,8,10,10,6,7,8,9,10,9,10,10,12,12,9,9,10,11,12,6,7,7,9,9,6,8,7,10,9,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,13,14,11,11,12,13,13,8,9,9,11,11,9,10,10,12,11,9,10,10,12,12,11,12,11,13,13,11,12,12,13,13,6,7,7,9,9,7,8,7,10,10,7,7,8,10,10,9,10,10,12,11,9,10,10,12,12,7,8,8,10,10,8,8,9,11,11,8,9,9,11,11,10,11,11,12,12,10,10,11,12,13,6,7,7,10,10,7,9,8,11,10,8,8,9,10,11,10,11,10,13,11,10,11,11,12,12,9,10,10,12,12,10,10,11,13,13,10,11,11,13,12,12,12,13,13,14,12,12,13,14,14,9,10,10,12,12,9,10,10,12,12,10,11,11,13,13,11,12,11,14,12,12,13,13,14,14,6,7,7,9,9,7,8,7,10,10,7,7,8,10,10,9,10,10,12,11,9,10,10,11,12,6,7,7,10,10,8,9,8,11,10,7,8,9,10,11,10,11,11,13,12,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,10,13,12,10,11,11,12,12,9,10,10,12,12,10,11,11,13,12,9,10,10,12,13,12,13,12,14,14,11,11,12,12,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,12,14,14,12,13,12,14,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,12,12,13,13,14,14,12,12,13,14,14,9,10,10,12,12,9,11,10,13,12,10,10,11,12,13,11,13,12,14,13,12,12,13,14,14,11,12,12,13,13,11,12,13,14,14,12,13,13,14,14,13,13,14,14,16,13,14,14,16,16,11,11,11,13,13,11,12,11,14,13,12,12,13,14,15,13,14,12,16,13,14,14,14,15,16,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,14,9,10,10,12,12,10,11,10,13,12,9,10,11,12,13,12,13,12,14,14,12,12,13,13,14,9,10,10,12,12,10,11,11,12,13,10,11,11,13,13,12,13,12,14,14,12,13,13,14,14,11,12,12,13,13,12,13,12,14,14,11,11,12,13,14,13,15,14,16,15,13,12,14,13,16,11,12,12,13,13,12,13,13,14,14,12,12,12,14,14,13,14,14,15,15,13,14,13,16,14,2,5,4,8,8,5,7,6,9,9,5,6,7,9,9,8,9,9,13,12,8,9,10,12,13,5,7,7,10,9,7,9,9,11,11,6,8,9,11,11,10,11,11,14,14,9,10,11,13,14,5,7,7,9,9,7,9,8,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,14,8,10,10,14,13,10,11,12,15,14,9,11,11,15,14,13,14,14,16,16,12,13,14,17,16,8,10,10,13,13,9,11,11,14,15,10,11,12,14,15,12,14,13,16,16,13,14,15,15,17,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,15,14,10,11,12,14,14,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,11,13,13,14,17,11,13,13,15,16,6,9,9,11,11,8,11,10,13,12,9,11,11,13,13,11,13,12,16,14,11,13,13,16,16,10,12,12,15,15,11,13,13,16,16,11,13,13,16,15,14,16,17,17,19,14,16,16,18,0,9,11,11,14,15,10,13,12,16,15,11,13,13,16,16,14,15,14,0,16,14,16,16,18,0,5,7,7,10,10,7,9,9,12,11,7,9,9,11,12,10,11,11,15,14,10,11,12,14,14,6,9,9,11,11,9,11,11,13,13,8,10,11,12,13,11,13,13,17,15,11,12,13,14,15,7,9,9,11,12,9,11,11,13,13,9,11,11,13,13,11,13,12,16,16,11,13,13,15,14,9,11,11,14,15,11,13,13,16,15,10,12,13,16,16,15,16,16,0,0,14,13,15,16,18,10,11,11,15,15,11,13,14,16,18,11,13,13,16,15,15,16,16,19,0,14,15,15,16,16,8,10,10,13,13,10,12,11,16,15,10,11,11,16,15,13,15,16,18,0,13,14,15,17,17,9,11,11,15,15,11,13,13,16,18,11,13,13,16,17,15,16,16,0,0,15,18,16,0,17,9,11,11,15,15,11,13,12,17,15,11,13,14,16,17,15,18,15,0,17,15,16,16,18,19,13,15,14,0,18,14,16,16,19,18,14,16,15,19,19,16,18,19,0,0,16,17,0,0,0,12,14,14,17,17,13,16,14,0,18,14,16,15,18,0,16,18,16,19,17,18,19,17,0,0,8,10,10,14,14,9,12,11,15,15,10,11,12,15,17,13,15,15,18,16,14,16,15,18,17,9,11,11,16,15,11,13,13,0,16,11,12,13,16,15,15,16,16,0,17,15,15,16,18,17,9,12,11,15,17,11,13,13,16,16,11,14,13,16,16,15,15,16,18,19,16,18,16,0,0,12,14,14,0,16,14,16,16,0,18,13,14,15,16,0,17,16,18,0,0,16,16,17,19,0,13,14,14,17,0,14,17,16,0,19,14,15,15,18,19,17,16,18,0,0,15,19,16,0,0,3,4,4,5,6,6,5,6,6,5,6,6,6,8,8,6,7,8,5,6,6,6,8,7,6,8,8,5,6,6,6,8,7,6,8,8,6,8,8,8,9,9,8,9,9,6,8,7,7,9,8,8,9,9,5,6,6,6,8,7,6,8,8,6,8,8,8,9,9,7,8,9,6,8,8,8,9,9,8,9,9,1,4,4,4,7,7,5,7,7,5,8,8,8,10,10,7,10,10,5,8,8,7,10,10,8,10,10,5,8,8,8,11,10,8,10,10,8,10,10,10,12,13,10,13,13,7,10,10,10,13,12,10,13,13,5,8,8,8,11,10,8,10,11,7,10,10,10,13,13,10,12,13,8,11,11,10,13,13,10,13,12,5,12,17,16,16,17,17,17,17,17,4,7,11,11,12,9,17,10,17,17,7,7,8,9,7,9,11,10,15,17,7,9,10,11,10,12,14,12,16,17,7,8,5,7,4,7,7,8,16,16,6,10,9,10,7,10,11,11,16,17,6,8,8,9,5,7,5,8,16,17,5,5,8,7,6,7,7,6,6,14,12,10,12,11,7,11,4,4,2,7,17,15,15,15,8,15,6,8,5,9,3,9,14,13,14,13,16,12,13,14,5,4,6,6,8,9,11,10,12,15,10,5,5,6,6,8,10,10,13,16,10,6,6,6,6,8,9,9,12,14,13,7,6,6,4,6,6,7,11,14,10,7,7,7,6,6,6,7,10,13,15,10,9,8,5,6,5,6,10,14,10,9,8,8,6,6,5,4,6,11,11,11,12,11,10,9,9,5,5,9,10,12,15,13,13,13,13,8,7,7,3,5,5,7,7,8,8,8,8,8,8,9,8,8,9,9,9,5,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,10,9,9,9,9,9,9,9,9,9,9,10,9,9,9,10,9,9,10,9,9,9,9,9,9,9,9,9,10,10,10,9,10,9,10,10,9,9,9,9,9,9,9,9,9,10,10,9,10,10,9,9,10,1,4,4,7,7,8,9,8,8,9,8,9,8,9,9,4,7,6,8,8,9,9,9,9,9,9,9,9,9,9,4,7,6,9,9,10,10,9,9,10,10,10,10,11,11,7,9,8,10,10,11,11,10,10,11,11,11,11,11,11,7,8,9,10,10,11,11,10,10,11,11,11,11,11,12,8,10,10,11,11,12,12,11,11,12,12,12,12,13,12,8,10,10,11,11,12,11,11,11,11,12,12,12,12,13,8,9,9,11,10,11,11,12,12,12,12,13,12,13,12,8,9,9,11,11,11,11,12,12,12,12,12,13,13,13,9,10,10,11,12,12,12,12,12,13,13,13,13,13,13,9,10,10,11,11,12,12,12,12,13,13,13,13,14,13,10,10,10,12,11,12,12,13,13,13,13,13,13,13,13,10,10,11,11,11,12,12,13,13,13,13,13,13,13,13,10,11,11,12,12,13,12,12,13,13,13,13,13,13,14,10,11,11,12,12,13,12,13,13,13,14,13,13,14,13,1,3,2,9,8,15,15,15,15,15,15,15,15,15,15,4,8,9,13,14,14,14,14,14,14,14,14,14,14,14,5,8,9,14,14,14,14,14,14,14,14,14,14,14,14,11,14,14,14,14,14,14,14,14,14,14,14,14,14,14,11,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,5,5,6,6,7,7,7,7,7,7,5,6,5,7,7,7,7,8,7,8,8,5,5,6,6,7,7,7,7,7,8,8,6,7,7,7,7,8,7,8,8,8,8,6,6,7,7,7,7,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,7,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,1,4,4,6,6,8,8,9,9,10,10,4,6,6,7,7,9,9,10,10,11,11,4,6,6,7,7,9,9,10,10,11,11,6,8,8,9,9,10,10,11,11,12,12,6,8,8,9,9,10,10,11,11,12,12,8,9,9,10,10,11,11,12,12,13,13,8,9,9,10,10,11,11,12,12,13,13,10,10,10,11,11,13,13,13,13,15,14,9,10,10,12,11,12,13,13,13,14,15,11,12,12,13,13,13,13,15,14,15,15,11,11,12,13,13,14,14,14,15,15,15,3,4,4,6,6,7,7,8,8,8,8,4,5,5,7,6,8,8,8,8,8,8,4,5,5,6,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,7,8,8,8,8,8,8,9,9,9,9,7,8,8,8,8,8,8,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+254985);\n/* memory initializer */ allocate([9,1,4,4,5,7,7,5,7,7,5,9,8,7,10,10,8,10,10,5,8,9,7,10,10,7,10,9,4,8,8,9,11,11,8,11,11,7,11,11,10,10,13,10,13,13,7,11,11,10,13,12,10,13,13,5,9,8,8,11,11,9,11,11,7,11,11,10,13,13,10,12,13,7,11,11,10,13,13,9,13,10,3,4,4,5,5,7,7,9,9,4,5,4,6,6,7,7,9,9,4,4,5,6,6,7,8,9,9,5,6,6,7,7,8,8,10,10,5,6,6,7,7,8,8,10,10,7,8,7,8,8,10,9,11,11,7,7,8,8,8,9,10,10,11,9,9,9,10,10,11,11,12,11,9,9,9,10,10,11,11,11,12,2,3,3,6,6,8,8,10,10,4,5,5,8,7,8,8,11,11,3,5,5,7,8,8,8,11,11,6,8,7,9,9,10,9,12,11,6,7,8,9,9,9,10,11,12,8,8,8,10,9,12,11,13,13,8,8,9,9,10,11,12,13,13,10,11,11,12,12,13,13,14,14,10,10,11,11,12,13,13,14,14,4,5,5,8,8,6,7,6,9,9,6,6,7,9,9,8,9,9,11,11,8,9,9,11,11,6,7,7,9,9,7,8,8,10,10,7,7,8,9,10,9,10,10,11,11,9,9,10,11,12,6,7,7,9,9,7,8,7,10,9,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,11,12,13,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,11,13,12,11,12,12,13,13,5,7,7,9,9,7,8,7,10,10,7,7,8,10,10,9,10,10,12,11,9,10,10,11,12,7,8,8,10,10,8,8,9,11,11,8,9,9,11,11,10,10,11,12,13,10,10,11,12,12,6,7,7,10,10,7,9,8,11,10,8,8,9,10,11,10,11,10,13,11,10,11,11,12,12,9,10,10,12,12,10,10,11,13,13,10,11,11,12,13,12,12,12,13,14,12,12,13,14,14,9,10,10,12,12,9,10,10,13,12,10,11,11,13,13,11,12,11,14,12,12,13,13,14,14,6,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,11,12,6,7,7,10,10,8,9,8,11,10,7,8,9,10,11,10,11,11,12,12,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,8,11,11,10,11,10,13,12,10,11,11,13,12,9,10,10,12,12,10,11,11,13,12,9,10,10,12,13,12,13,12,14,14,11,11,12,12,14,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,12,12,14,14,12,13,12,14,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,12,13,14,15,12,12,13,14,14,9,10,10,12,12,9,11,10,13,12,10,10,11,12,13,12,13,12,14,13,12,12,13,14,15,11,12,12,14,13,11,12,12,14,14,12,13,13,14,14,13,13,14,14,16,13,14,14,15,15,11,12,11,13,13,11,12,11,14,13,12,12,13,14,15,12,14,12,15,12,13,14,15,15,16,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,13,9,10,10,12,12,10,11,10,13,12,9,10,11,12,13,12,13,12,14,14,12,12,13,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,12,14,14,12,13,13,14,14,11,11,11,13,13,12,13,12,14,14,11,11,12,13,14,14,14,14,16,15,12,12,14,12,15,11,12,12,13,14,12,13,13,14,15,11,12,12,14,14,13,14,14,16,16,13,14,13,16,13,2,5,4,8,8,5,7,6,9,9,5,6,7,9,9,8,9,9,13,12,8,9,10,12,13,5,7,7,10,9,7,9,9,11,11,7,8,9,11,11,10,11,11,14,14,9,10,11,13,14,5,7,7,9,10,6,9,8,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,13,8,10,10,13,13,10,11,11,15,15,9,11,11,14,14,13,14,14,17,16,12,13,14,16,16,8,10,10,13,14,9,11,11,14,15,10,11,12,14,15,12,14,13,16,15,13,14,14,15,17,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,14,14,10,11,11,14,14,7,9,9,12,11,9,11,11,13,13,9,11,11,13,13,11,13,13,14,15,11,12,13,15,16,6,9,9,11,12,8,11,10,13,12,9,11,11,13,14,11,13,12,16,14,11,13,13,15,16,10,12,11,14,15,11,13,13,15,17,11,13,13,17,16,15,15,16,17,16,14,15,16,18,0,9,11,11,14,15,10,12,12,16,15,11,13,13,16,16,13,15,14,18,15,14,16,16,0,0,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,11,11,14,14,10,11,12,14,14,6,9,9,11,11,9,11,11,13,13,8,10,11,12,13,11,13,13,16,15,11,12,13,14,16,7,9,9,11,12,9,11,11,13,13,9,11,11,13,13,11,13,13,16,15,11,13,12,15,15,9,11,11,15,14,11,13,13,17,16,10,12,13,15,16,14,16,16,0,18,14,14,15,15,17,10,11,12,15,15,11,13,13,16,16,11,13,13,16,16,14,16,16,19,17,14,15,15,17,17,8,10,10,14,14,10,12,11,15,15,10,11,12,16,15,14,15,15,18,20,13,14,16,17,18,9,11,11,15,16,11,13,13,17,17,11,13,13,17,16,15,16,16,0,0,15,16,16,0,0,9,11,11,15,15,10,13,12,17,15,11,13,13,17,16,15,17,15,20,19,15,16,16,19,0,13,15,14,0,17,14,15,16,0,20,15,16,16,0,19,17,18,0,0,0,16,17,18,0,0,12,14,14,19,18,13,15,14,0,17,14,15,16,19,19,16,18,16,0,19,19,20,17,20,0,8,10,10,13,14,10,11,11,15,15,10,12,12,15,16,14,15,14,19,16,14,15,15,0,18,9,11,11,16,15,11,13,13,0,16,11,12,13,16,17,14,16,17,0,19,15,16,16,18,0,9,11,11,15,16,11,13,13,16,16,11,14,13,18,17,15,16,16,18,20,15,17,19,0,0,12,14,14,17,17,14,16,15,0,0,13,14,15,19,0,16,18,20,0,0,16,16,18,18,0,12,14,14,17,20,14,16,16,19,0,14,16,14,0,20,16,20,17,0,0,17,0,15,0,19,3,4,4,5,6,6,5,6,6,5,6,6,6,8,8,6,7,8,5,6,6,6,8,7,6,8,8,5,6,6,6,8,8,6,8,8,6,8,8,8,9,9,8,9,9,6,7,7,7,9,8,8,9,9,5,6,6,6,8,7,6,8,8,6,8,8,8,9,9,7,8,9,6,8,8,8,9,9,8,9,9,1,4,4,4,8,7,5,7,7,5,8,8,8,10,10,7,9,10,5,8,8,7,10,9,8,10,10,5,8,8,8,10,10,8,10,10,8,10,10,10,12,13,10,13,13,7,10,10,10,13,11,10,13,13,5,8,8,8,11,10,8,10,10,7,10,10,10,13,13,10,11,13,8,10,11,10,13,13,10,13,12,4,11,16,13,17,13,17,16,17,17,4,7,9,9,13,10,16,12,16,17,7,6,5,7,8,9,12,12,16,17,6,9,7,9,10,10,15,15,17,17,6,7,5,7,5,7,7,10,16,17,7,9,8,9,8,10,11,11,15,17,7,7,7,8,5,8,8,9,15,17,8,7,9,9,7,8,7,2,7,15,14,13,13,15,5,10,4,3,6,17,17,15,13,17,7,11,7,6,9,16,3,8,13,12,14,12,16,11,13,14,5,4,5,6,7,8,10,9,12,15,10,5,5,5,6,8,9,9,13,15,10,5,5,6,6,7,8,8,11,13,12,7,5,6,4,6,7,7,11,14,11,7,7,6,6,6,7,6,10,14,14,9,8,8,6,7,7,7,11,16,11,8,8,7,6,6,7,4,7,12,10,10,12,10,10,9,10,5,6,9,10,12,15,13,14,14,14,8,7,8,2,5,5,7,7,8,8,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,7,7,7,8,8,9,8,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,9,8,9,9,9,9,9,9,9,9,9,9,8,8,8,8,9,9,9,9,9,9,9,9,10,9,10,10,10,8,8,8,9,8,9,9,9,9,9,9,9,10,9,10,9,10,8,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,8,9,9,9,9,9,9,10,9,10,9,10,10,10,10,10,10,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,9,10,9,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,7,8,7,9,8,9,9,4,7,6,9,8,10,10,9,8,9,9,9,9,9,8,5,6,6,8,9,10,10,9,9,9,10,10,10,10,11,7,8,8,10,10,11,11,10,10,11,11,11,12,11,11,7,8,8,10,10,11,11,10,10,11,11,12,11,11,11,8,9,9,11,11,12,12,11,11,12,11,12,12,12,12,8,9,10,11,11,12,12,11,11,12,12,12,12,12,12,8,9,9,10,10,12,11,12,12,12,12,12,12,12,13,8,9,9,11,11,11,11,12,12,12,12,13,12,13,13,9,10,10,11,11,12,12,12,13,12,13,13,13,14,13,9,10,10,11,11,12,12,12,13,13,12,13,13,14,13,9,11,10,12,11,13,12,12,13,13,13,13,13,13,14,9,10,10,12,12,12,12,12,13,13,13,13,13,14,14,10,11,11,12,12,12,13,13,13,14,14,13,14,14,14,10,11,11,12,12,12,12,13,12,13,14,13,14,14,14,1,3,2,12,10,13,13,13,13,13,13,13,13,4,9,9,13,13,13,13,13,13,13,13,13,13,5,10,9,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,5,5,6,6,7,7,7,7,7,7,5,6,5,7,6,7,7,8,8,8,8,5,5,5,6,6,7,7,8,8,8,8,6,7,6,7,7,8,8,8,8,8,8,6,6,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,4,4,6,6,8,8,9,9,10,10,4,6,6,7,7,9,9,10,10,11,11,4,6,6,7,7,9,9,10,10,11,11,6,8,7,9,9,10,10,11,11,13,12,6,8,8,9,9,10,10,11,11,12,13,8,9,9,10,10,12,12,13,12,14,13,8,9,9,10,10,12,12,13,13,14,14,9,11,11,12,12,13,13,14,14,15,14,9,11,11,12,12,13,13,14,14,15,14,11,12,12,13,13,14,14,15,14,15,14,11,11,12,13,13,14,14,14,14,15,15,2,4,4,6,6,7,7,8,8,8,8,4,5,5,7,7,8,8,9,8,8,9,4,5,5,7,7,8,8,9,9,8,9,6,7,7,8,8,9,8,9,9,9,9,6,7,7,8,8,9,9,9,9,9,9,7,8,8,9,9,9,9,9,9,9,9,7,8,8,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,1,4,4,5,7,7,5,7,7,5,9,9,8,11,10,7,11,10,5,9,9,7,10,10,8,10,11,4,9,9,9,12,12,9,12,12,8,12,12,11,12,12,10,12,13,7,12,12,11,12,12,10,12,13,4,9,9,9,12,12,9,12,12,7,12,11,10,13,13,11,12,12,7,12,12,10,13,13,11,12,12,3,4,4,5,5,7,7,9,9,4,5,4,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,10,10,6,6,6,7,7,8,8,10,10,7,7,7,8,8,9,9,11,10,7,7,7,8,8,9,9,10,11,9,9,9,10,10,11,10,11,11,9,9,9,10,10,11,10,11,11,2,3,3,6,6,8,8,10,10,4,5,5,8,7,8,8,11,10,3,5,5,7,8,8,8,10,11,6,8,7,10,9,10,10,11,11,6,7,8,9,9,9,10,11,12,8,8,8,10,10,11,11,13,12,8,8,9,9,10,11,11,12,13,10,11,10,12,11,13,12,14,14,10,10,11,11,12,12,13,14,14,4,5,5,8,8,6,7,6,9,9,6,6,7,9,9,8,9,9,11,11,8,9,9,11,11,6,7,7,9,9,7,8,8,10,10,6,7,8,9,10,9,10,10,11,12,9,9,10,11,12,6,7,7,9,9,6,8,7,10,9,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,8,9,9,12,11,9,10,10,12,12,9,10,10,12,12,11,12,12,13,14,11,11,12,13,14,8,9,9,11,12,9,10,10,12,12,9,10,10,12,12,11,12,11,14,13,11,12,12,13,13,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,12,12,7,8,8,10,10,8,8,9,10,11,8,9,9,11,11,10,10,11,11,13,10,11,11,12,13,6,7,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,12,12,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,11,13,12,15,12,13,13,14,15,9,10,10,12,12,9,11,10,13,12,10,11,11,13,13,11,13,11,14,12,12,13,13,14,15,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,12,12,6,8,7,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,12,12,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,8,11,10,10,11,11,13,12,10,11,10,13,11,9,10,10,12,12,10,11,11,13,12,9,10,10,12,13,12,13,13,14,15,11,11,13,12,14,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,13,13,14,14,12,13,11,14,12,8,9,9,12,12,9,10,10,12,12,9,10,10,12,12,12,12,12,14,14,11,12,12,14,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,12,12,12,13,14,15,12,13,13,15,14,9,10,10,12,12,10,11,10,13,12,10,11,11,12,13,12,13,12,15,13,12,13,13,14,15,11,12,12,14,13,11,12,12,14,15,12,13,13,15,14,13,12,14,12,16,13,14,14,15,15,11,11,12,14,14,11,12,11,14,13,12,13,13,14,15,13,14,12,16,12,14,14,15,16,16,8,9,9,11,12,9,10,10,12,12,9,10,10,12,13,11,12,12,13,13,12,12,13,14,14,9,10,10,12,12,10,11,10,13,12,10,10,11,12,13,12,13,13,15,14,12,12,13,13,15,9,10,10,12,13,10,11,11,12,13,10,11,11,13,13,12,13,13,14,15,12,13,12,15,14,11,12,11,14,13,12,13,13,15,14,11,11,12,13,14,14,15,14,16,15,13,12,14,13,16,11,12,12,13,14,12,13,13,14,15,11,12,11,14,14,14,14,14,15,16,13,15,12,16,12,2,4,5,8,8,5,7,6,9,9,5,6,7,9,9,8,10,9,13,12,8,9,10,12,12,5,7,7,10,10,7,9,9,11,11,6,8,9,11,11,10,11,11,14,14,9,10,11,13,14,5,7,7,9,10,7,9,8,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,14,8,10,10,13,13,10,11,11,15,14,9,11,11,14,14,13,14,14,17,16,12,13,13,15,16,8,10,10,13,13,9,11,11,14,15,10,11,11,14,15,12,14,13,16,16,13,15,14,15,17,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,11,11,14,14,10,11,12,14,14,7,9,9,12,11,9,11,11,13,13,9,11,11,13,13,12,13,13,15,16,11,12,13,15,16,6,9,9,11,11,8,11,10,13,12,9,11,11,13,14,11,13,12,16,14,11,13,13,16,17,10,12,11,15,15,11,13,13,16,16,11,13,13,17,16,14,15,15,17,17,14,16,16,17,18,9,11,11,14,15,10,12,12,15,15,11,13,13,16,17,13,15,13,17,15,14,15,16,18,0,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,11,11,14,14,10,11,12,14,15,6,9,9,12,11,9,11,11,13,13,8,10,11,12,13,11,13,13,16,15,11,12,13,14,15,7,9,9,11,12,9,11,11,13,13,9,11,11,13,13,11,13,13,15,16,11,13,13,15,14,9,11,11,15,14,11,13,13,17,15,10,12,12,15,15,14,16,16,17,17,13,13,15,15,17,10,11,12,15,15,11,13,13,16,16,11,13,13,15,15,14,15,15,18,18,14,15,15,17,17,8,10,10,13,13,10,12,11,15,15,10,11,12,15,15,14,15,15,18,18,13,14,14,18,18,9,11,11,15,16,11,13,13,17,17,11,13,13,16,16,15,15,16,17,0,14,15,17,0,0,9,11,11,15,15,10,13,12,18,16,11,13,13,15,16,14,16,15,20,20,14,15,16,17,0,13,14,14,20,16,14,15,16,19,18,14,15,15,19,0,18,16,0,20,20,16,18,18,0,0,12,14,14,18,18,13,15,14,18,16,14,15,16,18,20,16,19,16,0,17,17,18,18,19,0,8,10,10,14,14,10,11,11,14,15,10,11,12,15,15,13,15,14,19,17,13,15,15,17,0,9,11,11,16,15,11,13,13,16,16,10,12,13,15,17,14,16,16,18,18,14,15,15,18,0,9,11,11,15,15,11,13,13,16,17,11,13,13,18,17,14,18,16,18,18,15,17,17,18,0,12,14,14,18,18,14,15,15,20,0,13,14,15,17,0,16,18,17,0,0,16,16,0,17,20,12,14,14,18,18,14,16,15,0,18,14,16,15,18,0,16,19,17,0,0,17,18,16,0,0,3,4,4,5,6,6,5,6,6,5,6,6,6,8,8,6,7,8,5,6,6,6,8,7,6,8,8,5,6,6,6,8,8,6,8,8,6,8,8,8,9,9,8,9,9,6,8,7,7,9,8,8,9,9,5,6,6,6,8,7,6,8,8,6,8,7,8,9,9,7,8,9,6,8,8,8,9,9,8,9,9,1,4,4,5,8,7,5,7,7,5,8,8,8,10,10,7,9,10,5,8,8,7,10,9,8,10,10,5,8,8,8,10,10,8,10,10,8,10,10,10,12,13,10,13,13,7,10,10,10,13,11,10,13,13,4,8,8,8,11,10,8,10,10,7,10,10,10,13,13,10,11,13,8,10,11,10,13,13,10,13,12,4,10,17,13,17,13,17,17,17,17,3,6,8,9,11,9,15,12,16,17,6,5,5,7,7,8,10,11,17,17,7,8,7,9,9,10,13,13,17,17,8,6,5,7,4,7,5,8,14,17,9,9,8,9,7,9,8,10,16,17,12,10,7,8,4,7,4,7,16,17,12,11,9,10,6,9,5,7,14,17,14,13,10,15,4,8,3,5,14,17,17,14,11,15,6,10,6,8,15,17,3,8,12,12,13,12,11,13,5,4,6,7,8,8,9,13,9,5,4,5,5,7,9,13,9,6,5,6,6,7,8,12,12,7,5,6,4,5,8,13,11,7,6,6,5,5,6,12,10,8,8,7,7,5,3,8,10,12,13,12,12,9,6,7,2,5,5,7,7,7,7,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,7,7,7,8,8,8,8,9,9,9,9,10,9,10,9,10,10,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,8,9,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,8,8,8,9,9,9,9,9,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,11,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,10,10,10,10,10,10,10,10,10,10,11,10,10,10,1,4,4,6,6,7,7,9,8,10,8,10,9,11,11,4,7,6,8,7,9,9,10,10,11,10,11,10,12,10,4,6,7,8,8,9,9,10,10,11,11,11,11,12,12,6,8,8,10,9,11,10,12,11,12,12,12,12,13,13,6,8,8,10,10,10,11,11,11,12,12,13,12,13,13,8,9,9,11,11,12,11,12,12,13,13,13,13,13,13,8,9,9,11,11,11,12,12,12,13,13,13,13,13,13,9,10,10,12,11,13,13,13,13,14,13,13,14,14,14,9,10,11,11,12,12,13,13,13,13,13,14,15,14,14,10,11,11,12,12,13,13,14,14,14,14,14,15,16,16,10,11,11,12,13,13,13,13,15,14,14,15,16,15,16,10,12,12,13,13,14,14,14,15,15,15,15,15,15,16,11,12,12,13,13,14,14,14,15,15,15,16,15,17,16,11,12,12,13,13,13,15,15,14,16,16,16,16,16,17,11,12,12,13,13,14,14,15,14,15,15,17,17,16,16,1,3,3,12,12,12,12,12,12,12,12,12,12,3,12,11,12,12,12,12,12,12,12,12,12,12,4,11,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,6,5,6,6,5,5,6,6,6,1,4,4,6,6,8,8,9,9,11,10,13,13,4,6,5,8,8,9,9,10,10,11,11,14,14,4,6,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,15,15,6,8,8,9,9,10,11,11,11,12,12,15,15,8,9,9,11,10,11,11,12,12,13,13,16,16,8,9,9,10,10,11,11,12,12,13,13,16,16,10,10,10,12,11,12,12,13,13,14,14,16,16,10,10,10,11,12,12,12,13,13,13,14,16,17,11,12,11,12,12,13,13,14,14,15,14,18,17,11,11,12,12,12,13,13,14,14,14,15,19,18,14,15,14,15,15,17,16,17,17,17,17,21,0,14,15,15,16,16,16,16,17,17,18,17,20,21,2,3,3,6,6,7,7,9,9,4,5,5,7,7,8,8,10,9,4,5,5,7,7,8,8,10,10,6,7,7,8,8,9,9,11,10,6,7,7,8,8,9,9,10,11,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,10,10,11,10,11,11,12,12,9,10,10,10,11,11,11,12,12,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,9,9,9,11,11,8,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,7,8,10,10,9,10,10,11,12,9,10,10,11,12,5,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,12,11,9,10,9,12,12,9,10,10,13,12,9,10,10,12,12,12,12,12,14,14,11,12,12,13,14,9,9,10,12,12,9,10,10,13,13,9,10,10,12,13,11,12,12,14,13,11,12,12,14,14,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,9,10,10,12,12,7,8,8,11,10,8,8,9,11,11,8,9,9,11,11,11,11,11,12,13,10,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,13,13,9,11,10,13,12,10,11,11,13,14,10,11,11,14,13,12,12,13,12,15,12,13,13,15,15,9,10,10,12,13,10,11,10,13,12,10,11,11,13,14,12,13,11,15,13,13,13,13,15,15,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,10,10,11,12,13,6,8,8,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,7,8,8,10,11,8,9,9,11,11,8,9,8,11,11,10,11,11,13,13,11,12,11,13,12,9,10,10,13,12,10,11,11,14,13,10,10,11,12,13,12,13,13,15,15,12,11,13,13,14,9,10,11,12,13,10,11,11,13,14,10,11,11,13,13,12,13,13,15,15,12,13,12,15,12,8,9,9,12,12,9,11,10,13,13,9,10,10,13,13,12,13,13,15,15,12,12,12,14,14,9,10,10,13,13,10,11,11,13,14,10,11,11,14,13,13,13,14,14,16,13,13,13,15,15,9,10,10,13,13,10,11,10,14,13,10,11,11,13,14,12,14,13,16,14,12,13,13,14,15,11,12,12,15,14,11,12,13,14,15,12,13,13,16,15,14,12,15,12,16,14,15,15,16,16,11,12,12,14,14,11,13,12,15,14,12,13,13,15,16,13,15,13,17,13,14,15,15,16,17,8,9,9,12,12,9,10,10,12,13,9,10,10,13,13,12,12,12,14,14,12,13,13,15,15,9,10,10,13,12,10,11,11,14,13,10,10,11,13,14,13,13,13,15,15,12,13,14,14,16,9,10,10,13,13,10,11,11,13,14,10,11,11,14,14,13,13,13,15,15,13,14,13,16,14,11,12,12,15,14,12,13,13,16,15,11,12,13,14,15,14,15,15,17,16,13,13,15,13,16,11,12,13,14,15,13,13,13,15,16,11,13,12,15,14,14,15,15,16,16,14,15,12,17,13,2,4,4,8,8,5,7,7,9,9,5,7,7,9,9,8,10,9,12,12,8,9,10,12,12,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,14,14,9,10,11,13,14,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,14,8,10,10,14,13,10,12,12,15,14,9,11,11,15,14,13,14,14,17,17,12,14,14,16,16,8,10,10,14,14,9,11,11,14,15,10,12,12,14,15,12,14,13,16,16,13,14,15,15,18,4,7,7,10,10,7,9,9,12,11,7,9,9,11,12,10,12,11,15,14,10,11,12,14,15,7,9,9,12,12,9,11,12,13,13,9,11,12,13,13,12,13,13,15,16,11,13,13,15,16,7,9,9,12,12,9,11,10,13,12,9,11,12,13,14,11,13,12,16,14,12,13,13,15,16,10,12,12,16,15,11,13,13,17,16,11,13,13,17,16,14,15,15,17,17,14,16,16,18,20,9,11,11,15,16,11,13,12,16,16,11,13,13,16,17,14,15,14,18,16,14,16,16,17,20,5,7,7,10,10,7,9,9,12,11,7,9,10,11,12,10,12,11,15,15,10,12,12,14,14,7,9,9,12,12,9,12,11,14,13,9,10,11,12,13,12,13,14,16,16,11,12,13,14,16,7,9,9,12,12,9,12,11,13,13,9,12,11,13,13,11,13,13,16,16,12,13,13,16,15,9,11,11,16,14,11,13,13,16,16,11,12,13,16,16,14,16,16,17,17,13,14,15,16,17,10,12,12,15,15,11,13,13,16,17,11,13,13,16,16,14,16,15,19,19,14,15,15,17,18,8,10,10,14,14,10,12,12,15,15,10,12,12,16,16,14,16,15,20,19,13,15,15,17,16,9,12,12,16,16,11,13,13,16,18,11,14,13,16,17,16,17,16,20,0,15,16,18,18,20,9,11,11,15,15,11,14,12,17,16,11,13,13,17,17,15,17,15,20,20,14,16,16,17,0,13,15,14,18,16,14,15,16,0,18,14,16,16,0,0,18,16,0,0,20,16,18,18,0,0,12,14,14,17,18,13,15,14,20,18,14,16,15,19,19,16,20,16,0,18,16,19,17,19,0,8,10,10,14,14,10,12,12,16,15,10,12,12,16,16,13,15,15,18,17,14,16,16,19,0,9,11,11,16,15,11,14,13,18,17,11,12,13,17,18,14,17,16,18,18,15,16,17,18,18,9,12,12,16,16,11,13,13,16,18,11,14,13,17,17,15,16,16,18,20,16,17,17,20,20,12,14,14,18,17,14,16,16,0,19,13,14,15,18,0,16,0,0,0,0,16,16,0,19,20,13,15,14,0,0,14,16,16,18,19,14,16,15,0,20,16,20,18,0,20,17,20,17,0,0,2,5,5,5,6,6,5,6,6,5,6,6,7,8,8,6,8,8,5,6,6,6,8,8,7,8,8,5,7,6,6,8,8,6,8,8,6,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,6,6,6,8,8,6,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,10,11,8,10,11,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,11,11,11,13,14,11,15,14,8,11,11,10,13,12,11,14,14,4,8,8,8,11,11,8,11,11,7,11,11,11,15,14,10,12,14,8,11,11,11,14,14,11,14,13,14,17,15,17,16,14,13,16,10,7,7,10,13,10,15,16,9,4,4,6,5,7,9,16,12,8,7,8,8,8,11,16,14,7,4,6,3,5,8,15,13,8,5,7,4,5,7,16,12,9,6,8,3,3,5,16,14,13,7,10,5,5,7,15,6,9,13,12,14,11,10,13,8,4,5,7,8,7,8,12,11,4,3,5,5,7,9,14,11,6,5,6,6,6,7,13,13,7,5,6,4,5,7,14,11,7,6,6,5,5,6,13,9,7,8,6,7,5,3,9,9,12,13,12,14,10,6,7,2,5,5,7,6,7,7,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,10,5,6,6,7,7,8,8,8,8,9,8,9,9,9,9,10,9,7,7,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,7,7,7,8,8,8,8,9,9,9,9,10,9,10,10,10,10,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,7,8,8,9,8,9,9,9,9,10,9,10,10,10,10,10,10,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,8,9,8,9,9,9,9,10,9,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,11,11,11,10,11,1,4,4,6,6,7,6,8,7,9,8,10,9,11,11,4,7,7,8,7,9,9,10,10,11,11,11,11,12,12,4,7,7,7,7,9,9,10,10,11,11,12,12,12,11,6,8,8,9,9,10,10,11,11,12,12,13,12,13,13,6,8,8,9,9,10,11,11,11,12,12,13,14,13,13,8,9,9,11,11,12,12,12,13,14,13,14,14,14,15,8,9,9,11,11,11,12,13,14,13,14,15,17,14,15,9,10,10,12,12,13,13,13,14,15,15,15,16,16,16,9,11,11,12,12,13,13,14,14,14,15,16,16,16,16,10,12,12,13,13,14,14,15,15,15,16,17,17,17,17,10,12,11,13,13,15,14,15,14,16,17,16,16,16,16,11,13,12,14,14,14,14,15,16,17,16,17,17,17,17,11,13,12,14,14,14,15,17,16,17,17,17,17,17,17,12,13,13,15,16,15,16,17,17,16,16,17,17,17,17,12,13,13,15,15,15,16,17,17,17,16,17,16,17,17,1,3,3,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,6,5,6,6,5,5,6,6,6,1,4,4,6,6,8,8,9,9,10,11,13,14,4,6,5,8,8,9,9,10,10,11,11,14,14,4,6,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,15,15,6,8,8,9,9,10,11,11,11,12,12,15,15,8,9,9,11,10,11,11,12,12,13,13,15,16,8,9,9,10,11,11,11,12,12,13,13,16,16,10,10,11,11,11,12,12,13,13,13,14,17,16,9,10,11,12,11,12,12,13,13,13,13,16,18,11,12,11,12,12,13,13,13,14,15,14,17,17,11,11,12,12,12,13,13,13,14,14,15,18,17,14,15,15,15,15,16,16,17,17,19,18,0,20,14,15,14,15,15,16,16,16,17,18,16,20,18,2,3,3,6,6,7,7,9,9,4,5,5,7,7,8,8,10,10,4,5,5,7,7,8,8,10,10,6,7,7,8,8,9,9,11,10,6,7,7,8,8,9,9,10,10,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,10,10,11,10,11,11,12,12,9,10,10,10,10,11,11,12,12,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,9,9,9,11,11,9,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,7,8,10,10,9,10,10,11,12,9,10,10,11,12,5,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,9,10,9,12,12,9,10,10,13,12,9,10,10,12,13,12,12,12,14,14,11,12,12,13,14,9,9,10,12,12,9,10,10,12,12,9,10,10,12,13,11,12,11,14,13,12,12,12,14,13,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,9,10,10,12,12,7,8,8,11,10,8,8,9,11,11,8,9,9,11,11,11,11,11,12,13,10,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,13,13,9,11,10,13,12,10,11,11,13,13,10,11,11,13,13,12,12,13,12,15,12,13,13,15,15,9,10,10,12,13,10,11,10,13,12,10,11,11,13,14,12,13,11,15,13,12,13,13,15,15,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,10,10,11,12,12,6,8,8,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,13,13,11,11,11,13,12,9,10,10,13,12,10,11,11,14,13,10,10,11,12,13,12,13,13,15,15,12,11,13,13,14,9,10,11,12,13,10,11,11,13,13,10,11,11,13,13,12,13,13,15,15,12,13,12,15,12,8,9,9,12,12,9,11,10,13,13,9,10,10,13,13,12,13,13,15,14,12,12,12,14,13,9,10,10,13,12,10,11,11,13,13,10,11,11,14,12,13,13,14,14,16,12,13,13,15,15,9,10,10,13,13,10,11,10,14,13,10,11,11,13,14,12,14,13,15,14,13,13,13,15,15,11,13,12,15,14,11,12,13,14,15,12,13,13,16,14,14,12,15,12,16,14,15,15,17,15,11,12,12,14,14,11,13,11,15,14,12,13,13,15,15,13,15,12,17,13,14,15,15,16,16,8,9,9,12,12,9,10,10,12,13,9,10,10,13,13,12,12,12,14,14,12,13,13,15,15,9,10,10,13,12,10,11,11,14,13,10,10,11,13,14,12,13,13,15,15,12,12,13,14,16,9,10,10,13,13,10,11,11,13,14,10,11,11,14,13,12,13,13,14,15,13,14,13,16,14,11,12,12,14,14,12,13,13,15,14,11,12,13,14,15,14,15,15,16,16,13,13,15,13,16,11,12,12,14,15,12,13,13,14,15,11,13,12,15,14,14,15,15,16,16,14,15,12,16,13,2,4,4,7,7,5,7,7,9,9,5,7,7,9,9,8,9,9,12,12,8,9,9,11,12,5,7,7,10,10,7,9,9,11,11,7,9,9,10,11,10,11,11,13,13,9,10,11,13,13,5,7,7,10,10,7,9,9,11,10,7,9,9,11,11,9,11,10,13,13,10,11,11,14,13,8,10,10,14,13,10,11,11,15,14,9,11,11,14,14,13,14,13,16,16,12,13,13,15,15,8,10,10,13,14,9,11,11,14,14,10,11,11,14,15,12,13,13,15,15,13,14,14,15,16,5,7,7,10,10,7,9,9,11,11,7,9,9,11,12,10,11,11,14,14,10,11,11,14,14,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,12,12,13,15,15,11,12,13,15,16,7,9,9,11,11,8,11,10,13,12,9,11,11,13,13,11,13,12,15,13,11,13,13,15,16,9,12,11,15,14,11,12,13,16,15,11,13,13,15,16,14,14,15,17,16,13,15,16,0,17,9,11,11,15,15,10,13,12,15,15,11,13,13,15,16,13,15,13,16,15,14,16,15,0,19,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,14,14,10,11,12,14,14,7,9,9,12,12,9,11,11,14,13,9,10,11,12,13,11,13,13,16,16,11,12,13,13,16,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,11,13,13,15,15,12,13,12,15,14,9,11,11,15,14,11,13,12,16,16,10,12,12,15,15,13,15,15,17,19,13,14,15,16,17,10,12,12,15,15,11,13,13,16,16,11,13,13,15,16,13,15,15,0,0,14,15,15,16,16,8,10,10,14,14,10,12,12,15,15,10,12,11,15,16,14,15,15,19,20,13,14,14,18,16,9,11,11,15,15,11,13,13,17,16,11,13,13,16,16,15,17,17,20,20,14,15,16,17,20,9,11,11,15,15,10,13,12,16,15,11,13,13,15,17,14,16,15,18,0,14,16,15,18,20,12,14,14,0,0,14,14,16,0,0,13,16,15,0,0,17,17,18,0,0,16,17,19,19,0,12,14,14,18,0,12,16,14,0,17,13,15,15,18,0,16,18,17,0,17,16,18,17,0,0,7,10,10,14,14,10,12,11,15,15,10,12,12,16,15,13,15,15,18,0,14,15,15,17,0,9,11,11,15,15,11,13,13,16,16,11,12,13,16,16,14,15,16,17,17,14,16,16,16,18,9,11,12,16,16,11,13,13,17,17,11,14,13,20,17,15,16,16,19,0,15,16,17,0,19,11,13,14,17,16,14,15,15,20,18,13,14,15,17,19,16,18,18,0,20,16,16,19,17,0,12,15,14,17,0,14,15,15,18,19,13,16,15,19,20,15,18,18,0,20,17,0,16,0,0,2,5,4,5,6,6,5,6,6,5,6,6,7,8,8,6,8,8,5,6,6,6,8,8,7,8,8,5,7,6,7,8,8,6,8,8,7,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,6,6,6,8,8,7,8,8,6,8,8,8,10,10,8,8,10,7,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,10,11,8,10,11,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,11,11,11,13,14,11,14,14,8,11,11,10,14,12,11,14,14,4,8,8,8,11,11,8,11,11,7,11,11,11,14,14,10,12,14,8,11,11,11,14,14,11,14,13,14,14,14,15,13,15,12,16,10,8,7,9,9,8,12,16,10,5,4,6,5,6,9,16,14,8,6,8,7,8,10,16,14,7,4,6,3,5,8,16,15,9,5,7,4,4,7,16,13,10,6,7,4,3,4,13,13,12,7,9,5,5,6,12,5,9,14,12,15,13,10,13,7,4,5,6,8,7,8,12,13,4,3,5,5,6,9,15,12,6,5,6,6,6,7,14,14,7,4,6,4,6,8,15,12,6,6,5,5,5,6,14,9,7,8,6,7,5,4,10,10,13,14,14,15,10,6,8,2,5,5,6,6,7,7,8,7,8,8,8,8,5,6,6,7,7,8,8,8,8,8,8,8,8,5,6,6,7,7,8,7,8,8,8,8,8,8,6,7,7,7,8,8,8,8,8,9,9,9,9,6,7,7,8,7,8,8,9,9,9,9,9,9,7,8,8,8,8,8,8,9,9,9,9,9,9,7,8,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,9,9,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,9,9,8,8,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,1,4,4,7,6,7,6,8,7,9,7,9,8,4,7,6,8,8,9,8,10,9,10,10,11,11,4,7,7,8,8,8,8,9,10,11,11,11,11,6,8,8,10,10,10,10,11,11,12,12,12,12,7,8,8,10,10,10,10,11,11,12,12,13,13,7,9,9,11,10,12,12,13,13,14,13,14,14,7,9,9,10,11,11,12,13,13,13,13,16,14,9,10,10,12,12,13,13,14,14,15,16,15,16,9,10,10,12,12,12,13,14,14,14,15,16,15,10,12,12,13,13,15,13,16,16,15,17,17,17,10,11,11,12,14,14,14,15,15,17,17,15,17,11,12,12,14,14,14,15,15,15,17,16,17,17,10,12,12,13,14,14,14,17,15,17,17,17,17,1,3,2,12,12,12,12,12,12,4,12,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,6,5,6,6,5,5,6,6,6,1,4,4,6,6,8,8,10,10,11,11,14,13,4,6,5,8,8,9,9,11,10,12,11,15,14,4,5,6,8,8,9,9,11,11,11,11,14,14,6,8,8,10,9,11,11,11,11,12,12,15,15,6,8,8,9,9,11,11,11,12,12,12,15,15,8,10,10,11,11,11,11,12,12,13,13,15,16,8,10,10,11,11,11,11,12,12,13,13,16,16,10,11,11,12,12,12,12,13,13,13,13,17,16,10,11,11,12,12,12,12,13,13,13,14,16,17,11,12,12,13,13,13,13,14,14,15,14,18,17,11,12,12,13,13,13,13,14,14,14,15,19,18,14,15,15,15,15,16,16,18,19,18,18,0,0,14,15,15,16,15,17,17,16,18,17,18], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+265225);\n/* memory initializer */ allocate([0,0,1,4,4,7,7,8,8,9,9,4,6,5,8,8,8,8,10,10,4,5,6,8,8,8,8,10,10,7,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,8,8,8,9,9,10,11,12,12,8,8,8,9,9,10,10,12,12,10,10,10,11,11,12,12,13,13,10,10,10,11,11,12,12,13,13,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,9,9,9,11,11,9,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,7,8,10,10,10,10,10,11,12,9,10,10,11,12,5,7,7,9,9,6,8,7,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,12,11,9,10,10,12,12,10,10,10,13,12,9,10,10,12,13,12,12,12,14,14,11,12,12,13,14,9,10,10,12,12,9,10,10,12,13,10,10,10,12,13,11,12,12,14,13,12,12,12,14,13,5,7,7,10,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,10,12,12,7,8,8,11,10,8,8,9,11,11,8,9,9,11,11,10,11,11,12,13,10,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,13,13,9,10,10,13,13,10,11,11,13,13,10,11,11,14,13,12,11,13,12,15,12,13,13,15,15,9,10,10,12,13,10,11,10,13,13,10,11,11,13,13,12,13,11,15,13,12,13,13,15,15,5,7,7,9,10,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,11,12,12,6,8,8,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,7,8,8,10,11,8,9,9,11,11,8,9,8,11,11,10,11,11,13,13,10,11,11,13,12,9,10,10,13,12,10,11,11,14,13,10,10,11,13,13,12,13,13,15,15,12,11,13,12,14,9,10,10,12,13,10,11,11,13,14,10,11,11,13,13,12,13,13,15,15,12,13,12,15,12,8,9,9,12,12,9,11,10,13,13,9,10,10,13,13,12,13,13,15,15,12,12,12,14,14,9,10,10,13,13,10,11,11,13,14,10,11,11,14,12,13,13,14,14,16,12,13,13,15,14,9,10,10,13,13,10,11,10,14,13,10,11,11,13,14,12,14,13,16,14,13,13,13,14,15,11,13,12,15,14,11,12,13,14,15,12,13,13,16,15,14,12,15,12,16,14,15,15,17,16,11,12,12,14,15,11,13,11,15,14,12,13,13,15,16,13,15,12,17,13,14,15,15,16,16,8,9,9,12,12,9,10,10,13,13,9,10,10,13,13,12,13,12,14,14,12,13,13,15,15,9,10,10,13,13,10,11,11,14,13,10,10,11,13,14,12,13,13,15,14,12,12,14,14,16,9,10,10,13,13,10,11,11,13,14,10,11,11,14,13,13,13,13,15,15,13,14,13,16,14,11,12,12,14,14,12,13,13,16,15,11,12,13,14,15,14,15,15,16,16,14,13,15,13,17,11,12,12,14,15,12,13,13,15,16,11,13,12,15,15,14,15,14,16,16,14,15,12,17,13,2,4,4,7,8,5,7,7,9,9,5,7,7,9,9,8,9,9,12,11,8,9,9,11,12,5,7,7,10,10,7,9,9,11,11,7,9,9,10,11,10,11,11,13,13,9,10,11,12,13,5,7,7,10,10,7,9,9,11,10,7,9,9,11,11,9,11,10,13,13,10,11,11,13,13,8,10,10,14,13,10,11,11,15,14,9,11,11,15,14,13,14,13,16,14,12,13,13,15,16,8,10,10,13,14,9,11,11,14,15,10,11,11,14,15,12,13,13,15,15,12,13,14,15,16,5,7,7,10,10,7,9,9,11,11,7,9,9,11,12,10,11,11,14,13,10,11,11,14,14,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,12,13,12,14,14,11,12,13,15,15,7,9,9,12,12,8,11,10,13,12,9,11,11,13,13,11,13,12,15,13,11,13,13,15,16,9,12,11,15,15,11,12,12,16,15,11,12,13,16,16,13,14,15,16,15,13,15,15,17,17,9,11,11,14,15,10,12,12,15,15,11,13,12,15,16,13,15,14,16,16,13,15,15,17,19,5,7,7,10,10,7,9,9,12,11,7,9,9,11,11,10,11,11,14,14,10,11,11,13,14,7,9,9,12,12,9,11,11,13,13,9,10,11,12,13,11,13,12,16,15,11,12,12,14,15,7,9,9,12,12,9,11,11,13,13,9,11,11,13,12,11,13,12,15,16,12,13,13,15,14,9,11,11,15,14,11,13,12,16,15,10,11,12,15,15,13,14,14,18,17,13,14,14,15,17,10,11,11,14,15,11,13,12,15,17,11,13,12,15,16,13,15,14,18,17,14,15,15,16,18,7,10,10,14,14,10,12,12,15,15,10,12,12,15,15,14,15,15,18,17,13,15,15,16,16,9,11,11,16,15,11,13,13,16,18,11,13,13,16,16,15,16,16,0,0,14,15,16,18,17,9,11,11,15,15,10,13,12,17,16,11,12,13,16,17,14,15,16,19,19,14,15,15,0,20,12,14,14,0,0,13,14,16,19,18,13,15,16,20,17,16,18,0,0,0,15,16,17,18,19,11,14,14,0,19,12,15,14,17,17,13,15,15,0,0,16,17,15,20,19,15,17,16,19,0,8,10,10,14,15,10,12,11,15,15,10,11,12,16,15,13,14,14,19,17,14,15,15,0,0,9,11,11,16,15,11,13,13,17,16,10,12,13,16,17,14,15,15,18,18,14,15,16,20,19,9,12,12,0,15,11,13,13,16,17,11,13,13,19,17,14,16,16,18,17,15,16,16,17,19,11,14,14,18,18,13,14,15,0,0,12,14,15,19,18,15,16,19,0,19,15,16,19,19,17,12,14,14,16,19,13,15,15,0,17,13,15,14,18,18,15,16,15,0,18,16,17,17,0,0,2,5,5,5,6,6,5,6,6,5,6,6,7,8,8,6,8,8,5,6,6,6,8,7,7,8,8,5,6,6,7,8,8,6,8,8,6,8,8,8,9,10,8,10,10,6,8,8,7,10,8,8,10,10,5,6,6,6,8,8,7,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,11,11,8,10,11,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,11,11,11,13,14,11,13,13,7,11,11,10,13,12,11,14,14,4,8,8,8,11,11,8,11,11,8,11,11,11,14,13,10,12,13,8,11,11,11,13,13,11,13,13,13,15,17,17,15,15,12,17,11,9,7,10,10,9,12,17,10,6,3,6,5,7,10,17,15,10,6,9,8,9,11,17,15,8,4,7,3,5,9,16,16,10,5,8,4,5,8,16,13,11,5,8,3,3,5,14,13,12,7,10,5,5,7,14,5,8,13,10,17,11,11,15,7,2,4,5,8,7,9,16,13,4,3,5,6,8,11,20,10,4,5,5,7,6,8,18,15,7,6,7,8,10,14,20,10,6,7,6,9,7,8,17,9,8,10,8,10,5,4,11,12,17,19,14,16,10,7,12,2,5,4,6,6,7,7,8,8,8,8,9,8,5,5,6,7,7,8,8,8,8,9,9,9,9,5,6,5,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,8,9,9,9,9,6,7,7,8,7,8,8,9,9,9,9,9,9,7,8,8,8,8,9,9,9,9,9,9,9,9,7,8,8,9,8,9,8,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,9,9,10,10,8,8,9,9,9,9,9,9,9,9,10,9,10,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,10,9,9,10,10,9,1,4,4,6,6,6,6,7,7,8,8,9,9,5,7,7,8,7,7,7,9,8,10,9,10,11,5,7,7,8,8,7,7,8,9,10,10,11,11,6,8,8,9,9,9,9,11,10,12,12,15,12,6,8,8,9,9,9,9,11,11,12,11,14,12,7,8,8,10,10,12,12,13,13,13,15,13,13,7,8,8,10,10,11,11,13,12,14,15,15,15,9,10,10,11,12,13,13,14,15,14,15,14,15,8,10,10,12,12,14,14,15,14,14,15,15,14,10,12,12,14,14,15,14,15,15,15,14,15,15,10,12,12,13,14,15,14,15,15,14,15,15,15,12,15,13,15,14,15,15,15,15,15,15,15,15,13,13,15,15,15,15,15,15,15,15,15,15,15,1,3,2,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,6,6,6,6,5,6,6,6,6,1,4,4,6,6,8,8,10,9,11,10,14,13,4,6,5,8,8,9,9,11,10,11,11,14,14,4,5,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,16,15,7,8,8,9,9,10,10,11,11,12,12,15,15,9,10,10,10,10,11,11,12,12,12,12,15,15,9,10,9,10,11,11,11,12,12,12,13,15,15,10,10,11,11,11,12,12,13,12,13,13,16,15,10,11,11,11,11,12,12,13,12,13,13,16,17,11,11,12,12,12,13,13,13,14,14,15,17,17,11,11,12,12,12,13,13,13,14,14,14,16,18,14,15,15,15,15,16,16,16,16,17,18,0,0,14,15,15,15,15,17,16,17,18,17,17,18,0,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,9,9,4,6,6,8,8,8,8,9,9,7,8,8,9,9,9,9,11,10,7,8,8,9,9,9,9,10,10,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,9,9,10,10,11,11,12,12,9,9,9,10,11,11,11,12,12,4,5,5,9,9,5,6,6,9,9,5,6,6,9,9,9,10,9,12,12,9,9,10,12,12,5,7,7,10,10,7,7,8,10,10,6,7,8,10,10,10,10,10,11,13,10,9,10,12,13,5,7,7,10,10,6,8,7,10,10,7,8,7,10,10,9,10,10,12,12,10,10,10,13,11,9,10,10,13,13,10,11,10,13,13,10,10,10,13,13,12,12,13,14,14,12,12,13,14,14,9,10,10,13,13,10,10,10,13,13,10,10,10,13,13,12,13,12,15,14,12,13,12,15,15,5,7,6,10,10,7,8,8,10,10,7,8,8,10,10,10,11,10,13,13,10,10,10,12,12,7,8,8,11,10,8,8,9,10,11,8,9,9,11,11,11,10,11,11,14,11,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,14,11,10,11,11,13,13,10,11,11,14,13,10,10,11,14,13,10,11,11,14,14,12,11,13,12,16,13,14,14,15,15,10,10,11,13,14,10,11,10,14,13,10,11,11,14,14,12,13,12,15,13,13,13,14,15,16,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,10,10,13,13,10,10,11,12,13,6,8,8,11,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,6,8,8,10,11,8,9,9,11,11,8,9,8,12,10,10,11,11,13,13,10,11,10,14,11,10,10,10,14,13,10,11,11,14,13,10,10,11,13,13,12,14,14,16,16,12,12,13,13,15,10,11,11,13,14,10,11,11,14,15,10,11,10,13,13,13,14,13,16,16,12,13,11,15,12,9,10,10,13,13,10,11,11,14,13,10,10,11,13,14,13,14,13,16,16,13,13,13,15,16,9,10,10,13,13,10,10,11,13,14,10,11,11,15,13,13,13,14,14,18,13,13,14,16,15,9,10,10,13,14,10,11,10,14,13,10,11,11,13,14,13,14,13,16,15,13,13,14,15,16,12,13,12,16,14,11,11,13,15,15,13,14,13,16,15,15,12,16,12,17,14,15,15,17,17,12,13,13,14,16,11,13,11,16,15,12,13,14,15,16,14,15,13,0,14,14,16,16,0,0,9,10,10,13,13,10,11,10,14,14,10,11,11,13,13,12,13,13,14,16,13,14,14,16,16,9,10,10,14,14,11,11,11,14,13,10,10,11,14,14,13,13,13,16,16,13,13,14,14,17,9,10,10,13,14,10,11,11,13,15,10,11,10,14,14,13,13,13,14,17,13,14,13,17,14,12,13,13,16,14,13,14,13,16,15,12,12,13,15,16,15,15,16,18,16,15,13,15,14,0,12,12,13,14,16,13,13,14,15,16,11,12,11,16,14,15,16,16,17,17,14,15,12,17,12,1,5,5,8,8,5,8,7,9,9,5,7,8,9,9,9,10,9,12,12,9,9,10,12,12,6,8,8,11,10,8,10,10,11,11,8,9,10,11,11,10,11,11,14,13,10,11,11,13,13,5,8,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,13,13,10,11,11,13,13,9,11,11,15,14,10,12,12,15,14,10,12,11,15,14,13,14,14,16,16,12,14,13,17,15,9,11,11,14,15,10,11,12,14,16,10,11,12,14,16,12,13,14,16,16,13,13,15,15,18,5,8,8,11,11,8,10,10,12,12,8,10,10,12,13,11,12,12,14,14,11,12,12,15,15,8,10,10,13,13,10,12,12,13,13,10,12,12,14,14,12,13,13,15,15,12,13,13,16,16,7,10,10,12,12,10,12,11,13,13,10,12,12,13,14,12,13,12,15,14,12,13,13,16,16,10,12,12,17,16,12,13,13,16,15,11,13,13,17,17,15,15,15,16,17,14,15,15,19,19,10,12,12,15,16,11,13,12,15,18,11,13,13,16,16,14,15,15,17,17,14,15,15,17,19,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,16,15,11,12,12,14,15,7,10,10,13,13,10,12,12,14,13,10,11,12,13,13,12,13,13,16,16,12,12,13,15,15,8,10,10,13,13,10,12,12,14,14,10,12,12,13,13,12,13,13,16,16,12,13,13,15,15,10,12,12,16,15,11,13,13,17,16,11,12,13,16,15,13,15,15,19,17,14,15,14,17,16,10,12,12,16,16,11,13,13,16,17,12,13,13,15,17,14,15,15,17,19,14,15,15,17,17,8,11,11,16,16,10,13,12,17,17,10,12,13,16,16,15,17,16,20,19,14,15,17,18,19,9,12,12,16,17,11,13,14,17,18,11,13,13,19,18,16,17,18,19,19,15,16,16,19,19,9,12,12,16,17,11,14,13,18,17,11,13,13,17,17,16,17,16,20,19,14,16,16,18,18,12,15,15,19,17,14,15,16,0,20,13,15,16,20,17,18,16,20,0,0,15,16,19,20,0,12,15,14,18,19,13,16,15,20,19,13,16,15,20,18,17,18,17,0,20,16,17,16,0,0,8,11,11,16,15,10,12,12,17,17,10,13,13,17,16,14,16,15,18,20,15,16,16,19,19,9,12,12,16,16,11,13,13,17,16,11,13,14,17,18,15,15,16,20,20,16,16,17,19,19,9,13,12,16,17,11,14,13,17,17,11,14,14,18,17,14,16,15,18,19,16,17,18,18,19,12,14,15,19,18,13,15,16,18,0,13,14,15,0,0,16,16,17,20,0,17,17,20,20,0,12,15,15,19,20,13,15,15,0,0,14,16,15,0,0,15,18,16,0,0,17,18,16,0,19,2,4,4,5,6,6,5,6,6,5,7,7,7,8,8,6,8,8,5,7,7,6,8,8,7,8,8,4,7,7,7,8,8,7,8,8,7,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,7,7,7,8,8,7,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,11,11,8,10,10,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,12,11,11,13,13,11,13,14,7,11,11,10,13,12,11,13,14,4,8,8,8,11,11,8,11,12,8,11,11,11,13,13,10,12,13,8,11,11,11,14,13,11,14,13,12,13,14,13,17,12,15,17,5,5,6,10,10,11,15,16,4,3,3,7,5,7,10,16,7,7,7,10,9,11,12,16,6,5,5,9,5,6,10,16,8,7,7,9,6,7,9,16,11,7,3,6,4,5,8,16,12,9,4,8,5,7,9,16,5,8,13,10,17,11,11,15,7,2,4,5,8,7,9,16,13,4,3,5,6,8,11,20,10,4,5,5,7,6,8,18,15,7,6,7,8,10,14,20,10,6,7,6,9,7,8,17,9,8,10,8,10,5,4,11,12,17,19,14,16,10,7,12,2,5,4,6,6,7,7,8,8,8,8,9,8,5,5,6,7,7,8,8,8,8,9,9,9,9,5,6,5,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,8,9,9,9,9,6,7,7,8,7,8,8,9,9,9,9,9,9,7,8,8,8,8,9,9,9,9,9,9,9,9,7,8,8,9,8,9,8,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,9,9,10,10,8,8,9,9,9,9,9,9,9,9,10,9,10,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,10,9,9,10,10,9,1,4,4,6,6,6,6,7,7,8,8,9,9,5,7,7,8,7,7,7,9,8,10,9,10,11,5,7,7,8,8,7,7,8,9,10,10,11,11,6,8,8,9,9,9,9,11,10,12,12,15,12,6,8,8,9,9,9,9,11,11,12,11,14,12,7,8,8,10,10,12,12,13,13,13,15,13,13,7,8,8,10,10,11,11,13,12,14,15,15,15,9,10,10,11,12,13,13,14,15,14,15,14,15,8,10,10,12,12,14,14,15,14,14,15,15,14,10,12,12,14,14,15,14,15,15,15,14,15,15,10,12,12,13,14,15,14,15,15,14,15,15,15,12,15,13,15,14,15,15,15,15,15,15,15,15,13,13,15,15,15,15,15,15,15,15,15,15,15,1,4,4,11,11,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,6,6,6,6,5,6,6,6,6,1,4,4,6,6,8,8,10,9,11,10,14,13,4,6,5,8,8,9,9,11,10,11,11,14,14,4,5,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,16,15,7,8,8,9,9,10,10,11,11,12,12,15,15,9,10,10,10,10,11,11,12,12,12,12,15,15,9,10,9,10,11,11,11,12,12,12,13,15,15,10,10,11,11,11,12,12,13,12,13,13,16,15,10,11,11,11,11,12,12,13,12,13,13,16,17,11,11,12,12,12,13,13,13,14,14,15,17,17,11,11,12,12,12,13,13,13,14,14,14,16,18,14,15,15,15,15,16,16,16,16,17,18,0,0,14,15,15,15,15,17,16,17,18,17,17,18,0,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,9,9,4,6,6,8,8,8,8,9,9,7,8,8,9,9,9,9,11,10,7,8,8,9,9,9,9,10,10,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,9,9,10,10,11,11,12,12,9,9,9,10,11,11,11,12,12,4,5,5,9,9,5,6,6,9,9,5,6,6,9,9,9,10,9,12,12,9,9,10,12,12,5,7,7,10,10,7,7,8,10,10,6,7,8,10,10,10,10,10,11,13,10,9,10,12,13,5,7,7,10,10,6,8,7,10,10,7,8,7,10,10,9,10,10,12,12,10,10,10,13,11,9,10,10,13,13,10,11,10,13,13,10,10,10,13,13,12,12,13,14,14,12,12,13,14,14,9,10,10,13,13,10,10,10,13,13,10,10,10,13,13,12,13,12,15,14,12,13,12,15,15,5,7,6,10,10,7,8,8,10,10,7,8,8,10,10,10,11,10,13,13,10,10,10,12,12,7,8,8,11,10,8,8,9,10,11,8,9,9,11,11,11,10,11,11,14,11,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,14,11,10,11,11,13,13,10,11,11,14,13,10,10,11,14,13,10,11,11,14,14,12,11,13,12,16,13,14,14,15,15,10,10,11,13,14,10,11,10,14,13,10,11,11,14,14,12,13,12,15,13,13,13,14,15,16,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,10,10,13,13,10,10,11,12,13,6,8,8,11,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,6,8,8,10,11,8,9,9,11,11,8,9,8,12,10,10,11,11,13,13,10,11,10,14,11,10,10,10,14,13,10,11,11,14,13,10,10,11,13,13,12,14,14,16,16,12,12,13,13,15,10,11,11,13,14,10,11,11,14,15,10,11,10,13,13,13,14,13,16,16,12,13,11,15,12,9,10,10,13,13,10,11,11,14,13,10,10,11,13,14,13,14,13,16,16,13,13,13,15,16,9,10,10,13,13,10,10,11,13,14,10,11,11,15,13,13,13,14,14,18,13,13,14,16,15,9,10,10,13,14,10,11,10,14,13,10,11,11,13,14,13,14,13,16,15,13,13,14,15,16,12,13,12,16,14,11,11,13,15,15,13,14,13,16,15,15,12,16,12,17,14,15,15,17,17,12,13,13,14,16,11,13,11,16,15,12,13,14,15,16,14,15,13,0,14,14,16,16,0,0,9,10,10,13,13,10,11,10,14,14,10,11,11,13,13,12,13,13,14,16,13,14,14,16,16,9,10,10,14,14,11,11,11,14,13,10,10,11,14,14,13,13,13,16,16,13,13,14,14,17,9,10,10,13,14,10,11,11,13,15,10,11,10,14,14,13,13,13,14,17,13,14,13,17,14,12,13,13,16,14,13,14,13,16,15,12,12,13,15,16,15,15,16,18,16,15,13,15,14,0,12,12,13,14,16,13,13,14,15,16,11,12,11,16,14,15,16,16,17,17,14,15,12,17,12,1,5,5,8,8,5,8,7,9,9,5,7,8,9,9,9,10,9,12,12,9,9,10,12,12,6,8,8,11,10,8,10,10,11,11,8,9,10,11,11,10,11,11,14,13,10,11,11,13,13,5,8,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,13,13,10,11,11,13,13,9,11,11,15,14,10,12,12,15,14,10,12,11,15,14,13,14,14,16,16,12,14,13,17,15,9,11,11,14,15,10,11,12,14,16,10,11,12,14,16,12,13,14,16,16,13,13,15,15,18,5,8,8,11,11,8,10,10,12,12,8,10,10,12,13,11,12,12,14,14,11,12,12,15,15,8,10,10,13,13,10,12,12,13,13,10,12,12,14,14,12,13,13,15,15,12,13,13,16,16,7,10,10,12,12,10,12,11,13,13,10,12,12,13,14,12,13,12,15,14,12,13,13,16,16,10,12,12,17,16,12,13,13,16,15,11,13,13,17,17,15,15,15,16,17,14,15,15,19,19,10,12,12,15,16,11,13,12,15,18,11,13,13,16,16,14,15,15,17,17,14,15,15,17,19,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,16,15,11,12,12,14,15,7,10,10,13,13,10,12,12,14,13,10,11,12,13,13,12,13,13,16,16,12,12,13,15,15,8,10,10,13,13,10,12,12,14,14,10,12,12,13,13,12,13,13,16,16,12,13,13,15,15,10,12,12,16,15,11,13,13,17,16,11,12,13,16,15,13,15,15,19,17,14,15,14,17,16,10,12,12,16,16,11,13,13,16,17,12,13,13,15,17,14,15,15,17,19,14,15,15,17,17,8,11,11,16,16,10,13,12,17,17,10,12,13,16,16,15,17,16,20,19,14,15,17,18,19,9,12,12,16,17,11,13,14,17,18,11,13,13,19,18,16,17,18,19,19,15,16,16,19,19,9,12,12,16,17,11,14,13,18,17,11,13,13,17,17,16,17,16,20,19,14,16,16,18,18,12,15,15,19,17,14,15,16,0,20,13,15,16,20,17,18,16,20,0,0,15,16,19,20,0,12,15,14,18,19,13,16,15,20,19,13,16,15,20,18,17,18,17,0,20,16,17,16,0,0,8,11,11,16,15,10,12,12,17,17,10,13,13,17,16,14,16,15,18,20,15,16,16,19,19,9,12,12,16,16,11,13,13,17,16,11,13,14,17,18,15,15,16,20,20,16,16,17,19,19,9,13,12,16,17,11,14,13,17,17,11,14,14,18,17,14,16,15,18,19,16,17,18,18,19,12,14,15,19,18,13,15,16,18,0,13,14,15,0,0,16,16,17,20,0,17,17,20,20,0,12,15,15,19,20,13,15,15,0,0,14,16,15,0,0,15,18,16,0,0,17,18,16,0,19,2,4,4,5,6,6,5,6,6,5,7,7,7,8,8,6,8,8,5,7,7,6,8,8,7,8,8,4,7,7,7,8,8,7,8,8,7,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,7,7,7,8,8,7,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,11,11,8,10,10,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,12,11,11,13,13,11,13,14,7,11,11,10,13,12,11,13,14,4,8,8,8,11,11,8,11,12,8,11,11,11,13,13,10,12,13,8,11,11,11,14,13,11,14,13,12,13,14,13,17,12,15,17,5,5,6,10,10,11,15,16,4,3,3,7,5,7,10,16,7,7,7,10,9,11,12,16,6,5,5,9,5,6,10,16,8,7,7,9,6,7,9,16,11,7,3,6,4,5,8,16,12,9,4,8,5,7,9,16,5,6,12,9,14,9,9,19,6,1,5,5,8,7,9,19,12,4,4,7,7,9,11,18,9,5,6,6,8,7,8,17,14,8,7,8,8,10,12,18,9,6,8,6,8,6,8,18,9,8,11,8,11,7,5,15,16,18,18,18,17,15,11,18,3,4,4,6,6,7,7,8,8,9,9,9,8,4,5,5,6,6,8,8,9,8,9,9,9,9,4,5,5,7,6,8,8,8,8,9,8,9,8,6,7,7,7,8,8,8,9,9,9,9,9,9,6,7,7,7,7,8,8,9,9,9,9,9,9,7,8,8,8,8,9,8,9,9,10,9,9,10,7,8,8,8,8,9,9,9,9,9,9,10,10,8,9,9,9,9,9,9,9,9,10,10,9,10,8,9,9,9,9,9,9,9,9,9,9,10,10,9,9,9,10,9,9,10,9,9,10,10,10,10,9,9,9,9,9,9,9,10,9,10,10,10,10,9,9,9,10,9,9,10,10,9,10,10,10,10,9,9,9,10,9,9,9,10,10,10,10,10,10,1,4,4,6,6,6,6,9,8,9,8,8,8,5,7,7,7,7,8,8,8,10,8,10,8,9,5,7,7,8,7,7,8,10,10,11,10,12,11,7,8,8,9,9,9,10,11,11,11,11,11,11,7,8,8,8,9,9,9,10,10,10,11,11,12,7,8,8,9,9,10,11,11,12,11,12,11,11,7,8,8,9,9,10,10,11,11,11,12,12,11,8,10,10,10,10,11,11,14,11,12,12,12,13,9,10,10,10,10,12,11,14,11,14,11,12,13,10,11,11,11,11,13,11,14,14,13,13,13,14,11,11,11,12,11,12,12,12,13,14,14,13,14,12,11,12,12,12,12,13,13,13,14,13,14,14,11,12,12,14,12,13,13,12,13,13,14,14,14,1,5,3,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,4,4,5,5,4,5,5,5,5,4,5,5,6,5,5,6,5,6,6,5,6,6,6,6,1,4,4,6,6,8,8,10,10,11,11,15,15,4,5,5,8,8,9,9,11,11,12,12,16,16,4,5,6,8,8,9,9,11,11,12,12,14,14,7,8,8,9,9,10,10,11,12,13,13,16,17,7,8,8,9,9,10,10,12,12,12,13,15,15,9,10,10,10,10,11,11,12,12,13,13,15,16,9,9,9,10,10,11,11,13,12,13,13,17,17,10,11,11,11,12,12,12,13,13,14,15,0,18,10,11,11,12,12,12,13,14,13,14,14,17,16,11,12,12,13,13,14,14,14,14,15,16,17,16,11,12,12,13,13,14,14,14,14,15,15,17,17,14,15,15,16,16,16,17,17,16,0,17,0,18,14,15,15,16,16,0,15,18,18,0,16,0,0,1,4,4,7,7,8,8,9,9,4,6,5,8,7,8,8,10,9,4,6,6,8,8,8,8,10,10,7,8,7,9,9,9,9,11,10,7,8,8,9,9,9,9,10,11,8,8,8,9,9,10,10,11,11,8,8,8,9,9,10,10,11,11,9,10,10,11,10,11,11,12,12,9,10,10,10,11,11,11,12,12,3,5,5,9,9,5,6,6,10,9,5,6,6,9,10,10,10,10,12,11,9,10,10,12,12,5,7,7,10,10,7,7,8,10,11,7,7,8,10,11,10,10,11,11,13,10,10,11,11,13,6,7,7,10,10,7,8,7,11,10,7,8,7,10,10,10,11,9,13,11,10,11,10,13,11,10,10,10,14,13,10,11,11,14,13,10,10,11,13,14,12,12,13,15,15,12,12,13,13,14,10,10,10,12,13,10,11,10,13,13,10,11,11,13,13,12,13,12,14,13,12,13,13,14,13,5,7,7,10,10,7,8,8,11,10,7,8,8,10,10,11,11,11,13,13,10,11,11,12,12,7,8,8,11,11,7,8,9,10,12,8,9,9,11,11,11,10,12,11,14,11,11,12,13,13,6,8,8,10,11,7,9,7,12,10,8,9,10,11,12,10,12,10,14,11,11,12,11,13,13,10,11,11,14,14,10,10,11,13,14,11,12,12,15,13,12,11,14,12,16,12,13,14,15,16,10,10,11,13,14,10,11,10,14,12,11,12,12,13,14,12,13,11,15,12,14,14,14,15,15,5,7,7,10,10,7,8,8,10,10,7,8,8,10,11,10,11,10,12,12,10,11,11,12,13,6,8,8,11,11,8,9,9,12,11,7,7,9,10,12,11,11,11,12,13,11,10,12,11,15,7,8,8,11,11,8,9,9,11,11,7,9,8,12,10,11,12,11,13,12,11,12,10,15,11,10,11,10,14,12,11,12,11,14,13,10,10,11,13,14,13,13,13,17,15,12,11,14,12,15,10,10,11,13,14,11,12,12,14,14,10,11,10,14,13,13,14,13,16,17,12,14,11,16,12,9,10,10,14,13,10,11,10,14,14,10,11,11,13,13,13,14,14,16,15,12,13,13,14,14,9,11,10,14,13,10,10,12,13,14,11,12,11,14,13,13,14,14,14,15,13,14,14,15,15,9,10,11,13,14,10,11,10,15,13,11,11,12,12,15,13,14,12,15,14,13,13,14,14,15,12,13,12,16,14,11,11,12,15,14,13,15,13,16,14,13,12,15,12,17,15,16,15,16,16,12,12,13,13,15,11,13,11,15,14,13,13,14,15,17,13,14,12,0,13,14,15,14,15,0,9,10,10,13,13,10,11,11,13,13,10,11,11,13,13,12,13,12,14,14,13,14,14,15,17,9,10,10,13,13,11,12,11,15,12,10,10,11,13,16,13,14,13,15,14,13,13,14,15,16,10,10,11,13,14,11,11,12,13,14,10,12,11,14,14,13,13,13,14,15,13,15,13,16,15,12,13,12,15,13,12,15,13,15,15,11,11,13,14,15,15,15,15,15,17,13,12,14,13,17,12,12,14,14,15,13,13,14,14,16,11,13,11,16,15,14,16,16,17,0,14,13,11,16,12,1,5,5,8,8,5,8,7,9,9,5,7,8,9,9,9,10,9,12,12,9,9,10,11,12,6,8,8,10,10,8,10,10,11,11,8,9,10,11,11,10,11,11,13,13,10,11,11,12,13,6,8,8,10,10,8,10,9,11,11,8,10,10,11,11,10,11,11,13,12,10,11,11,13,12,9,11,11,15,13,10,12,11,15,13,10,11,11,15,14,12,14,13,16,15,12,13,13,17,16,9,11,11,13,15,10,11,12,14,15,10,11,12,14,15,12,13,13,15,16,12,13,13,16,16,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,8,11,10,13,12,10,11,12,12,13,10,12,12,13,13,12,12,13,13,15,11,12,13,15,14,7,10,10,12,12,9,12,11,13,12,10,12,12,13,14,12,13,12,15,13,11,13,12,14,15,10,12,12,16,14,11,12,12,16,15,11,13,12,17,16,13,13,15,15,17,13,15,15,20,17,10,12,12,14,16,11,12,12,15,15,11,13,13,15,18,13,14,13,15,15,13,15,14,16,16,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,15,7,10,10,13,12,10,12,12,14,13,9,10,12,12,13,11,13,13,15,15,11,12,13,13,15,8,10,10,12,13,10,12,12,13,13,10,12,11,13,13,11,13,12,15,15,12,13,12,15,13,10,12,12,16,14,11,12,12,16,15,10,12,12,16,14,14,15,14,18,16,13,13,14,15,16,10,12,12,14,16,11,13,13,16,16,11,13,12,14,16,13,15,15,18,18,13,15,13,16,14,8,11,11,16,16,10,13,13,17,16,10,12,12,16,15,14,16,15,20,17,13,14,14,17,17,9,12,12,16,16,11,13,14,16,17,11,13,13,16,16,15,15,19,18,0,14,15,15,18,18,9,12,12,17,16,11,13,12,17,16,11,12,13,15,17,15,16,15,0,19,14,15,14,19,18,12,14,14,0,16,13,14,14,19,18,13,15,16,17,16,15,15,17,18,0,14,16,16,19,0,12,14,14,16,18,13,15,13,17,18,13,15,14,17,18,15,18,14,18,18,16,17,16,0,17,8,11,11,15,15,10,12,12,16,16,10,13,13,16,16,13,15,14,17,17,14,15,17,17,18,9,12,12,16,15,11,13,13,16,16,11,12,13,17,17,14,14,15,17,17,14,15,16,0,18,9,12,12,16,17,11,13,13,16,17,11,14,13,18,17,14,16,14,17,17,15,17,17,18,18,12,14,14,0,16,13,15,15,19,0,12,13,15,0,0,14,17,16,19,0,16,15,18,18,0,12,14,14,17,0,13,14,14,17,0,13,15,14,0,18,15,16,16,0,18,15,18,15,0,17,2,4,4,5,6,6,5,6,6,5,7,7,7,8,8,6,7,9,5,7,7,6,8,7,7,9,8,4,7,7,7,9,8,7,8,8,7,9,8,8,8,10,9,10,10,6,8,8,7,10,8,9,10,10,5,7,7,7,8,8,7,8,9,6,8,8,9,10,10,7,8,10,6,8,9,9,10,10,8,10,8,1,4,4,5,8,7,5,7,8,5,8,8,8,10,11,8,10,11,5,8,8,8,11,10,8,11,10,4,9,9,8,11,11,8,11,11,8,12,11,10,12,14,11,13,13,7,11,11,10,13,11,11,13,14,4,8,9,8,11,11,8,11,12,7,11,11,11,14,13,10,11,13,8,11,12,11,13,13,10,14,12,12,12,14,12,14,14,14,14,12,6,6,8,9,9,11,14,12,4,2,6,6,7,11,14,13,6,5,7,8,9,11,14,13,8,5,8,6,8,12,14,12,7,7,8,8,8,10,14,12,6,3,4,4,4,7,14,11,7,4,6,6,6,8,14,3,8,12,14,15,15,15,13,15,15,6,5,8,10,12,12,13,12,14,13,10,6,5,6,8,9,11,11,13,13,13,8,5,4,5,6,8,10,11,13,14,10,7,5,4,5,7,9,11,12,13,11,8,6,5,4,5,7,9,11,12,11,10,8,7,5,4,5,9,10,13,13,11,10,8,6,5,4,7,9,15,14,13,12,10,9,8,7,8,9,12,12,14,13,12,11,10,9,8,9,2,4,4,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,8,7,9,8,9,9,10,10,11,11,11,11,6,5,5,8,8,9,9,9,8,10,9,11,10,12,12,13,12,13,13,5,5,5,8,8,9,9,9,9,10,10,11,11,12,12,13,12,13,13,17,8,8,9,9,9,9,9,9,10,10,12,11,13,12,13,13,13,13,18,8,8,9,9,9,9,9,9,11,11,12,12,13,13,13,13,13,13,17,13,12,9,9,10,10,10,10,11,11,12,12,12,13,13,13,14,14,18,13,12,9,9,10,10,10,10,11,11,12,12,13,13,13,14,14,14,17,18,18,10,10,10,10,11,11,11,12,12,12,14,13,14,13,13,14,18,18,18,10,9,10,9,11,11,12,12,12,12,13,13,15,14,14,14,18,18,16,13,14,10,11,11,11,12,13,13,13,13,14,13,13,14,14,18,18,18,14,12,11,9,11,10,13,12,13,13,13,14,14,14,13,14,18,18,17,18,18,11,12,12,12,13,13,14,13,14,14,13,14,14,14,18,18,18,18,17,12,10,12,9,13,11,13,14,14,14,14,14,15,14,18,18,17,17,18,14,15,12,13,13,13,14,13,14,14,15,14,15,14,18,17,18,18,18,15,15,12,10,14,10,14,14,13,13,14,14,14,14,18,16,18,18,18,18,17,14,14,13,14,14,13,13,14,14,14,15,15,18,18,18,18,17,17,17,14,14,14,12,14,13,14,14,15,14,15,14,18,18,18,18,18,18,18,17,16,13,13,13,14,14,14,14,15,16,15,18,18,18,18,18,18,18,17,17,13,13,13,13,14,13,14,15,15,15,1,4,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,5,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,6,6,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+275465);\n/* memory initializer */ allocate([9,9,9,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,10,10,10,10,10,10,10,9,9,9,9,9,9,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,9,9,10,9,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,9,9,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,9,9,9,9,9,1,4,4,7,6,8,8,8,8,9,9,10,10,11,10,6,5,5,7,7,9,9,8,9,10,10,11,11,12,12,6,5,5,7,7,9,9,9,9,10,10,11,11,12,12,21,7,8,8,8,9,9,9,9,10,10,11,11,12,12,21,8,8,8,8,9,9,9,9,10,10,11,11,12,12,21,11,12,9,9,10,10,10,10,10,11,11,12,12,12,21,12,12,9,8,10,10,10,10,11,11,12,12,13,13,21,21,21,9,9,9,9,11,11,11,11,12,12,12,13,21,20,20,9,9,9,9,10,11,11,11,12,12,13,13,20,20,20,13,13,10,10,11,11,12,12,13,13,13,13,20,20,20,13,13,10,10,11,11,12,12,13,13,13,13,20,20,20,20,20,12,12,12,12,12,12,13,13,14,14,20,20,20,20,20,12,12,12,11,13,12,13,13,14,14,20,20,20,20,20,15,16,13,12,13,13,14,13,14,14,20,20,20,20,20,16,15,12,12,13,12,14,13,14,14,5,6,6,6,6,7,7,7,7,7,7,7,6,6,6,6,7,7,7,7,7,7,7,6,6,6,6,7,7,7,7,7,7,8,6,6,6,6,7,7,7,7,7,7,8,8,8,6,6,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,2,4,4,6,6,7,7,8,8,10,10,11,11,6,4,4,6,6,8,8,9,9,10,10,12,12,6,4,5,6,6,8,8,9,9,10,10,12,12,20,6,6,6,6,8,8,9,10,11,11,12,12,20,6,6,6,6,8,8,10,10,11,11,12,12,20,10,10,7,7,9,9,10,10,11,11,12,12,20,11,11,7,7,9,9,10,10,11,11,12,12,20,20,20,9,9,9,9,11,11,12,12,13,13,20,20,20,9,9,9,9,11,11,12,12,13,13,20,20,20,13,13,10,10,11,11,12,13,13,13,20,20,20,13,13,10,10,11,11,12,13,13,13,20,20,20,20,19,12,12,12,12,13,13,14,15,19,19,19,19,19,12,12,12,12,13,13,14,14,4,4,4,5,5,5,4,4,5,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,2,4,4,6,6,7,7,7,7,8,8,9,9,5,4,4,6,6,8,8,9,9,9,9,10,10,6,4,4,6,6,8,8,9,9,9,9,10,10,0,6,6,7,7,8,8,9,9,10,10,11,11,0,6,6,7,7,8,8,9,9,10,10,11,11,0,10,10,8,8,9,9,10,10,11,11,12,12,0,11,11,8,8,9,9,10,10,11,11,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,6,6,7,7,7,7,7,7,11,5,5,6,6,7,7,7,7,8,8,11,5,5,6,6,7,7,7,7,8,8,11,5,5,6,6,7,7,8,8,8,8,11,11,11,6,6,7,7,7,8,8,8,11,11,11,6,6,7,7,7,8,8,8,11,11,11,6,6,7,7,7,7,8,8,11,11,11,7,7,7,7,7,7,8,8,11,11,11,10,10,7,7,7,7,8,8,11,11,11,11,11,7,7,7,7,7,7,11,11,11,11,11,7,7,7,7,7,7,1,4,4,5,7,7,6,7,7,4,7,6,9,10,10,10,10,9,4,6,7,9,10,10,10,9,10,5,9,9,9,11,11,10,11,11,7,10,9,11,12,11,12,12,12,7,9,10,11,11,12,12,12,12,6,10,10,10,12,12,10,12,11,7,10,10,11,12,12,11,12,12,7,10,10,11,12,12,12,12,12,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,10,10,0,5,4,5,5,7,7,8,8,8,8,9,9,10,10,11,11,0,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,6,5,6,6,7,7,8,8,9,9,10,10,11,11,11,12,0,0,0,6,6,7,7,8,8,9,9,10,10,11,11,12,12,0,0,0,7,7,7,7,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,7,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,4,5,5,6,6,8,8,0,4,4,5,5,6,7,8,8,0,4,4,5,5,7,7,8,8,0,5,5,6,6,7,7,9,9,0,0,0,6,6,7,7,9,9,0,0,0,7,7,8,8,9,9,0,0,0,7,7,8,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,6,7,7,9,8,0,8,8,9,9,0,8,7,9,9,0,9,10,10,10,0,0,0,11,10,6,7,7,8,9,0,8,8,9,9,0,7,8,9,9,0,10,9,11,10,0,0,0,10,10,8,9,8,10,10,0,10,10,12,11,0,10,10,11,11,0,12,13,13,13,0,0,0,13,12,8,8,9,10,10,0,10,10,11,12,0,10,10,11,11,0,13,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,7,10,10,0,7,7,10,9,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,6,7,8,10,10,0,7,7,9,10,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,8,9,9,11,11,0,10,10,11,11,0,10,10,11,11,0,12,12,12,12,0,0,0,12,12,8,9,10,11,11,0,9,10,11,11,0,10,10,11,11,0,12,12,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,10,10,0,7,7,10,10,0,7,7,10,9,0,9,9,10,10,0,0,0,10,10,6,7,8,10,10,0,7,7,10,10,0,7,7,9,10,0,9,9,10,10,0,0,0,10,10,8,10,9,12,11,0,10,10,12,11,0,10,9,11,11,0,11,12,12,12,0,0,0,12,12,8,9,10,11,12,0,10,10,11,11,0,9,10,11,11,0,12,11,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,9,12,12,0,9,9,12,11,0,9,9,11,11,0,10,10,12,11,0,0,0,11,12,7,9,10,12,12,0,9,9,11,12,0,9,9,11,11,0,10,10,11,12,0,0,0,11,11,9,11,10,13,12,0,10,10,12,12,0,10,10,12,12,0,11,11,12,12,0,0,0,13,12,9,10,11,12,13,0,10,10,12,12,0,10,10,12,12,0,11,12,12,12,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,10,13,13,0,10,10,12,12,0,10,10,12,12,0,11,12,12,12,0,0,0,12,12,9,10,11,13,13,0,10,10,12,12,0,10,10,12,12,0,12,11,13,12,0,0,0,12,12,1,5,5,0,5,5,0,5,5,6,8,8,0,9,8,0,9,8,6,8,8,0,8,9,0,8,9,0,0,0,0,0,0,0,0,0,5,8,8,0,7,7,0,8,8,5,8,8,0,7,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,7,7,5,8,9,0,8,8,0,7,7,5,13,18,16,17,17,19,18,19,19,5,7,10,11,12,12,13,16,17,18,6,6,7,7,9,9,10,14,17,19,8,7,6,5,6,7,9,12,19,17,8,7,7,6,5,6,8,11,15,19,9,8,7,6,5,5,6,8,13,15,11,10,8,8,7,5,4,4,10,14,12,13,11,9,7,6,4,2,6,12,18,16,16,13,8,7,7,5,8,13,16,17,18,15,11,9,9,8,10,13,3,8,12,13,14,14,14,13,14,14,6,4,5,8,10,10,11,11,14,13,9,5,4,5,7,8,9,10,13,13,12,7,5,4,5,6,8,9,12,13,13,9,6,5,5,5,7,9,11,14,12,10,7,6,5,4,6,7,10,11,12,11,9,8,7,5,5,6,10,10,13,12,10,9,8,6,6,5,8,10,14,13,12,12,11,10,9,7,8,10,12,13,14,14,13,12,11,9,9,10,2,4,4,4,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,6,7,7,7,7,8,8,9,9,10,10,10,10,11,11,6,6,6,8,8,9,8,8,7,10,8,11,10,12,11,12,12,13,13,5,5,6,8,8,9,9,8,8,10,9,11,11,12,12,13,13,13,13,17,8,8,9,9,9,9,9,9,10,9,12,10,12,12,13,12,13,13,17,9,8,9,9,9,9,9,9,10,10,12,12,12,12,13,13,13,13,17,13,13,9,9,10,10,10,10,11,11,12,11,13,12,13,13,14,15,17,13,13,9,8,10,9,10,10,11,11,12,12,14,13,15,13,14,15,17,17,17,9,10,9,10,11,11,12,12,12,12,13,13,14,14,15,15,17,17,17,9,8,9,8,11,11,12,12,12,12,14,13,14,14,14,15,17,17,17,12,14,9,10,11,11,12,12,14,13,13,14,15,13,15,15,17,17,17,13,11,10,8,11,9,13,12,13,13,13,13,13,14,14,14,17,17,17,17,17,11,12,11,11,13,13,14,13,15,14,13,15,16,15,17,17,17,17,17,11,11,12,8,13,12,14,13,17,14,15,14,15,14,17,17,17,17,17,15,15,12,12,12,12,13,14,14,14,15,14,17,14,17,17,17,17,17,16,17,12,12,13,12,13,13,14,14,14,14,14,14,17,17,17,17,17,17,17,14,14,13,12,13,13,15,15,14,13,15,17,17,17,17,17,17,17,17,13,14,13,13,13,13,14,15,15,15,14,15,17,17,17,17,17,17,17,16,15,13,14,13,13,14,14,15,14,14,16,17,17,17,17,17,17,17,16,16,13,14,13,13,14,14,15,14,15,14,1,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,5,5,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,10,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,9,10,10,9,10,10,10,10,9,10,9,10,10,9,10,10,10,10,10,10,10,9,10,10,10,10,10,10,9,9,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,9,10,9,9,1,4,4,7,6,8,8,8,7,9,8,10,10,11,10,6,5,5,7,7,9,9,8,8,10,10,11,11,12,11,6,5,5,7,7,9,9,9,9,10,10,11,11,12,12,20,8,8,8,8,9,9,9,9,10,10,11,11,12,12,20,8,8,8,8,10,9,9,9,10,10,11,11,12,12,20,12,12,9,9,10,10,10,10,10,11,12,12,12,12,20,12,12,9,9,10,10,10,10,11,11,12,12,13,13,20,20,20,9,9,9,9,11,10,11,11,12,12,12,13,20,19,19,9,9,9,9,11,11,11,12,12,12,13,13,19,19,19,13,13,10,10,11,11,12,12,13,13,13,13,19,19,19,14,13,11,10,11,11,12,12,12,13,13,13,19,19,19,19,19,12,12,12,12,13,13,13,13,14,13,19,19,19,19,19,12,12,12,11,12,12,13,14,14,14,19,19,19,19,19,16,15,13,12,13,13,13,14,14,14,19,19,19,19,19,17,17,13,12,13,11,14,13,15,15,4,5,6,6,6,7,7,7,7,7,7,8,6,6,6,7,7,7,7,7,7,7,8,6,6,6,6,7,7,7,7,7,7,8,6,6,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,1,4,4,6,6,8,7,9,9,10,10,12,12,6,5,5,7,7,8,8,10,10,11,11,12,12,7,5,5,7,7,8,8,10,10,11,11,12,12,21,7,7,7,7,8,9,10,10,11,11,12,12,21,7,7,7,7,9,9,10,10,12,12,13,13,21,11,11,8,8,9,9,11,11,12,12,13,13,21,11,11,8,8,9,9,11,11,12,12,13,13,21,21,21,10,10,10,10,11,11,12,13,13,13,21,21,21,10,10,10,10,11,11,13,13,14,13,21,21,21,13,13,11,11,12,12,13,13,14,14,21,21,21,14,14,11,11,12,12,13,13,14,14,21,21,21,21,20,13,13,13,12,14,14,16,15,20,20,20,20,20,13,13,13,13,14,13,15,15,3,4,4,5,5,5,4,4,5,5,5,4,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,9,9,10,10,11,11,6,5,5,7,7,8,8,9,9,10,10,11,11,0,7,7,7,7,9,9,10,10,10,10,11,11,0,7,7,7,7,9,9,10,10,10,10,11,11,0,11,11,9,9,10,10,11,11,11,11,12,12,0,12,12,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,6,6,7,7,8,8,8,8,11,4,5,6,6,7,7,8,8,8,8,11,5,5,6,6,7,7,8,8,8,9,12,5,5,6,6,7,7,8,8,9,9,12,12,12,6,6,7,7,8,8,9,9,11,11,11,6,6,7,7,8,8,8,8,11,11,11,6,6,7,7,8,8,8,8,11,11,11,7,7,7,8,8,8,8,8,11,11,11,11,11,7,7,8,8,8,8,11,11,11,11,11,7,7,7,7,8,8,11,11,11,11,11,7,7,7,7,8,8,1,4,4,5,7,7,6,7,7,4,7,6,10,10,10,10,10,10,4,6,6,10,10,10,10,9,10,5,10,10,9,11,11,10,11,11,7,10,10,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,6,10,10,10,12,12,10,12,12,7,10,10,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,3,4,4,5,5,7,7,8,8,8,8,9,9,10,10,11,11,0,4,4,6,6,7,7,8,8,9,8,10,10,11,11,11,11,0,4,4,6,6,7,7,8,8,9,9,10,10,11,11,11,11,0,6,5,6,6,7,7,9,9,9,9,10,10,11,11,12,12,0,0,0,6,6,7,7,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,12,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,12,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,5,5,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,5,5,6,6,8,8,10,10,0,0,0,6,6,8,8,10,10,0,0,0,7,7,9,9,10,10,0,0,0,7,7,8,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,5,7,7,9,9,0,8,7,10,9,0,8,7,10,9,0,10,10,11,11,0,0,0,11,11,5,7,7,9,9,0,7,8,9,10,0,7,8,9,10,0,10,10,11,11,0,0,0,11,11,8,9,9,11,10,0,11,10,12,11,0,11,10,12,12,0,13,13,14,14,0,0,0,14,13,8,9,9,10,11,0,10,11,12,12,0,10,11,12,12,0,13,13,14,14,0,0,0,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,10,10,0,0,0,11,10,5,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,8,10,9,12,12,0,10,10,12,11,0,10,10,12,12,0,12,12,13,12,0,0,0,13,12,8,9,10,12,12,0,10,10,11,12,0,10,10,11,12,0,12,12,13,13,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,10,10,6,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,9,10,9,12,12,0,10,10,12,12,0,10,10,12,11,0,12,12,13,13,0,0,0,13,12,8,9,10,12,12,0,10,10,12,12,0,10,10,11,12,0,12,12,13,13,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,13,13,0,9,9,12,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,7,10,10,13,13,0,9,9,12,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,9,11,11,14,13,0,10,10,13,12,0,11,10,13,12,0,12,12,13,12,0,0,0,13,13,9,11,11,13,14,0,10,11,12,13,0,10,11,13,13,0,12,12,12,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,14,14,0,10,11,13,13,0,11,10,13,13,0,11,12,13,13,0,0,0,13,12,9,11,11,14,14,0,11,10,13,13,0,10,11,13,13,0,12,12,13,13,0,0,0,12,13,1,5,5,0,5,5,0,5,5,5,7,7,0,9,8,0,9,8,6,7,7,0,8,9,0,8,9,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,4,11,13,14,15,15,18,17,19,17,5,6,8,9,10,10,12,15,19,19,6,6,6,6,8,8,11,14,18,19,8,6,5,4,6,7,10,13,16,17,9,7,6,5,6,7,9,12,15,19,10,8,7,6,6,6,7,9,13,15,12,10,9,8,7,6,4,5,10,15,13,13,11,8,6,6,4,2,7,12,17,15,16,10,8,8,7,6,9,12,19,18,17,13,11,10,10,9,11,14,3,8,11,13,15,14,14,13,15,14,6,4,5,7,9,10,11,11,14,13,10,4,3,5,7,8,9,10,13,13,12,7,4,4,5,6,8,9,12,14,13,9,6,5,5,6,8,9,12,14,12,9,7,6,5,5,6,8,11,11,12,11,9,8,7,6,6,7,10,11,13,11,10,9,8,7,6,6,9,11,13,13,12,12,12,10,9,8,9,11,12,14,15,15,14,12,11,10,10,12,2,4,3,4,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,7,6,8,8,8,8,6,6,6,8,8,9,8,8,7,9,8,11,10,5,6,6,8,8,9,8,8,8,10,9,11,11,16,8,8,9,8,9,9,9,8,10,9,11,10,16,8,8,9,9,10,10,9,9,10,10,11,11,16,13,13,9,9,10,10,9,10,11,11,12,11,16,13,13,9,8,10,9,10,10,10,10,11,11,16,14,16,8,9,9,9,11,10,11,11,12,11,16,16,16,9,7,10,7,11,10,11,11,12,11,16,16,16,12,12,9,10,11,11,12,11,12,12,16,16,16,12,10,10,7,11,8,12,11,12,12,16,16,15,16,16,11,12,10,10,12,11,12,12,16,16,16,15,15,11,11,10,10,12,12,12,12,1,3,3,11,11,11,11,11,11,11,11,11,11,4,6,6,11,11,11,11,11,11,11,11,11,11,4,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,7,6,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,10,10,10,9,9,9,9,9,9,9,9,9,9,10,9,9,10,9,9,10,11,10,11,10,9,9,9,9,9,9,9,10,10,10,9,10,9,9,9,9,11,10,11,10,10,9,9,9,9,9,9,10,9,9,10,9,9,10,9,9,10,11,10,10,11,10,9,9,9,9,9,10,10,9,10,10,10,10,9,10,10,10,10,10,10,11,11,11,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,9,10,11,11,10,11,10,11,10,9,10,10,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,10,11,11,10,10,10,10,10,10,9,10,9,10,10,9,10,9,10,10,10,11,10,11,10,11,11,10,10,10,10,10,10,9,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,11,10,10,10,10,9,9,10,10,9,9,10,9,10,10,10,10,11,11,10,10,10,10,10,10,10,9,9,10,10,10,9,9,10,10,10,10,10,11,10,11,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,7,9,8,9,9,10,10,6,5,5,7,7,9,9,8,8,10,9,11,10,12,11,6,5,5,8,7,9,9,8,8,10,10,11,11,12,11,19,8,8,8,8,10,10,9,9,10,10,11,11,12,11,19,8,8,8,8,10,10,9,9,10,10,11,11,12,12,19,12,12,9,9,10,10,9,10,10,10,11,11,12,12,19,12,12,9,9,10,10,10,10,10,10,12,12,12,12,19,19,19,9,9,9,9,11,10,11,11,12,11,13,13,19,19,19,9,9,9,9,11,10,11,11,11,12,13,13,19,19,19,13,13,10,10,11,11,12,12,12,12,13,12,19,19,19,14,13,10,10,11,11,12,12,12,13,13,13,19,19,19,19,19,12,12,12,11,12,13,14,13,13,13,19,19,19,19,19,12,12,12,11,12,12,13,14,13,14,19,19,19,19,19,16,16,12,13,12,13,13,14,15,14,19,18,18,18,18,16,15,12,11,12,11,14,12,14,14,4,5,5,6,6,7,7,7,7,7,7,8,6,6,7,7,7,7,7,7,7,7,8,6,6,6,7,7,7,7,7,7,7,8,6,6,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,1,4,4,6,6,7,8,9,9,10,10,12,11,6,5,5,7,7,8,8,9,10,11,11,12,12,7,5,5,7,7,8,8,10,10,11,11,12,12,20,7,7,7,7,8,9,10,10,11,11,12,13,20,7,7,7,7,9,9,10,10,11,12,13,13,20,11,11,8,8,9,9,11,11,12,12,13,13,20,11,11,8,8,9,9,11,11,12,12,13,13,20,20,20,10,10,10,10,12,12,13,13,13,13,20,20,20,10,10,10,10,12,12,13,13,13,14,20,20,20,14,14,11,11,12,12,13,13,14,14,20,20,20,14,14,11,11,12,12,13,13,14,14,20,20,20,20,19,13,13,13,13,14,14,15,14,19,19,19,19,19,13,13,13,13,14,14,15,15,3,4,4,5,5,5,4,4,5,5,5,4,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,7,9,8,10,10,6,5,5,7,7,8,8,9,9,9,10,11,11,7,5,5,7,7,8,8,9,9,10,10,11,11,0,7,7,7,7,9,8,9,9,10,10,11,11,0,8,8,7,7,8,9,9,9,10,10,11,11,0,11,11,9,9,10,10,11,10,11,11,12,12,0,12,12,9,9,10,10,11,11,11,11,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,6,6,7,7,8,8,8,8,11,4,4,6,6,7,7,8,8,9,9,11,4,4,6,6,7,7,8,8,9,9,12,5,5,6,6,7,7,9,9,9,9,12,12,12,6,6,7,7,9,9,9,9,11,11,11,7,7,7,7,8,8,9,9,11,11,11,7,7,7,7,8,8,9,9,11,11,11,7,7,8,8,8,8,9,9,11,11,11,11,11,8,8,8,8,8,9,11,11,11,11,11,8,8,8,8,8,8,11,11,11,11,11,7,7,8,8,8,8,1,4,4,5,7,7,6,7,7,4,6,7,10,10,10,10,10,9,4,6,6,10,10,10,10,9,10,5,10,10,9,11,12,10,11,12,7,10,10,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,6,10,10,10,12,12,11,12,12,7,10,10,12,12,12,12,11,12,7,10,10,11,12,12,12,12,12,3,4,4,5,5,7,7,8,8,8,8,9,9,10,10,11,11,0,4,4,6,6,7,7,8,8,9,9,10,10,11,11,12,12,0,4,4,6,6,7,7,8,8,9,9,10,10,11,11,12,12,0,5,5,6,6,8,8,9,9,9,9,10,10,11,12,12,12,0,0,0,6,6,8,7,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,12,13,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,5,5,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,5,5,6,6,8,8,10,10,0,0,0,6,6,8,8,10,10,0,0,0,7,7,9,9,10,10,0,0,0,7,7,8,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,5,7,7,9,9,0,8,8,10,10,0,8,7,10,9,0,10,10,11,11,0,0,0,11,11,5,7,7,9,9,0,8,8,10,10,0,7,8,9,10,0,10,10,11,11,0,0,0,11,11,8,9,9,11,10,0,11,11,12,12,0,11,10,12,12,0,13,14,14,14,0,0,0,14,13,8,9,9,10,11,0,11,11,12,12,0,10,11,12,12,0,13,13,14,14,0,0,0,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,11,10,0,0,0,11,11,5,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,11,8,10,9,12,12,0,10,10,12,12,0,10,10,12,12,0,12,12,13,13,0,0,0,13,13,8,9,10,12,12,0,10,10,12,12,0,10,10,11,12,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,11,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,10,5,8,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,11,10,0,0,0,10,11,9,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,12,13,13,13,0,0,0,13,12,9,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,13,12,13,13,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,14,13,0,9,9,12,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,7,10,10,13,14,0,9,9,12,13,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,9,11,11,14,13,0,11,10,13,12,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,9,11,11,13,14,0,10,11,12,13,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,14,14,0,10,11,13,13,0,11,10,13,13,0,12,12,13,13,0,0,0,13,12,9,11,11,14,14,0,11,10,13,13,0,10,11,13,13,0,12,12,14,13,0,0,0,13,13,1,5,5,0,5,5,0,5,5,5,8,7,0,9,9,0,9,8,5,7,8,0,9,9,0,8,9,0,0,0,0,0,0,0,0,0,5,9,9,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,9,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,4,11,12,14,15,15,17,17,18,18,5,6,6,8,9,10,13,17,18,19,7,5,4,6,8,9,11,15,19,19,8,6,5,5,6,7,11,14,16,17,9,7,7,6,7,7,10,13,15,19,10,8,7,6,7,6,7,9,14,16,12,10,9,7,7,6,4,5,10,15,14,13,11,7,6,6,4,2,7,13,16,16,15,9,8,8,8,6,9,13,19,19,17,12,11,10,10,9,11,14,3,8,11,13,14,14,13,13,16,14,6,3,4,7,9,9,10,11,14,13,10,4,3,5,7,7,9,10,13,15,12,7,4,4,6,6,8,10,13,15,12,8,6,6,6,6,8,10,13,14,11,9,7,6,6,6,7,8,12,11,13,10,9,8,7,6,6,7,11,11,13,11,10,9,9,7,7,6,10,11,13,13,13,13,13,11,9,8,10,12,12,15,15,16,15,12,11,10,10,12,2,4,3,4,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,7,6,8,8,8,8,6,6,6,8,8,8,8,8,7,9,8,10,10,5,6,6,8,8,9,9,8,8,10,10,10,10,16,9,9,9,9,9,9,9,8,10,9,11,11,16,8,9,9,9,9,9,9,9,10,10,11,11,16,13,13,9,9,10,9,9,10,11,11,11,12,16,13,14,9,8,10,8,9,9,10,10,12,11,16,14,16,9,9,9,9,11,11,12,11,12,11,16,16,16,9,7,9,6,11,11,11,10,11,11,16,16,16,11,12,9,10,11,11,12,11,13,13,16,16,16,12,11,10,7,12,10,12,12,12,12,16,16,15,16,16,10,11,10,11,13,13,14,12,16,16,16,15,15,12,10,11,11,13,11,12,13,1,3,3,11,11,11,11,11,11,11,11,11,11,4,7,7,11,11,11,11,11,11,11,11,11,11,5,8,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,5,5,6,6,7,7,7,7,8,7,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,8,8,9,8,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,11,8,7,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,9,11,11,11,11,11,9,9,9,9,9,9,10,9,9,10,9,10,9,9,10,9,11,11,11,11,11,9,9,9,9,9,9,9,10,10,10,10,9,10,10,9,10,11,11,11,11,11,9,9,9,9,10,10,10,9,10,10,10,10,9,10,10,9,11,11,11,11,11,11,11,9,9,9,9,10,10,10,10,9,10,10,10,10,10,11,11,11,11,11,11,11,10,9,10,10,10,10,10,10,10,9,10,9,10,10,11,11,11,11,11,11,11,10,9,10,9,10,10,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,9,10,10,10,10,10,9,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,9,10,10,11,11,11,11,11,11,11,11,11,10,10,10,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,10,11,9,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,7,7,8,7,9,8,10,9,6,5,5,8,8,9,9,8,8,9,9,11,10,11,10,6,5,5,8,8,9,9,8,8,9,9,10,10,11,11,18,8,8,9,8,10,10,9,9,10,10,10,10,11,10,18,8,8,9,9,10,10,9,9,10,10,11,11,12,12,18,12,13,9,10,10,10,9,10,10,10,11,11,12,11,18,13,13,9,9,10,10,10,10,10,10,11,11,12,12,18,18,18,10,10,9,9,11,11,11,11,11,12,12,12,18,18,18,10,9,10,9,11,10,11,11,11,11,13,12,18,18,18,14,13,10,10,11,11,12,12,12,12,12,12,18,18,18,14,13,10,10,11,10,12,12,12,12,12,12,18,18,18,18,18,12,12,11,11,12,12,13,13,13,14,18,18,18,18,18,12,12,11,11,12,11,13,13,14,13,18,18,18,18,18,16,16,11,12,12,13,13,13,14,13,18,18,18,18,18,16,15,12,11,12,11,13,11,15,14,3,5,5,6,6,7,7,7,7,7,7,9,5,5,6,6,7,7,7,7,8,7,8,5,5,6,6,7,7,7,7,7,7,9,6,6,7,7,7,7,8,7,7,8,9,9,9,7,7,7,7,7,7,7,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,7,7,8,8,9,9,9,8,8,8,8,7,7,8,8,9,9,9,9,8,8,8,7,7,8,8,9,9,9,8,8,8,8,7,7,8,8,9,9,9,8,8,7,7,7,7,8,8,1,4,4,6,6,8,8,8,8,10,10,11,10,6,5,5,7,7,8,8,9,9,10,10,12,11,6,5,5,7,7,8,8,9,9,10,10,12,11,21,7,7,7,7,9,9,10,10,11,11,12,12,21,7,7,7,7,9,9,10,10,11,11,12,12,21,12,12,9,9,10,10,11,11,11,11,12,12,21,12,12,9,9,10,10,11,11,12,12,12,12,21,21,21,11,11,10,10,11,12,12,12,13,13,21,21,21,11,11,10,10,12,12,12,12,13,13,21,21,21,15,15,11,11,12,12,13,13,13,13,21,21,21,15,16,11,11,12,12,13,13,14,14,21,21,21,21,20], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+285705);\n/* memory initializer */ allocate([13,13,13,13,13,13,14,14,20,20,20,20,20,13,13,13,13,13,13,14,14,3,4,4,5,5,5,4,4,5,5,5,4,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,8,8,8,8,10,9,10,10,6,5,5,7,7,9,9,9,9,10,10,11,11,6,5,5,7,7,9,9,10,9,11,10,11,11,0,6,6,7,7,9,9,10,10,11,11,12,12,0,7,7,7,7,9,9,10,10,11,11,12,12,0,11,11,8,8,10,10,11,11,12,12,12,12,0,11,12,9,8,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,4,6,6,7,7,8,8,8,8,11,4,4,6,6,7,7,8,8,8,8,11,4,4,6,6,7,7,8,8,8,8,11,6,6,6,6,8,8,8,8,9,9,11,11,11,6,6,7,8,8,8,8,9,11,11,11,7,7,8,8,8,8,8,8,11,11,11,7,7,8,8,8,8,8,8,11,11,11,8,8,8,8,8,8,8,8,11,11,11,10,10,8,8,8,8,8,8,11,11,11,10,10,8,8,8,8,8,8,11,11,11,10,10,7,7,8,8,8,8,1,4,4,5,7,7,6,7,7,4,6,6,9,9,10,10,10,9,4,6,6,9,10,9,10,9,10,6,9,9,10,12,11,10,11,11,7,10,9,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,6,10,10,10,12,12,11,12,12,7,9,10,11,12,12,12,12,12,7,10,9,12,12,12,12,12,12,2,4,4,6,6,7,7,8,8,8,8,9,9,9,10,10,10,0,4,4,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,4,4,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,7,7,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,10,0,4,4,6,6,7,7,10,9,0,5,5,7,7,8,8,10,10,0,0,0,7,6,8,8,10,10,0,0,0,7,7,9,9,11,11,0,0,0,7,7,9,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,5,7,7,9,9,0,8,8,10,10,0,8,7,10,9,0,10,10,11,11,0,0,0,11,11,5,7,7,9,9,0,8,8,10,10,0,7,8,9,10,0,10,10,11,11,0,0,0,11,11,8,9,9,11,11,0,11,11,12,12,0,11,10,12,12,0,13,14,14,14,0,0,0,14,13,8,9,9,11,11,0,11,11,12,12,0,10,11,12,12,0,14,13,14,14,0,0,0,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,11,10,0,0,0,11,11,5,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,11,8,10,9,12,12,0,10,10,12,12,0,10,10,12,12,0,12,12,13,13,0,0,0,13,13,8,9,10,12,12,0,10,10,11,12,0,10,10,12,12,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,11,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,10,5,8,8,11,11,0,7,7,10,10,0,7,7,10,10,0,9,9,11,11,0,0,0,10,11,8,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,12,13,13,13,0,0,0,14,13,8,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,13,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,14,13,0,9,9,13,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,7,10,10,13,14,0,9,9,12,13,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,9,11,11,14,13,0,11,10,14,13,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,9,11,11,13,14,0,10,11,13,14,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,14,14,0,11,11,13,13,0,11,10,13,13,0,12,12,13,13,0,0,0,13,13,9,11,11,14,14,0,11,11,13,13,0,10,11,13,13,0,12,12,14,13,0,0,0,13,13,1,5,5,0,5,5,0,5,5,5,8,7,0,9,9,0,9,8,5,7,8,0,9,9,0,8,9,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,9,0,8,8,0,8,8,5,9,9,0,8,8,0,8,8,3,9,11,11,13,14,19,17,17,19,5,4,5,8,10,10,13,16,18,19,7,4,4,5,8,9,12,14,17,19,8,6,5,5,7,7,10,13,16,18,10,8,7,6,5,5,8,11,17,19,11,9,7,7,5,4,5,8,17,19,13,11,8,7,7,5,5,7,16,18,14,13,8,6,6,5,5,7,16,18,18,16,10,8,8,7,7,9,16,18,18,18,12,10,10,9,9,10,17,18,3,8,9,13,10,12,12,12,12,12,6,4,6,8,6,8,10,10,11,12,8,5,4,10,4,7,8,9,10,11,13,8,10,8,9,9,11,12,13,14,10,6,4,9,3,5,6,8,10,11,11,8,6,9,5,5,6,7,9,11,12,9,7,11,6,6,6,7,8,10,12,11,9,12,7,7,6,6,7,9,13,12,10,13,9,8,7,7,7,8,11,15,11,15,11,10,9,8,7,7,3,5,5,6,6,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,9,11,5,6,7,7,8,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,11,5,5,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,11,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,10,9,10,11,11,11,7,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,5,5,7,7,9,8,10,9,10,10,11,10,11,11,6,5,5,7,7,8,9,10,10,11,10,12,11,12,11,13,12,6,5,5,7,7,9,9,10,10,11,11,12,12,13,12,13,13,18,8,8,8,8,9,9,10,11,11,11,12,11,13,11,13,12,18,8,8,8,8,10,10,11,11,12,12,13,13,13,13,13,14,18,12,12,9,9,11,11,11,11,12,12,13,12,13,12,13,13,20,13,12,9,9,11,11,11,11,12,12,13,13,13,14,14,13,20,18,19,11,12,11,11,12,12,13,13,13,13,13,13,14,13,18,19,19,12,11,11,11,12,12,13,12,13,13,13,14,14,13,18,17,19,14,15,12,12,12,13,13,13,14,14,14,14,14,14,19,19,19,16,15,12,11,13,12,14,14,14,13,13,14,14,14,19,18,19,18,19,13,13,13,13,14,14,14,13,14,14,14,14,18,17,19,19,19,13,13,13,11,13,11,13,14,14,14,14,14,19,17,17,18,18,16,16,13,13,13,13,14,13,15,15,14,14,19,19,17,17,18,16,16,13,11,14,10,13,12,14,14,14,14,19,19,19,19,19,18,17,13,14,13,11,14,13,14,14,15,15,19,19,19,17,19,18,18,14,13,12,11,14,11,15,15,15,15,1,3,3,13,13,13,13,13,13,13,13,13,13,13,13,4,7,7,13,13,13,13,13,13,13,13,13,13,13,13,3,8,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,2,4,4,5,5,6,5,5,5,5,6,4,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,9,10,10,10,10,7,5,5,7,7,8,8,9,9,10,10,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,10,10,11,11,0,13,13,9,9,9,9,10,10,11,11,11,11,0,0,0,10,10,10,10,10,10,11,11,11,11,0,0,0,10,10,10,10,10,10,11,11,12,12,0,0,0,14,14,11,11,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,12,12,12,0,0,0,0,0,12,12,12,12,12,12,13,13,0,0,0,0,0,12,12,12,12,12,12,13,13,2,4,4,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,9,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,11,11,10,11,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,7,11,11,12,11,11,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,2,4,4,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,4,4,6,6,8,8,9,9,9,9,10,10,11,11,12,12,0,4,4,6,6,8,8,9,9,9,9,10,10,11,11,12,12,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,7,7,8,9,10,10,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,9,10,10,10,11,11,12,12,12,12,0,0,0,0,0,10,10,10,10,11,11,11,12,12,12,13,13,0,0,0,0,0,0,0,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,13,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,12,12,12,12,13,12,13,13,13,13,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,2,4,3,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,6,6,7,7,7,7,9,9,0,0,0,7,6,7,7,9,9,0,0,0,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,0,0,9,9,10,10,2,3,3,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,5,5,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,7,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,5,5,0,0,0,5,5,0,0,0,8,7,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,8,7,0,0,0,10,10,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,7,8,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,5,7,8,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,5,8,8,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,10,10,0,0,0,10,10,0,0,0,9,10,0,0,0,11,10,0,0,0,0,0,0,0,8,10,10,0,0,0,10,10,0,0,0,10,10,0,0,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,4,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,11,10], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+295945);\n/* memory initializer */ allocate([5,8,10,14,11,11,12,16,15,17,5,5,7,9,7,8,10,13,17,17,7,5,5,10,5,7,8,11,13,15,10,8,10,8,8,8,11,15,18,18,8,5,5,8,3,4,6,10,14,16,9,7,6,7,4,3,5,9,14,18,10,9,8,10,6,5,6,9,14,18,12,12,11,12,8,7,8,11,14,18,14,13,12,10,7,5,6,9,14,18,14,14,13,10,6,5,6,8,11,16,4,7,11,11,11,11,10,11,12,11,5,2,11,5,6,6,7,9,11,12,11,9,6,10,6,7,8,9,10,11,11,5,11,7,8,8,9,11,13,14,11,6,5,8,4,5,7,8,10,11,10,6,7,7,5,5,6,8,9,11,10,7,8,9,6,6,6,7,8,9,11,9,9,11,7,7,6,6,7,9,12,12,10,13,9,8,7,7,7,8,11,13,11,14,11,10,9,8,7,7,2,5,5,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,11,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,11,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,9,10,10,10,10,11,7,7,7,7,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,12,11,11,7,7,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,12,11,12,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,12,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,12,11,11,11,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,12,11,12,11,11,11,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,12,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,12,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,11,11,12,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,12,12,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,12,12,12,11,11,11,12,11,11,11,10,10,10,10,10,10,10,10,10,10,10,12,11,12,12,12,12,12,11,12,11,11,10,10,10,10,10,10,10,10,10,10,12,12,12,12,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,5,5,7,7,9,8,10,9,10,10,10,10,6,5,5,7,7,9,8,10,9,11,10,12,12,13,13,6,5,5,7,7,9,9,10,10,11,11,12,12,12,13,19,8,8,8,8,9,9,10,10,12,11,12,12,13,13,19,8,8,8,8,9,9,11,11,12,12,13,13,13,13,19,12,12,9,9,11,11,11,11,12,11,13,12,13,13,18,12,12,9,9,11,10,11,11,12,12,12,13,13,14,19,18,18,11,11,11,11,12,12,13,12,13,13,14,14,16,18,18,11,11,11,10,12,11,13,13,13,13,13,14,17,18,18,14,15,11,12,12,13,13,13,13,14,14,14,18,18,18,15,15,12,10,13,10,13,13,13,13,13,14,18,17,18,17,18,12,13,12,13,13,13,14,14,16,14,18,17,18,18,17,13,12,13,10,12,12,14,14,14,14,17,18,18,18,18,14,15,12,12,13,12,14,14,15,15,18,18,18,17,18,15,14,12,11,12,12,14,14,14,15,1,3,3,12,12,12,12,12,12,12,12,12,12,4,7,7,12,12,12,12,12,12,12,12,12,12,3,8,8,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,4,4,5,5,6,5,5,5,5,6,5,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,8,9,10,11,11,7,5,5,7,7,8,8,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,9,10,10,10,10,11,11,0,13,13,9,9,10,9,10,10,11,11,11,12,0,0,0,10,10,10,10,10,10,11,11,12,12,0,0,0,10,10,10,10,10,10,11,11,12,12,0,0,0,14,14,11,11,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,12,12,13,0,0,0,0,0,12,12,12,12,12,12,13,13,0,0,0,0,0,13,12,12,12,12,12,13,13,2,4,4,6,6,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,9,8,10,10,10,10,10,8,8,8,8,9,9,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,11,11,10,11,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,7,11,11,12,11,11,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,2,4,4,6,6,8,8,9,9,8,8,9,9,10,10,11,11,0,4,4,6,6,8,8,9,9,9,9,10,10,11,11,11,11,0,4,4,7,6,8,8,9,9,9,9,10,10,11,11,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,9,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,9,9,10,10,11,11,11,12,12,12,0,0,0,0,0,10,10,10,10,11,11,11,11,12,12,13,12,0,0,0,0,0,0,0,10,10,11,11,11,11,12,12,12,12,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,12,12,12,12,12,12,13,13,13,13,0,0,0,0,0,0,0,0,0,12,12,12,12,12,13,13,13,2,3,3,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,5,6,6,7,7,9,9,0,6,6,7,7,8,8,10,10,0,0,0,7,7,8,8,10,9,0,0,0,9,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,10,10,9,9,11,11,0,0,0,0,0,9,9,10,10,2,3,3,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,5,5,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,8,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,0,0,0,5,5,0,0,0,5,5,0,0,0,7,7,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,8,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,8,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,6,8,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+307251);\n/* memory initializer */ allocate([4,7,14,10,15,10,12,15,16,15,4,2,11,5,10,6,8,11,14,14,14,10,7,11,6,8,10,11,13,15,9,4,11,5,9,6,9,12,14,15,14,9,6,9,4,5,7,10,12,13,9,5,7,6,5,5,7,10,13,13,10,8,9,8,7,6,8,10,14,14,13,11,10,10,7,7,8,11,14,15,13,12,9,9,6,5,7,10,14,17,15,13,11,10,6,6,7,9,12,17,5,6,11,11,11,11,10,10,12,11,5,2,11,5,6,6,7,9,11,13,13,10,7,11,6,7,8,9,10,12,11,5,11,6,8,7,9,11,14,15,11,6,6,8,4,5,7,8,10,13,10,5,7,7,5,5,6,8,10,11,10,7,7,8,6,5,5,7,9,9,11,8,8,11,8,7,6,6,7,9,12,11,10,13,9,9,7,7,7,9,11,13,12,15,12,11,9,8,8,8,2,5,5,6,6,7,7,7,7,7,7,8,8,8,8,8,8,10,6,6,7,7,8,7,8,8,8,8,8,9,9,9,9,9,10,6,6,7,7,7,7,8,8,8,8,9,9,9,9,9,9,10,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,8,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,11,11,11,9,9,9,9,9,9,10,10,9,9,10,9,11,10,11,11,11,9,9,9,9,9,9,9,9,10,10,10,9,11,11,11,11,11,9,9,9,9,10,10,9,9,9,9,10,9,11,11,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,11,11,11,11,11,11,11,10,9,10,10,9,10,9,9,10,9,11,10,10,11,11,11,11,9,10,9,9,9,9,10,10,10,10,11,11,11,11,11,11,10,10,10,9,9,10,9,10,9,10,10,10,10,11,11,11,11,11,11,11,9,9,9,9,9,10,10,10,1,4,4,6,6,7,7,8,7,9,9,10,10,10,10,6,5,5,7,7,8,8,10,8,11,10,12,12,13,13,6,5,5,7,7,8,8,10,9,11,11,12,12,13,12,18,8,8,8,8,9,9,10,9,11,10,12,12,13,13,18,8,8,8,8,9,9,10,10,11,11,13,12,14,13,18,11,11,9,9,10,10,11,11,11,12,13,12,13,14,18,11,11,9,8,11,10,11,11,11,11,12,12,14,13,18,18,18,10,11,10,11,12,12,12,12,13,12,14,13,18,18,18,10,11,11,9,12,11,12,12,12,13,13,13,18,18,17,14,14,11,11,12,12,13,12,14,12,14,13,18,18,18,14,14,11,10,12,9,12,13,13,13,13,13,18,18,17,16,18,13,13,12,12,13,11,14,12,14,14,17,18,18,17,18,13,12,13,10,12,11,14,14,14,14,17,18,18,18,18,15,16,12,12,13,10,14,12,14,15,18,18,18,16,17,16,14,12,11,13,10,13,13,14,15,1,4,4,12,12,12,12,12,12,12,12,12,12,4,9,8,12,12,12,12,12,12,12,12,12,12,2,9,7,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,5,6,5,5,5,5,6,4,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,8,9,9,10,10,7,5,5,7,7,8,8,8,8,9,9,11,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,12,0,13,13,9,9,10,10,10,10,11,11,12,12,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,12,13,13,0,0,0,14,14,11,11,11,11,12,12,13,13,0,0,0,0,0,12,12,12,12,13,13,14,13,0,0,0,0,0,13,13,12,12,13,12,14,13,2,4,4,6,6,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,10,10,10,7,7,8,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,7,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,9,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,11,11,10,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,7,11,11,11,11,11,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,2,3,3,6,6,7,7,8,8,8,8,9,9,10,10,11,10,0,5,5,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,5,5,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,10,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,8,8,9,9,10,10,11,11,12,11,12,12,0,0,0,0,0,9,10,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,0,0,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,13,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,1,3,4,6,6,7,7,9,9,0,5,5,7,7,7,8,9,9,0,5,5,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,9,9,9,9,10,10,0,0,0,10,10,10,10,11,11,0,0,0,0,0,10,10,11,11,2,3,3,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,5,5,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,8,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,0,0,0,5,5,0,0,0,5,5,0,0,0,7,8,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,8,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,6,8,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,8], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+316944);\n/* memory initializer */ allocate([10,9,13,11,14,10,12,13,13,14,7,2,12,5,10,5,7,10,12,14,12,6,9,8,7,7,9,11,13,16,10,4,12,5,10,6,8,12,14,16,12,6,8,7,6,5,7,11,12,16,10,4,8,5,6,4,6,9,13,16,10,6,10,7,7,6,7,9,13,15,12,9,11,9,8,6,7,10,12,14,14,11,10,9,6,5,6,9,11,13,15,13,11,10,6,5,6,8,9,11,6,6,12,10,10,10,9,10,12,12,6,1,10,5,6,6,7,9,11,14,12,9,8,11,7,8,9,11,13,15,10,5,12,7,8,7,9,12,14,15,10,6,7,8,5,6,7,9,12,14,9,6,8,7,6,6,7,9,12,12,9,7,9,9,7,6,6,7,10,10,10,9,10,11,8,7,6,6,8,10,12,11,13,13,11,10,8,8,8,10,11,13,15,15,14,13,10,8,8,9,2,4,4,6,6,7,7,7,7,7,7,8,8,8,8,8,8,10,7,7,7,7,7,7,8,8,8,8,9,9,9,9,9,9,10,7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,9,10,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,8,7,8,8,8,8,9,9,9,9,9,9,9,9,10,11,11,8,8,8,8,9,9,9,9,9,9,10,9,9,9,10,11,10,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,11,10,8,8,9,9,9,9,9,9,10,9,9,10,9,10,11,10,11,11,11,8,8,9,9,9,9,9,9,9,9,10,10,11,11,11,11,11,9,9,9,9,9,9,10,9,9,9,10,10,11,11,11,11,11,9,9,9,9,9,9,9,9,9,10,9,10,11,11,11,11,11,9,9,9,9,10,10,9,9,9,10,10,10,11,11,11,11,11,11,11,9,9,9,10,9,9,10,10,10,10,11,11,10,11,11,11,11,10,9,10,10,9,9,9,9,10,10,11,10,11,11,11,11,11,9,9,9,9,10,9,10,10,10,10,11,10,11,11,11,11,11,10,10,9,9,10,9,10,10,10,10,10,10,10,11,11,11,11,11,11,9,9,10,9,10,9,10,10,1,4,4,6,6,7,6,8,8,10,9,10,10,6,5,5,7,7,8,7,10,9,11,11,12,13,6,5,5,7,7,8,8,10,10,11,11,13,13,18,8,8,8,8,9,9,10,10,12,12,12,13,18,8,8,8,8,9,9,10,10,12,12,13,13,18,11,11,8,8,10,10,11,11,12,11,13,12,18,11,11,9,7,10,10,11,11,11,12,12,13,17,17,17,10,10,11,11,12,12,12,10,12,12,17,17,17,11,10,11,10,13,12,11,12,12,12,17,17,17,15,14,11,11,12,11,13,10,13,12,17,17,17,14,14,12,10,11,11,13,13,13,13,17,17,16,17,16,13,13,12,10,13,10,14,13,17,16,17,16,17,13,12,12,10,13,11,14,14,1,5,4,12,12,12,12,12,12,12,12,12,12,4,9,8,11,11,11,11,11,11,11,11,11,11,2,8,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,4,6,5,5,5,5,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,6,5,5,7,7,8,8,8,8,9,9,10,10,7,6,5,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,10,10,10,10,11,11,12,12,0,0,0,10,10,10,10,11,11,12,12,12,13,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,14,14,10,11,11,11,12,12,13,13,0,0,0,14,14,11,10,11,11,13,12,13,13,0,0,0,0,0,12,12,11,12,13,12,14,14,0,0,0,0,0,12,12,12,12,13,12,14,14,2,3,4,6,6,7,7,7,7,7,7,9,7,7,6,6,7,7,8,8,8,8,9,6,6,6,6,7,7,8,8,8,8,10,7,7,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,10,9,9,7,10,10,11,10,11,11,10,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,11,11,11,12,11,11,6,9,9,11,10,10,11,11,10,6,9,9,11,10,10,12,10,11,1,4,3,6,6,8,8,9,9,9,9,9,9,10,10,11,11,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,11,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,8,8,7,7,9,9,10,10,9,9,10,10,11,11,12,12,0,0,0,7,7,9,9,10,10,10,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,13,12,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,13,13,14,14,1,3,3,6,6,7,7,9,9,0,7,7,7,7,7,7,9,9,0,7,7,7,7,7,7,9,9,0,8,8,7,7,8,8,10,10,0,0,0,7,7,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,10,10,9,9,11,11,0,0,0,0,0,9,9,11,11,1,3,3,6,6,0,0,0,0,0,6,6,6,6,0,0,0,0,0,6,6,6,6,0,0,0,0,0,7,7,6,6,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,7,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,7,7,0,0,0,7,7,0,0,0,8,8,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,11,11,0,0,0,11,11,0,0,0,12,11,0,0,0,0,0,0,0,7,8,8,0,0,0,10,11,0,0,0,11,11,0,0,0,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,11,11,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,6,8,8,0,0,0,10,11,0,0,0,10,11,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,0,0,0,11,12,0,0,0,11,12,0,0,0,12,11,0,0,0,0,0,0,0,8,10,9,0,0,0,12,11,0,0,0,12,11,0,0,0,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,6,8,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+326485);\n/* memory initializer */ allocate([11,9,13,12,12,11,12,12,13,15,8,2,11,4,8,5,7,10,12,15,13,7,10,9,8,8,10,13,17,17,11,4,12,5,9,5,8,11,14,16,12,6,8,7,6,6,8,11,13,16,11,4,9,5,6,4,6,10,13,16,11,6,11,7,7,6,7,10,13,15,13,9,12,9,8,6,8,10,12,14,14,10,10,8,6,5,6,9,11,13,15,11,11,9,6,5,6,8,9,12,5,4,8,10,9,9,10,11,12,4,2,5,6,6,8,10,11,13,8,4,6,8,7,9,12,12,14,10,6,8,4,5,6,9,11,12,9,5,6,5,5,6,9,11,11,9,7,9,6,5,5,7,10,10,10,9,11,8,7,6,7,9,11,11,12,13,10,10,9,8,9,11,11,15,15,12,13,11,9,10,11,5,5,9,10,9,9,10,11,12,5,1,5,6,6,7,10,12,14,9,5,6,8,8,10,12,14,14,10,5,8,5,6,8,11,13,14,9,5,7,6,6,8,10,12,11,9,7,9,7,6,6,7,10,10,10,9,12,9,8,7,7,10,12,11,11,13,12,10,9,8,9,11,11,14,15,15,13,11,9,9,11,2,5,5,6,6,7,6,7,7,8,8,8,8,8,8,8,8,10,6,6,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,7,7,7,7,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,9,9,9,9,9,9,9,9,9,9,10,11,11,8,8,8,8,9,9,9,9,9,9,10,10,9,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,10,10,11,10,10,8,8,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,11,11,8,8,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,9,9,9,9,9,9,9,9,10,9,10,9,11,11,11,11,11,9,8,9,9,9,9,9,9,9,10,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,10,10,9,11,11,11,11,11,11,11,9,9,10,9,9,9,9,10,9,10,10,11,10,11,11,11,11,9,10,10,10,9,9,9,9,9,9,10,11,11,11,11,11,11,9,9,9,9,9,9,9,9,10,9,11,11,10,11,11,11,11,10,10,9,9,9,9,9,9,10,9,10,11,10,11,11,11,11,11,11,9,9,10,9,9,9,9,9,1,4,4,6,6,7,7,9,9,10,11,12,12,6,5,5,7,7,8,7,10,10,11,11,12,12,6,5,5,7,7,8,8,10,10,11,11,12,12,16,7,7,8,8,9,9,11,11,12,12,13,13,17,7,7,8,7,9,9,11,10,12,12,13,13,19,11,10,8,8,10,10,11,11,12,12,13,13,19,11,11,9,7,11,10,11,11,12,12,13,12,19,19,19,10,10,10,10,11,12,12,12,13,14,18,19,19,11,9,11,9,13,12,12,12,13,13,19,20,19,13,15,11,11,12,12,13,13,14,13,18,19,20,15,13,12,10,13,10,13,13,13,14,20,20,20,20,20,13,14,12,12,13,12,13,13,20,20,20,20,20,13,12,12,12,14,12,14,13,1,3,3,13,13,13,13,13,13,13,13,13,13,3,6,6,13,13,13,13,13,13,13,13,13,13,4,8,7,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,4,4,4,5,6,5,5,5,5,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,7,5,5,7,7,8,8,8,8,9,9,10,10,7,5,6,7,7,8,8,8,8,9,9,11,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,12,12,0,0,0,9,10,9,10,11,11,12,11,13,12,0,0,0,10,10,9,9,11,11,12,12,13,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,12,11,11,12,13,14,13,0,0,0,0,0,12,12,11,11,13,12,14,13,2,4,4,6,6,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,7,7,7,7,8,8,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,9,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,10,11,11,11,10,10,6,9,9,11,11,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,11,11,11,11,11,11,11,6,9,9,11,10,10,11,11,10,6,9,9,10,10,10,11,10,11,2,3,3,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,5,5,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,5,5,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,10,10,10,11,11,11,12,12,0,0,0,8,8,8,8,9,9,10,10,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,6,6,7,7,9,9,0,6,6,7,7,8,8,9,9,0,6,6,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,8,8,9,9,11,11,0,0,0,9,9,9,9,11,11,0,0,0,10,10,10,10,11,11,0,0,0,0,0,9,9,11,11,1,3,3,7,7,0,0,0,0,0,5,5,6,6,0,0,0,0,0,5,5,7,7,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,9,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,9,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+335970);\n/* memory initializer */ allocate([2,4,4,6,6,6,6,7,7,8,8,8,8,8,8,8,8,10,10,10,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,9,9,9,9,9,9,10,9,9,10,10,10,7,7,8,8,9,8,9,9,9,9,10,9,9,10,10,11,11,8,8,8,8,9,9,9,9,9,9,10,9,9,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,10,10,11,11,11,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,11,11,11,8,8,9,9,9,9,10,9,9,9,9,9,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,10,11,11,9,9,9,9,9,9,9,9,9,10,10,10,10,11,10,11,11,9,9,9,9,9,9,9,9,9,10,10,9,10,10,11,11,11,11,11,9,9,9,10,9,9,9,9,9,9,10,11,11,11,11,11,11,10,10,10,10,9,9,9,9,9,9,10,11,11,11,11,11,11,9,10,9,9,9,9,10,9,9,9,11,11,11,11,11,11,11,10,10,9,9,9,9,9,9,10,9,11,11,10,11,11,11,11,10,11,9,9,9,9,9,9,9,9,1,4,4,6,5,7,7,9,9,10,10,12,12,6,5,5,7,7,8,8,10,10,12,11,12,12,6,5,5,7,7,8,8,10,10,11,11,12,12,15,7,7,8,8,9,9,11,11,12,12,13,12,15,8,8,8,7,9,9,10,10,12,12,13,13,16,11,10,8,8,10,10,11,11,12,12,13,13,16,11,11,9,8,11,10,11,11,12,12,13,12,16,16,16,10,11,10,11,12,12,12,12,13,13,16,16,16,11,9,11,9,14,12,12,12,13,13,16,16,16,12,14,11,12,12,12,13,13,14,13,16,16,16,15,13,12,10,13,10,13,14,13,13,16,16,16,16,16,13,14,12,13,13,12,13,13,16,16,16,16,16,13,12,12,11,14,12,15,13,1,4,3,10,10,10,10,10,10,10,10,10,10,4,8,6,10,10,10,10,10,10,10,10,10,10,4,8,7,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,10,9,7,5,6,7,7,8,8,8,8,9,9,10,10,7,5,5,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,11,11,0,0,0,10,10,10,10,11,11,12,11,12,12,0,0,0,10,10,10,9,11,11,12,11,13,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,12,11,11,12,12,14,13,0,0,0,0,0,12,11,11,11,13,10,14,13,2,3,3,6,6,7,7,7,7,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,6,10,10,11,11,11,11,10,10,6,9,9,11,10,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,11,11,11,12,11,11,7,9,9,11,10,10,11,11,10,6,9,9,10,10,10,12,10,11,1,4,3,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,11,0,0,0,8,8,9,9,9,10,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,10,9,10,10,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,12,12,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,6,5,6,6,8,8,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,7,9,9,0,0,0,7,7,8,8,10,10,0,0,0,7,7,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,10,10,9,9,11,11,0,0,0,0,0,9,9,11,11,1,3,2,7,7,0,0,0,0,0,13,13,6,6,0,0,0,0,0,12,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,9,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,7,6,0,0,0,0,0,0,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+344892);\n/* memory initializer */ allocate([4,7,13,14,14,15,16,18,18,4,2,5,8,7,9,12,15,15,10,4,5,10,6,8,11,15,17,12,5,7,5,6,8,11,14,17,11,5,6,6,5,6,9,13,17,12,6,7,6,5,6,8,12,14,14,7,8,6,6,7,9,11,14,14,8,9,6,5,6,9,11,13,16,10,10,7,6,7,8,10,11,6,8,13,12,13,14,15,16,16,4,2,4,7,6,8,11,13,15,10,4,4,8,6,8,11,14,17,11,5,6,5,6,8,12,14,17,11,5,5,6,5,7,10,13,16,12,6,7,8,7,8,10,13,15,13,8,8,7,7,8,10,12,15,15,7,7,5,5,7,9,12,14,15,8,8,6,6,7,8,10,11,5,4,9,10,9,10,11,12,13,4,1,5,7,7,9,11,12,14,8,5,7,9,8,10,13,13,13,10,7,9,4,6,7,10,12,14,9,6,7,6,6,7,10,12,12,9,8,9,7,6,7,8,11,12,11,11,11,9,8,7,8,10,12,12,13,14,12,11,9,9,9,12,12,17,17,15,16,12,10,11,13,5,4,8,9,8,9,10,12,15,4,1,5,5,6,8,11,12,12,8,5,8,9,9,11,13,12,12,9,5,8,5,7,9,12,13,13,8,6,8,7,7,9,11,11,11,9,7,9,7,7,7,7,10,12,10,10,11,9,8,7,7,9,11,11,12,13,12,11,9,8,9,11,13,16,16,15,15,12,10,11,12,2,5,5,6,6,7,7,7,7,8,8,8,8,8,8,8,8,10,6,6,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,6,6,7,7,8,7,8,8,9,9,9,9,9,9,9,9,10,7,7,7,7,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,9,8,9,9,9,9,10,9,9,10,10,10,11,8,8,8,8,9,9,9,9,9,9,9,10,9,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,10,10,11,10,10,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,11,11,8,8,9,9,9,9,9,9,9,9,9,10,11,11,11,11,11,9,9,9,9,9,9,9,9,10,9,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,10,11,11,11,11,11,9,9,10,9,9,9,9,9,9,9,10,11,10,11,11,11,11,10,10,10,10,9,9,9,9,9,9,10,11,11,11,11,11,11,9,10,9,9,9,9,9,9,9,9,11,11,10,11,11,11,10,10,10,9,9,9,9,9,9,9,9,10,11,10,11,11,11,11,11,11,9,9,9,9,9,9,9,9,1,4,4,6,6,7,7,9,9,10,11,12,12,6,5,5,7,7,8,8,10,10,12,11,12,12,6,5,5,7,7,8,8,10,10,12,11,12,12,17,7,7,8,8,9,9,10,10,12,12,13,13,18,7,7,8,7,9,9,10,10,12,12,12,13,19,10,10,8,8,10,10,11,11,12,12,13,14,19,11,10,8,7,10,10,11,11,12,12,13,12,19,19,19,10,10,10,10,11,11,12,12,13,13,19,19,19,11,9,11,9,14,12,13,12,13,13,19,20,18,13,14,11,11,12,12,13,13,14,13,20,20,20,15,13,11,10,13,11,13,13,14,13,20,20,20,20,20,13,14,12,12,13,13,13,13,20,20,20,20,20,13,13,12,12,16,13,15,13,1,3,3,11,11,11,11,11,11,3,7,6,11,11,11,11,11,11,4,8,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,4,4,4,4,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,7,5,5,7,7,8,8,8,8,9,9,10,10,7,6,5,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,11,12,0,0,0,9,10,10,10,11,11,12,11,12,12,0,0,0,10,10,9,9,11,11,12,12,12,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,12,11,11,13,12,13,13,0,0,0,0,0,12,12,11,11,13,12,14,14,2,4,4,6,6,7,7,7,7,7,8,9,5,5,6,6,7,7,8,8,8,8,9,5,5,6,6,7,7,8,8,8,8,10,7,7,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,10,11,11,11,10,10,6,9,9,11,11,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,11,11,11,11,11,11,6,9,9,11,10,10,11,11,10,6,9,9,11,10,10,11,10,11,1,4,4,6,6,8,8,8,8,8,8,9,9,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,10,11,11,11,0,5,6,7,7,8,8,9,9,9,9,10,10,10,11,11,11,0,7,7,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,10,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,12,13,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,12,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,11,12,12,13,13,13,13,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,4,3,6,6,7,7,9,9,0,5,5,7,7,8,7,9,9,0,5,5,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,11,11,0,0,0,9,9,9,9,11,11,0,0,0,10,10,10,10,11,11,0,0,0,0,0,9,9,11,11,1,3,3,7,7,0,0,0,0,0,5,4,7,7,0,0,0,0,0,5,5,7,7,0,0,0,0,0,6,7,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,10,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,10], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+353552);\n/* memory initializer */ allocate([2,4,4,6,6,7,7,7,7,8,8,8,8,8,8,8,8,10,10,10,7,7,7,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,8,9,9,9,9,9,10,9,9,10,10,10,7,7,8,8,9,8,9,9,9,9,10,9,9,10,10,10,10,8,8,8,8,9,8,9,9,9,9,9,10,9,10,10,10,10,7,7,8,8,9,9,9,9,9,9,10,9,10,10,10,10,10,8,8,8,9,9,9,9,9,9,9,10,10,10,9,11,10,10,10,10,8,8,9,9,9,9,9,10,9,9,9,10,10,10,10,11,11,9,9,9,9,9,9,9,9,10,9,9,10,11,10,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,10,10,11,11,11,11,9,9,9,9,9,9,9,9,9,9,10,10,10,11,11,11,11,9,10,9,10,9,9,9,9,10,9,10,11,10,11,10,10,10,10,10,9,9,9,10,9,9,9,10,11,11,10,11,11,10,11,10,10,10,9,9,9,9,10,9,9,10,11,10,11,11,11,11,10,11,10,10,9,10,9,9,9,10,1,4,4,6,6,7,7,9,9,11,12,13,12,6,5,5,7,7,8,8,10,9,12,12,12,12,6,5,5,7,7,8,8,10,9,12,11,11,13,16,7,7,8,8,9,9,10,10,12,12,13,12,16,7,7,8,7,9,9,10,10,11,12,12,13,16,10,10,8,8,10,10,11,12,12,12,13,13,16,11,10,8,7,11,10,11,11,12,11,13,13,16,16,16,10,10,10,10,11,11,13,12,13,13,16,16,16,11,9,11,9,15,13,12,13,13,13,16,16,16,15,13,11,11,12,13,12,12,14,13,16,16,16,14,13,11,11,13,12,14,13,13,13,16,16,16,16,16,13,13,13,12,14,13,14,14,16,16,16,16,16,13,13,12,12,14,14,15,13,1,5,5,10,10,6,9,8,10,10,6,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,7,5,5,7,7,8,8,8,8,9,9,10,10,7,5,6,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,11,12,0,0,0,10,10,10,10,11,11,11,11,12,12,0,0,0,10,10,9,9,11,11,11,12,12,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,11,11,11,13,12,13,13,0,0,0,0,0,12,12,11,11,12,12,13,13,2,3,3,6,6,7,7,7,7,7,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,10,9,9,4,6,7,10,9,9,11,9,9,7,10,10,11,11,11,12,10,11,6,9,9,11,10,11,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,12,11,11,11,11,11,7,9,9,10,10,10,11,11,10,6,9,9,11,10,10,11,10,10,1,4,3,6,6,8,7,8,8,8,8,9,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,9,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,8,8,9,9,9,9,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,9,9,10,10,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,11,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,11,11,11,11,11,12,12,12,13,13,0,0,0,0,0,0,0,11,10,11,11,11,11,12,12,13,13,0,0,0,0,0,0,0,11,11,12,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,12,12,12,12,13,13,13,0,0,0,0,0,0,0,12,12,12,12,12,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,6,6,6,6,8,8,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,8,9,9,0,0,0,7,7,7,7,9,9,0,0,0,9,9,8,8,10,10,0,0,0,8,9,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,3,2,8,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,11,10], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+362448);\n/* memory initializer */ allocate([6,6,12,13,13,14,16,17,17,4,2,5,8,7,9,12,15,15,9,4,5,9,7,9,12,16,18,11,6,7,4,6,8,11,14,18,10,5,6,5,5,7,10,14,17,10,5,7,7,6,7,10,13,16,11,5,7,7,7,8,10,12,15,13,6,7,5,5,7,9,12,13,16,8,9,6,6,7,9,10,12,9,8,12,11,12,13,14,14,16,6,1,5,6,6,9,12,14,17,9,4,5,9,7,9,13,15,16,8,5,8,6,8,10,13,17,17,9,6,7,7,8,9,13,15,17,11,8,9,9,9,10,12,16,16,13,7,8,7,7,9,12,14,15,13,6,7,5,5,7,10,13,13,14,7,8,5,6,7,9,10,12,3,3,8,8,8,8,10,12,14,3,2,6,7,7,8,10,12,16,7,6,7,9,8,10,12,14,16,8,6,8,4,5,7,9,11,13,7,6,8,5,6,7,9,11,14,8,8,10,7,7,6,8,10,13,9,11,12,9,9,7,8,10,12,10,13,15,11,11,10,9,10,13,13,16,17,14,15,14,13,14,17,4,4,7,8,7,8,10,12,17,3,1,6,6,7,8,10,12,15,7,6,9,9,9,11,12,14,17,8,6,9,6,7,9,11,13,17,7,6,9,7,7,8,9,12,15,8,8,10,8,7,7,7,10,14,9,10,12,10,8,8,8,10,14,11,13,15,13,12,11,11,12,16,17,18,18,19,20,18,16,16,20,3,4,4,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,6,6,6,6,7,7,8,8,8,9,9,9,9,9,9,9,10,6,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,7,8,8,8,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,8,8,9,9,9,9,9,9,9,9,11,10,11,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,11,11,8,8,8,8,9,9,9,9,9,9,9,9,11,10,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,10,11,10,11,11,9,9,9,9,9,9,9,9,9,9,9,10,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,10,11,11,11,11,11,11,9,10,10,10,9,9,9,9,9,9,11,10,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,10,10,9,9,9,9,9,9,9,9,10,11,11,11,11,11,11,11,11,9,9,9,9,9,9,9,9,1,4,4,6,6,8,8,9,9,10,11,11,11,6,5,5,7,7,8,8,10,10,10,11,11,11,6,5,5,7,7,8,8,10,10,11,12,12,12,14,7,7,7,8,9,9,11,11,11,12,11,12,17,7,7,8,7,9,9,11,11,12,12,12,12,14,11,11,8,8,10,10,11,12,12,13,11,12,14,11,11,8,8,10,10,11,12,12,13,13,12,14,15,14,10,10,10,10,11,12,12,12,12,11,14,13,16,10,10,10,9,12,11,12,12,13,14,14,15,14,14,13,10,10,11,11,12,11,13,11,14,12,15,13,14,11,10,12,10,12,12,13,13,13,13,14,15,15,12,12,11,11,12,11,13,12,14,14,14,14,17,12,12,11,10,13,11,13,13,1,4,4,12,11,13,13,14,14,4,7,7,11,13,14,14,14,14,3,8,3,14,14,14,14,14,14,14,10,12,14,14,14,14,14,14,14,14,5,14,8,14,14,14,14,14,12,14,13,14,14,14,14,14,14,14,13,14,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,4,4,4,5,6,5,5,5,5,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,9,9,10,10,7,5,5,7,7,8,8,8,8,10,9,11,10,7,5,5,7,7,8,8,8,8,9,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,11,11,12,12,0,13,13,9,9,9,9,10,10,11,11,12,12,0,0,0,10,10,10,10,11,11,12,12,12,13,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,13,13,13,0,0,0,14,14,11,10,11,11,12,12,13,13,0,0,0,0,0,12,12,12,12,13,13,13,14,0,0,0,0,0,13,12,12,12,13,13,13,14,2,4,4,5,5,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,7,7,7,7,8,8,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,9,9,10,10,10,10,10,8,8,8,8,9,9,10,10,10,10,10,9,9,9,9,8,9,10,10,10,10,10,8,9,8,8,9,8,1,4,4,7,6,6,7,6,6,4,7,6,10,9,9,11,9,9,4,6,7,10,9,9,11,9,9,7,10,10,10,11,11,11,11,10,6,9,9,11,10,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,11,11,11,11,12,11,11,7,9,9,11,10,10,12,10,10,7,9,9,11,10,10,11,10,10,1,4,4,6,6,8,8,9,9,8,8,9,9,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,6,5,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,13,13,13,0,0,0,0,0,10,10,11,11,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,12,12,12,13,13,13,14,14,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,14,14,14,14,1,4,3,6,6,7,7,9,9,0,5,5,7,7,8,7,9,9,0,5,5,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,9,9,9,9,10,10,0,0,0,10,10,10,10,11,11,0,0,0,0,0,10,10,11,11,1,3,4,7,7,0,0,0,0,0,4,4,7,7,0,0,0,0,0,4,5,7,7,0,0,0,0,0,6,7,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,10,9,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,9,0,0,0,0,0,0,9,9,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+371564);\n/* memory initializer */ allocate([3,4,3,6,6,7,7,8,8,9,9,9,9,9,9,9,9,10,11,11,6,6,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,6,6,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,7,8,8,8,9,9,9,9,9,9,10,9,10,11,10,7,6,7,7,8,8,9,9,9,9,9,9,9,10,10,10,11,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,8,9,9,9,9,9,9,9,10,11,11,11,8,8,8,8,8,8,9,9,9,9,9,9,9,9,11,10,10,11,11,8,8,8,9,9,9,9,9,9,10,9,10,10,10,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,10,10,10,10,11,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,10,11,11,11,11,9,9,9,9,9,9,9,9,10,10,10,11,11,10,11,11,11,9,10,10,9,9,9,9,9,9,9,10,11,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,10,10,9,9,9,9,9,9,9,9,11,11,11,10,11,11,11,11,11,9,9,9,10,9,9,9,9,1,4,4,6,6,8,8,9,10,10,11,11,11,6,5,5,7,7,8,8,9,10,9,11,11,12,5,5,5,7,7,8,9,10,10,12,12,14,13,15,7,7,8,8,9,10,11,11,10,12,10,11,15,7,8,8,8,9,9,11,11,13,12,12,13,15,10,10,8,8,10,10,12,12,11,14,10,10,15,11,11,8,8,10,10,12,13,13,14,15,13,15,15,15,10,10,10,10,12,12,13,12,13,10,15,15,15,10,10,11,10,13,11,13,13,15,13,15,15,15,13,13,10,11,11,11,12,10,14,11,15,15,14,14,13,10,10,12,11,13,13,14,14,15,15,15,15,15,11,11,11,11,12,11,15,12,15,15,15,15,15,12,12,11,11,14,12,13,14,1,7,7,11,11,8,11,11,11,11,4,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,8,9,9,11,11,7,5,5,7,7,8,8,8,8,9,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,11,11,11,12,0,13,13,9,9,9,9,10,10,11,11,11,12,0,0,0,10,10,10,10,11,11,12,12,12,13,0,0,0,10,10,10,10,11,11,12,12,13,12,0,0,0,14,14,11,10,11,12,12,13,13,14,0,0,0,15,15,11,11,12,11,12,12,14,13,0,0,0,0,0,12,12,12,12,13,13,14,14,0,0,0,0,0,13,13,12,12,13,13,13,14,1,4,4,6,6,7,7,8,8,8,8,10,10,10,7,6,8,8,8,8,8,8,10,10,10,7,6,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,1,4,4,7,6,6,7,6,6,4,6,6,10,9,9,11,9,9,4,6,6,10,9,9,10,9,9,7,10,10,11,11,11,12,11,11,7,9,9,11,11,10,11,10,10,7,9,9,11,10,11,11,10,10,7,10,10,11,11,11,12,11,11,7,9,9,11,10,10,11,10,10,7,9,9,11,10,10,11,10,10,1,4,3,6,6,7,7,8,8,8,8,9,9,10,10,10,10,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,8,8,9,9,9,9,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,9,9,10,10,10,11,11,11,12,12,0,0,0,9,9,10,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,11,10,11,11,11,12,13,12,13,13,0,0,0,0,0,0,0,11,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,12,12,12,13,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,12,13,13,14,14,1,3,3,6,6,6,6,8,8,0,0,0,6,6,7,7,9,9,0,0,0,6,6,7,7,9,9,0,0,0,7,7,8,8,10,10,0,0,0,7,7,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,9,9,9,9,10,10,0,0,0,10,10,10,10,11,11,0,0,0,0,0,10,10,11,11,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,9,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,10,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,11,9,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,9,11,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+380460);\n/* memory initializer */ allocate([5,6,12,14,12,14,16,17,18,4,2,5,11,7,10,12,14,15,9,4,5,11,7,10,13,15,18,15,6,7,5,6,8,11,13,16,11,5,6,5,5,6,9,13,15,12,5,7,6,5,6,9,12,14,12,6,7,8,6,7,9,12,13,14,8,8,7,5,5,8,10,12,16,9,9,8,6,6,7,9,9,10,9,12,15,12,13,16,14,16,7,1,5,14,7,10,13,16,16,9,4,6,16,8,11,16,16,16,14,4,7,16,9,12,14,16,16,10,5,7,14,9,12,14,15,15,13,8,9,14,10,12,13,14,15,13,9,9,7,6,8,11,12,12,14,8,8,5,4,5,8,11,12,16,10,10,6,5,6,8,9,10,5,8,10,10,10,11,11,12,14,18,7,5,5,6,8,9,10,12,14,17,9,5,4,5,6,8,10,11,13,19,9,5,4,4,5,6,9,10,12,17,8,6,5,4,4,5,7,10,11,15,8,7,7,6,5,5,6,9,11,14,8,9,8,7,6,5,6,7,11,14,9,11,11,9,7,6,6,6,9,14,11,14,15,13,9,8,7,7,9,14,13,15,19,17,12,11,10,9,10,14,2,3,4,4,4,5,5,6,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,7,8,8,8,8,8,8,1,4,4,7,7,7,7,7,6,9,7,10,8,12,12,13,13,14,14,4,7,7,9,9,9,8,9,8,10,9,11,9,14,9,14,10,13,11,4,7,7,9,9,9,9,8,9,10,10,11,11,12,13,12,13,14,15,7,9,9,10,11,10,10,10,10,11,12,13,13,13,14,17,14,15,16,7,9,9,10,10,10,10,10,10,11,12,13,13,14,14,15,15,18,18,8,9,9,11,10,11,11,11,12,13,12,14,14,16,15,15,17,18,15,8,9,9,10,10,11,11,11,11,13,13,14,14,15,15,15,16,16,18,7,9,8,10,10,11,11,12,12,14,14,15,15,16,16,15,17,16,18,8,9,9,10,10,11,12,12,12,13,13,16,15,17,16,17,18,17,18,9,10,10,12,11,13,13,14,13,14,14,15,17,16,18,17,18,17,18,9,10,10,12,11,12,13,13,14,15,16,14,15,16,18,18,18,18,17,11,11,11,13,13,14,14,16,15,15,15,16,15,15,18,18,18,17,16,11,11,12,13,13,15,14,15,16,16,16,17,16,15,18,17,18,16,18,12,13,13,15,15,15,16,18,16,17,16,17,16,17,17,17,18,18,17,13,13,13,15,13,16,15,17,16,16,16,18,18,18,18,16,17,17,18,13,15,14,15,15,18,17,18,18,18,16,18,17,18,17,18,16,17,17,14,14,14,15,16,17,16,18,18,18,17,18,17,18,18,18,16,16,16,14,17,16,17,15,16,18,18,17,18,17,18,17,18,18,18,17,18,17,15,16,15,18,15,18,17,16,18,18,18,18,18,18,17,18,16,18,17,1,5,3,9,8,9,9,9,9,9,9,9,9,9,9,5,7,8,9,9,9,9,9,9,9,9,9,9,9,9,5,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,5,5,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,5,6,6,7,7,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,9,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,7,7,7,8,8,9,9,9,9,9,9,9,9,10,9,10,10,10,9,10,9,8,8,8,9,8,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,7,7,9,8,10,9,11,11,4,7,6,9,8,9,9,9,9,10,9,11,9,12,9,4,6,7,8,8,9,9,9,9,10,10,10,11,11,12,7,9,8,10,10,11,11,10,10,11,11,12,12,13,12,7,8,8,10,10,10,11,10,10,11,11,11,12,12,13,8,9,9,11,11,11,11,11,11,12,12,13,13,13,13,8,9,9,11,11,11,11,11,11,12,12,13,13,13,14,8,9,9,10,10,11,11,12,11,13,13,14,13,14,14,8,9,9,10,10,11,11,12,12,12,12,13,13,14,14,9,10,10,11,11,12,12,13,12,13,13,14,14,15,15,9,10,10,11,11,12,12,12,13,13,13,14,14,14,15,10,11,11,12,12,13,13,14,13,14,14,15,14,15,15,10,11,11,12,12,13,12,13,14,14,14,14,14,15,15,11,12,12,13,13,13,13,14,14,15,14,15,15,16,16,11,12,12,13,13,13,13,14,14,14,15,15,15,16,16,2,5,5,7,7,7,7,7,7,8,8,5,6,6,7,7,7,7,8,8,8,8,5,6,6,7,7,7,7,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,4,4,7,7,8,8,8,8,9,9,10,10,4,6,6,8,8,9,9,9,9,10,10,11,10,4,6,6,8,8,9,9,9,9,10,10,11,11,7,8,8,10,9,10,10,10,10,11,11,12,12,7,8,8,10,10,10,10,10,10,11,11,12,12,8,9,9,10,10,11,11,11,11,12,12,13,13,8,9,9,10,10,11,11,11,11,12,12,13,13,8,9,9,11,10,11,11,12,12,13,13,14,13,8,9,9,10,10,11,11,12,12,13,13,13,13,9,10,10,11,11,12,12,13,13,13,13,14,14,9,10,10,11,11,12,12,13,13,13,13,14,14,10,11,11,12,12,13,13,14,13,14,14,15,14,10,11,11,12,12,13,13,14,13,14,14,15,14,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,4,7,7,8,8,8,8,10,10,11,11,4,6,6,7,7,9,9,9,9,10,10,11,11,4,6,6,7,7,9,9,9,9,10,10,11,11,7,8,8,9,9,9,9,10,10,11,11,12,12,7,7,7,9,8,10,9,10,10,11,11,12,12,8,9,9,9,10,10,10,11,11,12,12,13,13,8,9,9,10,9,10,10,11,11,12,12,13,13,8,9,9,10,10,11,11,11,11,12,12,13,13,8,9,9,10,10,11,11,12,11,12,12,13,13,10,10,10,11,11,12,12,12,12,13,13,14,14,10,10,10,11,11,12,12,12,12,13,13,14,14,11,11,11,12,12,13,13,13,13,14,14,14,14,11,11,11,12,12,13,13,13,13,14,14,14,14,2,5,5,6,6,7,7,8,8,8,8,5,6,6,7,7,7,7,8,8,8,8,5,6,6,6,7,7,7,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,8,8,8,8,8,8,8,8,9,9,8,8,8,8,8,8,8,9,9,9,9,8,8,8,8,8,8,8,9,9,9,9,1,4,4,5,7,7,5,7,7,5,8,8,7,9,9,7,9,10,5,8,8,7,10,9,7,10,9,5,8,8,8,11,10,8,10,10,7,10,10,9,9,12,10,12,12,7,10,10,9,12,10,10,11,12,5,8,8,8,10,10,8,11,11,7,11,10,10,12,11,9,10,12,7,10,11,10,12,12,9,12,9,2,5,5,6,6,7,7,8,8,9,9,10,10,11,11,11,11,5,5,5,7,6,8,7,9,9,9,9,10,10,11,11,12,12,5,5,5,6,6,7,8,8,9,9,9,10,10,11,11,12,12,6,7,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,6,6,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,7,8,8,8,8,9,9,9,9,10,10,11,11,11,11,12,12,7,7,8,8,8,9,9,9,9,10,10,11,11,11,11,12,12,8,9,9,9,9,9,9,10,10,10,10,11,11,12,12,12,12,8,9,9,9,9,9,9,10,10,10,10,11,11,12,12,12,12,9,9,9,9,9,10,10,10,10,10,11,11,11,12,12,13,13,9,9,9,9,9,10,10,10,10,11,10,11,11,12,12,13,13,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,13,13,10,10,10,10,10,11,11,11,11,11,11,12,11,12,12,13,13,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,11,11,11,11,11,11,11,12,12,12,12,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,14,14,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,2,4,4,6,6,7,7,9,9,4,5,5,6,6,8,7,9,9,4,5,5,6,6,7,8,9,9,6,6,6,7,7,8,8,10,10,6,6,6,7,7,8,8,10,10,7,8,7,8,8,9,9,11,10,7,7,8,8,8,9,9,10,11,9,9,9,10,10,11,10,11,11,9,9,9,10,10,10,11,11,11,3,5,5,8,8,5,7,7,9,9,5,7,7,9,9,9,10,9,11,11,9,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,9,10,10,11,12,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,11,10,10,10,12,12,9,10,10,12,12,10,10,10,12,12,9,10,10,12,12,12,12,12,14,14,11,12,12,13,14,9,10,10,12,12,9,10,10,12,12,10,10,10,12,12,11,12,12,14,13,12,12,12,14,13,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,10,12,12,7,8,8,11,10,8,9,9,11,11,8,9,9,11,11,10,11,11,12,13,10,11,11,12,13,7,8,8,10,10,8,9,8,11,10,8,9,9,11,11,10,11,10,13,12,10,11,11,13,13,10,11,10,13,12,10,11,11,13,13,10,11,11,13,13,12,12,13,13,14,12,13,13,14,14,9,10,10,12,12,10,11,10,13,12,10,11,11,13,13,12,13,12,14,13,12,13,13,14,15,5,7,7,9,10,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,11,12,12,7,8,8,10,10,8,9,9,11,11,8,8,9,10,11,10,11,11,13,13,10,10,11,12,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,13,12,10,11,11,13,12,9,10,10,12,12,10,11,11,13,13,10,10,11,12,13,12,13,13,15,14,12,12,13,12,14,9,10,11,12,13,10,11,11,13,13,10,11,11,13,13,12,13,13,14,14,12,13,12,14,13,8,10,10,12,12,9,11,10,13,12,9,10,10,12,13,12,13,13,14,14,12,12,12,14,14,9,10,10,13,13,10,11,11,13,13,10,11,11,13,13,13,13,13,14,15,12,13,13,14,15,9,10,10,12,13,10,11,10,13,13,10,11,11,12,13,12,13,12,15,14,12,13,13,14,15,11,12,12,15,14,12,12,13,14,15,12,13,13,15,14,13,13,15,14,16,14,14,14,16,15,11,12,12,14,14,11,12,12,14,14,12,13,13,14,15,13,14,13,15,13,14,14,14,15,16,8,9,10,12,12,9,10,10,13,12,9,10,11,12,13,12,12,12,14,14,12,13,13,14,14,9,10,10,13,12,10,11,11,13,13,10,10,11,13,13,12,13,13,15,14,12,12,13,14,15,9,10,10,13,13,10,11,11,13,13,10,11,11,13,13,12,13,13,14,14,13,13,13,15,15,11,12,12,14,13,12,13,13,15,14,11,12,12,14,14,14,14,14,16,15,13,13,14,13,16,11,12,12,14,14,12,13,13,14,15,12,13,12,14,14,14,14,14,16,16,14,15,13,16,14,1,5,5,5,7,7,5,7,7,5,7,7,7,9,9,7,9,9,5,7,7,7,9,9,8,9,9,5,7,7,8,9,9,7,9,9,7,9,9,9,10,11,9,10,10,7,9,9,9,10,9,9,10,11,5,8,7,7,9,9,8,9,9,7,9,9,9,11,10,9,9,10,7,9,9,9,10,10,9,11,10,8,11,13,13,15,16,19,19,19,19,11,8,8,9,9,11,13,15,19,20,14,8,7,7,8,9,12,13,15,20,15,9,6,5,5,7,10,12,14,18,14,9,7,5,3,4,7,10,12,16,13,10,8,6,3,3,5,8,11,14,11,10,9,7,5,4,4,6,11,14,10,10,10,8,6,5,5,6,10,14,10,10,10,9,8,7,7,7,10,14,11,12,12,12,11,10,10,10,12,16,3,6,10,8,12,8,14,8,14,19,5,3,5,5,7,6,11,7,16,19,7,5,6,7,7,9,11,12,19,19,6,4,7,5,7,6,10,7,18,18,8,6,7,7,7,7,8,9,18,18,7,5,8,5,7,5,8,6,18,18,12,9,10,9,9,9,8,9,18,18,8,7,10,6,8,5,6,4,11,18,11,15,16,12,11,8,8,6,9,18,14,18,18,18,16,16,16,13,16,18,1,6,6,7,8,8,11,10,9,9,11,9,10,9,11,11,9,6,7,6,11,8,11,9,10,10,11,9,11,10,10,10,11,9,5,7,7,8,8,10,11,8,8,11,9,9,10,11,9,10,11,8,9,6,8,8,9,9,10,10,11,11,11,9,11,10,9,11,8,8,8,9,8,9,10,11,9,9,11,11,10,9,9,11,10,8,11,8,9,8,11,9,10,9,10,11,11,10,10,9,10,10,8,8,9,10,10,10,9,11,9,10,11,11,11,11,10,9,11,9,9,11,11,10,8,11,11,11,9,10,10,11,10,11,11,9,11,10,9,11,10,10,10,10,9,11,10,11,10,9,9,10,11,9,8,10,11,11,10,10,11,9,11,10,11,11,10,11,9,9,8,10,8,9,11,9,8,10,10,9,11,10,11,10,11,9,11,8,10,11,11,11,11,10,10,11,11,11,11,10,11,11,10,9,8,10,10,9,11,10,11,11,11,9,9,9,11,11,11,10,10,9,9,10,9,11,11,11,11,8,10,11,10,11,11,10,11,11,9,9,9,10,9,11,9,11,11,11,11,11,10,11,11,10,11,10,11,11,9,11,10,11,10,9,10,9,10,10,11,11,11,11,9,10,9,10,11,11,10,11,11,11,11,11,11,10,11,11,10,1,6,5,9,9,10,10,6,7,9,9,10,10,10,10,5,10,8,10,8,10,10,8,8,10,9,10,10,10,10,5,8,9,10,10,10,10,8,10,10,10,10,10,10,10,9,10,10,10,10,10,10,9,9,10,10,10,10,10,10,9,9,8,9,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,6,8,8,10,10,10,8,10,10,10,10,10,10,10,10,5,8,8,10,10,10,9,9,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,5,5,6,6,7,7,8,8,8,8,4,6,6,7,7,8,7,8,8,8,8,4,6,6,7,7,7,7,8,8,8,8,6,7,7,7,7,8,8,8,8,8,9,6,7,7,7,7,8,8,8,8,9,9,7,7,7,8,8,8,8,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,9,8,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,1,4,4,5,5,8,8,10,10,12,12,4,7,7,8,8,9,9,12,11,14,13,4,7,7,7,8,9,10,11,11,13,12,5,8,8,9,9,11,11,12,13,15,14,5,7,8,9,9,11,11,13,13,17,15,8,9,10,11,11,12,13,17,14,17,16,8,10,9,11,11,12,12,13,15,15,17,10,11,11,12,13,14,15,15,16,16,17,9,11,11,12,12,14,15,17,15,15,16,11,14,12,14,15,16,15,16,16,16,15,11,13,13,14,14,15,15,16,16,15,16,2,4,4,6,6,7,7,8,8,8,8,4,6,5,7,7,8,8,8,8,8,8,4,5,6,7,7,8,8,8,8,8,8,6,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,9,9,9,7,8,8,8,8,9,9,9,10,9,10,7,8,8,8,8,9,9,9,9,10,9,8,8,8,9,9,10,10,10,10,10,10,8,8,8,9,9,9,9,10,10,10,10,8,8,8,9,9,9,10,10,10,10,10,8,8,8,9,9,10,10,10,10,10,10,1,4,4,4,8,8,4,8,8,5,11,9,8,12,11,8,12,11,5,10,11,8,11,12,8,11,12,4,11,11,11,14,13,10,13,13,8,14,13,12,14,16,12,16,15,8,14,14,13,16,14,12,15,16,4,11,11,10,14,13,11,14,14,8,15,14,12,15,15,12,14,16,8,14,14,11,16,15,12,15,13,3,4,4,6,6,7,7,9,9,4,4,4,6,6,8,8,9,9,4,4,4,6,6,7,7,9,9,6,6,6,7,7,8,8,10,9,6,6,6,7,7,8,8,9,10,7,8,7,8,8,9,9,10,10,7,8,8,8,8,9,9,10,10,9,9,9,10,10,10,10,11,11,9,9,9,10,10,10,10,11,11,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,10,10,4,5,6,8,8,8,8,10,10,7,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,7,8,8,10,9,11,11,12,11,7,8,8,9,9,11,11,12,12,9,10,10,11,11,12,12,13,12,9,10,10,11,11,12,12,12,13,4,5,5,8,8,6,6,7,9,9,6,6,6,9,9,9,10,9,11,11,9,9,10,11,11,6,7,7,10,9,7,7,8,9,10,7,7,8,10,10,10,10,10,10,12,9,9,10,11,12,6,7,7,9,9,7,8,7,10,10,7,8,7,10,10,9,10,9,12,11,10,10,9,12,10,9,10,10,12,11,10,10,10,12,12,9,10,10,12,12,12,11,12,13,13,11,11,12,12,13,9,10,10,11,12,9,10,10,12,12,10,10,10,12,12,11,12,11,14,13,11,12,12,14,13,5,7,7,10,10,7,8,8,10,10,7,8,7,10,10,10,10,10,12,12,10,10,10,12,12,6,8,7,10,10,7,7,9,10,11,8,9,9,11,10,10,10,11,11,13,10,10,11,12,13,6,8,8,10,10,7,9,8,11,10,8,9,9,10,11,10,11,10,13,11,10,11,10,12,12,10,11,10,12,11,10,10,10,12,13,10,11,11,13,12,11,11,13,11,14,12,12,13,14,14,9,10,10,12,13,10,11,10,13,12,10,11,11,12,13,11,12,11,14,12,12,13,13,15,14,5,7,7,10,10,7,7,8,10,10,7,8,8,10,10,10,10,10,11,12,10,10,10,12,12,7,8,8,10,10,8,9,8,11,10,7,8,9,10,11,10,11,11,12,12,10,10,11,11,13,7,7,8,10,10,8,8,9,10,11,7,9,7,11,10,10,11,11,13,12,11,11,10,13,11,9,10,10,12,12,10,11,11,13,12,10,10,11,12,12,12,13,13,14,14,11,11,12,12,14,10,10,11,12,12,10,11,11,12,13,10,10,10,13,12,12,13,13,15,14,12,13,10,14,11,8,10,10,12,12,10,11,10,13,13,9,10,10,12,12,12,13,13,15,14,11,12,12,13,13,9,10,10,13,12,10,10,11,13,13,10,11,10,13,12,12,12,13,14,15,12,13,12,15,13,9,10,10,12,13,10,11,10,13,12,10,10,11,12,13,12,14,12,15,13,12,12,13,14,15,11,12,11,14,13,11,11,12,14,15,12,13,12,15,14,13,11,15,11,16,13,14,14,16,15,11,12,12,14,14,11,12,11,14,13,12,12,13,14,15,13,14,12,16,12,14,14,14,15,15,8,10,10,12,12,9,10,10,12,12,10,10,11,13,13,11,12,12,13,13,12,13,13,14,15,9,10,10,13,12,10,11,11,13,12,10,10,11,13,13,12,13,12,15,14,12,12,13,13,16,9,9,10,12,13,10,10,11,12,13,10,11,10,13,13,12,12,13,13,15,13,13,12,15,13,11,12,12,14,14,12,13,12,15,14,11,11,12,13,14,14,14,14,16,15,13,12,15,12,16,11,11,12,13,14,12,13,13,14,15,10,12,11,14,13,14,15,14,16,16,13,14,11,15,11,1,5,5,8,8,6,7,7,9,9,5,7,7,9,9,9,10,9,11,11,9,9,10,11,11,6,8,8,10,10,8,9,10,11,11,8,9,10,11,11,10,11,11,12,13,10,11,11,13,13,6,8,8,10,10,8,10,9,11,11,8,10,9,11,11,10,11,11,13,13,10,11,11,13,12,9,11,11,14,13,10,12,12,15,14,10,12,11,14,13,12,13,13,15,15,12,13,13,16,14,9,11,11,13,14,10,11,12,14,14,10,12,12,14,15,12,13,13,14,15,12,13,14,15,16,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,8,10,10,12,12,9,11,12,12,13,10,12,12,13,13,12,12,13,14,15,11,13,13,15,15,7,10,10,12,12,9,12,11,13,12,10,11,12,13,13,12,13,12,15,14,11,12,13,15,15,10,12,12,15,14,11,13,13,16,15,11,13,13,16,15,14,13,14,15,16,13,15,15,17,17,10,12,12,14,15,11,12,12,15,15,11,13,13,15,16,13,15,13,16,15,13,15,15,16,17,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,7,10,10,12,12,10,12,12,14,13,9,11,12,12,13,12,13,13,15,15,12,12,13,13,15,7,10,10,12,13,10,11,12,13,13,10,12,11,13,13,11,13,13,15,15,12,13,12,15,14,9,12,12,15,14,11,13,13,15,15,11,12,13,15,15,13,14,14,17,19,13,13,14,16,16,10,12,12,14,15,11,13,13,15,16,11,13,12,16,15,13,15,15,17,18,14,15,13,16,15,8,11,11,15,14,10,12,12,16,15,10,12,12,16,16,14,15,15,18,17,13,14,15,16,18,9,12,12,15,15,11,12,14,16,17,11,13,13,16,15,15,15,15,17,18,14,15,16,17,17,9,12,12,15,15,11,14,13,16,16,11,13,13,16,16,15,16,15,17,18,14,16,15,17,16,12,14,14,17,16,12,14,15,18,17,13,15,15,17,17,15,15,18,16,20,15,16,17,18,18,11,14,14,16,17,13,15,14,18,17,13,15,15,17,17,15,17,15,18,17,15,17,16,19,18,8,11,11,14,15,10,12,12,15,15,10,12,12,16,16,13,14,14,17,16,14,15,15,17,17,9,12,12,15,16,11,13,13,16,16,11,12,13,16,16,14,16,15,20,17,14,16,16,17,17,9,12,12,15,16,11,13,13,16,17,11,13,13,17,16,14,15,15,17,18,15,15,15,18,18,11,14,14,17,16,13,15,15,17,17,13,14,14,18,17,15,16,16,18,19,15,15,17,17,19,11,14,14,16,17,13,15,14,17,19,13,15,14,18,17,15,17,16,18,18,15,17,15,18,16,3,4,4,5,6,6,5,6,6,5,6,6,6,7,8,6,7,8,5,6,6,6,8,7,6,8,7,5,6,6,6,8,8,6,8,8,6,8,8,7,7,10,8,9,9,6,8,8,7,9,8,8,9,10,5,6,6,6,8,8,7,8,8,6,8,8,8,10,9,7,8,9,6,8,8,8,9,9,7,10,8,1,4,4,5,7,7,5,7,7,5,8,7,7,10,10,7,9,10,5,7,8,7,10,9,7,10,10,5,8,8,8,10,10,8,10,10,7,10,10,10,11,12,10,12,13,7,10,10,9,13,11,10,12,13,5,8,8,8,10,10,8,10,10,7,10,10,10,12,12,9,11,12,7,10,11,10,12,12,10,13,11,5,7,10,9,11,10,15,11,13,16,6,4,6,6,7,7,10,9,12,16,10,6,5,6,6,7,10,11,16,16,9,6,7,6,7,7,10,8,14,16,11,6,5,4,5,6,8,9,15,16,9,6,6,5,6,6,9,8,14,16,12,7,6,6,5,6,6,7,13,16,8,6,7,6,5,5,4,4,11,16,9,8,9,9,7,7,6,5,13,16,14,14,16,15,16,15,16,16,16,16,1,6,6,7,8,7,7,10,9,10,9,11,10,9,11,10,9,9,9,9,10,6,8,7,9,9,8,8,10,10,9,11,11,12,12,10,9,11,9,12,10,9,6,9,8,9,12,8,8,11,9,11,11,12,11,12,12,10,11,11,10,10,11,7,10,9,9,9,9,9,10,9,10,9,10,10,12,10,10,10,11,12,10,10,7,9,9,9,10,9,9,10,10,9,9,9,11,11,10,10,10,10,9,9,12,7,9,10,9,11,9,10,9,10,11,11,11,10,11,12,9,12,11,10,10,10,7,9,9,9,9,10,12,10,9,11,12,10,11,12,12,11,9,10,11,10,11,7,9,10,10,11,10,9,10,11,11,11,10,12,12,12,11,11,10,11,11,12,8,9,10,12,11,10,10,12,12,12,12,12,10,11,11,9,11,10,12,11,11,8,9,10,10,11,12,11,11,10,10,10,12,12,12,9,10,12,12,12,12,12,8,10,11,10,10,12,9,11,12,12,11,12,12,12,12,10,12,10,10,10,10,8,12,11,11,11,10,10,11,12,12,12,12,11,12,12,12,11,11,11,12,10,9,10,10,12,10,12,10,12,12,10,10,10,11,12,12,12,11,12,12,12,11,10,11,12,12,12,11,12,12,11,12,12,11,12,12,12,12,11,12,12,10,10,10,10,11,11,12,11,12,12,12,12,12,12,12,11,12,11,10,11,11,12,11,11,9,10,10,10,12,10,10,11,9,11,12,11,12,11,12,12,10,11,10,12,9,9,9,12,11,10,11,10,12,10,12,10,12,12,12,11,11,11,11,11,10,9,10,10,11,10,11,11,12,11,10,11,12,12,12,11,11,9,12,10,12,9,10,12,10,10,11,10,11,11,12,11,10,11,10,11,11,11,11,12,11,11,10,9,10,10,10,9,11,11,10,9,12,10,11,12,11,12,12,11,12,11,12,11,10,11,10,12,11,12,11,12,11,12,10,11,10,10,12,11,10,11,11,11,10,1,5,5,6,5,9,10,11,11,10,10,10,10,10,10,5,8,8,8,10,10,10,10,10,10,10,10,10,10,10,5,8,9,9,9,10,10,10,10,10,10,10,10,10,10,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,4,8,9,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,5,6,6,4,6,6,6,6,4,6,6,6,6,6,6,6,7,7,6,6,6,7,7,1,4,4,7,7,10,10,12,12,13,13,18,17,3,6,6,9,9,11,11,13,13,14,14,18,17,3,6,6,9,9,11,11,13,13,14,14,17,18,7,9,9,11,11,13,13,14,14,15,15,0,0,7,9,9,11,11,13,13,14,14,15,16,19,18,10,11,11,13,13,14,14,16,15,17,18,0,0,10,11,11,13,13,14,14,15,15,16,18,0,0,11,13,13,14,14,15,15,17,17,0,19,0,0,11,13,13,14,14,14,15,16,18,0,19,0,0,13,14,14,15,15,18,17,18,18,0,19,0,0,13,14,14,15,16,16,16,18,18,19,0,0,0,16,17,17,0,17,19,19,0,19,0,0,0,0,16,19,16,17,18,0,19,0,0,0,0,0,0,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,9,9,4,6,6,8,8,8,8,9,9,7,8,8,9,9,9,9,11,10,7,8,8,9,9,9,9,10,11,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,9,9,10,10,11,11,12,12,9,9,9,10,10,11,11,12,12,3,5,5,8,8,6,6,6,9,9,6,6,6,9,9,9,10,9,11,11,9,9,9,11,11,6,7,7,10,10,7,7,8,10,10,7,7,8,10,10,10,10,10,11,12,9,10,10,11,12,6,7,7,10,10,7,8,7,10,10,7,8,7,10,10,10,11,10,12,11,10,10,10,13,10,9,10,10,12,12,10,11,10,14,12,9,11,11,13,13,11,12,13,13,13,11,12,12,15,13,9,10,10,12,13,9,11,10,12,13,10,10,11,12,13,11,12,12,12,13,11,12,12,13,13,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,11,10,12,13,10,10,11,12,12,6,8,8,11,10,7,8,9,10,12,8,9,9,11,11,11,10,11,11,12,10,11,11,13,12,7,8,8,10,11,8,9,8,11,10,8,9,9,11,11,10,12,10,13,11,10,11,11,13,13,10,11,10,14,13,10,10,11,13,13,10,12,11,14,13,12,11,13,12,13,13,12,13,14,14,10,11,11,13,13,10,11,10,12,13,10,12,12,12,14,12,12,12,14,12,12,13,12,17,15,5,7,7,10,10,7,8,8,10,10,7,8,8,11,10,10,10,11,12,12,10,11,11,12,13,6,8,8,11,10,8,9,9,11,11,7,8,9,10,11,11,11,11,12,12,10,10,11,12,13,6,8,8,10,11,8,9,9,11,11,7,9,7,11,10,10,12,12,13,13,11,11,10,13,11,9,11,10,14,13,11,11,11,15,13,10,10,11,13,13,12,13,13,14,14,12,11,12,12,13,10,11,11,12,13,10,11,12,13,13,10,11,10,13,12,12,12,13,14,0,12,13,11,13,11,8,10,10,13,13,10,11,11,14,13,10,11,11,13,12,13,14,14,14,15,12,12,12,15,14,9,11,10,13,12,10,10,11,13,14,11,11,11,15,12,13,12,14,15,16,13,13,13,14,13,9,11,11,12,12,10,12,11,13,13,10,11,11,13,14,13,13,13,15,15,13,13,14,17,15,11,12,12,14,14,10,11,12,13,15,12,13,13,0,15,13,11,14,12,16,14,16,14,0,15,11,12,12,14,16,11,13,12,16,15,12,13,13,14,15,12,14,12,15,13,15,14,14,16,16,8,10,10,13,13,10,11,10,13,14,10,11,11,13,13,13,13,12,14,14,14,13,13,16,17,9,10,10,12,14,10,12,11,14,13,10,11,12,13,14,12,12,12,15,15,13,13,13,14,14,9,10,10,13,13,10,11,12,12,14,10,11,10,13,13,13,13,13,14,16,13,13,13,14,14,11,12,13,15,13,12,14,13,14,16,12,12,13,13,14,13,14,14,17,15,13,12,17,13,16,11,12,13,14,15,12,13,14,14,17,11,12,11,14,14,13,16,14,16,0,14,15,11,15,11,1,5,5,7,7,6,7,7,8,8,6,7,8,8,8,8,9,9,11,11,8,9,9,11,11,6,9,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,10,13,12,9,11,10,13,13,6,8,9,10,10,8,10,10,11,11,8,10,10,11,11,9,10,11,13,12,10,10,11,12,12,8,11,11,14,13,10,12,11,15,13,9,12,11,15,14,12,14,13,16,14,12,13,13,17,14,8,11,11,13,14,9,11,12,14,15,10,11,12,13,15,11,13,13,14,16,12,13,14,14,16,5,9,9,11,11,9,11,11,12,12,8,11,11,12,12,11,12,12,15,14,10,12,12,15,15,8,11,11,13,12,10,12,12,13,13,10,12,12,14,13,12,12,13,14,15,11,13,13,17,16,7,11,11,13,13,10,12,12,14,13,10,12,12,13,14,12,13,12,15,14,11,13,13,15,14,9,12,12,16,15,11,13,13,17,16,10,13,13,16,16,13,14,15,15,16,13,15,14,19,17,9,12,12,14,16,11,13,13,15,16,10,13,13,17,16,13,14,13,17,15,12,15,15,16,17,5,9,9,11,11,8,11,11,13,12,9,11,11,12,12,10,12,12,14,15,11,12,12,14,14,7,11,10,13,12,10,12,12,14,13,10,11,12,13,13,11,13,13,15,16,12,12,13,15,15,7,11,11,13,13,10,13,13,14,14,10,12,12,13,13,11,13,13,16,15,12,13,13,15,14,9,12,12,15,15,10,13,13,17,16,11,12,13,15,15,12,15,14,18,18,13,14,14,16,17,9,12,12,15,16,10,13,13,15,16,11,13,13,15,16,13,15,15,17,17,13,15,14,16,15,7,11,11,15,16,10,13,12,16,17,10,12,13,15,17,15,16,16,18,17,13,15,15,17,18,8,12,12,16,16,11,13,14,17,18,11,13,13,18,16,15,17,16,17,19,14,15,15,17,16,8,12,12,16,15,11,14,13,18,17,11,13,14,18,17,15,16,16,18,17,13,16,16,18,18,11,15,14,18,17,13,14,15,18,0,12,15,15,0,17,17,16,17,17,18,14,16,18,18,0,11,14,14,17,0,12,15,14,17,19,12,15,14,18,0,15,18,16,0,17,14,18,16,18,0,7,11,11,16,15,10,12,12,18,16,10,13,13,16,15,13,15,14,17,17,14,16,16,19,18,8,12,12,16,16,11,13,13,18,16,11,13,14,17,16,14,15,15,19,18,15,16,16,0,19,8,12,12,16,17,11,13,13,17,17,11,14,13,17,17,13,15,15,17,19,15,17,17,19,0,11,14,15,19,17,12,15,16,18,18,12,14,15,19,17,14,16,17,0,18,16,16,19,17,0,11,14,14,18,19,12,15,14,17,17,13,16,14,17,16,14,17,16,18,18,15,18,15,0,18,2,4,4,5,6,6,5,6,6,5,7,7,7,8,9,7,8,9,5,7,7,7,9,8,7,9,7,4,7,7,7,9,9,7,8,8,6,9,8,7,8,11,9,11,10,6,8,9,8,11,8,9,10,11,4,7,7,7,8,8,7,9,9,6,9,8,9,11,10,8,8,11,6,8,9,9,10,11,8,11,8,1,4,4,5,7,7,5,7,8,5,8,8,8,10,10,8,10,11,5,8,8,8,10,10,8,10,10,4,9,9,9,12,11,8,11,11,8,12,11,10,12,14,10,13,13,7,11,11,10,14,12,11,14,14,4,9,9,8,11,11,9,11,12,7,11,11,10,13,14,10,12,14,8,11,12,10,14,14,10,13,12,3,5,8,7,14,8,9,19,5,2,5,5,9,6,9,19,8,4,5,7,8,9,13,19,7,4,6,5,9,6,9,19,12,8,7,9,10,11,13,19,8,5,8,6,9,6,7,19,8,8,10,7,7,4,5,19,12,17,19,15,18,13,11,18,4,7,9,9,9,8,9,10,13,16,5,4,5,6,7,7,8,9,12,16,6,5,5,5,7,7,9,10,12,15,7,6,5,4,5,6,8,9,10,13,8,7,7,5,5,5,7,9,10,12,7,7,7,6,5,5,6,7,10,12,8,8,8,7,7,5,5,6,9,11,8,9,9,8,8,6,6,5,8,11,10,11,12,12,11,9,9,8,9,12,13,14,15,15,14,12,12,11,11,13,2,4,4,4,4,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,7,7,8,8,10,9,11,10,13,11,14,13,6,6,6,8,8,8,8,8,7,9,8,11,9,13,11,14,12,14,13,5,6,6,8,8,8,8,8,8,9,9,11,11,13,11,14,13,15,15,17,8,8,8,8,9,9,9,8,11,9,12,10,13,11,14,12,14,13,17,8,8,8,8,9,9,9,9,10,10,11,11,13,13,13,14,16,15,17,12,12,8,8,9,9,10,10,11,11,12,11,13,12,13,12,14,13,16,12,12,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,17,17,17,9,9,9,9,11,11,12,12,12,13,13,13,16,14,14,14,17,17,17,9,8,9,8,11,10,12,12,13,13,14,14,15,15,16,16,17,17,17,12,12,10,10,11,12,12,13,13,14,13,15,15,14,16,15,17,17,17,12,12,10,8,12,9,13,12,14,14,15,14,15,16,16,16,17,17,17,17,17,11,11,12,12,14,14,14,16,15,16,15,16,15,17,17,17,17,17,17,11,9,12,10,13,11,15,14,16,16,17,16,16,15,17,17,17,17,17,15,15,12,12,14,14,15,16,16,15,16,16,17,17,17,17,17,17,17,14,14,12,10,14,11,15,12,17,16,15,16,17,16,17,17,17,17,17,17,17,13,13,14,14,14,16,17,17,16,17,17,17,17,17,17,17,17,17,17,13,9,13,12,15,13,16,16,17,17,17,17,17,17,17,17,17,17,17,15,17,14,14,15,16,16,17,16,17,16,17,17,17,17,17,17,17,17,17,17,14,13,15,16,16,17,16,17,17,17,1,4,3,10,8,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,4,4,6,6,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,11,11,11,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,11,10,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,10,9,10,10,10,10,11,11,11,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,6,6,7,7,7,7,8,8,9,9,10,10,6,6,6,8,8,9,9,8,8,9,9,10,10,11,11,6,5,5,8,7,9,9,8,8,9,9,10,10,11,11,20,8,8,8,8,9,9,9,9,10,10,11,10,12,11,20,8,8,8,8,9,9,9,9,10,10,11,11,12,12,20,12,12,9,9,10,10,10,10,11,11,12,12,13,12,20,13,13,9,9,10,10,10,10,11,11,12,12,13,13,20,20,20,9,9,9,9,10,10,11,11,12,12,13,12], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+389576);\n/* memory initializer */ allocate([20,20,20,9,9,9,8,10,10,12,11,12,12,13,13,20,20,20,13,13,10,10,11,11,12,12,13,13,13,13,20,20,20,13,13,10,10,11,10,12,11,13,13,14,14,20,20,20,20,20,11,11,11,11,12,12,13,13,14,14,20,20,20,20,20,11,10,11,11,13,11,13,13,14,14,20,20,21,21,21,14,14,11,12,13,13,13,13,14,14,21,21,21,21,21,15,15,12,11,13,12,14,13,15,14,2,4,4,6,6,7,7,7,7,7,7,9,9,9,6,7,7,7,7,7,8,8,9,9,9,6,6,7,7,7,7,8,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,7,7,8,8,9,9,9,7,7,8,8,7,7,8,8,9,9,9,9,9,8,8,7,7,8,8,9,9,9,9,9,8,8,7,7,8,8,9,9,9,9,9,7,7,7,7,8,8,1,4,4,7,7,8,8,8,8,10,9,10,10,5,5,5,7,7,9,9,10,10,11,10,12,11,6,5,5,7,7,9,9,10,10,11,11,12,12,20,7,7,7,7,9,9,10,10,11,11,12,12,20,7,7,7,7,9,9,11,10,12,11,12,12,20,11,11,8,8,10,10,11,11,12,12,13,13,20,12,12,8,8,9,9,11,11,12,12,13,13,20,20,21,10,10,10,10,11,11,12,12,13,13,21,21,21,10,10,10,10,11,11,12,12,13,13,21,21,21,14,14,11,11,12,12,13,13,13,14,21,21,21,16,15,11,11,12,11,13,13,14,14,21,21,21,21,21,13,13,12,12,13,13,14,14,21,21,21,21,21,13,13,12,12,13,13,14,14,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,8,7,8,8,9,9,10,10,5,5,5,7,7,9,9,9,9,11,11,12,12,6,5,5,7,7,9,9,10,9,11,11,12,12,0,7,7,7,7,9,9,10,10,11,11,12,12,0,7,7,7,7,9,9,10,10,11,11,12,12,0,11,11,8,8,10,10,11,11,12,12,13,13,0,12,12,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,6,6,6,6,7,7,7,7,11,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,11,11,11,7,7,8,8,8,8,9,9,11,11,11,6,7,8,8,8,8,9,9,11,11,11,7,7,8,8,8,8,8,8,11,11,11,7,7,8,8,8,8,9,9,11,11,11,8,8,8,8,8,8,8,8,11,11,11,11,11,8,8,8,8,8,8,12,11,11,11,11,8,8,8,8,8,8,12,11,11,11,11,7,7,8,8,8,8,1,4,4,5,7,7,6,7,7,4,6,6,10,11,10,10,10,11,4,6,6,10,10,11,10,11,10,5,10,10,9,12,11,10,12,12,7,10,10,12,12,12,12,13,13,7,11,10,11,12,12,12,13,13,6,11,10,10,12,12,11,12,12,7,11,10,12,13,13,12,12,12,7,10,11,12,13,13,12,12,12,2,3,3,5,5,6,6,6,6,7,7,8,8,8,8,9,9,0,0,0,6,6,7,7,8,8,8,8,9,9,10,10,11,10,0,0,0,6,6,7,7,8,8,8,8,9,9,10,10,10,10,0,0,0,6,6,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,6,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,10,10,11,11,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,11,12,12,0,0,0,7,8,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,5,5,7,7,8,8,0,0,0,6,6,8,8,9,9,0,0,0,6,6,8,8,9,9,0,0,0,7,7,8,9,10,10,0,0,0,7,7,9,9,10,10,0,0,0,8,8,9,9,11,11,0,0,0,7,7,9,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,7,7,0,0,0,8,8,0,0,0,8,8,0,0,0,8,8,0,0,0,8,8,4,4,4,8,7,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,9,9,4,4,4,7,8,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,9,9,7,8,8,10,9,0,0,0,12,11,0,0,0,11,12,0,0,0,14,13,0,0,0,14,14,7,8,8,9,10,0,0,0,11,12,0,0,0,11,11,0,0,0,14,14,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,11,11,0,0,0,12,11,0,0,0,12,12,0,0,0,13,12,0,0,0,13,13,8,8,8,11,11,0,0,0,11,11,0,0,0,12,12,0,0,0,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,8,12,11,0,0,0,12,12,0,0,0,12,11,0,0,0,13,13,0,0,0,13,13,8,8,8,11,12,0,0,0,11,12,0,0,0,11,12,0,0,0,13,14,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,13,12,0,0,0,13,13,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,12,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,13,13,0,0,0,13,12,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,13,13,0,0,0,12,12,1,3,3,0,0,0,0,0,0,4,5,5,0,0,0,0,0,0,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,12,11,12,13,15,16,18,15,10,8,8,8,9,10,12,13,14,17,10,7,7,7,7,8,10,12,15,18,10,7,7,5,5,6,8,10,13,15,10,7,6,5,4,4,6,9,12,15,11,7,7,5,4,3,4,7,11,13,12,9,8,7,5,4,4,5,10,13,11,11,11,9,7,5,5,5,9,12,13,12,13,12,10,8,8,7,9,13,14,14,14,14,13,11,11,10,10,13,2,5,20,7,10,7,8,10,11,11,4,2,20,5,8,6,7,9,10,10,20,20,20,20,19,19,19,19,19,19,7,5,19,6,10,7,9,11,13,17,11,8,19,10,7,7,8,10,11,15,7,5,19,7,7,5,6,9,11,16,7,6,19,8,7,6,6,7,9,13,9,9,19,11,9,8,6,7,8,13,12,14,19,16,13,10,9,8,9,13,14,17,19,18,18,17,12,11,11,13,1,4,4,6,6,7,7,8,7,8,8,9,9,9,9,10,10,10,9,10,10,11,12,12,8,8,8,8,9,9,9,9,10,10,10,10,10,11,11,10,12,11,11,13,11,7,7,8,8,8,8,9,9,9,10,10,10,10,9,10,10,11,11,12,11,11,8,8,8,8,9,9,10,10,10,10,11,11,11,11,11,11,11,12,11,12,12,8,8,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,11,9,9,9,9,10,10,10,10,11,10,11,11,11,11,11,11,12,12,12,12,11,9,9,9,9,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,13,9,10,10,9,11,10,10,10,10,11,11,11,11,11,10,11,12,11,12,12,11,12,11,10,9,10,10,11,10,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,10,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,12,13,12,12,11,9,10,10,11,11,10,11,11,11,12,11,11,11,11,11,12,12,13,13,12,13,10,10,12,10,11,11,11,11,11,11,11,11,11,12,12,11,13,12,12,12,12,13,12,11,11,11,11,11,11,12,11,12,11,11,11,11,12,12,13,12,11,12,12,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,12,13,13,12,12,12,12,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,13,12,12,12,12,13,11,11,11,12,12,11,11,11,12,11,12,12,12,11,12,13,12,11,11,12,12,11,12,11,11,11,12,12,11,12,11,11,11,12,12,12,12,13,12,13,12,12,12,12,11,11,12,11,11,11,11,11,11,12,12,12,13,12,11,13,13,12,12,11,12,10,11,11,11,11,12,11,12,12,11,12,12,13,12,12,13,12,12,12,12,12,11,12,12,12,11,12,11,11,11,12,13,12,13,13,13,13,13,12,13,13,12,12,13,11,11,11,11,11,12,11,11,12,11,1,4,4,4,4,8,8,12,13,14,14,14,14,14,14,6,6,6,6,6,10,9,14,14,14,14,14,14,14,14,7,6,5,6,6,10,9,12,13,13,13,13,13,13,13,13,7,7,9,9,11,11,12,13,13,13,13,13,13,13,13,7,7,8,8,11,12,13,13,13,13,13,13,13,13,13,12,12,10,10,13,12,13,13,13,13,13,13,13,13,13,12,12,10,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,6,5,5,7,8,8,9,8,8,9,9,10,11,6,5,5,8,8,9,9,8,8,9,10,10,11,0,8,8,8,9,9,9,9,9,10,10,11,11,0,9,9,9,8,9,9,9,9,10,10,11,11,0,13,13,9,9,10,10,10,10,11,11,12,12,0,14,13,9,9,10,10,10,10,11,11,12,12,0,0,0,10,10,9,9,11,11,12,12,13,12,0,0,0,10,10,9,9,10,10,12,12,13,13,0,0,0,13,14,11,10,11,11,12,12,13,14,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,12,12,12,12,13,13,14,15,0,0,0,0,0,12,12,12,12,13,13,14,15,2,3,3,5,6,7,7,7,7,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,9,9,10,10,10,10,10,8,8,8,8,9,9,10,10,10,10,10,9,9,8,8,9,9,10,10,10,10,10,8,8,8,8,9,9,1,4,4,6,6,6,7,6,6,4,7,7,10,9,10,10,10,9,4,7,7,10,10,10,11,10,10,6,10,10,11,11,11,11,10,10,6,10,9,11,11,11,11,10,10,6,10,10,11,11,11,11,10,10,7,11,11,11,11,11,12,12,11,6,10,10,11,10,10,11,11,11,6,10,10,10,11,10,11,11,11,1,3,3,6,6,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,9,10,9,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,10,10,11,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,13,13,14,14,1,3,3,5,5,6,6,8,8,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,7,9,9,0,0,0,8,8,8,8,9,9,0,0,0,8,8,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,8,9,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,11,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,8,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,11,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+399816);\n/* memory initializer */ allocate([5,6,17,8,12,9,10,10,12,13,5,2,17,4,9,5,7,8,11,13,16,16,16,16,16,16,16,16,16,16,6,4,16,5,10,5,7,10,14,16,13,9,16,11,8,7,8,9,13,16,7,4,16,5,7,4,6,8,11,13,8,6,16,7,8,5,5,7,9,13,9,8,16,9,8,6,6,7,9,13,11,11,16,10,10,7,7,7,9,13,13,13,16,13,13,9,9,9,10,13,1,5,5,7,8,8,7,9,9,9,12,12,11,12,12,10,10,11,12,12,12,11,12,12,8,9,8,7,9,10,10,11,11,10,11,12,10,12,10,12,12,12,11,12,11,9,8,8,9,10,9,8,9,10,12,12,11,11,12,11,10,11,12,11,12,12,8,9,9,9,10,11,12,11,12,11,11,11,11,12,12,11,11,12,12,11,11,9,9,8,9,9,11,9,9,10,9,11,11,11,11,12,11,11,10,12,12,12,9,12,11,10,11,11,11,11,12,12,12,11,11,11,12,10,12,12,12,10,10,9,10,9,10,10,9,9,9,10,10,12,10,11,11,9,11,11,10,11,11,11,10,10,10,9,9,10,10,9,9,10,11,11,10,11,10,11,10,11,11,10,11,11,11,10,9,10,10,9,10,9,9,11,9,9,11,10,10,11,11,10,10,11,10,11,8,9,11,11,10,9,10,11,11,10,11,11,10,10,10,11,10,9,10,10,11,9,10,10,9,11,10,10,10,10,11,10,11,11,9,11,10,11,10,10,11,11,10,10,10,9,10,10,11,11,11,9,10,10,10,10,10,11,10,10,10,9,10,10,11,10,10,10,10,10,9,10,11,10,10,10,10,11,11,11,10,10,10,10,10,11,10,11,10,11,10,10,10,9,11,11,10,10,10,11,11,10,10,10,10,10,10,10,10,11,11,9,10,10,10,11,10,11,10,10,10,11,9,10,11,10,11,10,10,9,10,10,10,11,10,11,10,10,10,10,10,11,11,10,11,11,10,10,11,11,10,9,9,10,10,10,10,10,9,11,9,10,10,10,11,11,10,10,10,10,11,11,11,10,9,9,10,10,11,10,10,10,10,10,11,11,11,10,10,10,11,11,11,9,10,10,10,10,9,10,9,10,11,10,11,10,10,11,11,10,11,11,11,11,11,10,11,10,10,10,9,11,11,10,11,11,11,11,11,11,11,11,11,10,11,10,10,10,10,11,10,10,11,9,10,10,10,1,5,5,5,5,9,11,11,10,10,10,10,10,10,10,7,6,6,6,6,10,10,10,10,10,10,10,10,10,10,7,6,6,6,6,10,9,10,10,10,10,10,10,10,10,10,7,7,8,9,10,10,10,10,10,10,10,10,10,10,10,8,7,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,3,5,5,7,7,7,6,6,7,7,7,5,5,7,7,7,6,6,7,7,7,6,6,1,4,4,7,7,7,7,7,6,8,8,10,10,6,5,6,8,8,8,8,8,8,8,9,10,10,7,6,6,8,8,8,8,8,8,8,8,10,10,0,8,8,8,8,9,8,9,9,9,10,10,10,0,9,8,8,8,9,9,8,8,9,9,10,10,0,12,11,8,8,9,9,9,9,10,10,11,10,0,12,13,8,8,9,10,9,9,11,11,11,12,0,0,0,8,8,8,8,10,9,12,13,12,14,0,0,0,8,8,8,9,10,10,12,12,13,14,0,0,0,13,13,9,9,11,11,0,0,14,0,0,0,0,14,14,10,10,12,11,12,14,14,14,0,0,0,0,0,11,11,13,13,14,13,14,14,0,0,0,0,0,12,13,13,12,13,14,14,14,1,3,4,6,6,7,7,8,8,8,8,10,10,10,7,7,8,8,8,9,9,9,10,10,10,6,7,8,8,8,8,9,8,10,10,10,7,7,8,8,9,9,9,9,10,10,10,7,7,8,8,9,9,8,9,10,10,10,8,8,9,9,9,9,9,9,11,11,11,8,8,9,9,9,9,9,10,10,11,11,9,9,9,9,9,9,9,10,11,11,11,10,11,9,9,9,9,10,9,11,11,11,10,11,10,10,9,9,10,10,11,11,11,11,11,9,9,9,9,10,10,1,4,4,6,6,6,7,6,6,4,7,7,11,10,10,11,11,10,4,7,7,10,10,10,11,10,10,6,10,10,11,11,11,11,11,10,6,9,9,11,12,12,11,9,9,6,9,10,11,12,12,11,9,10,7,11,11,11,11,11,12,13,12,6,9,10,11,10,10,12,13,13,6,10,9,11,10,10,11,12,13,1,3,4,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,11,11,11,0,0,0,6,6,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,13,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,13,13,13,14,0,0,0,0,0,10,10,10,11,11,11,12,12,13,13,13,14,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,12,13,13,14,15,14,0,0,0,0,0,0,0,12,12,12,12,13,13,13,14,14,15,0,0,0,0,0,0,0,0,0,12,12,13,13,14,13,14,14,1,3,3,6,6,6,6,8,8,0,0,0,7,7,7,7,8,8,0,0,0,7,7,7,7,8,8,0,0,0,7,7,8,8,9,9,0,0,0,7,7,8,8,9,9,0,0,0,8,9,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,3,2,7,8,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,6,6,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,9,12,0,0,0,0,0,0,10,12,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,12,10,0,0,0,0,0,0,10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,12,11,0,0,0,0,0,0,9,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,11,12,0,0,0,0,0,0,9,12,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+410751);\n/* memory initializer */ allocate([3,4,19,7,9,7,8,11,9,12,4,1,19,6,7,7,8,10,11,13,18,18,18,18,18,18,18,18,18,18,8,6,18,8,9,9,11,12,14,18,9,6,18,9,7,8,9,11,12,18,7,6,18,8,7,7,7,9,11,17,8,8,18,9,7,6,6,8,11,17,10,10,18,12,9,8,7,9,12,18,13,15,18,15,13,11,10,11,15,18,14,18,18,18,18,18,16,16,18,18,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,3,4,5,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,3,2,5,5,6,6,6,6,4,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,5,4,1,4,4,7,7,10,10,12,12,12,12,13,12,5,5,5,8,6,11,9,12,12,13,12,12,12,4,5,5,6,8,9,11,12,12,13,12,12,12,7,7,8,9,9,11,8,12,9,12,12,12,12,7,8,8,9,9,8,11,9,12,12,12,11,12,10,10,10,11,11,11,11,11,10,11,11,12,11,10,10,10,11,11,11,11,10,11,11,11,11,12,11,11,11,12,11,12,11,12,11,13,11,13,11,11,11,11,11,12,11,12,10,13,11,12,11,13,12,12,12,13,12,13,13,13,12,14,12,14,13,12,12,12,12,13,13,13,12,14,12,14,13,14,13,14,14,14,14,14,14,14,14,15,14,15,14,13,14,13,14,14,14,14,14,15,14,14,14,15,2,3,1,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,10,10,10,11,11,11,12,12,12,13,13,13,13,13,13,1,4,4,16,16,4,9,11,15,16,4,12,8,16,16,12,16,16,16,16,13,16,16,16,16,5,8,10,16,16,9,9,14,15,16,12,14,14,16,16,16,16,16,16,16,16,16,16,16,16,5,11,8,16,15,12,14,16,16,16,9,15,9,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,11,11,16,16,12,13,16,16,16,12,16,14,16,16,16,16,16,16,16,16,16,16,16,16,11,15,15,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,15,16,16,16,16,16,16,16,16,14,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,11,11,16,16,12,15,16,16,16,12,16,14,16,16,16,16,16,16,16,16,16,16,16,16,12,15,15,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,11,15,15,16,16,16,16,16,16,16,15,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,11,12,16,16,11,15,16,16,16,13,16,14,16,16,16,16,16,16,16,16,16,16,16,16,11,16,14,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,14,14,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,13,15,16,16,15,15,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,12,12,16,16,13,12,16,16,16,14,16,14,16,16,16,16,16,16,16,16,16,16,16,16,13,16,16,16,16,14,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,14,16,16,16,16,16,16,16,16,14,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,11,11,16,16,13,15,16,16,16,11,15,14,16,16,16,16,16,16,16,14,16,16,16,16,11,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,11,16,14,16,16,14,16,16,16,16,13,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,11,11,16,16,13,13,16,16,16,13,16,13,16,16,16,16,16,16,16,16,16,16,16,16,12,16,15,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,14,16,16,16,16,16,16,16,16,14,16,13,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,13,14,16,16,15,16,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,15,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,7,7,7,7,7,7,7,7,7,7,8,7,8,8,7,8,8,7,8,7,7,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,8,8,9,8,2,5,5,5,7,7,5,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,5,7,8,8,9,10,8,9,10,8,9,10,10,10,12,10,11,11,8,10,10,10,11,12,10,11,10,5,8,7,8,10,10,8,10,9,8,10,10,10,10,11,10,12,11,8,10,9,10,11,11,10,12,10,5,8,8,7,9,10,8,10,9,7,9,10,9,10,11,9,11,11,8,10,9,10,11,11,9,11,10,7,9,9,9,10,11,9,11,11,9,9,11,10,10,13,11,12,12,9,11,11,11,12,13,11,13,11,7,9,9,9,10,11,9,11,10,9,11,10,10,10,12,11,13,12,9,11,11,11,12,12,10,12,10,5,8,8,8,9,10,7,10,9,8,9,10,9,10,11,10,11,11,7,10,9,9,11,11,9,11,10,7,9,9,9,10,11,9,11,10,9,11,11,10,10,12,11,12,12,9,10,11,11,12,13,10,12,10,7,9,9,9,11,11,9,11,10,9,11,11,11,11,13,11,13,12,9,11,9,11,12,12,10,13,10,2,3,3,3,3,3,3,4,6,6,9,9,6,7,8,10,11,6,8,7,10,10,8,10,10,12,12,8,10,10,12,12,6,7,8,10,10,7,8,9,10,11,8,9,9,11,11,10,10,11,12,13,10,11,11,13,13,6,8,7,10,10,8,9,9,11,11,7,9,8,11,10,10,11,11,13,13,10,11,10,13,12,9,10,10,11,12,10,10,11,12,13,10,11,11,12,13,12,12,13,12,14,12,13,13,14,14,9,10,10,12,11,10,11,11,13,12,10,11,10,13,12,12,13,13,14,14,12,13,12,14,12,7,8,8,10,11,8,9,10,11,12,8,9,9,11,12,10,11,12,13,14,10,11,11,13,13,8,9,10,11,12,9,10,11,12,13,10,10,11,12,12,11,12,12,13,14,11,12,12,14,14,8,9,9,11,12,10,10,11,12,13,9,10,10,12,12,11,12,12,14,14,11,12,12,14,13,11,11,12,12,13,11,12,12,13,14,12,12,13,14,14,13,13,14,14,16,13,14,14,15,15,11,12,11,13,13,12,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,14,7,8,8,11,10,8,10,9,12,11,8,10,9,12,11,10,11,11,13,13,10,12,11,14,13,8,9,9,12,11,9,10,10,12,12,10,11,10,13,12,11,12,12,13,14,11,12,12,14,14,8,10,9,12,11,10,11,10,12,12,9,11,10,13,11,11,12,12,14,14,11,12,12,14,13,11,11,12,13,13,11,12,12,13,14,12,12,12,14,14,13,13,14,14,15,13,14,14,15,15,11,12,11,13,12,12,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,14,10,11,11,12,13,11,12,12,13,14,11,12,12,13,14,13,13,14,14,16,13,14,14,15,15,11,12,12,12,14,12,12,13,13,15,12,13,13,13,15,14,14,15,15,16,14,14,15,15,16,11,12,12,13,14,12,13,13,14,15,12,13,13,14,14,14,14,15,15,16,14,14,14,15,15,13,14,14,14,15,14,14,15,15,16,14,15,15,15,16,15,15,16,16,18,16,16,16,17,17,13,14,14,15,15,14,14,15,16,16,14,14,14,16,15,16,16,16,17,17,15,16,16,17,16,10,11,11,13,12,11,12,12,14,13,11,12,12,14,13,13,14,14,15,15,13,14,13,16,14,11,12,12,14,13,12,13,13,14,14,12,13,13,15,14,14,14,14,15,15,14,15,14,16,15,11,12,12,14,12,12,13,13,15,14,12,13,12,15,13,14,15,14,16,15,14,15,14,16,15,13,14,14,15,15,14,14,14,15,16,14,15,14,16,16,15,16,16,16,17,16,16,16,17,17,13,14,14,15,14,14,15,15,16,15,14,15,14,16,15,16,16,16,17,17,15,16,15,18,16,6,8,8,11,11,8,9,10,11,12,8,10,9,12,12,10,11,11,13,13,10,12,11,14,13,8,9,9,11,12,9,10,10,12,12,9,10,10,12,12,11,11,12,13,14,11,12,12,14,14,8,10,9,12,11,10,11,11,12,12,9,11,10,13,12,11,12,12,14,14,11,12,12,14,13,10,11,11,13,13,11,12,12,13,14,11,12,12,14,14,13,13,14,13,15,13,14,14,15,15,11,12,11,13,13,12,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,14,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,13,14,11,12,12,14,14,9,9,10,11,12,10,10,11,12,13,10,10,11,12,13,12,12,13,13,15,12,12,13,14,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,14,15,12,13,12,14,14,11,11,12,12,14,12,12,13,13,14,12,12,13,13,14,13,13,14,14,16,14,14,14,15,15,11,12,12,14,13,12,13,13,14,14,12,13,13,15,14,14,14,14,16,16,13,14,14,16,14,7,9,9,12,11,9,10,10,12,12,9,11,10,13,12,11,12,12,13,14,11,13,12,14,13,9,10,10,12,12,10,10,11,12,13,10,12,11,13,13,12,12,13,13,14,12,13,13,15,14,9,10,10,12,12,11,11,11,13,13,10,12,10,13,12,12,13,13,14,15,12,13,12,15,13,11,12,12,14,13,12,12,13,13,14,12,13,13,15,14,13,13,14,13,16,14,15,14,16,15,12,12,12,14,14,13,13,13,14,14,12,13,12,14,13,14,15,15,16,16,13,14,13,16,13,10,11,12,13,14,11,12,13,13,15,12,12,13,14,14,13,14,14,15,16,13,14,14,16,15,12,12,13,12,14,12,12,13,13,15,13,13,13,13,15,14,14,15,14,16,14,15,15,15,16,12,13,12,14,14,13,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,15,16,16,13,14,14,13,16,14,14,15,14,16,14,14,15,14,16,15,15,16,15,18,16,16,16,16,17,14,14,14,16,15,14,15,15,16,16,14,15,15,16,16,16,16,16,17,17,15,16,16,17,16,10,12,11,14,13,12,13,13,14,14,12,13,12,15,14,14,14,14,15,15,14,15,14,16,15,12,13,12,14,13,12,13,13,15,14,13,14,13,15,14,14,15,15,16,16,14,15,15,17,15,12,13,12,14,14,13,14,14,15,15,13,14,13,15,14,15,15,15,16,16,14,15,15,17,15,14,14,14,16,15,14,15,15,16,16,14,15,15,16,15,16,16,16,16,17,16,17,16,18,17,14,14,14,16,15,15,15,15,16,16,14,15,14,16,15,16,16,17,17,17,15,16,15,17,16,6,8,8,11,11,8,9,10,12,12,8,10,9,12,11,10,11,12,13,13,10,11,11,13,13,8,9,10,11,12,9,10,11,12,13,10,11,11,12,12,11,12,12,13,14,11,12,12,14,14,8,9,9,12,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,14,11,12,11,14,13,11,11,12,13,13,11,12,12,13,14,12,12,12,14,14,13,13,14,14,15,13,14,14,15,15,10,11,11,13,13,11,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,13,7,9,9,11,12,9,10,11,12,13,9,10,10,12,12,11,12,13,13,14,11,12,12,14,14,9,10,10,12,12,10,10,11,12,13,11,12,11,13,13,12,12,13,13,15,12,13,13,15,14,9,10,10,12,12,10,11,12,13,13,10,11,10,13,12,12,13,13,14,15,12,13,12,14,13,12,12,12,14,14,12,12,13,13,14,13,13,13,15,14,14,13,14,13,16,14,15,15,16,16,11,12,12,13,14,12,13,13,14,15,12,13,12,14,13,14,14,15,15,16,13,14,13,15,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,14,11,12,11,14,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,12,13,14,15,12,13,13,15,14,9,10,9,12,11,10,11,10,13,12,10,11,10,13,12,12,13,12,14,14,12,13,12,15,13,11,12,12,13,14,12,13,13,14,14,12,13,13,14,14,14,14,14,14,16,14,14,14,16,15,11,12,11,14,12,12,13,12,15,13,12,13,12,15,13,14,14,14,16,15,13,14,13,16,14,10,11,12,13,14,12,12,13,13,15,12,13,13,14,14,14,14,15,15,16,14,14,14,15,16,12,12,13,14,14,12,13,14,14,15,13,14,14,15,15,14,15,15,15,17,15,15,15,16,16,12,12,13,13,14,13,13,14,14,15,12,13,13,14,15,15,15,15,15,17,14,15,15,15,15,14,14,14,16,16,14,15,15,15,16,15,15,15,16,16,16,15,16,16,18,16,16,17,17,17,14,14,14,15,16,15,15,15,16,17,14,15,14,16,16,16,16,17,17,18,16,16,15,17,16,10,12,11,14,13,12,12,12,14,14,11,13,12,14,13,13,14,14,15,15,13,14,13,16,15,12,12,13,14,14,12,13,13,15,15,13,13,13,15,15,14,15,15,16,16,14,15,15,17,16,12,13,12,14,12,13,13,13,15,13,12,13,12,15,13,14,15,15,16,15,14,15,14,16,14,14,14,14,16,16,14,15,15,16,16,14,15,15,16,16,15,16,16,16,17,16,17,16,18,17,13,14,14,16,13,14,15,15,16,14,14,15,14,16,14,16,16,16,17,16,15,16,15,18,15,9,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,15,15,13,14,14,15,15,11,12,12,14,14,11,12,13,14,15,12,13,13,15,14,13,14,14,15,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,14,14,14,14,16,16,14,15,14,16,15,12,13,13,14,15,12,13,14,15,16,13,14,14,16,16,14,14,15,16,17,15,15,15,17,17,13,14,14,15,15,14,15,14,16,16,14,15,14,16,15,15,16,16,17,17,15,16,15,17,16,10,12,12,13,14,11,12,13,14,14,12,13,12,14,14,13,14,14,15,16,13,14,14,16,15,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,13,13,15,15,17,14,14,15,16,16,12,13,12,14,14,12,13,13,15,15,12,13,13,15,14,14,15,15,16,16,14,15,14,16,16,13,12,14,13,16,13,13,15,14,16,14,13,15,15,16,14,14,16,15,17,15,15,16,16,17,13,14,14,16,15,14,15,15,16,16,14,15,14,16,15,16,16,16,17,17,15,16,16,18,16,10,12,12,14,14,12,12,13,14,14,12,13,12,15,14,13,14,14,15,16,14,15,14,16,15,11,12,12,14,14,12,13,13,14,15,13,14,13,15,15,14,14,15,15,16,14,15,15,17,16,12,13,13,14,14,13,13,14,15,15,12,14,13,15,15,14,15,15,16,16,14,15,15,17,15,13,14,13,15,15,13,14,14,15,16,14,15,14,17,16,15,15,15,15,17,16,16,16,18,17,14,14,14,16,16,15,15,15,16,16,14,15,14,16,16,16,16,17,17,17,16,16,16,17,16,11,12,13,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,15,17,16,12,13,13,14,15,13,13,14,14,16,13,14,14,15,16,15,14,16,15,17,15,15,16,16,17,12,13,13,15,15,13,14,14,16,16,13,14,14,16,15,15,15,16,17,17,15,16,15,17,16,14,14,15,13,16,15,14,16,14,17,15,15,16,14,17,16,15,17,15,18,16,16,17,16,18,14,15,15,17,16,15,16,16,17,17,15,16,15,17,16,16,17,17,18,18,16,17,15,18,16,11,12,12,14,14,13,13,14,14,15,13,14,13,16,14,15,15,15,16,16,15,16,15,17,16,12,13,13,15,14,13,13,14,15,15,14,15,14,16,15,15,15,16,15,16,16,16,16,18,16,12,13,13,15,15,14,14,15,15,16,13,14,13,16,15,16,16,16,17,17,15,16,15,17,15,14,15,14,16,15,14,15,15,16,16,15,16,15,17,16,16,15,16,15,17,17,18,17,18,17,15,15,15,16,16,16,16,16,17,17,14,15,15,17,16,17,17,18,18,18,16,17,15,18,15,9,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,15,15,11,12,12,14,14,12,13,13,14,15,12,13,13,14,14,14,14,15,15,16,14,14,14,16,16,11,12,12,14,14,12,13,13,14,15,11,13,12,14,14,13,14,14,16,16,13,14,14,16,15,13,14,14,15,15,14,14,15,15,16,14,15,14,16,16,15,15,16,16,17,15,16,16,17,17,12,13,13,15,15,13,14,14,16,15,12,14,13,16,15,15,16,15,17,17,14,15,15,17,15,10,12,12,14,14,12,12,13,14,15,12,13,12,14,14,14,14,15,15,16,13,14,14,16,16,12,13,13,14,14,13,13,14,14,15,13,14,13,15,15,14,15,15,15,17,14,15,15,16,16,11,12,12,14,14,13,13,14,15,15,12,13,13,15,14,14,15,15,16,17,14,15,14,16,15,14,14,14,16,16,14,15,15,16,16,15,15,15,16,16,15,16,16,16,18,16,17,16,18,17,13,13,14,15,15,14,14,15,16,16,13,14,14,16,15,16,16,17,17,17,15,15,15,17,15,10,12,12,14,13,12,12,13,14,14,11,13,12,14,14,13,14,14,16,16,13,14,14,16,15,12,12,13,14,14,12,13,13,14,15,13,13,13,15,15,14,14,15,16,16,14,15,15,16,16,11,12,12,14,14,12,13,13,15,15,12,13,12,15,14,14,15,14,16,16,13,15,13,16,15,13,14,14,15,16,14,15,15,15,17,14,15,15,16,16,16,15,16,16,17,16,16,16,17,17,13,14,12,16,13,14,15,13,16,15,13,15,13,16,14,15,16,15,17,16,15,16,14,17,15,11,12,12,14,15,13,13,14,14,16,13,14,13,15,14,15,15,16,16,17,15,15,15,16,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,15,15,15,16,15,17,16,16,16,17,17,12,13,13,14,15,14,14,15,15,16,13,14,13,15,15,16,16,16,17,17,15,16,15,16,15,15,15,15,16,16,14,15,15,16,17,16,16,16,17,17,16,15,17,15,18,17,18,17,18,18,14,14,15,15,17,15,15,16,16,17,14,15,15,16,16,17,17,17,17,18,16,16,15,17,15,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,14,17,16,13,13,13,15,15,13,14,14,15,16,13,14,14,16,16,15,15,16,16,17,15,16,16,17,17,12,13,13,15,14,13,14,14,16,15,13,14,13,16,14,15,16,16,17,16,15,16,14,17,15,14,15,15,16,17,15,15], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+419631);\n/* memory initializer */ allocate([16,16,17,15,16,16,17,17,16,15,17,16,18,16,17,17,18,18,14,15,14,16,13,15,16,15,17,14,15,16,14,17,14,16,17,16,18,16,16,17,15,18,15,6,8,8,10,9,8,9,9,10,10,8,9,9,10,10,8,10,10,10,10,8,10,10,10,10,9,9,9,10,10,9,10,10,10,11,9,10,10,11,11,10,10,10,11,11,10,10,10,11,11,9,9,9,10,10,9,10,10,11,11,9,10,10,11,10,10,10,10,11,11,10,10,10,11,11,10,10,10,10,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,10,10,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,9,10,10,10,11,10,10,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,12,12,10,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,9,10,10,11,10,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,12,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,7,10,10,11,11,10,10,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,10,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,12,12,10,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,10,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,11,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,7,10,10,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,12,12,10,10,10,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,10,10,10,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,13,12,13,12,12,13,13,13,13,12,13,13,13,13,8,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,8,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,2,5,5,4,7,7,4,7,6,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,6,7,8,8,9,10,8,10,10,8,9,10,10,11,12,10,11,12,8,10,10,10,11,12,10,12,11,6,8,7,8,10,10,8,10,9,8,10,10,10,11,12,10,12,12,8,10,9,10,12,11,10,12,11,5,8,8,8,10,10,8,10,10,7,9,10,9,10,11,10,11,11,8,10,10,10,12,12,10,12,11,7,9,9,9,11,11,9,11,11,9,10,11,11,11,12,11,12,12,9,11,11,11,12,12,11,12,12,7,9,9,10,11,12,10,12,11,9,11,10,11,11,12,12,13,13,9,11,11,12,13,13,11,13,11,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,12,7,9,9,9,11,11,9,11,10,7,9,9,10,11,12,10,12,11,9,11,11,11,11,13,12,13,13,9,10,11,12,13,13,11,12,11,7,9,9,9,11,11,9,11,11,9,11,11,11,12,12,11,12,12,9,11,10,11,12,12,10,12,11,4,6,6,6,7,7,6,7,7,6,7,7,7,7,8,7,7,8,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,5,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,8,8,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,7,8,8,8,9,9,8,9,9,8,9,8,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,6,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,7,8,8,8,9,9,8,9,9,8,8,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,8,8,8,8,9,9,8,9,9,8,9,9,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,2,5,4,4,7,7,4,7,6,5,6,7,7,8,9,7,9,9,5,7,6,7,9,9,7,9,8,6,8,8,8,10,10,8,10,10,8,9,10,10,11,12,10,12,12,8,10,10,10,12,12,10,12,11,6,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,12,8,10,9,10,12,11,10,12,11,5,8,8,8,10,10,8,10,10,8,9,10,10,11,11,10,11,11,8,10,10,10,11,12,10,12,11,8,10,10,10,11,11,10,11,11,10,11,11,11,12,13,11,12,13,10,11,11,11,13,13,11,13,13,7,9,9,10,11,12,10,12,11,9,11,11,11,12,13,12,14,13,9,11,11,12,13,14,11,13,12,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,12,8,10,9,10,12,11,9,11,11,7,9,9,10,11,12,10,12,11,9,11,11,11,12,13,12,14,13,9,11,11,12,13,14,11,13,12,8,10,10,10,11,11,10,11,11,10,11,11,11,13,13,11,13,13,10,11,10,11,13,12,11,13,12,4,6,6,8,8,5,7,7,9,9,5,7,7,9,9,6,8,8,11,11,6,8,8,11,11,6,7,7,9,9,7,8,9,10,11,7,9,9,11,10,8,9,10,12,12,8,10,10,12,12,6,7,7,9,9,7,9,9,10,10,7,9,8,11,10,8,10,10,12,12,8,10,9,12,12,8,9,9,11,11,9,10,10,12,12,9,11,11,12,13,11,12,12,13,14,11,12,12,14,14,8,9,9,11,11,9,11,10,13,12,9,10,10,13,12,11,12,12,14,14,11,12,12,14,13,7,8,9,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,13,13,10,11,11,13,13,8,9,10,10,11,10,11,11,12,13,10,11,11,12,12,11,11,12,13,14,11,12,12,14,14,8,10,10,11,11,10,11,11,12,13,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,10,11,11,12,13,11,12,12,13,14,12,13,13,14,14,13,13,14,14,16,13,14,14,15,16,10,11,11,13,13,12,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,16,15,7,8,8,10,10,8,10,10,11,11,8,10,10,12,11,10,11,11,13,13,10,11,11,13,13,8,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,8,10,9,11,10,10,11,11,13,12,10,11,10,13,12,11,12,12,14,14,11,12,11,14,13,10,11,11,13,13,11,12,12,14,14,12,12,12,14,14,13,14,14,15,16,13,14,14,15,15,10,11,11,13,12,12,12,12,14,14,11,12,12,14,13,13,14,14,16,15,13,14,13,16,14,10,11,11,13,13,12,12,13,14,15,12,13,13,14,15,13,14,15,15,16,13,14,14,16,16,11,12,13,14,14,13,13,14,15,16,13,14,14,15,16,14,15,15,16,17,14,15,16,17,17,11,12,12,14,14,13,14,14,15,16,13,14,14,15,15,14,15,15,16,18,14,15,15,17,16,13,14,15,15,16,15,15,16,16,18,15,15,15,17,17,16,16,17,17,18,16,16,16,18,18,14,14,14,16,16,15,15,15,16,17,15,15,15,16,17,16,17,17,18,18,16,16,17,18,17,10,11,11,14,13,12,13,13,15,14,11,13,13,15,14,13,15,15,16,16,13,14,14,16,16,11,12,12,14,14,13,13,13,15,15,13,14,13,15,15,15,15,15,17,16,14,15,15,17,16,11,13,12,14,14,13,14,13,15,15,13,14,13,15,15,14,15,15,17,17,14,15,15,17,16,14,14,14,16,16,14,15,15,17,17,15,15,16,17,16,17,16,17,18,18,16,17,17,18,18,13,14,14,16,15,15,15,15,17,17,14,16,15,16,16,17,17,17,18,18,16,17,16,20,19,6,8,8,10,10,8,10,10,11,11,8,10,10,12,11,10,11,11,13,13,10,11,11,13,13,8,9,10,11,11,10,11,11,12,12,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,9,10,10,11,11,10,11,11,12,12,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,10,10,11,12,13,11,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,15,16,10,11,11,13,13,12,12,12,14,14,12,13,12,14,14,13,14,14,16,16,13,14,14,15,15,9,10,10,11,12,10,11,11,12,13,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,10,10,11,12,13,11,12,12,13,14,11,12,12,13,14,12,13,14,14,15,12,13,13,15,15,10,11,11,13,13,11,12,12,13,14,11,12,12,14,13,12,13,13,15,15,12,13,13,15,15,12,11,13,12,14,13,13,14,14,15,13,13,14,14,15,14,15,15,16,17,14,15,15,16,17,12,13,12,14,14,13,14,14,15,15,13,14,14,15,15,14,15,15,16,17,14,15,15,16,17,8,9,9,11,11,10,11,11,12,13,10,11,11,13,12,12,13,13,14,15,11,13,12,15,14,9,11,10,12,12,11,12,12,13,14,11,12,12,14,13,13,13,14,15,15,13,14,13,15,15,9,11,11,12,12,11,12,12,14,14,11,12,12,14,13,13,14,14,15,16,13,14,13,15,14,11,12,12,14,13,12,13,13,14,15,13,14,14,16,15,15,15,15,15,16,15,16,15,17,17,11,12,12,14,14,13,14,14,15,15,12,13,13,15,14,15,15,15,17,17,14,15,15,17,15,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,16,16,12,13,13,14,15,13,14,14,16,16,14,14,14,15,16,15,16,16,17,17,15,16,16,17,17,12,13,13,15,15,14,14,14,16,16,14,14,15,16,16,15,16,16,17,17,15,16,16,17,17,14,15,15,15,16,15,15,16,16,18,15,16,16,17,17,17,17,17,18,18,16,17,17,19,18,14,15,15,16,17,15,16,16,17,17,15,16,16,18,17,16,17,17,19,18,17,17,17,19,18,10,12,12,14,14,13,13,14,15,15,12,14,13,16,15,15,15,15,17,17,14,15,15,17,16,12,13,13,15,14,13,14,14,16,16,14,14,15,17,16,15,16,16,17,17,15,16,16,18,17,12,13,13,15,14,14,15,15,16,16,13,15,14,16,15,16,17,16,19,17,15,16,16,17,17,14,15,15,17,15,15,16,15,17,17,16,17,16,18,17,17,17,18,18,18,17,17,18,19,18,14,15,15,16,16,15,16,16,17,18,15,16,16,18,16,17,18,18,19,19,17,18,17,18,19,6,8,8,10,10,8,10,10,11,11,8,10,10,12,11,10,11,11,13,13,9,11,11,13,13,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,8,10,9,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,10,11,11,13,13,11,12,13,14,14,12,12,12,14,14,13,14,14,15,16,13,14,14,16,16,10,11,10,13,12,11,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,16,15,8,9,9,11,11,10,11,11,12,13,10,11,11,13,12,12,13,13,14,15,12,13,13,15,14,10,11,11,12,12,11,11,12,13,14,11,12,12,14,14,13,13,14,15,16,13,14,14,15,15,9,10,11,12,12,11,12,12,13,14,11,12,12,14,13,13,14,14,15,16,12,14,13,15,15,11,12,12,14,14,12,13,13,14,15,13,14,14,16,15,14,15,15,15,17,15,15,16,16,17,11,12,12,13,14,13,14,14,15,15,12,13,13,15,14,15,16,15,16,17,14,16,15,17,15,9,10,10,12,11,10,11,11,13,13,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,10,11,11,12,13,11,12,12,13,14,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,10,11,10,13,12,11,12,12,13,13,11,12,12,14,13,12,13,13,15,15,12,13,13,15,14,12,13,12,14,14,13,14,14,15,15,13,14,14,15,15,14,15,15,16,16,14,15,15,16,16,11,13,11,14,12,13,13,13,15,14,12,14,13,15,14,15,15,15,17,16,14,15,14,17,15,10,12,12,14,14,13,13,14,15,16,12,14,13,15,15,14,15,16,17,17,14,15,16,17,17,12,13,13,14,15,13,14,14,16,16,14,14,15,16,16,16,16,16,17,17,16,16,16,18,18,12,13,13,14,15,14,14,15,16,16,13,14,14,16,15,16,16,16,17,18,15,16,16,17,17,14,15,15,16,16,15,15,16,17,17,15,16,16,17,18,17,18,18,18,19,17,18,18,19,19,14,15,15,16,16,15,16,16,17,17,15,16,16,17,17,17,17,18,20,18,17,18,17,18,18,11,12,12,14,14,12,13,14,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,16,17,12,13,13,15,15,14,14,14,16,16,14,14,14,16,16,15,16,16,17,17,15,16,16,17,17,12,13,13,15,14,13,14,14,16,15,14,15,14,16,15,15,16,16,17,17,15,16,16,17,16,14,15,15,16,16,15,16,16,17,17,16,16,16,17,17,17,17,17,19,18,17,17,17,18,19,14,15,14,17,15,15,16,16,17,17,15,16,15,17,17,16,17,17,18,18,16,17,17,18,17,6,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,17,18,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,16,16,13,14,14,15,16,14,15,15,16,17,14,15,15,17,16,15,16,17,18,17,16,16,16,18,17,14,14,15,16,16,14,15,15,18,16,14,15,15,17,16,16,17,17,18,18,16,17,16,18,17,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,16,16,12,13,13,15,15,13,14,14,15,16,13,14,14,16,16,15,16,16,17,17,15,15,16,17,17,12,13,13,15,15,14,14,14,16,16,13,14,14,16,16,15,16,16,17,17,15,16,16,17,17,14,14,15,15,16,15,15,16,16,17,15,15,16,16,17,16,17,17,17,18,16,17,17,18,18,14,15,15,16,16,15,16,16,17,17,15,16,16,17,17,17,17,17,18,19,17,17,17,18,18,10,12,12,14,14,12,13,14,15,16,13,14,13,15,15,14,15,15,17,17,14,15,16,17,17,12,13,13,15,15,13,14,14,15,15,14,15,14,16,16,15,16,16,17,18,15,17,16,18,17,12,13,13,15,15,14,14,14,16,16,13,14,14,16,15,15,16,16,17,18,15,16,16,17,17,14,14,14,16,16,15,15,16,17,17,15,16,16,17,17,17,17,17,18,20,17,17,17,19,19,14,15,15,16,16,15,17,16,18,18,15,16,15,17,16,17,18,19,19,19,17,17,17,18,17,13,14,14,16,16,14,15,15,17,17,14,15,15,16,17,15,17,17,18,18,16,16,17,18,17,14,15,15,16,17,15,16,16,17,17,15,16,16,17,17,16,17,17,18,18,17,17,17,18,19,14,15,15,16,17,15,16,16,17,17,15,16,16,17,17,16,17,17,18,18,17,17,17,19,19,16,16,16,16,18,16,17,17,17,18,17,17,17,17,19,18,18,18,19,19,18,18,18,19,20,16,16,17,18,18,16,18,17,18,18,17,17,17,20,19,18,18,19,21,20,18,20,18,18,19,10,12,12,14,14,14,14,15,15,17,14,15,14,17,15,16,16,17,18,18,16,18,17,19,18,12,14,13,16,15,14,14,15,15,17,15,16,16,18,17,16,17,18,17,19,17,19,18,20,19,12,13,13,15,15,15,16,17,17,18,14,16,14,17,16,17,18,18,19,19,17,17,17,18,18,15,15,15,17,16,15,16,16,17,17,17,19,17,18,18,18,18,18,18,21,19,20,19,20,19,15,15,16,16,17,17,17,18,20,20,15,16,16,18,17,18,19,19,19,20,18,19,18,19,17,6,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,17,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,15,16,16,13,14,14,16,16,15,15,15,16,16,14,15,15,17,16,16,17,17,19,18,16,17,17,18,18,13,14,14,15,15,14,15,15,17,16,14,15,15,17,16,16,17,16,17,18,15,16,16,18,18,10,12,12,14,14,12,13,14,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,17,16,12,13,13,15,15,14,14,14,15,16,14,15,15,16,16,15,16,16,17,18,16,16,16,18,18,12,13,13,14,14,14,14,15,16,16,13,14,14,16,16,15,16,16,18,18,15,16,16,19,17,14,15,15,16,17,15,15,16,17,17,16,17,16,17,18,17,17,18,17,19,17,17,18,18,19,14,14,14,16,16,15,16,16,17,17,15,16,15,17,17,17,17,17,19,20,16,17,17,18,18,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,14,16,16,12,13,13,15,15,14,14,14,16,16,13,14,14,16,16,15,16,16,18,17,15,16,16,17,17,12,13,13,15,15,13,14,14,16,16,13,14,14,16,16,15,16,15,18,18,15,16,15,17,16,14,15,15,16,16,15,16,16,17,17,15,16,16,18,17,16,17,17,18,18,16,17,17,18,18,14,15,14,16,15,15,16,15,17,17,15,16,15,17,16,16,17,17,18,18,17,17,16,19,17,10,12,12,14,15,14,14,15,15,17,14,15,14,17,15,16,17,17,17,18,16,17,17,18,18,12,14,13,16,15,14,14,16,15,17,15,17,16,18,17,17,17,18,17,19,18,18,18,19,18,12,13,14,15,15,15,16,16,16,17,14,15,14,18,16,18,17,18,19,19,17,18,17,20,18,15,15,15,17,17,15,16,16,17,18,18,18,18,19,18,18,18,19,18,20,18,19,19,21,21,15,15,16,16,17,17,18,18,18,18,15,16,16,17,17,17,19,20,19,20,17,18,18,19,17,13,14,14,16,16,14,15,15,16,17,14,15,15,17,17,16,16,17,17,18,15,17,16,17,17,14,15,15,16,16,15,16,16,17,17,16,16,16,17,17,17,17,18,17,18,17,17,17,18,20,14,15,15,17,16,15,16,16,17,17,15,16,16,17,17,17,17,17,18,18,16,17,17,19,18,16,16,17,17,17,17,18,17,19,18,17,17,17,18,19,17,20,18,19,21,17,19,18,19,20,15,17,15,17,16,16,17,17,18,18,17,17,17,18,17,18,19,18,19,21,18,18,17,19,19,1,5,5,4,8,8,4,8,8,5,7,8,8,9,10,8,10,10,5,8,7,8,10,10,8,10,9,7,9,9,9,11,11,9,11,11,9,11,11,11,12,13,11,13,13,9,11,11,11,13,13,11,13,13,7,9,9,9,11,11,9,11,11,9,11,11,11,13,13,11,13,13,9,11,11,11,13,13,11,13,12,5,9,9,9,11,11,9,11,11,9,11,11,11,12,13,11,13,13,9,11,11,11,13,13,11,13,13,9,11,12,11,13,13,12,13,13,11,12,13,13,14,15,13,14,14,12,13,13,13,15,15,13,15,14,8,10,10,11,13,13,12,14,13,11,12,12,13,14,15,13,15,15,11,12,12,13,15,15,13,15,14,5,9,9,9,11,11,9,11,11,9,11,11,11,13,13,11,13,13,9,11,10,11,13,13,11,13,12,8,10,10,11,13,13,12,13,13,11,12,12,13,14,15,14,15,15,10,12,12,13,14,15,13,15,14,9,12,11,12,13,13,11,13,13,12,13,13,13,15,15,13,14,15,11,13,12,13,15,14,13,15,14,3,3,3,3,3,3,3,3,2,7,14,16,17,18,20,21,7,4,6,8,11,12,14,16,13,5,4,4,8,9,11,13,15,8,4,3,5,7,9,10,17,11,8,4,4,6,9,9,17,11,9,7,6,5,7,8,19,13,11,9,9,7,8,8,21,15,13,11,10,8,8,7,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,4,5,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,7,7,12,12,5,11,12,12,12,5,12,11,12,12,12,12,12,12,12,12,13,13,13,13,7,11,11,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,13,10,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+429871);\n/* memory initializer */ allocatei8\", ALLOC_NONE, Runtime.GLOBAL_BASE+440111);\n/* memory initializer */ allocate([15,15,12,13,14,15,16,12,14,14,15,15,14,15,15,16,17,14,15,15,17,17,12,13,14,14,16,13,14,14,14,16,14,14,14,15,16,15,15,16,15,18,15,16,16,17,17,13,14,14,16,16,14,14,15,16,16,14,15,14,16,16,15,16,16,17,18,15,16,16,18,17,14,14,16,13,17,15,15,16,14,18,15,15,16,14,18,16,16,18,15,19,17,17,18,16,18,15,16,15,17,17,15,16,17,18,18,16,16,16,18,17,17,18,18,19,19,17,18,17,19,18,11,12,12,15,14,13,13,14,15,16,13,14,13,16,14,15,15,15,16,17,15,16,15,17,16,12,13,13,15,14,13,13,14,15,15,14,15,14,16,15,15,15,16,16,17,16,16,16,18,17,12,13,13,15,15,14,14,15,16,16,13,14,13,16,15,16,16,16,17,18,15,16,15,17,16,14,15,14,17,15,14,15,15,16,16,15,16,15,17,16,16,15,16,15,17,17,18,17,18,17,15,15,15,16,17,16,16,16,17,17,15,16,15,17,16,17,18,18,18,18,16,17,16,18,15,8,11,11,13,13,11,12,12,14,14,10,12,12,14,14,13,14,14,15,16,13,14,13,16,15,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,14,14,15,15,16,14,14,14,16,16,10,11,11,14,14,11,12,12,14,15,11,12,12,15,14,13,14,14,16,16,13,14,14,16,15,13,14,14,15,16,14,14,15,16,16,14,15,15,16,16,15,16,16,16,18,16,16,16,17,17,12,13,13,15,15,13,14,14,16,16,12,14,13,16,15,15,16,15,17,17,14,16,15,17,16,10,11,11,13,14,11,12,13,14,15,11,13,12,14,14,14,14,15,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,14,15,13,14,13,15,15,14,15,15,16,17,14,15,15,17,16,11,12,12,14,14,12,13,13,15,15,12,13,12,15,14,14,15,15,16,17,14,15,15,16,16,14,14,14,16,16,14,14,15,16,16,15,15,15,16,16,16,16,17,16,18,16,17,17,18,18,13,13,14,15,16,14,14,15,16,17,13,14,14,16,16,16,16,17,17,18,15,16,15,17,16,10,11,11,14,13,11,12,12,14,14,11,12,12,15,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,17,16,11,12,11,14,14,12,13,13,15,15,12,13,12,15,14,14,15,14,16,16,14,15,14,17,16,14,14,14,16,16,14,15,15,16,17,14,15,15,17,17,16,16,17,17,18,16,17,17,18,18,13,14,12,16,14,14,15,13,17,15,13,15,13,17,14,16,16,15,18,16,15,17,14,18,15,11,12,12,14,15,13,13,14,14,16,13,14,13,15,14,15,15,16,16,17,15,16,15,17,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,16,15,15,16,15,18,16,16,16,18,17,12,13,13,15,15,14,14,15,15,16,13,14,13,15,15,16,16,16,16,18,15,16,15,17,16,15,15,15,17,16,15,15,16,16,17,16,16,16,18,17,16,16,17,15,18,17,18,17,19,18,14,14,15,15,17,15,15,16,16,17,14,15,15,16,16,17,17,18,17,19,16,17,15,17,15,11,13,12,15,15,12,14,14,15,15,12,14,13,16,15,15,15,15,17,17,14,15,15,17,16,12,14,14,16,16,14,14,15,16,16,14,14,14,16,16,15,16,17,17,18,15,16,16,18,17,12,14,13,16,14,13,14,14,16,15,13,15,14,16,14,15,16,16,17,17,15,16,15,18,15,15,15,16,17,17,15,16,16,17,18,16,16,16,18,18,17,17,18,18,19,17,17,18,19,19,14,15,14,17,13,15,16,15,18,14,15,16,15,18,14,17,18,17,18,16,16,18,16,19,15,2,5,5,4,7,7,4,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,6,7,8,8,9,10,8,9,10,8,9,10,10,10,12,10,11,12,8,10,10,10,11,12,10,11,11,6,8,7,8,10,9,8,10,9,8,10,10,10,11,11,10,12,11,8,10,9,10,12,11,10,12,10,5,8,8,8,10,10,8,10,10,7,9,10,9,10,11,9,11,11,8,10,10,10,12,12,10,12,11,7,9,9,9,10,11,9,11,11,9,9,11,10,11,12,10,11,12,9,11,11,11,12,12,11,12,12,7,9,9,10,11,11,10,12,11,9,11,10,11,11,12,11,13,12,10,11,11,12,13,13,11,13,11,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,11,7,10,9,9,11,11,9,11,10,7,9,9,10,11,12,10,11,11,10,11,11,11,11,13,12,13,13,9,10,11,12,12,13,11,12,11,7,9,9,9,11,11,9,11,10,9,11,11,11,12,12,11,12,12,9,11,9,10,12,11,10,12,11,3,9,15,17,20,21,22,23,5,5,7,9,11,13,17,20,9,5,5,6,8,10,15,18,11,7,5,4,6,9,13,17,14,9,7,5,6,7,10,14,17,10,8,6,6,4,5,8,20,14,13,10,8,4,3,4,23,17,16,14,12,6,4,4,2,7,14,16,17,17,18,20,6,3,5,8,10,11,13,15,13,5,3,5,8,9,11,12,15,7,4,3,5,7,9,11,16,10,7,5,6,7,9,10,17,11,8,7,7,6,8,8,19,13,11,9,9,8,8,9,20,14,13,11,10,8,9,9,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,4,5,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,5,5,4,10,10,5,10,10,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,9,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,7,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4,7,7,6,7,8,6,8,7,7,7,8,7,7,8,8,8,8,7,7,7,8,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,9,8,9,8,8,8,8,8,8,9,8,9,9,8,8,8,9,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,9,9,9,8,9,8,2,5,6,5,7,8,5,8,7,5,7,7,7,7,9,8,9,9,5,7,7,8,9,9,7,9,7,6,8,8,8,9,10,8,9,9,8,9,10,9,9,11,10,10,11,8,10,9,10,10,11,9,10,10,6,8,8,8,9,9,8,10,9,8,9,10,9,10,10,10,11,10,8,10,9,10,11,10,9,11,9,6,8,8,7,9,9,8,9,9,7,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,7,9,9,9,10,10,9,10,10,9,9,10,10,9,11,10,11,11,9,10,10,10,11,11,10,11,10,6,9,8,9,10,10,9,10,9,8,10,10,9,9,10,10,11,11,9,10,10,10,11,11,9,11,9,6,8,8,8,9,9,7,9,9,8,9,9,9,9,10,9,10,10,7,9,9,9,10,10,9,10,9,6,8,9,9,9,10,9,10,10,9,10,10,9,9,11,10,11,11,8,10,10,10,11,11,9,10,9,7,9,9,9,10,10,9,10,10,9,10,10,10,10,11,10,11,11,9,10,9,10,11,11,10,11,9,2,3,3,3,3,3,3,2,6,6,9,9,5,7,8,10,11,5,8,7,11,10,8,10,11,12,13,8,11,10,13,12,6,7,8,10,11,7,8,10,10,12,8,9,9,12,11,10,10,12,11,14,10,11,12,14,13,6,8,7,11,10,8,9,9,11,12,7,10,8,12,10,10,12,12,13,14,10,12,10,14,11,9,10,11,11,12,10,10,11,11,13,11,12,12,13,13,12,11,13,11,15,13,14,13,14,14,9,11,10,12,11,11,12,12,13,13,10,11,10,13,11,13,13,14,14,14,12,13,11,14,11,7,8,9,11,12,9,9,11,12,13,9,10,10,13,12,11,12,13,13,15,11,12,12,14,14,9,10,10,12,13,10,10,12,12,14,11,11,11,13,13,12,12,13,13,15,12,13,13,15,14,9,10,10,12,13,10,11,11,13,14,10,12,11,14,13,12,13,13,14,15,12,13,13,15,14,12,12,13,13,14,12,13,13,13,15,13,14,14,14,15,14,14,15,14,16,14,15,15,16,16,12,13,13,14,14,13,13,14,15,14,12,13,13,15,14,14,15,15,15,16,14,15,14,16,14,7,9,8,12,11,9,10,10,12,13,9,11,9,13,12,11,12,12,14,14,11,13,12,15,13,9,10,10,13,12,10,11,12,13,14,10,12,11,14,13,12,13,13,14,15,13,13,13,15,14,9,10,10,13,12,11,11,11,13,13,10,12,10,14,12,13,13,13,14,15,12,13,12,15,13,12,13,13,14,14,12,13,13,14,15,13,14,13,15,15,14,14,15,14,16,14,15,15,16,15,12,13,12,14,13,13,13,13,15,14,12,13,13,15,13,14,15,15,16,15,14,15,14,16,14,11,12,12,13,14,12,13,14,14,15,12,13,13,14,15,14,14,15,15,16,14,15,15,16,16,12,13,13,14,15,13,13,14,14,16,13,14,14,15,15,15,15,16,15,17,15,15,15,16,16,12,13,13,14,15,13,14,14,15,16,13,14,14,15,15,15,15,16,16,17,15,15,15,17,16,14,15,15,16,16,15,15,16,15,16,15,16,16,16,17,16,16,17,16,18,16,16,17,18,17,14,15,15,16,16,15,16,16,16,17,15,16,15,17,16,16,17,17,17,18,16,16,16,17,16,11,12,12,14,13,12,13,13,15,14,12,14,13,15,14,14,15,15,16,16,14,15,14,16,15,12,13,13,15,14,13,14,14,15,15,13,14,14,16,15,15,15,15,16,16,15,16,15,17,16,12,13,13,15,14,13,14,14,15,15,13,14,13,16,14,15,15,15,16,16,15,15,15,17,15,14,15,15,16,16,15,15,15,16,16,15,16,16,17,17,16,16,17,17,17,16,17,17,18,17,14,15,15,16,15,15,15,16,16,16,15,15,15,17,15,17,17,17,18,17,16,17,16,18,16,6,9,9,12,12,8,10,10,12,13,9,11,10,13,12,10,12,12,14,14,11,13,12,14,14,8,10,10,12,12,9,10,11,12,14,10,11,11,13,13,12,12,13,13,15,12,13,13,15,14,9,10,10,13,13,10,11,11,13,13,10,12,10,14,13,12,13,13,14,15,12,13,13,15,14,11,12,12,13,14,12,12,13,13,15,12,13,13,14,14,13,13,14,13,16,14,15,15,16,15,11,12,12,14,14,13,13,13,15,14,12,13,13,15,14,14,15,15,16,15,14,14,14,16,14,7,9,10,12,12,9,10,11,13,13,9,11,10,13,13,11,12,13,14,15,12,13,13,15,14,9,10,11,12,13,10,10,12,13,14,11,11,12,14,14,12,12,14,14,15,13,13,13,15,15,9,11,11,13,13,11,12,12,14,14,10,12,10,14,13,13,14,13,15,15,12,14,13,15,14,12,12,13,13,15,12,12,14,13,15,13,14,14,15,15,14,14,15,14,17,14,15,15,16,16,12,13,13,15,14,13,14,14,15,15,12,14,13,15,14,14,15,15,16,16,14,15,14,16,14,7,10,10,12,12,10,11,11,12,13,10,12,10,14,12,12,13,13,14,15,12,13,13,15,14,9,11,10,13,12,10,10,12,12,14,11,13,12,14,13,13,13,14,13,15,13,14,14,15,14,10,11,11,13,13,12,12,12,13,14,10,12,10,14,12,13,14,14,15,15,13,14,13,15,13,12,13,13,14,14,12,12,13,14,15,13,14,14,15,15,13,13,14,13,15,14,15,15,16,16,12,13,13,14,14,13,14,14,15,15,12,13,13,15,13,15,15,15,16,16,13,14,13,16,13,11,12,13,14,14,12,13,14,14,15,12,13,13,15,15,14,14,15,15,17,14,15,15,16,16,12,13,14,14,15,13,13,14,14,16,13,14,14,15,16,14,14,16,15,17,15,15,16,16,16,12,13,13,15,15,13,14,14,15,16,13,14,14,15,16,15,15,16,17,17,15,16,15,17,16,14,15,15,15,16,15,15,16,15,17,15,15,16,16,17,16,16,16,16,18,16,16,17,17,17,14,15,15,16,16,15,16,16,16,17,15,16,15,17,16,16,17,17,17,17,16,17,16,18,17,11,12,12,14,14,13,13,14,14,15,13,14,13,15,14,14,15,15,15,16,14,15,15,17,15,12,13,13,15,14,13,13,14,15,15,14,15,14,16,15,15,15,15,15,16,15,16,15,17,16,12,13,13,15,15,14,14,14,15,16,13,14,13,16,15,15,15,16,16,17,15,16,15,17,15,14,15,15,16,16,14,15,15,16,16,15,16,16,17,16,15,15,16,15,17,16,17,17,18,17,14,15,15,16,16,15,16,16,16,17,14,15,15,17,16,17,17,17,17,18,15,16,16,18,15,6,9,9,12,12,9,10,11,12,13,8,10,10,13,12,11,12,13,14,14,10,12,12,14,13,9,10,10,12,13,10,10,12,13,14,10,11,11,13,13,12,13,13,14,15,12,13,13,15,14,8,10,10,12,12,10,11,11,13,13,9,11,10,13,13,12,13,13,14,15,12,13,12,15,13,11,12,12,14,14,12,13,13,13,15,13,13,13,14,15,14,14,15,14,16,14,15,15,15,15,11,12,12,14,13,12,13,13,15,14,12,13,12,15,13,14,14,15,16,16,13,14,13,16,13,7,10,10,12,12,10,10,12,12,14,10,11,11,13,12,12,13,13,13,15,12,13,13,15,14,10,11,11,13,13,10,10,12,12,14,12,12,12,14,13,13,13,14,13,15,13,14,14,15,14,9,10,11,13,13,11,12,12,13,14,10,12,10,14,12,13,13,14,14,15,13,13,12,15,13,12,13,13,14,14,12,13,13,14,15,13,14,14,15,15,13,13,15,13,16,15,15,15,16,16,12,13,13,14,14,13,14,14,15,15,12,13,12,15,14,15,15,15,16,16,13,14,13,15,13,7,10,9,12,12,9,10,11,13,13,9,11,10,13,13,11,13,13,14,15,11,13,12,15,14,9,11,11,13,13,10,10,12,13,14,11,12,12,14,14,12,13,14,14,15,13,13,13,15,15,9,11,10,13,12,11,12,11,14,14,10,12,10,14,13,13,14,13,15,15,12,14,12,15,14,12,13,13,14,15,13,13,14,14,15,13,14,14,15,15,14,14,15,14,17,14,15,15,16,16,12,13,12,15,13,13,14,14,15,15,12,14,13,15,13,14,15,15,16,16,14,15,14,16,14,11,12,12,14,14,13,13,14,14,15,13,14,13,15,15,14,15,15,16,17,14,15,15,16,15,12,13,13,15,15,13,13,14,15,16,14,14,14,16,15,15,15,16,15,17,15,16,15,17,16,12,13,13,14,15,14,14,15,15,16,13,14,13,15,15,15,15,16,16,17,15,15,15,16,15,14,15,15,16,16,14,15,15,16,17,15,16,16,17,17,16,15,16,15,17,16,17,17,17,17,14,15,15,15,16,15,15,16,16,17,14,15,15,16,16,16,16,17,17,18,15,16,15,17,15,11,13,12,14,14,12,13,13,15,15,12,14,13,15,14,14,15,15,16,16,14,15,14,16,15,12,13,13,15,15,13,14,14,15,16,13,14,14,16,16,15,15,16,16,17,15,16,15,17,16,12,13,13,15,14,13,14,14,16,15,13,14,13,16,14,15,16,15,17,16,15,15,14,18,15,14,15,15,16,16,15,15,16,16,17,15,16,15,17,16,16,16,17,17,18,16,17,17,18,17,14,15,15,16,15,15,16,15,17,16,15,15,15,17,15,16,17,17,18,17,16,17,16,18,15,10,12,12,14,14,12,13,13,14,14,12,13,13,14,14,13,14,14,15,15,13,14,14,16,15,11,12,13,14,14,12,13,13,15,15,12,13,13,15,15,13,14,15,15,16,14,15,15,16,16,12,13,13,14,14,13,13,14,15,15,13,14,13,15,15,14,15,15,16,16,14,15,14,16,15,13,14,14,15,15,13,14,14,15,16,14,14,15,16,16,14,15,15,15,17,15,16,16,17,17,13,14,14,15,15,14,15,15,16,16,14,15,15,16,16,15,16,16,16,17,15,16,15,17,16,11,12,12,14,14,12,13,13,14,15,12,13,13,15,14,13,14,14,15,16,13,14,14,16,15,12,13,13,14,15,13,13,14,15,15,13,14,14,15,15,14,14,15,15,17,14,15,15,16,16,12,13,13,15,15,13,14,14,15,15,13,14,13,15,15,14,15,15,16,17,14,15,15,16,16,13,13,14,15,16,14,14,15,15,16,14,15,15,16,16,15,15,16,15,18,15,16,16,17,17,14,15,15,16,16,15,15,15,16,16,14,15,15,17,16,16,16,16,17,17,15,16,16,17,16,10,12,12,14,14,12,13,13,14,15,12,13,13,15,14,14,14,15,15,16,14,15,14,16,15,12,13,13,15,14,13,13,14,15,15,13,14,14,15,15,14,14,15,15,16,14,15,15,16,16,12,13,13,15,15,13,14,14,15,16,13,14,13,15,14,15,15,15,16,16,14,15,15,16,15,13,14,14,16,15,14,14,14,15,16,14,15,15,16,16,15,15,16,15,17,16,17,16,17,17,14,14,15,15,16,15,15,16,16,16,14,15,14,16,15,16,16,16,17,17,15,16,15,17,15,11,13,13,14,15,13,13,14,15,15,13,14,13,15,15,14,15,15,15,16,14,15,15,17,15,13,13,14,15,15,13,14,15,15,16,14,14,14,16,16,15,14,16,15,17,15,16,16,17,16,13,14,14,15,15,14,14,14,16,16,13,15,14,16,15,15,15,16,17,17,15,16,15,17,16,14,15,15,15,16,15,15,16,15,17,15,16,16,16,17,16,16,17,15,18,16,17,17,17,17,14,15,15,16,16,15,16,16,17,17,15,16,15,17,16,16,17,17,18,18,16,17,15,18,16,10,12,12,14,14,13,13,14,14,15,13,14,13,15,14,14,15,15,15,16,15,15,15,16,15,12,13,13,15,14,12,12,14,14,15,14,15,14,16,15,15,14,15,14,17,15,16,16,17,16,12,13,13,14,15,14,14,15,15,16,13,14,12,16,14,15,16,16,16,17,15,16,14,17,15,14,15,14,16,15,14,14,15,15,15,15,16,15,17,16,15,14,16,14,16,16,17,17,18,17,14,14,15,15,16,15,16,16,16,17,14,15,14,16,15,16,16,17,17,17,15,16,14,17,14,10,12,12,14,13,12,13,13,14,14,11,13,12,14,14,13,14,14,15,16,13,14,14,16,15,12,13,13,14,14,13,13,14,15,15,13,14,13,15,15,14,14,15,15,16,14,15,15,16,16,11,13,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,13,14,14,16,15,13,14,14,15,15,14,15,15,15,16,14,15,15,16,16,15,16,16,16,17,16,16,16,17,17,13,14,14,15,15,14,15,15,16,16,13,14,14,16,15,15,16,16,17,17,15,15,15,17,15,11,12,12,14,14,12,13,13,14,15,12,13,13,15,14,14,14,15,15,16,14,14,14,16,15,12,13,13,15,14,13,13,14,15,15,13,14,14,16,15,14,15,15,15,16,15,15,15,16,16,12,13,13,14,15,13,13,14,15,15,13,14,13,15,15,15,15,15,16,16,14,15,14,16,15,14,14,15,16,16,14,15,15,15,16,15,16,15,16,16,15,15,16,15,17,16,16,16,17,17,13,14,14,15,16,14,15,15,16,16,14,14,14,16,16,16,16,16,17,17,15,15,15,17,15,11,12,12,14,14,12,13,13,14,15,12,13,13,15,14,14,14,14,15,16,13,14,14,16,15,12,13,13,15,15,13,13,14,15,16,13,14,14,15,15,14,15,15,16,17,14,15,15,17,16,12,13,13,15,14,13,14,14,15,15,13,14,13,15,15,14,15,15,16,16,14,15,14,17,15,14,15,15,16,16,14,15,15,16,17,15,15,15,17,17,15,16,16,16,17,16,17,16,17,17,13,15,14,16,15,14,15,15,16,16,14,15,14,16,15,16,16,16,17,17,15,16,15,17,15,10,12,12,14,14,13,13,14,14,15,13,14,13,15,14,14,15,15,15,17,14,15,15,16,15,12,13,13,15,14,12,12,14,14,15,14,15,14,16,15,15,14,16,15,17,15,16,16,17,16,12,13,13,14,15,14,14,15,15,16,12,14,12,15,14,15,16,16,16,17,15,16,14,17,14,14,15,14,16,16,14,14,15,15,16,15,16,16,17,16,15,14,16,14,17,16,17,17,18,17,14,14,15,15,16,15,15,16,16,17,14,15,14,16,15,16,17,17,17,18,15,16,14,17,14,11,13,13,15,14,13,13,14,15,15,12,14,13,15,15,14,15,15,15,17,14,15,14,16,15,13,14,14,15,15,13,14,15,15,16,14,15,14,16,16,15,15,16,16,17,15,16,16,17,17,13,14,13,15,15,14,14,14,16,16,13,15,14,16,15,15,16,16,17,17,15,16,14,17,15,15,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,15,17,16,17,17,17,17,18,18,14,15,15,17,15,15,16,16,17,16,15,16,15,17,15,16,17,17,17,17,16,17,15,18,15,7,8,8,10,10,8,9,9,10,11,8,9,9,10,10,9,10,10,11,11,9,10,10,11,11,8,9,9,10,10,9,9,10,11,11,9,10,10,11,11,10,10,11,11,11,10,11,11,11,11,8,9,9,10,10,9,10,10,11,11,9,10,9,11,11,10,11,11,11,11,10,11,10,11,11,10,10,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,11,11,11,12,10,10,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,12,11,11,11,11,12,11,8,9,10,11,11,9,10,11,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,10,10,11,11,10,11,11,12,12,10,11,11,12,11,11,12,12,12,12,11,12,11,12,12,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,8,10,9,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,12,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,13,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,10,11,11,12,11,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,11,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,12,12,13,13,13,13,13,13,13,13,13,8,10,10,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,11,12,10,11,11,12,12,11,11,11,12,12,11,11,11,12,12,10,10,11,11,12,11,11,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,11,11,12,11,12,12,11,12,11,12,12,10,11,11,12,12,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,12,12,12,13,12,12,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,11,12,12,12,12,12,12,12,13,12,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,11,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,10,10,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,11,11,11,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,11,12,12,11,12,11,12,12,10,11,11,12,12,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,10,12,11,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,11,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,12,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,11,11,12,12,11,12,12,12,12,11,12,11,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,12,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,11,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,12,13,12,13,12,12,13,13,13,12,12,13,13,13,12,13,13,13,13,12,12,12,12,13,12,12,13,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,13,13,13,13,12,13,13,12,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,13,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,11,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,12,13,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,11,12,12,12,12,12,13,13,11,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,13,13,13,13,13,12,13,12,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,12,13,13,13,13,13,13,13,13,13,12,1,5,5,5,7,8,5,8,7,5,7,8,7,8,10,8,10,10,5,8,7,8,10,10,7,10,8,6,8,9,9,10,12,9,11,11,9,10,11,11,11,13,11,13,13,9,11,11,11,12,13,11,13,11,6,9,8,9,11,11,9,12,10,9,11,11,11,11,13,11,13,13,9,11,10,11,13,13,11,13,11,6,9,9,8,10,11,9,12,11,8,10,11,10,11,13,11,13,13,9,11,11,11,13,12,11,13,11,8,10,10,9,11,12,10,12,12,10,10,12,11,11,14,12,13,14,10,12,12,12,13,13,11,14,11,8,11,10,11,12,13,11,14,12,10,12,11,11,12,14,13,15,14,10,12,12,13,14,15,12,14,12,5,9,9,9,11,12,8,11,10,9,11,11,11,11,13,11,12,13,8,11,10,11,13,13,10,13,11,8,10,11,11,12,14,11,13,12,10,12,12,12,12,14,14,15,14,10,11,12,13,14,15,11,14,12,8,10,10,10,12,12,9,12,11,10,12,12,11,11,14,12,13,13,10,12,10,12,14,13,11,13,11,6,7,7,7,7,7,7,7,7,7,7,8,7,8,8,7,8,8,7,8,7,7,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,8,8,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,8,8,9,8,8,9,8,7,8,8,7,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,7,8,8,8,8,9,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,9,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,7,8,8,7,8,8,8,8,8,8,8,9,8,8,9,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,9,8,8,8,8,8,9,9,9,9,9,8,8,8,8,9,9,8,9,8,2,5,5,4,7,7,4,7,7,5,7,8,7,8,10,8,9,9,5,7,7,8,9,9,7,10,8,5,7,8,8,9,10,8,10,10,8,9,10,10,10,12,10,12,12,8,10,10,10,12,12,10,12,11,5,8,7,8,10,10,8,10,9,8,10,10,10,11,12,10,12,12,8,10,9,10,12,12,10,12,10,5,8,8,7,10,10,8,10,10,7,9,10,9,10,12,10,12,12,8,10,10,10,12,12,10,12,11,7,9,10,9,11,12,10,12,11,9,9,12,11,10,14,12,12,13,10,12,11,12,13,13,11,14,12,7,10,9,10,11,11,10,12,11,9,11,11,11,11,13,12,14,13,10,12,12,12,14,14,11,14,12,5,8,8,8,10,10,7,10,10,8,10,10,10,11,12,10,12,12,7,10,9,10,12,12,9,12,10,7,9,10,10,11,12,10,11,11,10,12,12,11,12,14,12,14,14,9,11,11,12,13,14,11,13,11,7,10,9,10,11,12,9,12,11,10,11,12,11,12,14,12,13,13,9,12,9,12,13,12,11,14,10,4,6,6,9,9,6,8,8,10,10,6,8,8,10,10,8,10,10,12,13,8,10,10,13,12,6,8,8,10,10,8,8,9,10,11,8,9,9,11,11,10,10,11,12,13,10,11,11,13,13,6,8,8,10,10,8,9,9,11,11,8,9,8,11,10,10,11,11,13,13,10,11,10,13,12,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,12,13,12,15,13,13,13,15,14,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,13,13,14,15,12,13,12,15,12,6,8,8,10,11,8,9,10,11,12,8,9,9,11,11,10,11,12,13,14,10,11,11,13,13,8,9,9,11,12,9,10,11,12,13,9,10,10,12,13,11,12,13,13,15,11,12,12,14,14,8,9,9,11,12,9,10,11,12,13,9,10,10,13,12,11,12,13,14,15,11,12,12,14,13,10,11,12,13,14,11,12,13,13,15,12,13,13,14,14,13,13,14,14,16,14,15,14,16,15,10,12,11,14,13,12,12,13,14,14,11,12,12,14,14,14,14,15,15,16,13,14,14,16,14,6,8,8,11,10,8,9,9,11,11,8,10,9,12,11,10,11,11,13,13,10,12,11,14,13,8,9,9,12,11,9,10,10,12,13,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,8,9,9,12,11,9,10,10,13,12,9,11,10,13,12,11,12,12,14,14,11,13,12,15,13,10,11,12,13,14,11,12,13,13,14,12,13,12,14,14,13,13,14,14,16,14,15,14,16,16,10,12,11,14,13,12,13,13,14,14,11,13,12,15,13,14,14,15,16,16,13,14,13,16,14,9,10,11,12,13,11,11,12,13,14,11,11,12,13,14,13,13,14,14,16,13,14,14,15,15,11,11,12,13,14,12,12,13,13,15,12,13,13,14,15,14,14,15,15,17,14,14,15,16,16,11,12,12,13,14,12,12,13,14,15,12,13,12,14,15,14,14,15,15,17,14,15,14,16,16,13,14,14,15,16,14,14,15,15,17,14,15,15,16,16,15,16,17,16,18,16,17,16,17,17,13,14,14,16,15,14,15,15,16,16,14,15,14,16,15,16,16,17,17,18,16,16,16,17,16,9,11,10,13,12,11,12,11,14,13,11,12,11,14,13,13,14,14,16,15,13,14,13,16,14,11,12,12,14,13,12,12,13,14,14,12,13,13,15,14,14,14,15,16,16,14,15,14,17,15,11,12,11,14,13,12,13,13,15,14,12,13,12,15,13,14,15,14,16,16,14,15,14,17,15,13,14,14,15,16,14,14,15,16,16,14,15,15,16,16,15,16,16,16,17,16,16,16,17,17,13,14,14,16,15,14,15,15,17,16,14,15,14,17,15,16,17,17,17,17,16,16,16,18,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,11,13,14,10,11,11,14,13,8,9,9,11,12,9,10,10,12,13,9,10,10,13,12,11,11,12,13,15,11,12,12,15,14,8,9,9,12,11,9,10,11,12,13,9,11,10,13,12,11,12,12,14,15,11,13,12,15,14,10,11,11,13,14,11,12,12,13,14,11,12,12,14,14,13,13,14,14,16,13,14,14,16,15,11,12,11,14,13,12,13,13,14,14,11,13,12,14,13,14,14,15,16,16,13,14,14,16,14,8,9,9,11,12,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,12,14,14,9,9,10,11,13,10,10,12,12,14,10,10,11,13,13,12,12,13,14,16,12,12,13,15,15,9,10,10,13,12,10,11,11,13,14,10,12,11,14,13,12,13,13,15,15,12,13,13,15,15,11,11,12,13,15,12,12,13,13,15,12,13,13,14,15,14,14,15,15,17,14,15,15,16,16,11,13,12,15,14,13,13,13,15,15,12,14,13,15,14,15,15,15,16,16,14,15,15,17,15,7,9,9,12,11,9,10,10,12,12,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,9,10,10,12,12,10,10,11,12,13,10,11,11,14,13,12,12,13,14,15,12,13,13,15,14,9,10,10,12,12,10,11,11,13,13,10,11,10,14,12,12,13,13,15,15,12,13,12,15,13,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,14,13,14,13,16,14,15,15,16,16,11,12,12,14,14,13,13,14,15,15,12,13,12,15], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+450351);\n/* memory initializer */ allocate([14,15,15,15,16,16,14,15,14,17,14,10,11,12,13,14,11,12,13,14,15,11,12,12,14,15,13,14,15,15,17,14,14,14,16,16,11,12,13,12,15,12,12,14,13,16,13,13,14,13,16,14,14,15,14,17,15,15,15,15,17,11,13,12,15,15,13,13,14,15,16,12,14,13,16,15,15,15,15,17,17,15,15,15,17,16,14,14,15,14,16,14,14,16,14,17,15,15,15,14,17,16,16,17,15,18,17,17,17,16,18,14,15,15,17,16,15,16,16,17,17,15,16,15,17,16,17,17,17,18,18,16,17,16,18,17,10,11,11,14,13,11,12,12,14,14,11,13,12,15,14,14,14,14,16,16,14,15,14,16,15,11,12,12,15,13,12,13,13,15,14,13,14,13,16,14,14,15,15,16,16,15,16,15,17,16,11,13,12,15,14,13,13,14,15,15,12,14,13,16,14,15,15,15,17,17,14,16,15,17,16,14,14,14,16,15,14,15,15,16,16,15,16,15,17,16,16,16,16,16,17,16,17,17,18,17,14,15,15,16,16,15,15,16,17,16,14,15,15,17,16,17,17,17,18,18,16,17,16,18,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,12,13,14,10,11,11,14,13,8,9,9,11,12,9,10,11,12,13,9,11,10,13,12,11,12,13,14,15,11,12,12,15,14,8,9,9,12,11,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,12,14,13,11,11,12,13,14,11,12,13,13,15,12,13,13,14,14,13,14,14,14,16,14,15,14,16,16,10,11,11,14,13,11,12,12,14,14,11,12,12,14,13,13,14,14,15,16,13,14,13,16,14,7,9,9,11,11,9,10,11,12,13,9,10,10,12,12,11,12,13,14,15,11,12,12,14,14,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,12,13,13,15,12,13,13,15,15,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,13,13,14,15,12,13,12,15,13,11,12,12,14,14,12,12,13,14,15,13,14,13,15,15,14,13,15,13,16,15,15,15,16,16,11,12,12,14,14,12,13,13,14,15,12,13,12,15,14,14,15,15,16,17,13,14,13,16,13,8,9,9,12,11,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,12,15,14,9,10,10,12,13,10,11,12,13,14,10,11,11,14,13,12,13,13,15,15,12,13,13,15,15,9,10,9,13,11,10,11,10,13,13,10,12,10,14,12,12,13,12,15,15,12,13,12,15,14,11,12,13,14,15,12,13,14,14,15,13,13,13,15,15,14,15,15,15,17,15,15,15,16,16,11,12,11,15,13,12,13,13,15,14,12,13,12,16,13,14,15,15,16,16,14,15,14,17,14,10,11,11,13,14,11,12,13,14,15,11,12,12,14,14,14,14,15,15,17,14,14,14,15,16,11,12,13,14,15,12,13,14,14,16,13,14,13,15,15,14,15,16,15,17,15,15,15,17,17,11,12,12,13,15,13,13,14,14,16,12,13,13,14,15,15,15,15,16,17,14,15,15,16,16,14,15,15,16,16,14,15,15,16,17,15,15,16,16,17,16,16,17,16,18,17,17,17,18,18,14,14,15,15,16,15,15,15,16,17,14,15,15,16,16,16,17,17,17,18,16,16,16,17,16,10,11,11,14,13,11,13,12,15,14,11,13,12,15,14,14,15,14,16,16,13,15,14,17,15,11,12,13,15,15,12,13,14,15,16,13,14,13,16,15,15,15,15,16,17,15,15,15,17,16,11,13,11,15,12,13,14,13,16,13,12,14,12,16,13,15,15,15,17,15,14,16,14,17,14,14,15,15,16,17,15,15,16,16,17,15,16,15,17,17,16,16,17,17,18,16,17,17,18,18,14,15,14,17,13,15,16,15,17,15,15,16,15,17,14,16,17,16,18,16,16,17,16,18,15,9,11,11,13,13,10,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,16,16,10,11,12,14,14,11,12,13,14,15,11,13,13,15,15,13,14,14,15,16,14,15,15,16,16,11,12,12,14,14,12,13,13,15,15,12,13,12,15,14,14,15,15,16,16,14,15,14,17,16,12,13,13,15,16,13,13,14,15,16,13,14,14,16,16,14,15,16,16,17,15,16,16,17,17,13,14,14,16,15,14,15,15,17,16,14,15,14,17,15,16,16,17,17,17,16,16,16,18,16,10,11,12,14,14,11,12,13,14,15,11,13,12,15,15,13,14,15,16,16,14,15,15,17,16,11,11,13,14,15,12,12,14,14,16,12,13,14,15,15,14,14,15,16,17,15,15,15,17,17,12,13,12,15,15,13,14,14,16,15,13,14,13,16,15,15,16,15,17,17,15,16,15,17,16,13,12,15,14,16,14,13,15,14,17,14,13,15,15,17,15,14,17,15,18,16,15,17,17,18,14,15,15,17,16,15,16,16,17,17,15,16,15,17,16,16,17,17,18,18,16,17,16,18,17,10,11,11,14,14,11,12,12,14,15,11,13,12,15,14,13,14,14,16,16,14,15,14,16,16,11,12,12,14,14,12,12,13,15,15,12,13,13,15,15,14,14,15,16,16,14,15,15,17,16,11,12,12,15,15,13,13,13,15,15,12,13,13,15,15,15,15,15,17,17,14,15,15,17,16,13,14,13,16,15,14,14,14,16,16,14,15,14,17,16,15,15,16,16,17,16,17,16,18,17,14,15,15,16,16,15,15,15,17,17,14,15,15,17,16,16,17,17,18,18,16,17,16,18,16,12,13,13,15,15,13,14,14,16,16,13,14,14,16,16,14,15,16,16,18,15,16,16,17,17,13,13,14,14,16,14,14,15,15,17,14,14,15,15,17,15,15,17,15,18,16,16,17,17,18,13,14,14,16,16,14,15,15,16,17,14,15,15,17,16,16,17,16,17,18,16,17,16,18,17,15,14,16,13,18,16,15,17,14,18,16,15,17,14,18,17,16,18,15,19,17,17,18,16,19,15,16,16,17,17,16,17,17,18,18,16,17,16,18,17,18,18,18,19,18,17,18,17,19,17,11,12,12,15,15,13,13,14,15,16,13,14,13,16,15,15,15,15,16,17,15,16,15,17,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,15,15,15,16,16,17,16,16,16,18,17,12,13,13,15,15,14,14,15,16,16,13,14,13,16,15,16,16,16,17,17,15,16,15,18,16,15,15,15,17,15,14,15,15,16,16,16,17,16,17,16,16,16,17,16,17,17,18,17,19,18,15,15,16,17,17,16,16,16,17,17,15,16,15,17,16,17,18,18,18,18,16,17,16,18,16,9,11,11,13,13,11,12,12,14,14,10,12,12,14,14,13,14,14,15,16,13,14,14,16,15,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,14,14,15,16,17,14,15,15,16,16,10,12,11,14,14,11,13,13,15,15,11,13,12,15,14,14,14,15,16,16,13,14,14,16,15,13,14,14,15,16,14,14,15,15,17,14,15,15,16,17,16,16,16,16,18,16,16,17,17,17,12,13,13,16,15,13,14,14,16,16,12,14,13,16,15,15,16,16,17,17,14,16,15,17,16,10,11,11,14,14,11,12,13,14,15,11,12,12,15,14,14,14,15,16,16,13,14,14,16,16,11,12,12,14,15,12,13,14,15,15,13,13,13,15,15,14,15,15,16,17,15,15,15,16,17,11,12,12,14,14,12,13,13,15,15,12,13,12,15,15,14,15,15,16,17,14,15,14,16,16,14,14,15,16,16,14,15,15,16,17,15,16,15,17,17,16,16,17,16,18,16,17,17,18,18,13,13,14,15,16,14,14,15,16,17,14,14,14,16,15,16,16,17,17,18,15,16,15,17,16,10,12,11,14,14,11,13,13,15,15,11,13,12,15,15,14,15,15,16,16,13,15,14,16,16,12,12,13,15,15,13,13,14,15,16,13,14,14,16,15,15,15,16,16,17,15,15,15,17,17,11,13,11,15,14,12,14,13,16,15,12,14,12,16,14,15,15,15,17,17,14,15,14,17,15,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,17,18,16,17,17,18,18,13,14,12,16,14,14,15,13,17,15,14,15,13,17,14,16,17,15,18,17,15,17,14,18,15,11,12,12,14,15,13,13,14,15,16,13,14,13,16,15,15,15,16,16,17,15,15,15,16,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,16,15,15,16,16,18,16,16,16,18,17,12,13,13,15,15,14,14,15,15,16,13,14,13,15,15,16,16,16,17,18,15,16,15,17,16,15,16,15,17,16,15,15,16,16,17,16,17,16,17,17,16,16,17,16,18,17,18,18,18,18,14,15,15,15,17,16,15,17,16,17,14,15,15,16,16,17,17,18,18,19,16,16,16,17,16,12,13,13,15,15,13,14,14,16,16,13,14,14,16,16,15,16,16,17,17,15,16,15,18,16,13,14,14,16,16,14,15,15,16,17,14,15,15,17,16,16,16,17,17,18,16,17,16,18,18,13,14,13,16,14,14,15,14,17,15,14,15,14,17,14,16,17,16,18,17,15,17,15,18,15,15,16,16,17,18,16,16,17,17,18,16,17,17,17,18,17,17,18,18,19,17,18,18,19,18,15,16,14,17,13,16,17,15,18,14,16,17,15,18,14,18,18,17,19,16,17,18,16,19,15,2,5,5,4,7,7,4,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,6,7,8,8,9,10,8,9,10,8,9,10,10,10,12,10,11,11,8,10,10,10,11,12,10,11,11,6,8,7,8,10,9,8,10,9,8,10,10,10,11,11,10,12,11,8,10,9,10,11,11,10,12,10,5,8,8,8,10,10,8,10,10,7,9,10,9,10,11,9,11,11,8,10,10,10,11,12,10,12,11,7,9,9,9,10,11,9,11,11,9,9,11,10,11,12,11,11,12,9,11,11,11,12,12,11,12,12,7,9,9,10,11,11,10,12,11,9,11,10,11,11,12,11,13,12,10,11,11,12,13,13,11,13,11,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,11,7,10,9,9,11,11,9,11,10,7,9,9,10,11,12,10,11,11,10,11,11,11,11,13,12,13,13,9,10,11,11,12,13,11,12,11,7,9,9,9,11,11,9,11,10,9,11,11,11,12,12,11,12,12,9,11,9,11,12,11,10,12,11,3,9,14,16,17,19,22,22,5,4,6,9,11,13,17,20,9,5,5,6,9,11,15,19,11,7,5,5,7,9,13,17,14,9,7,6,6,7,11,14,16,11,9,7,6,4,4,8,19,15,13,11,9,4,3,4,21,16,16,15,12,6,4,4,2,7,13,15,16,17,19,20,6,3,4,7,9,10,12,15,13,4,3,4,7,8,11,13,14,7,4,4,6,7,10,11,16,9,7,6,7,8,9,10,16,9,8,7,7,6,8,8,18,12,10,10,9,8,8,9,20,14,13,12,11,8,9,9,1,4,5,5,10,10,5,10,10,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,10,10,10,7,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,6,7,8,6,8,7,6,7,7,7,7,8,7,8,8,6,7,7,7,8,8,7,8,7,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,9,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,9,10,8,9,9,9,10,9,9,10,9,7,8,8,8,9,9,8,9,9,8,8,9,9,9,9,9,9,9,8,9,9,9,10,9,9,9,9,7,9,9,9,9,10,9,10,9,9,9,9,9,9,10,10,10,10,9,9,9,10,10,10,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,9,9,10,9,7,9,9,9,9,10,9,10,9,9,9,9,9,9,10,10,10,10,9,9,9,10,10,10,9,10,9,7,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,9,10,8,9,8,9,9,9,9,10,9,1,5,5,5,7,9,5,9,7,5,7,8,7,7,10,9,10,10,5,8,7,9,10,10,7,10,7,6,9,9,9,10,12,9,11,11,9,10,11,11,11,13,12,13,13,9,11,11,12,13,13,11,13,11,6,9,9,9,11,11,9,12,10,9,11,11,11,11,13,12,13,13,9,11,10,12,13,13,11,13,11,6,9,9,9,11,12,9,12,11,9,10,11,10,10,13,12,13,13,9,11,11,12,13,12,11,13,11,7,9,10,9,10,12,10,12,11,10,10,12,10,10,12,12,12,13,10,11,11,12,12,13,10,12,10,7,10,10,11,11,14,11,14,11,10,12,11,11,11,14,14,14,14,10,11,12,14,14,14,11,14,11,6,9,9,9,11,12,9,12,11,9,11,11,11,11,13,12,12,13,9,11,10,12,13,13,10,13,10,7,10,10,11,11,14,11,14,11,10,12,11,11,11,14,14,15,14,10,11,12,13,14,15,11,14,11,7,10,9,10,11,12,9,12,10,10,11,11,10,10,12,12,13,12,9,12,10,12,13,12,10,12,10,2,3,3,3,3,3,3,2,6,6,10,10,5,7,8,11,12,5,8,7,12,11,9,11,11,13,15,9,11,11,15,13,6,7,8,11,11,7,7,9,11,13,8,9,9,13,12,11,11,12,12,15,11,12,12,15,14,6,8,7,11,11,8,9,9,12,13,7,9,7,13,11,11,12,12,14,15,11,12,11,15,12,10,11,11,12,14,10,11,12,12,15,12,13,13,14,15,13,12,14,12,16,15,15,15,16,16,10,11,11,14,12,12,13,13,15,14,10,12,11,15,12,15,15,15,16,17,13,14,12,17,12,6,8,8,12,12,8,9,10,13,13,8,9,9,13,13,12,12,13,15,16,12,13,13,16,15,8,9,10,12,13,9,9,11,13,14,10,11,11,14,14,13,13,14,15,16,13,14,14,16,16,8,10,9,13,13,10,11,11,14,14,9,10,10,14,13,13,14,14,16,17,13,13,13,16,15,12,13,13,14,16,13,13,14,14,16,14,14,14,16,16,15,15,16,15,18,16,17,17,18,18,12,13,13,15,15,14,14,14,16,16,13,14,13,16,15,16,16,17,18,18,15,16,15,18,15,6,8,8,12,12,8,9,9,13,13,8,10,9,13,13,12,13,13,15,16,12,13,12,16,15,8,9,10,13,13,9,10,10,13,14,10,11,11,14,14,13,13,13,15,16,13,14,14,17,16,8,10,9,13,13,10,11,11,14,14,9,11,9,14,13,13,14,14,16,16,13,14,13,16,14,12,13,13,15,16,13,13,14,15,16,14,14,14,16,16,15,15,16,15,18,17,17,17,18,18,12,13,13,16,14,14,14,14,16,16,13,14,13,16,14,16,17,17,18,18,15,16,15,18,15,11,12,13,14,16,13,13,14,15,17,13,14,14,16,17,16,16,17,17,19,16,17,17,18,19,13,13,14,16,16,14,14,15,16,17,14,15,15,17,17,17,16,17,17,19,17,17,18,19,19,13,14,14,16,16,14,14,15,17,18,14,15,14,17,17,17,17,18,18,19,17,17,17,18,19,16,16,16,17,18,17,17,17,18,19,17,17,17,18,19,18,18,19,18,20,19,20,19,21,20,16,17,17,18,18,17,17,18,19,19,17,17,17,19,18,19,19,19,19,20,19,19,19,20,19,11,13,12,16,14,13,14,14,17,16,13,14,13,17,15,16,17,17,18,18,16,17,16,19,17,13,14,14,16,16,14,14,14,17,17,14,15,15,17,16,17,17,17,19,19,17,18,17,19,18,13,14,13,17,16,14,15,15,17,17,14,15,14,18,16,17,17,17,19,19,17,17,16,19,17,16,17,17,18,19,17,17,17,18,18,17,18,17,19,18,18,19,18,19,19,19,20,19,20,20,16,17,16,18,17,17,17,17,18,18,17,18,17,19,17,19,19,19,19,20,18,19,19,20,18,6,8,8,12,12,8,9,9,13,13,8,10,9,13,13,11,13,13,15,16,12,13,13,16,15,8,9,9,13,13,9,9,10,13,14,10,11,11,14,14,12,12,13,14,16,13,14,14,17,16,8,10,9,13,13,10,11,11,14,14,9,11,10,14,13,13,14,14,16,16,13,14,13,16,15,12,13,13,14,16,12,13,14,14,16,13,14,14,16,16,15,14,16,15,18,16,17,17,18,17,12,13,13,16,15,14,14,14,16,16,13,14,13,16,15,16,16,17,17,17,15,16,15,18,15,7,9,9,13,13,9,9,11,13,14,9,10,10,14,13,12,13,14,15,16,12,14,13,17,15,9,9,10,13,14,10,9,11,13,15,11,11,11,14,14,13,12,14,14,17,14,14,14,17,16,9,10,10,14,13,11,11,11,14,14,10,11,10,15,13,14,14,14,16,17,13,14,13,17,14,13,13,14,14,16,13,13,14,14,17,14,14,14,16,16,15,14,16,15,18,17,17,17,18,18,13,14,13,16,15,14,14,15,17,16,13,14,13,17,15,17,16,17,17,17,15,16,14,18,14,7,9,9,13,13,9,10,10,13,14,9,11,10,14,13,13,14,14,16,16,13,14,14,17,15,9,10,10,14,13,9,10,11,13,14,11,12,11,15,14,13,13,14,14,16,14,15,15,17,17,9,10,10,14,14,11,12,12,14,15,10,11,10,15,13,14,15,15,17,17,14,15,13,17,14,13,14,13,16,16,13,13,14,15,16,14,15,15,17,17,15,14,16,15,18,17,18,17,20,18,13,14,14,16,16,15,15,15,17,17,13,14,13,17,15,17,17,18,18,18,15,16,14,19,14,12,13,13,15,16,13,13,15,16,17,13,14,14,16,16,15,15,17,17,19,16,17,17,19,18,13,13,14,15,17,14,13,15,15,17,14,15,15,16,17,16,15,18,16,19,17,17,17,18,19,13,14,14,17,16,14,15,15,17,17,14,15,14,17,16,17,17,17,18,19,16,17,16,19,17,16,16,17,16,18,16,16,17,16,19,17,17,18,18,19,18,17,18,17,21,19,19,19,20,19,16,17,17,18,18,17,17,18,18,19,16,17,16,18,18,19,19,19,19,20,18,18,17,20,18,11,13,13,16,15,13,14,14,16,17,13,15,14,17,16,16,17,17,18,18,17,17,17,19,18,13,14,13,17,16,14,13,14,16,17,15,16,15,18,16,17,16,17,17,19,18,18,18,20,18,13,14,14,16,17,15,15,15,17,18,14,15,14,18,16,18,18,18,19,20,17,18,16,20,17,16,17,16,18,18,16,16,17,18,18,17,18,18,19,18,18,17,19,17,20,19,20,19,22,20,16,16,17,18,18,18,17,17,19,19,16,17,16,18,17,19,20,19,22,21,18,19,18,21,17,6,8,8,12,12,8,9,10,13,13,8,9,9,13,13,12,13,13,15,16,11,13,13,16,15,8,9,10,13,13,9,10,11,13,14,10,11,11,14,14,13,13,14,15,16,13,14,14,16,16,8,9,9,13,13,10,11,11,14,14,9,10,9,14,13,13,14,14,16,17,12,14,12,16,14,12,13,13,15,16,13,13,14,15,16,13,14,14,15,17,15,15,16,15,18,16,16,17,17,17,12,13,13,16,14,13,14,14,16,16,12,14,13,16,14,16,17,17,18,18,15,15,14,18,14,7,9,9,13,13,9,10,11,13,14,9,10,10,14,13,13,14,14,15,17,13,14,14,16,15,9,10,10,14,14,10,10,11,13,15,11,12,12,15,14,14,13,15,14,17,14,15,15,17,17,9,10,10,13,14,11,11,12,14,15,9,11,10,14,13,14,15,15,16,18,13,14,13,16,14,13,14,14,16,16,13,13,14,15,17,15,15,15,16,17,15,14,16,15,18,17,17,18,19,18,13,14,14,16,16,14,15,15,17,17,13,14,13,16,15,17,17,18,18,18,15,16,14,18,15,7,9,9,13,13,9,10,10,13,14,9,11,10,14,13,12,13,14,15,16,12,14,13,16,15,9,10,10,13,14,10,10,11,13,14,11,11,11,15,14,13,13,14,14,16,14,14,14,17,16,9,10,9,14,13,11,11,11,14,14,10,11,9,15,13,14,14,14,16,16,13,14,12,17,14,13,13,14,15,16,13,13,14,15,16,14,15,14,16,17,15,14,16,14,18,16,17,17,18,18,13,14,13,16,14,14,14,14,16,16,13,14,13,17,14,17,17,17,18,18,15,16,14,18,15,11,13,13,16,16,13,14,15,16,17,13,14,14,17,16,16,17,17,18,19,17,17,17,19,18,13,14,14,17,17,13,13,15,16,18,15,15,15,17,17,17,16,18,17,20,18,17,18,19,19,13,14,14,16,17,15,15,16,16,18,14,15,14,16,16,17,17,18,18,20,17,18,16,18,17,16,17,16,19,18,16,16,17,18,19,18,18,18,19,19,18,17,18,17,21,20,19,19,21,21,16,16,17,18,18,17,17,18,19,19,16,17,16,19,18,20,20,20,19,21,18,18,17,20,18,12,13,13,16,15,13,14,14,16,16,13,14,13,17,16,16,17,17,18,18,15,17,15,19,17,13,14,14,16,17,14,14,15,16,17,14,15,15,17,17,16,16,17,17,18,17,17,17,19,19,13,14,13,17,15,14,15,15,17,16,14,15,13,17,15,17,18,17,19,18,16,17,15,20,16,16,17,17,18,18,16,16,17,18,18,17,18,17,19,18,17,17,18,18,20,19,20,19,20,19,16,16,16,19,16,17,17,17,19,18,16,17,16,19,16,19,19,19,19,19,18,19,17,19,17,11,13,13,16,16,13,14,14,17,17,13,14,14,17,17,15,17,17,19,19,16,18,17,20,19,12,14,14,17,17,13,14,15,17,18,14,15,15,17,18,16,16,17,18,20,17,18,18,20,18,13,14,14,17,17,14,15,15,17,18,14,15,15,17,17,17,18,17,19,19,17,18,17,19,19,15,16,16,18,18,15,16,17,18,19,16,17,17,19,19,17,17,18,18,21,18,19,19,21,19,16,17,17,18,18,17,17,18,19,19,17,18,17,19,19,19,19,19,20,20,18,19,18,21,19,12,13,13,16,16,13,14,14,16,17,13,15,14,17,16,15,16,17,17,19,16,17,17,19,18,13,13,14,16,17,14,13,15,16,17,14,15,15,17,17,15,15,17,17,20,17,17,18,19,18,13,14,14,17,16,15,15,15,17,18,14,15,14,17,16,17,17,17,18,18,16,17,16,19,17,16,15,17,17,19,16,15,17,16,19,17,16,17,18,19,17,16,19,16,20,19,18,19,19,19,16,17,17,18,18,17,17,17,18,19,16,17,16,19,18,20,19,19,20,19,18,18,17,20,17,11,13,13,16,16,13,14,15,16,17,14,15,14,18,16,17,17,17,18,21,17,18,17,20,19,13,14,14,17,16,13,14,15,16,18,15,16,15,18,17,17,16,17,17,19,17,18,18,20,19,13,14,14,16,17,15,15,16,17,18,14,15,14,18,17,17,18,18,19,20,17,18,16,19,17,16,17,15,19,18,16,16,16,18,18,17,18,17,20,19,18,17,18,17,20,20,20,19,22,20,16,17,17,18,19,18,18,18,19,20,16,17,16,19,18,20,19,19,20,20,18,19,17,20,17,13,14,14,16,17,14,14,16,16,18,14,16,15,17,16,16,16,17,17,18,17,17,16,19,18,14,14,15,16,17,14,14,16,16,18,16,16,16,17,17,16,15,17,16,19,18,18,18,19,19,14,15,15,17,17,15,16,16,17,18,14,16,14,18,16,17,17,18,18,19,16,17,16,19,17,16,16,17,16,18,16,16,17,16,19,18,18,18,17,18,17,16,18,16,20,19,19,19,19,19,16,17,17,18,18,17,17,18,19,19,16,17,16,19,17,18,19,19,19,20,17,18,16,20,16,11,14,13,17,17,14,14,16,16,18,14,16,14,19,16,18,18,19,18,19,18,19,18,21,18,13,15,14,18,16,14,14,16,16,18,16,17,16,19,17,18,16,19,17,20,19,19,19,21,19,13,14,15,17,18,17,16,17,17,19,14,16,14,18,16,20,19,19,20,21,18,19,16,21,17,17,18,16,19,17,16,16,17,18,18,19,19,18,21,18,17,17,18,17,20,20,20,20,22,20,17,17,18,18,20,19,19,19,18,20,16,17,17,19,19,21,21,21,20,21,17,19,17,23,17,11,13,13,16,16,13,14,14,17,17,13,14,14,17,17,16,17,17,19,20,15,16,16,19,19,13,14,14,16,17,14,15,15,17,18,14,15,15,17,17,17,17,18,19,19,17,17,18,19,19,13,14,14,17,16,14,15,15,17,17,13,15,14,18,17,17,18,18,19,20,16,17,16,19,18,16,16,17,18,18,17,17,17,18,19,17,18,17,19,19,19,19,19,19,20,19,20,19,20,20,15,16,16,18,17,16,17,17,20,18,15,16,16,19,17,19,19,19,20,20,17,18,17,21,17,11,13,13,16,16,13,14,15,16,17,13,15,14,17,16,17,17,18,18,20,17,17,17,19,19,13,14,14,17,17,14,14,15,17,18,15,15,15,18,17,17,17,18,17,20,18,18,17,20,18,13,14,14,16,17,15,15,16,17,18,14,15,13,17,17,17,18,18,19,20,17,17,16,19,17,16,17,17,18,18,16,16,17,18,18,18,18,18,19,19,18,17,19,18,21,19,20,20,20,20,16,15,17,18,18,17,17,18,18,20,16,16,16,18,17,20,19,20,21,22,17,18,17,20,17,12,13,13,16,16,13,14,15,16,17,13,14,14,17,16,16,17,18,18,19,15,16,16,19,18,13,14,14,16,17,14,14,15,16,17,14,15,15,17,17,16,16,17,17,19,17,17,17,19,18,13,14,13,17,16,14,15,15,17,17,13,15,13,17,16,17,17,17,19,19,15,17,15,19,17,16,17,17,18,18,16,16,17,17,19,17,18,17,19,19,18,17,19,17,19,19,19,19,20,19,15,17,15,19,16,17,17,16,19,18,16,17,15,18,16,19,19,19,20,19,17,19,16,19,16,11,14,14,17,17,15,14,16,16,18,15,16,14,18,16,18,18,19,18,21,18,19,18,20,18,13,15,14,18,17,14,14,16,16,18,16,17,16,19,17,17,17,19,17,22,19,19,19,21,19,13,14,15,17,18,17,16,17,17,19,14,16,14,18,16,19,19,19,20,21,18,18,16,20,17,17,18,16,19,18,15,17,17,19,19,19,19,18,21,19,18,17,20,17,21,22,21,20,21,21,17,16,19,18,20,19,18,19,18,20,16,17,16,19,18,21,20,21,19,23,18,19,16,20,17,13,14,14,17,16,14,14,15,16,18,14,16,14,17,16,16,16,17,17,19,16,17,16,19,17,14,15,15,17,17,14,14,16,16,17,15,16,16,18,17,16,16,17,17,19,17,18,17,19,18,14,15,14,17,16,16,16,16,17,17,14,16,14,17,16,18,18,18,18,19,16,17,15,19,16,17,17,17,18,18,16,15,17,17,18,18,18,18,19,19,17,16,18,16,19,19,19,19,19,19,16,17,16,19,16,18,18,17,19,18,16,17,16,19,16,19,19,20,19,19,17,18,16,20,16,6,8,8,10,10,8,9,9,10,11,8,10,9,11,10,9,10,10,11,11,9,10,10,11,11,8,9,9,10,10,9,9,10,11,11,10,10,10,11,11,10,11,11,11,11,10,11,11,11,11,8,9,9,11,10,10,10,10,11,11,9,10,9,11,11,10,11,11,11,11,10,11,10,11,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,9,10,11,11,10,10,11,11,11,10,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,11,11,11,10,10,11,11,12,11,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,10,10,11,11,11,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,9,11,11,10,10,10,11,11,10,11,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,11,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,10,11,11,11,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,12,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,12,12,12,13,12,10,11,11,12,11,11,11,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,12,8,10,10,11,11,10,10,11,11,11,10,11,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,11,11,11,10,10,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,10,11,11,11,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,11,11,12,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,13,13,12,13,13,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,13,12,13,12,12,13,13,13,13,12,13,13,13,13,8,10,10,11,11,10,10,11,11,11,9,11,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,11,11,11,10,11,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,11,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,12,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,13,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,12,13,12,12,13,12,13,12,13,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,12,13,12,13,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,12,13,13,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,12,13,12,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,13,13,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,12,13,12,13,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,13,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,12,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,13,12,13,12,12,13,13,13,13,12,13,12,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,2,5,5,5,7,8,5,8,7,5,7,7,7,7,9,7,9,9,5,7,7,8,9,9,7,9,7,6,8,8,8,9,10,8,9,9,8,9,10,9,9,11,10,11,11,8,9,9,10,11,11,9,11,10,6,8,8,8,9,9,8,10,9,8,9,9,9,10,11,10,11,10,8,10,9,10,11,11,9,11,9,6,8,8,7,9,9,8,10,9,7,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,11,10,7,9,9,8,10,10,9,10,10,9,9,10,10,10,11,10,11,11,9,10,10,10,11,11,10,11,10,7,9,9,9,9,10,9,10,9,8,10,9,9,9,11,10,11,11,9,10,10,10,11,11,9,11,9,6,8,8,8,9,10,7,9,9,8,9,9,9,10,10,9,10,10,7,9,9,9,10,10,9,10,9,7,9,9,9,9,10,9,10,9,9,10,10,9,9,11,10,11,11,8,9,10,10,11,11,9,11,9,7,9,9,9,10,10,8,10,10,9,10,10,10,10,11,10,11,11,9,10,9,10,11,11,10,11,10,5,7,7,6,7,7,6,7,7,6,7,7,7,8,8,7,8,8,6,7,7,7,8,8,7,8,8,7,7,8,7,8,8,7,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,7,7,8,8,7,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,6,8,8,7,8,8,7,8,8,7,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,9,8,9,9,8,8,9,8,9,9,9,9,9,8,9,9,9,9,9,9,9,9,7,8,8,8,9,9,8,9,8,8,8,8,8,9,9,9,9,9,8,9,8,9,9,9,9,9,9,6,8,8,7,8,8,7,8,8,8,8,8,8,8,9,8,9,9,7,8,8,8,9,9,8,9,8,7,8,8,8,8,9,8,9,8,8,8,9,9,9,9,9,9,9,8,8,8,9,9,9,8,9,9,7,8,8,8,9,9,8,9,8,8,9,9,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,1,5,5,5,7,8,5,8,7,5,7,8,8,8,10,8,10,10], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+460591);\n/* memory initializer */ allocate([5,8,7,8,10,10,8,10,8,6,8,9,8,10,12,9,11,11,9,10,11,11,11,13,12,13,13,9,11,11,11,13,13,11,13,12,6,9,8,9,11,11,8,12,10,9,11,11,11,12,13,11,13,13,9,11,10,11,13,13,11,13,11,5,9,9,8,11,11,9,12,11,8,10,11,10,11,13,11,13,13,9,11,11,11,13,13,11,13,12,8,10,11,10,12,13,10,13,12,10,10,13,11,11,14,12,13,14,11,13,12,13,14,14,12,14,12,8,11,10,11,12,13,11,14,12,10,13,12,12,12,13,13,15,14,11,12,13,13,14,15,12,14,12,5,9,9,9,11,12,8,11,11,9,11,11,11,12,13,11,13,13,8,11,10,11,13,13,10,13,11,8,10,11,11,12,14,11,13,12,11,13,12,12,12,14,13,15,14,10,12,13,13,14,15,12,13,12,8,11,10,10,12,13,10,13,12,11,12,13,12,12,14,13,14,14,10,13,10,12,14,13,11,14,11,4,6,6,9,9,6,7,8,10,10,6,8,7,10,10,8,10,10,12,13,8,10,10,13,12,6,8,8,10,10,7,8,9,10,11,8,9,9,11,11,10,10,11,12,13,10,11,11,14,13,6,8,8,10,10,8,9,9,11,11,7,9,8,11,10,10,11,11,13,14,10,11,10,13,12,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,12,13,12,15,13,14,13,15,14,9,10,10,13,12,10,11,11,13,13,10,11,10,13,12,13,13,14,14,15,12,13,12,15,12,6,8,8,10,11,8,9,10,11,12,8,9,9,11,11,10,11,12,13,14,10,11,11,14,13,8,9,9,11,12,9,10,11,12,13,9,10,11,12,13,11,11,13,13,15,11,12,12,14,14,8,9,9,12,12,9,10,11,12,13,9,10,10,13,12,11,12,13,14,15,11,12,12,14,14,11,11,12,13,14,11,12,13,13,15,12,13,13,14,15,13,13,14,14,16,14,15,15,16,16,11,12,11,14,13,12,13,13,14,14,11,13,12,14,13,14,15,15,16,16,13,14,14,16,14,6,8,8,11,10,8,9,9,12,11,8,10,9,12,11,10,11,11,13,13,10,12,11,14,13,8,9,9,12,12,9,10,10,12,13,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,8,9,9,12,11,9,10,10,13,12,9,11,10,13,12,12,12,12,14,14,11,13,12,15,13,11,11,12,13,14,11,12,13,13,14,12,13,13,14,15,13,13,14,14,16,14,15,15,16,16,11,12,11,14,13,12,13,13,15,14,11,13,12,15,13,14,15,15,16,16,13,15,13,16,14,9,10,11,12,13,11,11,12,13,14,11,12,12,13,14,13,13,14,14,16,13,14,14,15,16,11,11,12,13,14,12,12,13,14,15,12,13,13,14,15,14,14,15,15,17,14,15,15,16,17,11,12,12,14,14,12,13,13,14,15,12,13,12,15,15,14,15,15,16,17,14,15,15,16,16,13,14,14,15,16,14,14,15,15,17,15,15,15,16,17,16,16,17,16,18,16,17,17,18,18,13,14,14,16,15,14,15,15,17,16,14,15,15,16,16,16,17,17,18,18,16,16,16,17,16,9,11,10,13,12,11,12,12,14,13,11,12,11,15,13,13,14,14,16,15,13,14,13,17,14,11,12,12,14,14,12,12,13,15,15,12,13,13,15,14,14,14,15,16,16,14,15,15,17,16,11,12,11,14,13,12,13,13,15,14,12,13,12,15,13,14,15,15,16,16,14,15,14,17,15,13,14,14,15,16,14,15,15,16,17,14,15,15,16,17,16,16,16,17,17,16,17,17,18,18,13,15,14,16,15,15,15,15,17,16,14,15,14,17,15,16,17,17,18,18,16,17,16,18,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,11,13,14,10,12,11,14,13,7,9,9,11,12,9,10,10,12,13,9,10,10,13,12,11,11,12,13,15,11,12,12,15,14,8,9,9,12,11,9,10,10,13,13,9,11,10,13,12,12,12,12,14,15,11,13,12,15,13,10,11,11,13,14,11,12,12,13,15,11,12,12,14,14,13,13,14,14,16,14,15,14,16,16,11,12,11,14,13,12,13,13,15,14,11,13,12,15,13,14,15,15,16,16,13,14,14,16,14,8,9,9,11,12,9,10,11,12,13,9,10,10,13,12,11,12,13,14,15,11,12,12,15,14,9,9,11,11,13,10,10,12,12,14,10,10,11,13,14,12,12,13,14,16,12,13,13,15,15,9,11,10,13,12,10,11,11,13,14,10,12,11,14,13,12,13,13,15,16,12,13,13,15,15,11,11,13,13,15,12,12,14,13,15,13,13,14,14,15,14,14,15,14,17,15,15,15,16,16,12,13,12,15,14,13,14,14,15,15,12,14,13,15,14,15,15,15,17,17,14,15,14,17,15,7,9,9,12,11,9,10,10,12,12,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,9,10,10,12,12,10,10,11,12,13,10,11,11,14,13,12,12,13,14,15,12,13,13,16,15,9,10,10,13,12,10,11,11,13,13,10,11,10,14,12,13,13,13,15,15,12,13,12,15,14,11,12,12,14,14,12,12,13,14,15,13,14,13,15,15,14,13,15,14,16,15,16,15,17,16,12,12,12,14,14,13,13,14,15,15,12,13,12,15,14,15,15,16,16,17,14,15,14,17,14,10,11,12,13,14,11,12,13,14,15,11,12,13,14,15,13,14,15,15,17,14,15,15,16,16,11,12,13,12,15,12,12,14,13,16,13,13,14,13,16,14,14,16,14,18,15,15,16,16,17,12,13,12,15,15,13,14,14,15,16,13,14,13,16,15,15,15,16,17,18,15,15,15,17,16,14,14,15,14,17,15,14,16,14,17,15,15,16,15,18,16,16,17,16,19,17,17,17,17,18,14,15,15,17,16,15,16,16,17,17,15,16,15,18,16,17,17,18,18,18,16,17,16,18,17,10,11,11,14,13,11,12,12,15,14,11,13,12,15,14,14,15,15,16,16,14,15,15,17,16,11,12,12,15,14,12,13,13,15,14,13,14,13,16,14,14,15,15,16,16,15,16,15,18,16,11,13,12,15,15,13,14,14,15,15,12,14,13,16,15,15,16,16,17,17,15,16,15,17,16,14,15,14,16,16,14,15,15,16,16,15,16,15,17,16,16,16,17,16,17,17,18,17,19,18,14,15,15,17,16,15,16,16,17,17,15,15,15,18,16,17,18,18,18,18,16,17,16,19,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,12,13,14,10,11,11,14,13,8,9,9,11,12,9,10,11,12,13,9,10,10,13,13,11,12,13,13,15,11,12,12,15,14,7,9,9,12,11,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,11,14,13,11,11,12,13,14,11,12,13,13,15,12,13,13,14,15,13,14,14,14,16,14,15,15,16,16,10,11,11,14,13,11,12,12,14,14,11,12,12,15,13,14,14,14,16,16,13,14,13,16,14,7,9,9,11,12,9,10,10,12,13,9,10,10,12,12,11,12,13,14,15,11,12,12,14,14,9,10,10,12,13,10,10,11,12,14,10,11,11,13,13,12,12,13,14,15,13,13,13,15,15,9,10,10,12,12,10,11,11,13,14,10,11,10,13,12,12,13,13,15,16,12,13,12,15,14,11,12,13,14,14,12,12,13,14,15,13,14,13,15,15,14,14,15,14,17,15,16,15,17,16,11,12,12,14,14,13,13,13,15,15,12,13,12,15,14,15,15,15,16,17,14,15,14,16,14,8,9,9,12,11,9,10,10,12,13,9,11,10,13,12,11,12,12,14,15,11,12,12,15,14,9,10,11,13,13,10,11,12,13,14,10,11,11,14,13,12,13,13,15,15,12,13,13,16,15,9,11,9,13,11,10,11,10,14,13,10,12,10,14,12,12,13,13,15,15,12,13,12,16,14,12,12,13,14,15,12,13,14,14,16,13,14,14,15,15,14,14,15,15,17,15,16,15,17,16,11,13,11,15,13,13,14,13,15,14,12,14,12,16,13,15,15,15,16,16,14,15,14,17,14,10,11,11,13,14,11,12,13,14,15,11,12,12,14,15,14,14,15,16,17,14,15,15,16,16,11,12,13,14,15,12,13,14,15,16,13,14,14,15,16,15,15,16,16,18,15,16,16,17,17,11,12,12,14,15,13,13,14,14,16,12,13,13,15,15,15,15,16,16,18,14,15,15,16,16,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,16,19,17,18,17,18,18,14,14,15,16,16,15,15,16,16,17,14,15,15,16,16,17,17,18,18,19,16,17,16,17,16,10,12,11,14,13,11,13,12,15,14,11,13,12,15,14,14,15,15,16,16,13,15,14,17,15,12,13,13,15,15,13,13,14,15,16,13,14,14,16,16,14,15,15,17,17,15,16,16,17,17,11,13,12,15,12,13,14,13,16,13,12,14,12,16,13,15,16,15,17,16,14,16,14,18,14,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,17,18,17,18,17,18,18,14,15,14,17,14,15,16,15,18,15,15,16,15,18,14,17,17,17,18,17,16,17,16,19,16,9,11,11,13,13,10,12,12,14,14,11,12,12,15,14,13,14,14,16,16,13,14,14,16,16,10,11,12,14,14,11,12,13,14,15,12,13,13,15,15,13,14,15,16,16,14,15,15,17,16,11,12,12,15,14,12,13,13,15,15,12,13,12,15,15,14,15,15,16,17,14,15,14,17,16,12,13,14,15,16,13,13,14,15,16,13,14,15,16,16,14,15,16,16,18,15,16,16,18,18,13,14,14,16,15,14,15,15,17,16,14,15,15,17,16,16,17,17,18,18,16,17,16,18,17,10,12,12,14,14,11,12,13,15,15,12,13,13,15,15,13,14,15,16,17,14,15,15,17,16,11,11,13,14,15,12,12,14,15,16,13,13,14,15,16,14,14,15,16,17,15,15,16,17,17,12,13,12,15,15,13,14,14,16,16,13,14,13,16,15,15,16,15,17,17,15,16,15,18,16,13,12,15,14,17,14,13,16,14,17,14,14,16,15,18,15,14,17,16,18,16,16,17,17,18,14,15,15,17,16,15,16,16,17,17,15,16,15,18,16,17,17,17,18,18,16,17,16,19,17,10,11,11,14,14,11,12,12,15,15,11,13,12,15,15,14,15,14,16,16,14,15,15,17,16,11,12,12,15,14,12,12,13,15,15,13,14,13,16,15,14,15,15,16,16,15,16,15,18,17,11,13,12,15,15,13,14,13,15,15,12,14,13,16,15,15,16,15,17,17,15,16,15,18,16,13,14,13,16,16,14,15,14,16,16,14,15,15,17,16,16,16,16,16,18,16,18,17,19,18,14,15,15,17,16,15,16,16,17,17,15,15,15,17,16,17,17,18,18,19,16,17,16,18,16,12,13,13,15,16,13,14,14,16,17,13,14,14,16,16,15,15,16,17,18,15,16,16,18,17,13,13,14,14,17,14,14,15,15,17,14,14,15,16,17,15,15,17,16,18,16,17,17,18,18,13,14,14,17,16,14,15,15,17,17,14,15,14,17,16,16,17,17,18,18,16,17,16,18,17,15,14,16,13,18,16,15,17,14,19,16,16,17,15,18,17,16,18,15,19,18,18,18,17,19,15,16,16,18,17,16,17,17,18,18,16,17,16,19,17,18,19,18,19,19,17,18,17,20,18,11,12,12,15,15,13,13,14,15,16,13,14,13,16,15,15,16,16,17,17,15,16,16,18,17,12,14,13,16,15,13,13,14,15,16,14,15,14,17,16,16,16,16,16,17,16,17,17,19,17,12,13,14,16,16,14,15,15,16,17,13,15,13,17,15,16,17,17,18,18,16,17,16,18,16,15,16,15,17,16,15,15,15,17,17,16,17,16,18,17,17,16,17,16,18,18,19,18,20,18,15,16,16,17,17,16,17,17,18,18,15,16,15,18,17,18,18,19,19,19,17,18,16,19,16,9,11,11,13,13,11,12,12,14,15,10,12,12,14,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,12,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,16,16,10,12,11,14,14,12,13,13,15,15,11,13,12,15,14,14,15,15,16,17,13,15,14,17,16,13,14,14,15,16,14,15,15,16,17,14,15,15,16,17,16,16,17,17,18,16,17,17,18,18,12,14,13,16,15,13,15,14,17,16,13,14,13,17,15,15,16,16,18,18,15,16,15,18,16,10,11,11,14,14,11,12,13,14,15,11,12,12,15,15,14,15,15,16,17,14,15,15,16,16,11,12,13,15,15,12,13,14,15,16,13,14,14,15,16,15,15,16,16,18,15,15,16,17,17,11,12,12,14,15,13,13,14,15,16,12,13,13,15,15,15,15,16,17,18,14,15,15,17,16,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,16,19,17,17,18,19,18,13,13,14,16,16,14,15,16,17,17,14,14,15,16,16,16,16,17,18,18,16,16,16,18,16,10,12,12,14,14,12,13,13,15,15,11,13,12,15,15,14,15,15,16,17,13,15,14,17,16,12,13,13,15,15,13,13,14,15,16,13,14,14,16,16,15,15,16,17,18,15,15,16,17,17,11,13,12,15,14,13,14,13,16,15,12,14,12,16,14,15,16,15,17,17,14,16,14,17,16,14,15,15,16,17,15,15,16,16,18,15,16,16,17,17,16,17,17,17,19,17,17,17,18,18,13,15,12,17,14,14,16,14,17,15,14,15,13,17,14,16,17,16,18,17,15,17,14,19,15,11,12,12,15,15,13,13,14,15,16,13,14,13,16,15,15,16,16,17,18,15,16,16,17,17,12,14,13,16,16,13,13,15,15,17,14,15,15,17,16,16,16,17,16,19,16,17,17,18,18,12,13,14,15,16,14,14,15,16,17,13,14,13,16,15,16,17,17,18,19,15,16,16,17,16,15,16,16,18,17,15,15,16,17,18,16,17,17,18,18,16,16,18,16,19,18,19,19,20,19,15,15,16,16,17,16,16,17,17,18,15,15,15,17,16,18,18,19,18,20,17,17,16,18,16,12,13,13,16,15,13,14,14,16,16,13,14,14,16,16,15,16,16,17,18,15,16,15,18,17,13,14,14,16,16,14,15,15,16,17,14,15,15,17,17,16,17,17,18,18,16,17,17,18,18,13,14,13,17,14,14,15,14,17,16,14,15,14,17,15,16,17,17,18,18,15,17,15,19,15,16,16,16,17,18,16,16,17,17,19,16,17,17,18,19,17,17,18,18,20,18,18,18,19,19,15,16,14,18,13,16,17,16,19,15,16,17,15,19,14,18,18,18,19,17,17,18,16,20,15,2,5,5,5,7,7,5,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,5,7,8,8,9,10,8,9,9,8,9,10,9,10,12,10,11,11,8,9,10,10,11,11,9,11,11,5,8,7,8,9,9,8,10,9,8,10,9,9,11,11,10,11,11,8,10,9,10,11,11,9,12,10,5,8,8,7,9,10,8,10,9,7,9,9,9,10,11,9,11,11,8,10,10,10,11,11,10,12,11,7,9,9,9,10,11,9,11,11,9,9,11,10,10,13,11,11,12,9,11,11,11,12,13,11,13,12,7,9,9,9,11,11,9,12,10,9,11,10,10,11,12,11,13,12,9,11,11,11,13,13,11,13,11,5,8,8,8,9,10,7,10,9,8,10,10,10,11,11,10,11,11,7,9,9,9,11,11,9,11,10,7,9,9,9,10,12,9,11,11,9,11,11,11,11,13,11,13,13,9,10,11,11,12,13,10,12,11,7,9,9,9,11,11,9,11,10,9,11,11,11,12,13,11,13,12,9,11,9,11,12,11,10,13,10,2,8,13,15,16,18,21,22,5,4,6,8,10,12,17,21,9,5,5,6,8,11,15,19,11,6,5,5,6,7,12,14,14,8,7,5,4,4,9,11,16,11,9,7,4,3,7,10,22,15,14,12,8,7,9,11,21,16,15,12,9,5,6,8,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,3,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,14,14,1,4,4,4,4,4,4,4,4,4,4,4,5,5,4,5,5,5,5,4,5,4,4,5,5,5,5,5,5,5,5,5,5,5,1,4,4,8,8,10,10,10,10,9,8,11,11,4,6,5,8,6,10,10,10,10,10,9,10,9,4,5,6,6,9,10,10,10,10,9,10,9,10,8,9,8,9,8,9,9,10,9,11,10,12,10,8,8,9,8,9,9,9,9,10,10,11,10,12,9,10,10,11,10,11,10,12,11,12,11,13,11,9,10,10,10,11,10,11,11,12,11,12,11,12,11,12,12,12,12,13,12,13,12,13,12,13,13,11,12,12,12,12,12,12,12,13,13,13,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,12,13,13,13,14,14,13,13,13,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,1,3,2,3,3,7,12,14,14,16,18,19,6,2,4,6,8,9,12,14,12,3,3,5,7,8,11,13,13,6,4,5,7,8,10,11,14,8,7,7,7,7,9,10,15,9,8,7,7,6,8,9,17,11,11,10,9,8,9,9,19,14,13,11,10,9,9,9,1,7,7,6,9,9,7,9,9,6,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,5,7,8,5,8,7,6,7,7,7,7,8,8,8,8,6,7,7,7,8,8,7,8,7,6,8,8,8,9,10,8,9,9,8,9,9,9,9,10,10,10,10,8,9,9,10,10,10,9,10,10,6,8,8,8,9,9,8,10,9,9,9,9,9,9,10,10,10,10,8,9,9,10,10,10,9,10,9,6,8,9,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,7,8,9,8,9,9,9,9,9,8,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,7,9,9,9,10,10,9,10,10,9,10,9,9,9,10,10,10,10,9,10,9,10,10,10,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,7,9,9,9,10,10,9,10,9,9,9,10,10,9,10,10,10,10,9,9,9,10,10,10,9,10,9,7,9,8,8,9,9,8,9,9,9,9,9,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,1,5,5,5,7,9,5,9,7,5,7,8,7,7,10,9,9,10,5,8,7,9,10,9,7,10,7,6,9,9,9,10,12,10,12,11,9,10,11,11,10,13,12,12,13,10,11,11,12,13,13,11,13,11,6,9,9,10,11,12,9,12,11,10,11,11,11,11,13,12,13,13,9,11,10,12,13,13,11,13,10,6,9,10,9,11,12,10,12,11,9,10,11,10,10,13,11,13,13,10,11,11,12,13,12,11,13,11,7,9,10,9,10,12,10,11,11,10,10,11,10,10,12,12,11,12,10,11,10,12,12,12,10,12,10,7,10,10,11,11,13,11,13,11,10,12,11,11,10,13,13,14,13,10,11,12,13,13,14,11,13,10,6,10,9,10,11,12,9,12,11,9,11,11,11,11,13,12,12,13,9,11,10,12,13,13,10,13,10,7,10,10,11,11,14,11,13,11,10,12,11,11,10,14,13,14,13,10,11,12,13,13,14,11,13,10,7,10,9,10,10,12,9,12,10,10,11,11,10,10,12,12,12,12,9,11,10,11,12,12,10,12,9,2,3,3,3,3,3,3,1,6,6,10,10,6,7,9,11,13,5,9,7,13,11,8,11,12,13,15,8,12,11,15,13,6,7,8,11,11,7,8,10,11,13,9,10,10,13,13,11,11,13,12,16,12,13,13,16,15,6,8,7,11,11,9,10,10,13,13,7,10,7,13,11,12,13,13,15,16,11,13,11,16,12,10,11,11,11,13,11,11,13,12,15,13,13,13,14,15,13,12,15,12,17,15,16,16,16,16,10,11,11,14,11,13,13,13,15,14,11,13,11,15,12,15,15,16,16,16,13,15,12,17,12,6,8,9,12,12,9,10,12,13,15,9,11,11,15,14,12,13,15,16,18,13,14,14,17,16,9,10,11,13,14,11,10,13,14,16,11,12,12,15,15,14,13,16,15,18,14,15,15,17,17,9,11,11,14,14,11,12,13,15,16,11,13,11,15,14,15,15,15,17,18,14,15,14,17,15,13,14,14,15,16,14,14,15,15,17,15,16,15,17,17,16,16,17,15,19,17,18,18,19,18,13,14,14,16,15,15,15,16,17,17,14,15,14,18,15,17,17,17,19,19,16,17,15,19,16,6,9,8,13,12,9,11,11,14,15,9,12,10,15,13,13,14,14,16,17,12,15,13,18,16,9,11,11,14,14,11,11,13,14,15,11,13,12,16,15,14,14,15,15,18,14,15,15,18,17,9,11,10,14,13,11,12,12,15,15,11,13,10,16,14,14,15,15,16,18,14,16,13,18,15,13,14,14,16,16,14,14,15,15,17,15,16,15,17,17,16,16,17,16,19,17,18,17,18,19,13,14,14,16,15,15,15,15,17,17,14,15,14,17,15,17,17,17,18,19,16,17,15,19,15,11,13,13,15,16,13,14,15,16,18,14,15,15,17,17,16,16,18,18,20,17,18,17,19,20,13,14,14,16,17,15,15,16,17,18,15,16,16,17,17,18,17,19,18,19,18,18,18,19,21,14,14,15,16,17,15,15,16,18,18,15,16,16,17,18,18,18,19,19,21,18,19,19,22,20,16,16,17,17,19,17,17,17,18,20,17,18,18,20,19,19,19,20,19,0,19,19,20,20,21,17,17,17,19,18,18,18,20,19,19,18,18,18,20,20,19,19,20,20,20,20,21,20,21,19,11,13,13,16,15,14,15,15,17,17,14,15,14,18,16,16,18,18,20,19,16,19,17,21,18,13,14,15,16,17,15,15,16,18,18,15,16,15,19,18,18,18,18,19,19,18,18,18,22,20,13,14,14,16,16,15,16,16,18,17,15,16,15,18,17,18,18,18,19,19,17,18,17,21,18,16,17,17,18,18,17,18,19,19,19,18,20,18,19,19,19,20,21,19,21,20,20,20,0,21,16,17,17,19,19,18,18,18,19,21,17,18,18,19,18,20,19,21,20,21,19,20,20,22,19,7,9,9,13,13,8,10,11,14,15,9,12,11,15,14,11,13,14,16,17,13,15,14,17,16,8,10,11,14,14,10,10,12,14,16,11,12,12,16,15,13,12,15,15,18,14,15,15,19,17,9,11,11,14,14,11,12,12,15,15,11,13,11,16,14,14,15,14,17,17,14,16,14,18,15,12,13,14,15,16,13,13,15,14,17,15,15,15,17,17,15,14,17,14,19,17,18,18,19,18,13,14,14,16,16,15,15,15,17,17,14,15,14,18,15,17,18,17,18,17,16,18,16,19,15,7,10,10,13,13,9,10,12,14,15,10,12,11,15,14,12,13,14,16,17,13,15,14,18,16,10,10,12,13,14,10,10,13,13,16,12,12,13,15,15,13,12,15,15,18,15,15,16,18,17,10,11,11,14,14,12,13,13,15,16,10,13,10,16,14,14,15,15,17,17,14,15,13,17,15,13,13,14,15,16,14,13,15,14,18,15,15,16,16,17,16,15,18,15,18,17,18,18,18,18,13,15,14,17,16,15,16,16,17,17,14,15,13,17,15,17,17,18,18,18,16,17,14,20,14,8,10,10,14,14,11,11,13,14,16,11,13,11,16,14,14,15,16,16,18,14,16,15,18,16,10,12,11,15,14,11,11,13,14,16,13,14,13,16,15,15,14,16,15,19,16,17,16,20,18,10,11,12,14,15,13,13,14,16,16,11,14,11,16,14,16,16,17,18,19,15,17,14,20,15,14,15,14,17,16,13,14,15,15,18,16,17,16,19,18,16,15,18,15,19,18,19,18,21,21,14,14,15,16,17,16,16,17,18,18,13,15,14,17,15,18,18,19,18,22,16,18,15,21,15,12,13,14,16,16,14,14,16,16,18,14,15,15,17,18,16,16,18,18,20,18,18,17,20,20,13,14,15,15,17,15,14,16,16,18,16,16,16,17,19,17,15,18,17,21,18,18,18,19,19,14,15,15,18,17,15,16,16,18,19,15,16,15,18,18,17,18,18,20,21,17,19,17,20,19,16,16,17,16,19,17,17,18,17,20,18,18,18,18,19,19,18,20,17,22,20,20,19,20,20,17,17,18,18,19,18,18,20,21,20,17,18,17,20,20,21,21,21,21,21,19,21,18,22,20,11,13,13,17,16,14,14,16,16,18,14,16,14,18,16,17,18,19,19,20,18,19,18,21,19,14,15,14,17,16,14,14,16,18,18,16,17,16,18,17,18,17,19,18,20,19,19,18,20,20,13,14,15,16,17,16,16,17,18,19,14,16,14,19,17,18,19,18,20,20,18,20,17,21,18,17,17,17,19,18,16,17,18,18,19,18,19,18,21,21,18,18,20,17,21,19,20,20,22,21,16,17,18,18,19,18,18,19,21,20,16,17,17,20,18,21,21,22,21,22,18,21,18,0,18,7,9,9,13,13,9,11,12,14,15,8,11,10,15,14,13,14,15,16,18,11,14,13,17,15,9,11,11,14,14,11,11,13,14,16,11,12,12,15,15,14,14,16,15,18,14,14,15,17,17,8,11,10,14,14,11,12,12,15,15,10,12,10,16,14,14,15,15,17,18,13,15,12,18,15,13,14,14,16,16,14,14,15,15,17,15,15,15,16,17,16,15,17,15,19,17,17,17,18,18,12,14,13,16,15,15,15,15,17,17,13,15,13,17,14,17,18,18,18,19,15,17,14,19,14,8,10,10,14,14,11,11,13,14,16,11,13,11,16,14,14,15,16,17,19,14,16,15,18,17,10,12,11,15,14,11,11,14,14,17,13,14,13,17,15,15,14,17,15,19,16,17,16,19,17,10,11,12,14,15,13,13,14,15,17,11,13,11,17,14,16,16,17,18,19,15,16,14,18,15,14,15,14,16,16,13,14,15,15,18,16,16,16,18,18,16,15,18,15,20,18,19,18,21,18,14,14,15,16,17,16,16,17,17,18,13,15,14,17,16,19,19,19,19,19,15,18,15,20,15,7,10,10,13,13,10,11,12,14,15,9,12,10,15,14,13,14,15,16,17,12,15,13,17,16,10,11,11,14,14,10,10,13,14,16,12,13,13,16,15,14,13,16,15,18,15,15,16,17,17,10,12,10,14,13,12,13,12,15,15,10,13,10,16,13,15,16,15,17,18,13,16,12,18,15,13,14,14,16,17,14,13,15,15,18,15,16,15,17,17,16,14,17,15,19,17,18,18,19,19,13,15,13,17,14,15,15,15,18,17,14,15,13,17,14,18,17,18,18,19,15,17,15,19,15,11,13,13,16,17,14,14,16,16,18,14,16,15,18,17,17,18,19,18,21,18,18,17,20,18,13,15,14,17,16,14,14,16,17,18,16,17,16,19,17,18,17,19,18,22,18,19,19,21,21,13,14,15,16,18,16,16,17,17,20,14,16,14,18,17,18,18,19,19,21,17,18,17,21,18,17,18,17,19,18,16,17,17,18,19,18,18,18,22,22,18,17,19,17,0,20,21,19,21,20,17,17,18,18,21,18,18,18,19,21,17,17,17,19,19,20,20,22,21,21,19,20,18,20,17,12,14,13,17,16,14,15,15,17,18,14,16,14,18,16,17,18,18,21,20,16,18,16,21,18,14,15,15,17,17,15,15,16,18,18,15,17,16,18,18,17,17,19,19,20,18,19,18,20,19,14,15,14,17,15,15,16,16,18,17,15,16,14,19,15,18,18,18,19,20,17,20,15,21,17,16,17,18,18,19,17,17,18,18,20,18,19,18,19,21,19,18,19,19,21,20,0,19,21,20,16,17,16,19,16,18,18,18,19,19,17,18,17,20,17,19,20,20,22,0,19,20,17,21,17,11,13,14,16,17,14,15,15,17,18,14,15,15,18,18,16,17,17,19,20,16,18,17,19,21,13,14,15,17,17,14,15,16,17,19,15,16,16,18,19,16,17,18,19,21,17,18,20,21,21,13,15,15,17,17,15,16,16,18,19,15,16,16,18,19,17,17,18,19,22,17,19,18,22,19,15,16,17,19,19,16,17,18,18,20,17,18,18,19,20,19,18,20,18,22,20,19,19,22,21,16,17,17,18,19,18,18,18,19,20,17,18,18,20,19,20,19,20,22,20,19,20,21,21,20,12,14,14,16,16,13,14,16,17,18,14,16,15,18,18,15,17,17,19,19,17,18,18,19,19,13,14,15,16,17,14,14,16,16,20,15,16,16,17,19,16,15,18,17,20,18,17,19,19,19,14,15,15,17,17,16,16,16,18,18,15,16,15,19,18,17,18,18,20,21,17,18,17,21,18,16,15,17,17,19,17,15,18,17,20,19,17,18,19,20,18,16,19,17,22,20,19,20,19,20,17,17,18,19,19,18,18,19,20,20,17,18,17,18,18,21,21,20,20,21,18,20,17,21,19,11,14,14,16,17,15,14,16,17,19,14,16,14,18,17,18,18,19,19,21,17,19,18,20,20,13,15,14,17,17,14,14,16,17,18,16,17,16,19,18,18,17,19,18,20,18,21,18,20,20,13,15,15,16,17,16,16,17,18,19,14,16,15,19,18,19,19,19,21,20,18,19,17,20,18,16,17,16,19,18,16,17,17,19,20,17,19,18,20,19,18,17,21,18,0,21,20,20,0,20,17,17,18,18,19,18,19,19,20,22,16,17,17,20,18,21,22,20,20,22,18,22,18,22,18,12,14,14,17,17,14,15,16,17,19,14,16,15,17,17,17,17,18,18,21,17,19,17,20,19,14,15,15,16,18,15,14,16,16,19,16,17,16,19,18,17,16,20,17,20,18,20,19,19,20,14,15,15,18,17,16,16,17,18,19,14,16,15,19,17,18,21,18,19,21,17,18,17,19,18,17,17,18,17,20,17,16,18,17,21,18,19,19,19,19,18,17,19,17,20,20,21,20,21,20,17,17,17,19,19,19,18,18,20,21,16,18,16,19,18,20,20,21,21,20,18,19,16,0,17,12,14,14,17,17,15,15,18,17,19,15,18,15,20,16,20,19,21,18,22,20,20,20,22,19,14,16,14,20,17,14,15,17,17,20,18,18,17,20,18,18,17,19,17,21,20,21,20,0,21,14,15,16,17,19,18,17,19,18,21,14,18,15,21,17,21,20,21,20,0,18,21,17,21,17,18,19,17,20,18,16,17,17,19,19,19,21,20,0,20,18,17,21,17,0,22,0,21,0,22,17,17,19,18,20,20,20,21,19,22,16,17,18,20,18,22,22,0,22,0,17,21,17,22,17,11,14,13,16,16,14,15,15,17,18,14,15,14,18,17,17,18,18,19,20,16,17,17,21,19,13,14,15,17,17,15,16,16,18,18,15,16,16,19,18,18,18,18,19,20,17,18,18,20,19,13,15,14,17,17,15,16,16,17,18,14,16,15,19,17,17,18,19,21,21,17,18,17,20,18,16,17,17,19,19,17,18,19,19,20,18,19,18,21,21,21,20,19,21,22,20,20,19,21,20,15,17,16,19,19,17,18,18,20,21,16,18,17,20,18,19,19,21,21,21,19,19,19,20,18,11,14,13,17,16,14,14,16,16,19,14,16,15,19,16,18,18,18,19,22,17,18,17,20,19,13,15,14,17,17,15,15,16,17,19,16,17,16,20,18,18,17,19,18,21,19,19,18,22,0,13,14,15,17,18,16,16,17,17,19,14,16,15,19,18,18,19,19,20,21,18,18,17,20,18,17,18,17,20,18,16,17,17,18,20,18,19,18,20,20,18,18,21,17,21,20,21,21,0,19,16,16,18,18,19,19,18,20,19,20,16,17,17,20,18,21,20,21,22,22,18,20,17,21,17,12,14,14,17,16,14,15,16,18,18,13,15,14,18,17,17,18,18,19,19,15,17,16,19,19,14,15,15,17,17,15,15,16,18,19,15,16,16,19,18,17,17,18,18,20,18,18,18,21,20,13,15,14,17,16,15,16,15,18,18,14,16,14,18,17,18,18,18,19,21,16,18,16,20,17,17,18,17,18,19,17,17,18,18,19,18,19,19,21,19,19,18,20,18,21,21,20,20,21,20,16,17,15,20,17,17,19,17,19,19,17,18,15,20,17,19,20,19,21,22,17,20,16,0,17,12,14,14,17,18,16,15,18,16,20,16,18,15,21,17,20,18,21,19,22,19,21,19,0,19,14,16,15,19,17,14,15,17,16,21,18,19,18,21,17,19,17,21,17,22,20,21,21,0,21,14,15,16,17,19,18,17,19,18,21,14,17,15,20,17,21,22,21,20,22,18,21,17,21,17,17,19,17,21,18,16,17,17,19,20,19,21,20,21,20,17,18,20,17,21,0,22,20,21,22,17,17,20,18,21,21,20,22,20,21,16,17,17,21,19,0,22,0,21,21,18,22,17,21,17,12,14,14,17,16,14,15,16,17,18,14,16,15,18,17,17,17,20,19,20,16,18,17,21,18,14,15,15,17,17,14,15,16,17,19,16,17,16,18,18,17,16,19,18,19,18,19,18,21,20,14,15,15,18,17,16,16,16,19,18,15,16,14,20,16,18,18,19,19,20,16,19,16,21,17,17,17,18,19,19,16,16,18,18,19,19,19,18,20,20,18,16,19,18,20,22,21,20,19,20,16,18,17,20,16,18,19,18,19,18,16,18,16,20,17,21,20,21,20,20,18,19,17,21,16,5,7,7,10,10,7,8,9,10,11,7,9,8,11,10,9,10,10,11,11,9,10,10,11,11,7,9,9,10,10,8,9,10,10,11,9,10,10,11,11,10,10,11,11,11,10,11,11,12,12,7,9,9,10,10,9,10,10,11,11,8,10,9,11,10,10,11,11,11,11,10,11,10,11,11,10,10,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,12,10,10,10,11,11,10,11,11,11,11,10,11,10,11,11,11,12,11,12,12,11,12,11,12,11,8,9,9,11,11,9,10,10,11,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,9,9,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,13,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,13,12,12,12,12,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,9,9,11,11,9,10,10,11,11,9,10,10,12,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,10,11,11,12,11,11,12,12,12,11,11,12,12,12,11,11,12,12,13,12,12,12,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,8,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,12,12,12,10,11,10,12,12,10,10,11,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,10,11,11,12,12,11,12,12,12,12,10,12,11,12,12,12,12,12,13,13,12,13,12,13,12,11,12,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,13,11,12,12,12,12,12,12,12,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,11,12,12,12,12,12,13,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,12,12,13,12,12,13,12,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,9,9,11,11,9,10,10,11,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,8,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,12,10,11,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,10,10,11,12,12,11,12,12,12,12,10,11,10,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,11,12,12,13,12,12,13,13,13,13,12,13,12,13,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,13,12,12,12,13,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,12,12,12,12,12,12,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,13,13,13,13,11,12,11,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,12,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,12,13,13,13,12,13,13,13,13,11,12,12,12,13,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,11,12,12,12,12,12,12,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,13,13,13,12,13,12,13,13,11,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,13,12,13,13,12,12,12,13,12,13,13,13,13,13,12,13,12,13,13,12,12,12,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,11,12,12,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,13,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,13,13,13,13,12,13,12,13,13,11,12,12,13,13,12,12,12], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+470831);\n/* memory initializer */ allocatei8\", ALLOC_NONE, Runtime.GLOBAL_BASE+481071);\n/* memory initializer */ allocate([9,12,12,18,10,10,13,13,18,14,14,12,12,18,11,11,13,13,18,14,14,13,13,18,10,10,12,12,17,11,11,12,12,18,14,14,12,12,18,14,14,13,13,18,14,14,13,13,19,14,15,12,12,18,14,14,12,12,18,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,16,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,12,14,15,15,12,12,13,15,15,11,11,14,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,16,16,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,14,15,12,12,15,15,15,12,12,15,16,16,12,12,15,15,15,12,12,14,15,15,12,12,15,15,15,12,12,13,13,13,11,11,14,14,15,11,11,14,14,14,12,12,14,15,15,10,10,15,15,15,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,14,15,15,12,12,14,14,15,11,11,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,15,15,10,10,14,15,15,11,11,15,15,15,10,10,15,15,15,12,12,15,15,15,14,14,15,15,15,11,11,15,15,15,11,11,15,15,15,11,11,14,10,10,10,10,15,9,9,12,11,15,10,10,12,12,15,11,11,11,11,15,13,13,12,12,16,10,10,12,12,15,13,13,12,12,15,9,9,11,11,15,10,10,13,12,15,13,13,11,11,15,10,10,12,12,15,13,13,12,12,15,9,9,11,11,15,10,10,12,12,15,13,13,11,11,15,11,11,12,12,15,13,13,13,13,15,10,10,11,11,15,11,11,12,12,15,13,14,11,11,15,14,14,13,13,16,14,14,20,19,15,14,14,11,11,15,13,14,12,12,15,14,14,11,11,14,13,13,10,10,14,14,13,11,11,15,13,14,12,12,15,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,15,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,14,14,11,11,15,15,15,12,12,15,15,15,13,13,16,14,14,12,12,15,15,15,13,13,15,15,15,12,12,15,15,15,12,12,14,10,10,13,13,17,9,9,12,12,17,9,9,13,13,17,11,11,12,12,18,14,14,12,12,18,10,10,13,13,18,14,13,12,12,18,9,9,12,12,18,10,10,12,13,18,14,14,12,12,17,9,9,12,12,17,13,14,12,12,17,9,9,12,12,17,10,10,12,12,17,14,14,11,11,18,11,11,12,12,18,14,14,12,13,18,10,10,12,12,18,11,11,12,12,18,14,14,11,11,18,15,15,12,12,18,14,14,13,13,18,14,15,12,12,17,14,14,12,12,17,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,14,15,15,11,11,14,15,15,12,12,14,15,15,11,11,15,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,15,16,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,12,12,15,16,16,12,12,15,15,15,12,12,15,15,15,12,12,15,15,15,12,12,13,13,13,12,12,14,14,14,11,11,14,14,14,12,12,14,14,14,10,10,15,15,15,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,14,14,12,12,15,15,14,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,14,14,11,11,15,14,14,10,10,14,15,15,12,12,14,14,14,12,12,14,15,15,10,10,14,15,15,11,11,15,15,15,10,10,15,15,15,12,12,15,14,14,13,13,15,15,15,10,10,15,14,14,11,11,15,15,15,10,10,14,10,10,10,10,14,9,9,12,12,15,10,10,12,12,14,11,11,11,11,15,13,14,12,12,15,10,10,13,13,15,13,13,12,12,15,9,9,12,12,15,10,10,13,13,15,13,14,11,11,15,10,10,12,12,15,13,13,12,12,15,9,9,11,11,15,10,10,12,12,15,13,13,11,11,15,11,11,12,12,15,13,13,13,13,15,10,10,11,11,15,11,11,12,12,15,14,14,11,11,15,14,14,13,13,15,14,14,20,19,15,14,14,11,11,15,14,14,12,12,15,14,14,11,11,14,13,13,11,11,15,13,13,11,11,15,14,13,12,12,15,14,14,11,12,15,14,14,11,11,15,14,14,12,12,14,14,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,14,14,11,11,14,14,14,12,12,15,15,15,13,13,16,14,14,12,12,15,15,15,13,13,15,14,14,12,12,15,15,15,12,12,15,11,11,13,13,18,10,10,12,12,17,11,11,12,12,18,12,12,11,11,18,14,14,12,12,18,10,10,13,13,18,14,14,12,12,18,10,10,12,12,18,11,11,12,12,18,14,14,12,12,18,11,11,12,13,18,14,14,12,12,18,10,10,12,12,18,11,11,12,12,18,14,14,11,11,18,11,11,12,12,18,14,14,12,12,17,10,10,11,11,17,12,12,11,11,17,14,14,11,11,18,15,15,12,12,18,14,14,13,13,18,15,15,11,11,18,15,14,12,12,18,15,15,11,11,14,8,8,11,11,14,15,15,10,10,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,11,11,15,15,15,12,12,14,15,15,10,10,15,15,15,11,11,15,15,15,12,12,15,15,15,11,11,15,15,15,13,13,14,15,15,10,10,15,15,15,11,11,15,15,15,12,12,15,15,15,12,12,15,16,16,12,12,15,14,14,11,11,15,15,15,11,11,15,15,15,12,12,16,15,15,13,13,15,16,16,13,13,16,15,15,12,12,15,15,15,12,12,15,15,15,12,12,14,13,13,11,11,14,14,14,11,11,14,14,14,12,12,15,14,14,11,11,15,15,14,11,11,15,14,14,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,12,12,15,14,14,11,11,15,14,15,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,11,11,15,14,14,11,11,15,15,14,12,12,15,14,14,12,12,15,15,15,10,11,15,14,14,11,11,15,15,15,10,10,15,15,15,12,12,16,14,14,13,13,15,15,15,11,11,15,14,14,11,11,15,15,15,11,11,14,11,11,9,9,14,10,10,12,12,15,11,11,12,12,15,12,12,12,12,15,14,14,13,13,15,11,11,12,12,15,14,14,13,13,14,10,10,12,12,15,11,11,13,13,15,14,14,12,12,15,10,10,12,12,14,14,14,13,13,14,10,10,11,11,15,11,11,12,12,15,14,14,12,12,15,12,12,13,13,15,14,14,14,14,15,11,11,11,11,15,12,11,12,12,15,14,14,11,11,15,15,15,13,14,15,14,14,20,19,15,14,14,12,12,15,14,14,13,13,15,14,14,12,12,14,13,13,10,10,14,13,13,11,11,14,13,13,11,11,15,14,14,12,12,15,14,14,12,12,15,14,14,12,11,14,14,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,14,14,15,14,14,11,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,15,14,14,14,14,15,14,14,12,12,15,14,14,13,13,15,14,14,11,11,14,14,14,12,12,15,14,14,13,13,15,15,15,13,13,15,14,14,13,13,15,15,15,13,13,15,14,14,13,13,15,15,15,13,13,15,14,14,13,13,18,15,15,12,12,18,15,15,12,12,18,16,16,11,11,18,17,17,12,12,18,15,15,13,13,18,17,17,12,12,18,15,15,12,12,18,15,16,12,12,18,17,17,12,12,18,15,15,13,12,17,16,17,12,12,17,15,15,11,12,18,15,15,12,12,18,17,17,11,11,18,16,16,12,12,18,17,16,12,12,18,15,15,11,11,18,15,15,12,12,18,17,17,11,11,18,17,17,12,12,18,16,16,13,13,18,17,17,11,11,17,16,16,11,11,18,17,17,11,11,15,15,15,11,11,16,15,15,11,11,16,15,15,11,11,16,15,15,12,12,17,15,15,14,14,16,15,15,11,11,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,18,15,15,13,13,16,15,15,11,11,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,17,15,15,13,13,16,15,15,12,12,17,16,15,14,14,16,15,15,11,11,16,15,15,12,12,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,18,14,15,13,13,18,15,15,14,14,18,15,15,13,13,15,13,13,12,12,15,14,14,12,12,16,14,14,12,12,16,14,14,12,12,17,14,15,12,12,16,14,14,12,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,17,14,14,12,12,16,14,14,12,12,17,14,14,13,13,15,15,15,11,11,16,14,14,12,12,17,14,14,12,12,16,15,15,12,12,17,14,14,13,12,16,15,15,11,11,16,14,14,12,12,17,15,15,11,11,17,15,15,13,13,17,14,14,13,13,18,15,15,12,12,17,14,14,12,12,17,15,15,12,12,14,15,15,9,9,14,15,15,12,12,15,16,15,13,13,15,15,15,14,14,15,15,15,21,19,15,15,15,13,13,15,15,15,19,19,15,15,15,12,12,15,16,16,14,14,15,15,15,19,19,15,16,15,13,13,15,16,16,19,20,15,15,15,12,13,15,16,16,14,14,15,15,15,20,19,15,15,15,14,14,15,16,16,19,19,15,15,15,14,13,15,15,15,14,14,15,15,15,19,19,15,16,16,20,19,15,17,16,21,20,15,15,15,20,19,15,16,16,20,20,15,15,15,19,20,14,13,13,10,10,14,14,14,11,11,14,14,14,12,12,15,14,14,13,13,15,15,14,20,20,15,14,14,12,12,14,14,14,19,19,15,14,14,11,11,15,14,14,12,12,15,14,14,20,19,15,14,14,12,12,14,14,14,20,20,14,14,14,11,11,15,14,14,12,12,15,14,14,20,21,15,14,14,13,13,15,14,14,20,20,15,14,14,12,12,15,14,14,13,13,14,15,15,20,20,15,15,15,20,19,15,14,14,20,19,15,15,15,20,20,15,14,14,21,20,15,15,15,20,20,1,6,6,6,7,7,7,8,8,7,8,8,10,11,11,9,8,8,8,8,8,11,11,12,9,8,8,5,7,7,9,11,11,10,11,11,10,11,11,12,14,14,11,12,12,10,12,12,13,14,14,12,12,12,5,6,6,7,6,6,8,7,7,8,7,7,11,10,10,10,7,7,9,8,8,12,11,11,10,7,7,7,7,7,11,10,10,12,10,10,11,10,10,15,13,13,13,10,10,12,11,11,15,13,13,14,11,11,7,7,7,11,11,11,12,11,11,12,11,11,14,14,14,13,12,12,12,12,12,16,15,15,14,12,12,0,10,10,0,11,11,0,12,12,0,11,11,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,7,8,8,12,11,10,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,12,11,11,12,11,11,15,14,14,14,12,12,13,12,12,15,14,14,15,13,13,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,13,13,0,15,14,0,12,12,3,5,5,0,8,8,0,8,8,0,9,9,0,10,10,0,8,8,0,8,8,0,10,10,0,8,8,0,7,7,0,8,8,0,7,7,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,7,7,0,6,6,0,7,7,0,7,7,0,10,10,0,6,6,0,7,7,0,10,10,0,5,5,0,8,8,0,7,7,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,0,6,6,0,9,10,0,10,10,0,10,10,0,11,11,0,9,9,0,10,10,0,11,11,0,9,9,0,8,8,0,8,8,0,8,8,0,9,9,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,0,8,8,0,7,7,0,7,7,0,8,8,0,9,9,0,7,7,0,7,7,0,8,8,0,6,6,0,6,6,0,10,10,0,10,10,0,10,10,0,12,12,0,9,9,0,10,10,0,12,12,0,9,9,0,8,8,0,7,7,0,7,7,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,6,6,1,6,6,5,7,8,0,8,8,6,9,9,7,10,10,0,8,8,0,9,9,0,12,12,0,8,8,4,7,7,6,10,10,0,12,12,7,11,11,8,12,12,0,12,12,0,13,12,0,15,15,0,12,12,0,7,7,0,7,7,0,7,7,0,8,8,0,10,10,0,7,7,0,8,8,0,11,11,0,7,7,5,7,7,8,9,9,0,10,10,8,9,9,11,11,11,0,10,9,0,11,11,0,13,13,0,10,10,6,7,7,8,10,10,0,12,12,9,10,10,10,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,10,10,0,11,11,0,11,11,0,11,11,0,13,13,0,11,11,0,11,11,0,15,15,0,10,10,0,8,8,0,10,10,0,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,11,11,0,7,7,0,10,10,0,12,12,0,10,10,0,12,12,0,12,12,0,13,13,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,9,9,0,0,0,8,8,0,0,0,9,9,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,5,5,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,7,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,7,7,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,9,9,0,0,0,10,10,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,11,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,8,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,16,9,9,13,18,21,4,2,21,6,6,10,15,21,16,19,6,5,7,10,13,16,8,6,5,4,4,8,13,16,8,5,6,4,4,7,12,15,13,10,9,7,7,9,13,16,18,15,13,12,9,7,10,14,21,18,13,13,7,5,8,12,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,4,4,4,4,4,4,4,4,3,4,4,5,5,4,4,5,5,5,4,5,4,5,5,5,5,6,5,6,5,6,5,6,5,1,4,4,8,8,8,8,9,9,10,10,10,10,4,6,5,8,7,9,9,9,9,10,9,11,9,4,5,6,7,8,9,9,9,9,9,10,9,10,8,9,8,9,8,10,9,11,9,12,10,12,10,8,8,9,8,9,9,10,9,11,10,12,10,12,9,10,10,11,10,12,11,12,11,12,12,12,12,9,10,10,11,11,11,11,11,12,12,12,12,12,10,11,11,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,13,12,13,12,13,12,12,11,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,12,13,12,12,12,13,12,13,12,13,12,13,12,13,12,12,12,1,3,2,3,3,4,13,9,9,12,15,17,4,2,18,5,7,10,14,18,11,8,6,5,6,8,11,14,8,5,5,3,5,8,11,13,9,6,7,5,5,7,9,10,11,10,9,8,6,6,8,10,14,14,11,11,9,8,9,10,17,17,14,13,10,9,10,10,1,9,9,6,9,9,5,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,7,7,7,7,7,7,7,8,8,9,9,9,9,7,7,8,8,8,9,9,9,9,7,8,6,7,7,8,8,8,8,8,8,9,8,8,10,9,9,10,8,8,10,8,8,10,9,9,10,8,8,6,6,6,8,6,6,8,7,7,8,7,7,10,8,8,9,7,7,9,7,7,10,8,9,9,7,7,7,7,7,10,8,8,11,8,8,10,8,8,12,9,9,12,8,8,11,9,9,12,9,9,11,8,8,7,7,7,10,9,9,10,9,9,10,9,9,11,10,10,10,9,9,11,9,9,11,10,10,11,9,9,9,8,8,10,9,9,10,9,9,11,9,9,11,10,10,11,9,9,11,9,9,11,10,10,11,9,9,8,8,8,11,9,9,11,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,9,12,8,8,8,7,7,10,9,9,10,9,9,11,9,9,11,11,11,11,9,9,11,10,10,11,11,11,11,9,9,10,9,9,11,9,9,11,9,10,11,10,9,11,10,10,11,9,9,11,9,10,11,10,10,11,9,9,1,6,6,7,7,7,7,8,8,7,9,9,11,11,11,9,8,8,8,9,9,12,11,11,9,8,8,6,7,7,10,11,10,10,10,10,11,11,10,14,13,14,12,11,11,11,11,11,15,14,14,13,12,12,5,6,6,8,5,5,8,7,7,8,8,8,12,10,10,9,7,7,9,7,8,12,10,10,10,7,7,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,10,10,11,10,10,16,13,14,14,10,10,7,7,7,12,11,11,12,11,11,11,11,11,16,15,15,14,12,12,12,11,11,16,15,16,14,12,12,10,9,9,14,11,11,13,11,11,12,11,11,16,14,14,14,11,11,12,11,11,17,15,15,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,16,14,13,14,10,10,12,10,10,17,14,14,14,10,10,8,7,7,13,11,11,12,11,11,12,11,11,16,15,14,14,12,12,12,11,11,16,15,14,15,12,12,11,10,10,13,11,11,13,12,11,13,11,11,17,14,14,14,11,11,13,11,11,17,14,15,14,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,7,7,14,14,7,7,7,15,15,0,12,12,15,15,0,13,13,15,15,7,8,8,15,15,10,10,10,16,16,9,8,8,15,15,0,13,13,18,17,0,13,13,16,16,8,8,8,15,15,12,11,11,16,16,9,8,8,15,15,0,13,13,18,18,0,13,13,16,16,0,14,14,17,17,0,20,0,19,20,0,12,12,16,16,0,16,16,20,22,0,14,14,16,16,0,14,14,17,17,0,20,22,20,19,0,13,13,15,16,0,17,18,0,21,0,15,15,16,16,5,7,7,13,13,8,9,9,14,14,10,10,10,14,14,0,20,22,18,18,0,22,21,18,17,9,10,10,14,14,12,12,12,17,17,12,10,10,14,14,0,0,20,17,17,0,22,21,17,18,11,10,10,14,14,14,13,13,18,18,12,11,11,14,14,0,22,21,18,19,0,20,0,17,17,0,22,0,18,18,0,0,0,0,0,0,20,20,17,17,0,22,0,22,21,0,21,0,19,18,0,22,22,18,18,0,0,0,0,0,0,21,0,17,17,0,22,0,20,20,0,0,0,19,18,6,6,6,12,12,8,6,6,10,10,8,6,6,13,12,0,10,10,11,11,0,11,11,13,13,8,7,7,13,13,11,9,9,13,13,10,6,6,12,12,0,10,10,14,14,0,10,10,13,13,9,7,7,13,13,12,10,10,13,13,10,6,6,12,12,0,11,11,15,15,0,10,10,13,13,0,12,12,15,14,0,19,20,16,17,0,9,9,13,13,0,14,14,20,21,0,12,11,13,12,0,12,12,15,14,0,20,19,17,17,0,10,10,12,13,0,15,15,22,21,0,12,12,12,13,0,10,10,12,12,0,11,11,15,15,0,11,11,15,15,0,15,15,22,22,0,16,17,0,0,0,11,11,15,15,0,14,14,18,18,0,11,11,16,16,0,16,15,0,21,0,16,16,0,0,0,12,12,15,15,0,14,14,19,19,0,11,11,15,15,0,15,15,22,0,0,16,16,22,0,0,16,16,0,21,0,0,0,0,0,0,15,15,19,20,0,18,18,0,0,0,17,17,0,0,0,17,17,0,0,0,0,0,0,0,0,16,15,22,21,0,20,20,0,0,0,18,18,0,0,0,10,10,12,12,0,10,10,11,11,0,11,11,12,12,0,11,11,9,9,0,13,12,12,12,0,11,11,13,13,0,13,13,12,12,0,10,10,12,12,0,13,12,13,13,0,12,12,12,12,0,11,11,13,13,0,13,13,12,12,0,10,10,12,12,0,13,13,14,13,0,12,12,12,12,0,14,13,13,14,0,20,21,15,15,0,11,11,12,12,0,15,16,20,20,0,12,13,10,10,0,13,13,14,13,0,20,20,15,15,0,11,11,12,12,0,16,17,21,21,0,13,13,11,11,6,7,7,16,15,11,9,9,14,15,12,9,9,16,16,0,13,13,15,15,0,14,14,17,17,10,9,9,16,16,14,12,12,16,16,12,9,9,15,15,0,13,13,17,18,0,13,13,15,15,12,10,10,17,17,15,12,12,17,17,13,9,9,16,16,0,13,13,18,19,0,14,14,16,16,0,15,15,18,18,0,0,0,20,19,0,12,12,17,16,0,16,17,0,21,0,14,15,16,16,0,15,15,18,18,0,0,22,19,21,0,13,13,16,16,0,18,17,22,22,0,15,15,16,16,7,7,7,13,13,11,10,10,15,15,12,10,10,14,14,0,21,0,18,17,0,21,22,18,18,11,10,10,15,15,14,12,12,17,17,14,11,11,14,14,0,21,20,18,18,0,22,21,18,17,12,11,10,16,16,16,14,14,17,19,14,11,11,15,15,0,0,22,19,19,0,21,22,18,18,0,21,0,18,19,0,0,0,22,0,0,22,21,17,17,0,0,0,20,22,0,0,21,18,18,0,0,0,19,20,0,0,0,0,0,0,0,21,17,17,0,0,0,22,21,0,0,0,19,19,10,9,9,14,13,13,10,10,12,12,13,10,10,14,14,0,13,13,12,12,0,15,14,16,15,13,10,10,14,14,15,12,12,14,14,15,10,10,14,14,0,14,14,15,15,0,14,13,14,14,13,10,10,15,15,17,13,13,15,15,14,10,10,14,14,0,14,14,15,16,0,14,14,15,15,0,15,15,16,16,0,21,22,17,18,0,12,12,14,14,0,17,17,20,21,0,14,14,14,14,0,15,15,16,16,0,21,22,18,18,0,13,13,14,14,0,18,18,22,0,0,15,15,14,14,0,11,11,13,13,0,12,12,16,15,0,12,12,16,16,0,16,16,0,0,0,16,17,0,22,0,12,12,16,16,0,14,14,17,18,0,11,11,16,16,0,15,15,0,21,0,16,16,21,22,0,12,12,16,16,0,15,15,19,19,0,12,12,17,16,0,16,16,21,22,0,16,16,0,0,0,17,17,0,22,0,0,0,0,0,0,15,15,19,20,0,17,19,0,0,0,17,17,22,0,0,17,17,0,22,0,0,0,0,0,0,15,15,21,0,0,19,20,0,0,0,19,18,22,0,0,11,12,14,14,0,11,11,14,14,0,12,12,15,15,0,13,13,13,13,0,14,14,16,16,0,12,12,15,15,0,14,14,16,15,0,11,11,15,15,0,13,13,16,16,0,13,13,15,15,0,12,12,15,15,0,15,14,16,16,0,11,11,15,15,0,14,14,17,17,0,13,13,15,15,0,15,15,16,16,0,0,0,18,18,0,12,12,14,14,0,16,16,22,0,0,14,14,15,15,0,15,15,16,17,0,21,22,18,18,0,13,13,15,14,0,18,17,22,0,0,14,14,15,15,8,8,8,16,15,12,10,10,16,15,12,10,10,16,16,0,14,14,16,17,0,14,14,17,16,12,10,10,17,18,14,12,12,18,18,14,10,10,16,16,0,14,14,18,18,0,14,14,16,16,12,9,9,16,16,17,13,13,16,17,14,9,9,15,15,0,14,14,18,19,0,13,13,15,15,0,15,15,18,19,0,0,0,22,21,0,13,13,16,16,0,16,16,22,0,0,15,15,16,16,0,14,14,18,17,0,0,0,20,0,0,13,13,16,16,0,18,18,0,0,0,15,15,16,16,8,7,7,13,13,12,10,10,15,15,12,10,10,14,14,0,22,22,19,18,0,0,0,18,18,12,10,10,15,15,14,13,13,17,17,14,11,11,15,15,0,19,20,18,18,0,22,21,17,18,13,11,11,15,15,16,13,13,18,18,14,11,11,14,15,0,22,21,20,19,0,22,21,17,17,0,0,22,19,18,0,0,0,0,0,0,22,20,17,17,0,0,0,21,20,0,0,0,19,17,0,0,22,19,19,0,0,0,0,0,0,22,20,18,17,0,0,0,0,0,0,0,0,18,18,0,10,10,14,14,0,11,11,14,14,0,11,11,15,15,0,14,14,14,14,0,15,15,16,16,0,11,11,16,16,0,13,13,16,16,0,11,11,15,15,0,14,14,16,16,0,14,14,15,15,0,11,11,15,15,0,13,13,15,15,0,10,10,15,15,0,15,15,17,17,0,14,14,14,14,0,16,16,16,16,0,0,22,19,19,0,13,13,14,14,0,17,17,0,0,0,15,15,14,14,0,16,16,17,17,0,0,22,18,18,0,13,13,14,14,0,21,18,0,0,0,15,15,14,14,0,11,11,13,13,0,12,12,15,15,0,12,12,16,15,0,16,16,0,0,0,17,17,22,22,0,12,12,16,16,0,14,14,18,18,0,11,12,16,16,0,15,16,0,21,0,16,16,22,21,0,12,12,16,16,0,15,15,19,20,0,11,12,16,16,0,15,15,20,22,0,16,16,0,22,0,17,17,22,0,0,0,0,0,0,0,15,15,21,22,0,19,18,0,0,0,17,17,0,0,0,17,17,0,22,0,0,0,0,0,0,16,15,22,0,0,19,19,0,0,0,17,18,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,15,15,0,13,13,14,14,0,15,15,16,17,0,12,12,16,16,0,14,14,16,16,0,12,11,15,16,0,14,14,16,17,0,14,14,16,16,0,13,12,16,16,0,15,15,16,16,0,11,11,15,15,0,14,14,16,16,0,14,14,15,15,0,15,15,18,17,0,0,22,0,20,0,13,13,15,15,0,16,17,22,22,0,14,14,15,15,0,15,15,17,18,0,20,0,19,19,0,13,13,15,15,0,18,18,22,0,0,14,14,15,15,0,11,11,16,16,0,14,14,17,16,0,13,13,17,17,0,16,16,17,17,0,17,17,18,19,0,12,12,16,17,0,15,15,18,18,0,12,12,16,16,0,16,16,19,18,0,16,16,17,16,0,12,13,17,17,0,17,16,18,17,0,13,12,16,16,0,16,16,18,19,0,16,16,16,17,0,16,16,18,18,0,22,0,22,22,0,13,13,16,16,0,19,18,22,20,0,16,15,16,16,0,16,17,18,18,0,0,0,22,20,0,14,14,16,16,0,19,19,0,0,0,16,16,16,16,0,9,9,13,13,0,13,13,15,15,0,14,14,15,15,0,0,22,17,18,0,22,0,18,19,0,12,12,15,15,0,15,16,17,17,0,14,14,14,14,0,22,0,18,18,0,21,22,17,17,0,13,13,15,15,0,17,17,17,18,0,14,14,15,15,0,22,21,21,19,0,20,21,17,17,0,21,21,19,18,0,0,0,0,0,0,21,21,17,17,0,0,0,22,22,0,0,22,19,18,0,0,21,19,18,0,0,0,0,22,0,19,20,17,17,0,0,0,0,22,0,0,0,19,18,0,19,19,15,16,0,21,19,16,17,0,0,21,17,17,0,0,22,17,17,0,22,22,18,19,0,20,20,16,16,0,0,22,18,18,0,20,19,16,17,0,22,21,20,19,0,0,21,17,17,0,21,20,17,17,0,0,0,18,18,0,19,19,17,16,0,22,0,19,19,0,21,22,17,18,0,0,22,19,18,0,0,0,19,20,0,19,19,16,16,0,22,22,22,0,0,20,22,16,16,0,22,20,18,19,0,0,0,20,19,0,20,20,16,16,0,0,0,0,0,0,22,20,17,16,0,11,11,13,13,0,14,13,15,15,0,13,13,16,15,0,18,17,21,0,0,18,18,21,0,0,12,12,15,15,0,15,16,17,18,0,12,12,15,15,0,17,17,22,20,0,17,18,22,0,0,12,12,17,16,0,16,17,19,19,0,13,13,16,16,0,17,17,0,22,0,17,17,0,21,0,18,18,20,22,0,0,0,0,0,0,15,15,21,20], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+491311);\n/* memory initializer */ allocate([20,19,0,0,0,18,18,22,0,0,17,17,22,0,0,0,0,0,0,0,15,16,20,22,0,20,21,0,0,0,19,18,0,0,0,15,15,19,19,0,17,16,20,20,0,16,17,20,21,0,18,17,0,0,0,19,19,0,0,0,15,15,21,19,0,19,19,0,0,0,15,15,22,22,0,18,18,0,22,0,17,18,22,21,0,15,15,20,19,0,19,19,0,0,0,15,15,20,22,0,18,19,20,0,0,18,17,21,21,0,18,18,19,22,0,0,0,0,0,0,15,15,20,19,0,19,19,0,0,0,18,18,21,22,0,18,18,22,0,0,0,0,0,0,0,15,15,19,20,0,21,21,0,0,0,17,17,20,20,0,12,12,17,17,0,14,14,16,17,0,13,14,17,17,0,16,16,17,17,0,17,17,17,19,0,13,13,17,17,0,16,16,18,18,0,13,13,16,16,0,16,16,18,18,0,16,16,17,17,0,13,13,17,17,0,17,17,18,17,0,12,12,15,16,0,17,18,19,20,0,16,16,16,16,0,17,16,18,19,0,0,22,21,22,0,14,14,16,16,0,19,19,0,0,0,16,16,16,16,0,16,16,18,17,0,0,22,21,21,0,14,14,16,16,0,22,20,22,0,0,16,16,15,15,0,9,9,13,13,0,14,14,15,15,0,14,14,14,14,0,22,22,18,18,0,0,22,18,18,0,12,12,15,15,0,16,16,18,17,0,14,14,14,14,0,20,21,18,18,0,22,21,17,17,0,13,13,15,15,0,17,17,18,18,0,14,14,14,14,0,0,21,18,19,0,0,22,17,17,0,22,22,19,18,0,0,0,0,0,0,19,21,17,17,0,0,0,22,20,0,0,21,18,19,0,0,22,18,18,0,0,0,0,22,0,20,22,17,17,0,0,0,20,22,0,0,0,18,18,0,19,21,16,16,0,20,22,16,17,0,20,0,17,17,0,22,0,18,17,0,21,0,18,19,0,20,20,17,17,0,22,0,18,18,0,21,20,17,17,0,0,20,20,19,0,0,21,18,17,0,21,21,17,17,0,22,0,18,17,0,19,19,17,17,0,0,22,20,21,0,0,21,17,17,0,22,0,18,18,0,0,0,20,22,0,20,19,16,16,0,0,0,0,0,0,22,22,17,17,0,22,0,18,19,0,0,0,21,20,0,19,21,16,17,0,0,0,0,0,0,22,22,17,16,0,11,11,13,13,0,13,13,15,15,0,13,13,15,15,0,17,17,22,21,0,18,18,22,0,0,12,13,16,15,0,15,16,18,18,0,13,13,16,16,0,17,17,0,22,0,17,17,22,22,0,13,13,16,16,0,16,16,19,18,0,13,13,16,16,0,18,17,0,20,0,18,17,20,0,0,17,17,21,0,0,0,0,0,0,0,15,15,21,22,0,19,20,0,0,0,18,18,0,0,0,18,17,0,0,0,0,0,0,0,0,16,16,22,22,0,20,20,0,0,0,21,19,0,0,0,15,15,20,19,0,16,16,22,20,0,17,17,0,22,0,18,18,0,22,0,19,17,0,0,0,15,16,22,20,0,18,19,0,0,0,16,16,22,20,0,18,18,0,22,0,18,18,22,0,0,16,16,21,20,0,19,20,0,22,0,16,16,0,22,0,18,18,0,22,0,18,18,0,21,0,19,18,0,22,0,0,0,0,0,0,16,16,21,20,0,20,0,0,0,0,18,18,21,0,0,18,18,0,0,0,0,0,0,0,0,16,16,21,19,0,0,0,0,0,0,18,18,0,21,3,4,5,8,8,12,10,10,12,12,12,10,10,12,12,13,11,11,12,12,13,12,12,12,12,13,10,10,13,13,13,13,13,13,13,13,10,10,13,13,13,11,11,13,13,14,13,13,12,12,13,10,10,13,13,13,13,13,13,13,13,10,10,12,12,13,11,11,13,13,13,13,13,12,12,13,12,12,13,13,13,13,13,13,13,14,11,11,12,12,14,12,12,13,12,14,14,14,12,12,13,14,14,13,13,14,13,13,13,13,14,14,14,12,12,14,13,13,13,13,14,14,14,12,12,12,8,8,11,11,12,12,12,11,11,12,11,11,10,10,13,12,12,10,10,13,12,12,10,10,13,12,12,12,12,14,12,12,12,12,13,13,13,11,11,14,12,12,11,11,14,12,12,12,12,14,12,12,12,12,13,12,12,12,12,13,13,13,11,11,14,12,12,11,11,14,12,12,12,12,14,13,13,12,12,14,12,12,12,11,14,13,13,11,11,14,13,12,11,11,14,13,13,11,11,14,13,13,12,12,14,12,12,12,12,15,13,13,12,12,14,12,12,11,11,14,13,13,11,11,12,9,9,10,10,12,7,7,11,11,12,9,9,12,12,13,10,10,10,10,14,14,14,11,11,13,9,9,12,12,14,14,14,12,12,13,8,8,11,11,14,9,9,12,12,14,14,14,11,11,13,9,9,12,12,14,14,14,12,12,14,8,8,11,11,14,9,9,12,12,14,14,14,11,11,14,10,10,12,12,14,14,14,13,13,14,9,9,11,11,14,10,10,12,12,14,14,14,11,11,14,14,15,12,12,15,14,14,14,14,15,14,14,11,11,14,14,14,12,12,14,14,14,11,11,14,11,11,10,10,14,10,10,10,10,14,10,10,10,10,15,11,11,9,9,14,12,12,9,9,15,11,11,11,11,15,13,13,11,11,15,10,10,10,10,15,11,11,10,10,15,13,13,11,11,15,11,11,11,11,15,13,13,11,11,15,10,10,10,10,15,11,11,10,10,15,13,13,11,11,15,12,12,11,11,15,13,13,11,11,15,11,11,10,10,15,12,12,10,10,15,13,13,10,10,15,14,14,11,11,15,13,13,11,11,15,14,14,10,11,15,13,13,10,10,15,13,14,10,10,14,13,13,10,10,14,13,13,10,10,14,13,13,10,10,14,13,13,9,9,14,14,14,9,9,15,14,14,11,11,15,14,14,10,10,15,14,14,10,10,15,14,14,11,11,15,14,14,10,10,15,14,14,11,11,15,14,14,10,10,14,14,14,10,10,15,14,14,10,10,14,14,14,10,10,15,14,14,11,11,15,14,14,11,11,14,14,14,10,10,15,14,14,10,10,14,14,14,9,9,15,15,15,11,11,15,14,14,12,12,15,15,14,10,10,15,14,14,10,10,14,15,15,9,9,14,10,10,12,12,17,9,9,12,12,17,10,10,13,13,17,11,11,12,12,18,14,14,12,12,17,10,10,13,13,17,14,14,12,12,17,9,9,12,12,17,11,11,12,12,17,14,14,12,12,18,10,10,13,13,18,14,14,13,13,18,9,9,12,12,18,10,10,13,13,18,14,14,12,12,18,11,11,13,13,18,14,14,13,13,18,10,10,12,12,17,11,11,12,12,17,14,14,12,12,18,15,15,13,13,18,14,14,14,14,18,15,15,12,12,18,14,14,12,12,18,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,15,15,12,12,14,15,15,11,11,15,15,15,11,11,14,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,12,12,14,15,15,12,12,14,15,14,12,12,14,15,15,11,11,15,14,14,12,12,15,15,15,12,12,15,16,16,12,12,15,15,15,12,12,15,15,15,12,12,15,15,15,12,12,13,13,13,11,10,14,14,15,11,11,14,14,14,12,12,15,14,14,10,10,15,15,15,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,14,15,15,12,12,14,14,14,12,12,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,15,15,15,12,12,15,14,14,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,10,10,15,15,16,12,12,15,15,15,14,14,15,15,15,11,11,15,15,15,12,12,15,15,15,11,11,14,11,11,10,10,15,9,9,12,12,15,10,10,12,12,15,11,11,11,11,15,14,14,12,12,15,10,10,13,13,15,14,14,12,12,15,9,9,12,12,15,10,10,13,13,15,13,13,12,11,15,10,10,12,12,15,14,14,12,12,15,9,9,11,11,15,11,11,12,12,15,13,13,11,11,15,11,11,13,13,15,13,14,13,14,15,11,11,11,11,15,11,11,12,12,15,14,14,11,11,15,14,14,13,13,15,14,14,20,20,15,14,14,12,12,15,14,14,12,12,15,14,14,11,11,14,13,13,10,10,14,13,13,12,12,14,14,13,12,12,15,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,14,14,13,13,15,14,14,12,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,15,14,14,12,11,15,14,14,12,12,15,14,14,13,13,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,15,15,13,13,15,15,15,13,13,15,14,14,13,13,15,15,15,13,13,15,14,15,12,12,15,15,15,13,13,14,10,10,12,13,17,9,9,12,12,17,10,10,13,13,17,11,11,12,12,18,14,14,12,12,18,10,10,13,13,18,14,14,12,12,17,9,9,12,12,18,10,11,13,13,18,14,14,12,12,17,10,10,12,12,17,14,14,12,12,17,9,9,12,12,17,11,11,12,12,17,14,14,12,12,18,11,11,12,12,18,14,14,13,13,18,11,11,12,12,18,11,11,12,12,18,14,14,12,12,18,15,15,12,12,18,14,14,13,13,18,15,15,12,12,17,14,14,12,12,17,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,15,15,11,11,14,15,14,12,12,15,15,15,12,11,14,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,13,13,14,15,15,11,11,14,15,15,13,12,14,15,15,11,11,14,15,15,11,11,15,15,15,13,13,14,15,15,12,12,15,15,15,12,12,15,15,15,11,11,15,15,15,11,11,15,15,15,12,12,15,15,15,13,13,15,16,16,12,12,15,15,15,12,13,15,15,15,12,12,15,15,15,12,12,13,13,13,11,11,14,14,14,11,11,14,14,14,12,12,14,14,14,10,10,15,14,14,11,11,14,15,15,12,12,14,14,14,12,12,14,15,15,11,11,14,15,14,12,12,15,14,14,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,14,14,12,12,15,15,14,11,11,15,15,15,12,12,15,14,14,12,12,14,15,15,11,11,14,15,14,11,11,15,15,15,10,10,15,15,15,12,12,15,14,14,14,13,15,15,15,11,11,15,15,15,11,11,15,15,15,10,10,14,11,11,10,10,15,9,9,12,12,15,10,10,12,12,15,11,11,11,11,15,14,14,12,12,15,10,10,13,13,15,13,13,12,12,15,9,9,12,12,15,11,11,13,13,15,14,14,12,12,15,10,10,13,13,15,13,14,12,12,15,9,9,12,12,15,10,10,13,13,15,13,13,11,11,15,11,11,13,13,15,14,14,13,13,15,10,10,11,11,15,11,11,12,12,15,14,14,11,11,15,14,14,13,13,15,14,14,21,20,15,14,14,11,11,15,14,14,12,12,15,14,14,11,11,14,13,13,10,10,14,13,13,11,11,15,14,14,12,12,15,14,14,12,12,14,14,14,12,12,15,14,14,12,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,14,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,14,14,14,13,13,15,15,15,13,13,16,14,14,12,13,15,15,15,13,13,15,14,14,12,12,15,15,15,13,13,15,11,11,13,12,18,10,10,12,12,17,11,11,12,12,18,12,12,11,11,18,14,14,12,12,18,11,11,13,13,17,14,14,12,12,18,10,10,12,12,18,12,12,12,12,18,14,15,12,12,18,11,11,13,13,18,14,14,12,12,17,10,10,12,12,18,11,11,12,12,18,15,14,12,12,17,12,12,12,12,17,14,14,12,12,17,11,11,11,11,17,12,12,12,11,17,15,15,11,11,18,15,15,12,12,18,14,15,13,13,18,15,15,11,11,17,15,15,12,12,18,15,15,11,11,14,9,9,11,11,14,15,15,11,11,15,15,15,11,11,15,15,15,12,11,15,15,15,12,12,15,15,15,11,11,15,15,15,13,13,14,15,15,11,11,15,15,15,11,11,15,15,15,13,13,15,15,15,11,11,15,15,15,13,13,15,15,15,11,11,15,15,15,11,11,15,15,15,13,13,15,15,15,12,12,15,15,15,13,13,15,15,14,11,11,15,15,15,12,12,15,15,15,12,12,16,15,15,13,13,15,16,16,13,13,16,15,15,12,12,15,15,15,13,12,15,15,15,12,12,13,12,12,11,11,14,14,14,11,11,14,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,12,12,15,14,14,11,11,15,15,15,12,12,15,14,14,12,12,15,15,15,11,11,15,14,14,11,11,15,14,15,11,11,15,15,15,12,12,15,14,14,13,13,16,15,15,11,11,15,14,14,12,12,15,15,15,11,11,14,11,11,9,9,15,10,10,12,12,14,11,11,12,12,15,12,12,12,12,15,14,14,13,13,15,11,11,13,13,15,14,14,13,13,15,10,10,12,12,15,12,12,13,13,15,14,14,13,13,15,11,11,12,12,15,14,14,13,13,14,10,10,12,12,15,12,12,13,13,15,14,14,12,12,15,12,12,13,13,15,14,14,15,15,15,11,11,12,12,15,12,12,12,13,15,14,14,12,12,15,15,15,14,14,15,14,14,20,20,15,14,14,12,12,15,14,14,13,13,15,14,14,12,12,14,13,13,10,10,14,13,13,11,11,14,13,13,12,12,14,14,14,12,12,15,14,14,13,13,15,14,14,12,12,14,14,14,14,14,14,14,14,11,11,15,14,14,12,12,15,14,14,14,14,15,14,14,12,12,14,14,14,14,14,14,14,14,11,11,15,14,14,12,12,14,14,14,14,14,15,14,14,12,12,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,14,14,14,14,13,15,15,15,14,14,15,14,14,13,13,15,15,15,14,14,15,14,14,13,13,15,15,15,13,13,14,13,13,13,13,18,15,15,12,12,18,15,15,13,12,18,15,16,11,11,18,16,17,12,12,18,15,15,13,13,18,17,17,12,12,18,15,15,12,12,17,15,15,12,12,18,17,17,12,12,18,15,15,13,13,18,16,17,12,12,17,15,15,12,12,18,15,15,12,12,18,16,17,11,12,18,16,16,12,12,17,16,17,12,12,18,15,15,11,11,18,15,15,12,12,18,17,17,11,11,17,17,17,12,12,18,16,16,13,13,18,17,17,11,11,18,16,16,12,12,18,17,17,11,11,15,14,14,11,11,16,15,15,11,11,16,15,15,12,12,16,15,15,12,12,17,15,15,14,13,16,15,15,12,12,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,18,15,15,13,13,16,15,15,11,11,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,17,15,15,13,13,16,15,15,12,12,17,16,15,14,14,16,14,15,12,12,16,15,15,12,12,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,15,12,13,11,11,15,14,14,12,12,16,14,14,12,12,16,14,14,12,12,16,14,14,12,12,16,14,14,13,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,17,14,14,12,12,16,14,14,12,12,17,14,14,13,13,15,15,15,12,12,16,14,14,12,12,17,14,14,12,12,17,15,15,12,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,17,15,15,12,12,18,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,12,12,14,15,15,9,9,15,15,15,12,12,15,15,15,13,13,15,15,15,14,14,15,15,15,19,19,15,15,16,13,13,15,15,16,19,20,15,15,15,13,12,15,16,16,14,14,15,15,15,19,19,15,15,15,13,13,15,16,15,20,19,14,15,15,13,13,15,15,15,14,14,15,15,15,19,19,15,15,15,14,14,15,16,16,19,20,15,15,15,14,14,15,15,15,14,14,15,15,15,19,19,15,15,15,20,19,15,16,16,20,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,20,14,13,13,10,10,14,14,14,11,11,14,14,14,12,12,15,14,14,13,13,15,14,14,19,20,15,14,14,12,12,14,14,14,20,19,14,14,14,11,11,15,14,14,12,12,15,14,14,20,20,15,14,14,12,12,14,14,14,20,19,14,14,14,11,11,15,14,14,12,12,15,14,14,19,20,15,14,14,13,13,15,14,14,22,19,15,15,14,12,12,15,14,14,13,13,14,15,15,22,20,15,15,15,20,20,15,14,14,21,20,15,15,15,20,21,15,14,14,20,20,14,15,15,20,20,1,6,6,7,7,7,7,7,7,7,8,8,10,11,11,9,8,8,8,8,8,11,11,11,10,8,8,5,7,7,9,11,11,10,11,11,10,11,11,12,13,14,11,12,12,10,11,11,13,14,14,12,12,12,5,6,6,8,6,6,8,7,7,8,7,7,11,10,10,10,7,7,9,7,7,12,11,11,11,7,7,7,7,7,11,10,10,12,10,10,11,10,10,15,13,13,13,10,10,12,11,11,15,13,13,14,11,11,7,7,7,11,11,11,12,11,11,12,11,11,14,14,14,14,12,12,12,12,12,16,15,15,14,12,12,0,10,10,0,11,11,0,11,12,0,11,11,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,8,8,8,12,10,10,12,10,10,13,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,13,11,11,12,11,11,15,14,14,14,12,12,13,12,12,15,14,14,15,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,13,13,0,14,15,0,12,12,3,4,4,0,8,8,0,8,8,0,9,9,0,10,10,0,8,8,0,9,9,0,10,10,0,8,8,0,7,7,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,7,7,0,6,6,0,7,7,0,7,7,0,10,10,0,6,6,0,7,7,0,10,10,0,6,5,0,8,8,0,7,7,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,0,6,6,0,9,10,0,10,10,0,10,10,0,11,11,0,9,9,0,10,10,0,11,11,0,9,9,0,8,8,0,8,8,0,8,8,0,9,9,0,9,9,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,7,7,0,7,7,0,8,8,0,9,9,0,7,7,0,7,7,0,9,9,0,6,6,0,6,6,0,10,10,0,10,10,0,10,10,0,12,12,0,9,9,0,10,10,0,12,12,0,9,9,0,8,8,0,7,7,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,1,5,5,5,8,8,0,8,8,6,9,9,8,10,10,0,8,8,0,9,9,0,12,12,0,8,8,4,7,7,6,10,10,0,12,12,7,11,11,9,12,12,0,12,12,0,13,13,0,15,15,0,12,12,0,7,7,0,7,7,0,8,8,0,8,8,0,10,10,0,7,7,0,8,8,0,11,11,0,7,7,5,7,7,9,9,9,0,11,10,9,9,9,11,12,12,0,10,10,0,11,11,0,13,13,0,11,11,6,7,7,9,10,10,0,12,12,10,11,11,11,12,12,0,12,12,0,13,13,0,15,15,0,12,12,0,10,10,0,11,11,0,11,11,0,12,12,0,13,13,0,11,11,0,12,12,0,15,15,0,11,11,0,8,8,0,10,10,0,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,11,11,0,7,7,0,10,10,0,12,12,0,10,10,0,12,13,0,12,12,0,13,13,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,7,0,0,0,8,8,0,0,0,8,8,0,0,0,11,11,0,0,0,0,0,0,0,0,10,9,0,0,0,0,0,0,0,0,9,9,0,0,0,10,11,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,5,5,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,6,0,0,0,7,7,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,9,9,0,0,0,10,10,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,11,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,7,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,11,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,16,9,9,12,17,18,4,2,18,6,5,9,13,15,10,7,7,6,7,9,13,13,8,5,6,5,5,7,11,12,8,4,7,4,3,6,10,12,11,8,9,7,6,8,11,12,15,13,13,11,9,7,10,12,16,12,16,12,6,5,8,11,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,4,4,4,4,4,4,4,4,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,5,6,6,6,5,6,5,6,6,1,4,4,7,7,8,8,9,9,10,10,11,11,4,6,5,8,7,9,8,10,9,11,10,11,11,4,5,6,7,8,8,9,9,10,10,10,10,11,8,9,8,10,8,10,9,11,10,11,11,11,11,8,8,9,8,10,9,10,10,11,11,11,11,11,9,10,10,11,11,11,11,11,11,12,11,12,11,9,10,10,10,11,11,11,11,11,11,12,11,12,10,11,11,12,11,12,12,12,12,12,12,12,12,10,11,11,11,11,12,12,12,13,12,12,12,12,11,12,12,12,12,13,13,12,12,12,12,12,12,11,12,12,12,12,13,13,12,13,12,12,12,12,12,13,13,13,13,13,13,12,13,12,13,12,12,12,13,13,13,13,13,13,13,12,13,12,12,12,1,3,2,3,3,4,9,8,8,10,13,16,4,2,9,5,7,10,14,18,9,7,6,5,7,9,12,16,7,5,5,3,5,8,11,13,8,7,7,5,5,7,9,11,10,10,9,8,6,6,8,10,13,14,13,11,9,8,9,10,17,18,16,14,11,10,10,10,1,9,9,6,9,9,5,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,7,7,7,7,7,7,7,8,8,9,9,9,8,7,7,8,8,8,9,9,9,9,8,8,6,7,7,9,8,8,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,8,9,10,8,8,7,6,6,8,6,6,9,6,6,9,7,7,10,8,8,9,6,6,9,7,7,10,9,8,9,7,7,7,7,7,11,8,8,11,9,9,10,9,9,12,9,9,12,8,8,11,9,9,12,9,9,12,8,8,8,7,7,10,9,9,10,9,9,10,9,9,11,10,11,11,9,9,11,9,9,11,11,11,11,9,9,10,8,8,11,9,9,10,9,9,11,9,9,11,10,10,11,9,9,11,9,9,12,10,10,11,9,9,8,8,8,11,9,9,12,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,10,12,8,8,9,7,7,11,9,9,11,10,10,11,9,9,11,11,11,11,9,9,11,10,10,12,11,11,11,9,10,10,9,9,11,9,9,11,10,10,11,10,10,11,11,11,11,9,9,11,9,10,11,11,11,11,9,9,1,7,7,7,8,8,7,8,8,7,9,9,10,11,11,9,8,8,7,8,9,11,11,11,9,8,8,6,7,7,10,10,10,10,10,10,10,10,10,14,14,14,12,11,11,10,11,11,15,14,14,13,11,11,6,6,6,8,5,5,8,7,7,8,7,7,11,10,10,9,7,7,9,7,7,12,10,10,10,7,7,6,8,7,12,10,10,12,10,10,11,10,10,15,14,13,13,10,10,11,10,10,16,14,14,14,10,10,7,7,7,12,11,11,12,11,11,11,11,11,16,14,14,13,12,12,11,11,11,17,15,15,14,12,12,10,9,9,13,11,11,13,11,11,12,11,11,16,14,13,14,11,11,12,11,11,17,15,14,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,16,13,14,13,10,10,11,10,10,17,14,14,14,10,10,7,7,7,12,11,11,12,11,11,12,11,11,15,14,15,14,12,12,12,11,11,17,15,15,14,12,12,10,10,9,13,11,11,13,11,11,13,11,11,16,14,14,14,11,11,13,11,11,16,15,15,15,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,7,7,14,14,7,7,7,15,15,0,13,13,16,16,0,13,13,15,15,7,8,8,15,15,9,10,10,17,16,9,8,8,15,15,0,13,13,18,17,0,13,13,16,16,8,8,8,15,15,12,11,11,16,17,9,8,8,14,14,0,13,13,18,17,0,13,13,16,15,0,14,14,18,17,0,20,22,18,20,0,12,12,16,16,0,16,16,22,20,0,14,14,16,16,0,14,14,17,17,0,22,22,22,19,0,12,13,16,16,0,17,17,0,0,0,15,15,16,16,5,7,7,13,13,9,9,9,15,14,10,10,10,14,14,0,21,21,18,17,0,21,22,18,17,9,10,10,14,14,12,12,12,17,17,12,10,10,14,14,0,19,21,18,17,0,20,22,18,18,11,10,10,14,14,14,13,13,18,17,12,11,11,14,14,0,22,19,17,18,0,20,0,18,17,0,22,21,17,17,0,0,0,0,0,0,20,22,17,17,0,22,0,21,19,0,22,0,18,18,0,0,22,18,19,0,0,0,0,0,0,19,21,17,17,0,0,0,20,20,0,0,0,18,18,6,6,6,13,12,8,6,6,11,11,8,6,6,13,13,0,9,9,11,11,0,11,11,14,14,9,7,7,13,13,11,9,9,13,13,10,6,6,13,13,0,10,10,14,14,0,10,10,13,13,9,7,7,13,14,13,9,9,13,13,10,6,6,13,12,0,11,11,15,15,0,10,10,13,13,0,12,12,15,15,0,19,0,17,17,0,9,9,13,13,0,13,14,19,20,0,11,11,13,13,0,11,11,14,14,0,19,20,17,18,0,10,10,13,13,0,15,15,21,19,0,12,12,13,13,0,10,10,12,13,0,11,11,15,15,0,11,11,15,15,0,15,15,22,0,0,16,17,22,0,0,11,11,15,15,0,14,14,18,17,0,11,11,15,16,0,15,15,22,21,0,16,16,0,20,0,12,12,16,15,0,15,14,19,19,0,11,11,16,16,0,15,15,21,0,0,16,15,0,0,0,16,16,22,21,0,0,0,0,0,0,15,15,20,20,0,18,18,0,0,0,16,17,0,0,0,17,17,0,22,0,0,0,0,0,0,15,15,21,22,0,20,18,0,0,0,18,17,22,0,0,10,10,12,11,0,10,10,10,10,0,11,11,12,12,0,11,11,9,9,0,13,13,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,12,13,13,0,12,12,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,13,13,14,0,12,12,12,12,0,13,14,14,14,0,20,21,15,15,0,12,11,12,12,0,15,16,20,22,0,13,12,11,11,0,13,13,14,13,0,20,0,16,15,0,12,12,12,12,0,16,16,22,21,0,13,13,12,12,6,7,7,16,16,11,9,9,15,15,12,9,9,16,16,0,13,13,14,14,0,14,14,16,17,10,9,9,16,16,14,12,12,16,16,12,9,9,15,15,0,13,13,18,18,0,13,13,15,16,12,10,10,17,18,15,12,12,17,17,13,9,9,16,16,0,13,13,17,18,0,14,14,16,16,0,15,15,18,18,0,22,0,20,20,0,12,12,16,16,0,16,16,20,22,0,14,14,16,16,0,15,14,18,18,0,0,22,19,21,0,13,13,16,17,0,17,17,22,22,0,15,15,16,16,7,7,7,14,14,11,10,10,15,15,12,10,10,15,14,0,22,0,18,18,0,0,21,17,18,11,10,10,15,15,14,12,12,17,17,14,11,11,15,15,0,22,20,18,18,0,0,20,18,17,12,10,10,16,16,17,14,14,19,18,14,11,11,15,15,0,21,22,19,19,0,21,22,18,18,0,22,0,19,21,0,0,0,0,0,0,22,22,18,17,0,0,0,21,20,0,22,22,20,19,0,0,22,20,20,0,0,0,0,0,0,20,21,17,17,0,0,22,21,21], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+501551);\n/* memory initializer */ allocate([0,0,0,18,18,10,9,9,14,14,13,10,10,13,13,13,10,11,14,14,0,13,13,12,12,0,15,15,16,16,13,10,10,15,15,15,12,12,14,14,15,10,10,14,15,0,14,14,16,15,0,14,14,15,15,13,10,10,15,15,18,13,13,15,15,15,10,10,14,15,0,14,14,16,16,0,14,14,15,15,0,15,15,16,16,0,22,0,18,18,0,12,13,14,14,0,17,17,22,0,0,14,14,14,14,0,15,15,16,16,0,22,0,18,17,0,13,13,14,14,0,19,18,21,22,0,15,15,14,14,0,11,11,13,13,0,12,12,16,16,0,12,12,16,16,0,15,16,21,0,0,16,17,0,22,0,12,12,16,16,0,14,14,17,18,0,11,11,16,16,0,15,15,21,22,0,16,16,0,0,0,12,12,16,16,0,15,15,0,19,0,12,12,16,17,0,16,16,22,0,0,16,16,0,22,0,17,17,0,22,0,0,0,0,0,0,15,15,20,19,0,18,18,0,0,0,17,18,0,0,0,17,17,0,0,0,0,0,0,0,0,15,15,0,22,0,20,18,0,0,0,18,18,22,22,0,11,11,14,14,0,12,12,14,14,0,12,12,15,15,0,13,13,14,14,0,14,14,17,16,0,12,12,16,16,0,14,14,16,16,0,11,11,15,15,0,13,13,16,16,0,13,13,15,15,0,12,12,15,15,0,15,14,16,16,0,11,11,15,15,0,14,14,17,17,0,13,13,15,15,0,15,15,17,17,0,0,0,19,18,0,13,12,15,15,0,16,16,0,0,0,14,14,15,15,0,14,14,16,17,0,22,0,18,18,0,13,13,15,15,0,17,17,0,0,0,14,14,15,15,8,8,8,16,16,12,10,10,16,16,13,9,9,16,16,0,14,14,17,17,0,14,14,17,16,12,10,10,18,17,14,11,11,18,18,14,9,10,16,16,0,13,13,18,19,0,14,13,16,16,12,9,9,16,16,17,13,13,17,17,14,9,9,15,15,0,14,14,19,20,0,13,13,15,15,0,15,15,18,19,0,0,22,22,22,0,13,13,17,17,0,16,16,19,21,0,14,14,16,16,0,14,14,18,18,0,0,0,0,0,0,13,13,16,16,0,18,18,0,0,0,15,15,16,16,8,7,7,14,14,12,10,10,15,15,13,10,10,15,14,0,22,0,18,18,0,22,0,18,18,12,10,10,16,15,15,12,12,17,17,14,11,11,15,15,0,20,21,19,18,0,0,0,17,18,13,11,11,15,15,16,13,13,18,18,15,11,11,14,14,0,22,21,19,19,0,21,22,18,18,0,22,22,20,18,0,0,0,0,0,0,22,19,17,17,0,0,0,22,21,0,0,22,19,17,0,0,22,19,19,0,0,0,0,0,0,22,21,18,17,0,0,0,22,0,0,0,0,19,19,0,10,10,14,14,0,11,11,15,14,0,11,11,15,15,0,14,14,15,14,0,15,15,16,16,0,11,11,16,16,0,13,13,16,16,0,11,11,15,15,0,14,14,17,16,0,14,14,15,15,0,11,11,16,16,0,14,13,15,15,0,11,11,15,15,0,15,15,17,17,0,14,14,15,14,0,16,16,17,17,0,0,22,18,18,0,13,13,15,15,0,17,17,22,0,0,15,15,15,14,0,15,16,16,17,0,0,22,18,19,0,13,13,15,15,0,20,18,21,0,0,15,15,14,14,0,11,11,13,13,0,12,12,16,16,0,12,12,16,15,0,15,16,22,22,0,17,17,0,0,0,12,12,16,16,0,14,14,18,18,0,11,11,16,16,0,15,16,22,20,0,16,16,0,22,0,12,12,16,16,0,15,15,18,20,0,11,11,16,16,0,15,15,0,0,0,16,16,0,0,0,17,17,22,0,0,0,0,0,0,0,15,15,0,21,0,18,18,0,0,0,17,16,0,0,0,17,17,22,22,0,0,0,0,0,0,15,15,21,0,0,20,22,0,0,0,18,18,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,16,16,0,13,13,15,15,0,15,15,17,17,0,13,12,16,16,0,14,14,16,16,0,12,11,16,16,0,14,14,17,17,0,14,14,16,16,0,12,12,16,16,0,15,15,17,16,0,11,11,15,16,0,14,14,17,17,0,14,14,16,16,0,15,15,18,18,0,0,0,22,19,0,13,13,15,16,0,16,17,0,0,0,14,14,16,16,0,15,15,18,17,0,0,0,20,20,0,13,13,16,15,0,17,17,22,22,0,14,14,15,15,0,11,11,16,16,0,13,13,16,17,0,13,13,17,18,0,16,16,17,17,0,17,17,18,18,0,12,12,17,17,0,16,15,18,18,0,12,12,16,16,0,16,16,18,18,0,15,15,17,17,0,12,12,17,17,0,16,16,19,18,0,12,12,16,17,0,16,16,19,19,0,15,16,16,17,0,16,16,19,17,0,0,0,20,22,0,13,13,16,16,0,19,18,21,0,0,15,15,16,16,0,16,16,18,18,0,0,0,22,21,0,14,14,16,16,0,21,19,21,22,0,16,16,16,16,0,9,9,14,14,0,13,13,15,15,0,14,14,15,15,0,0,20,18,19,0,0,22,18,18,0,12,12,15,15,0,15,15,17,18,0,14,13,14,14,0,20,0,18,18,0,21,0,18,17,0,13,13,15,16,0,17,17,18,18,0,14,14,15,15,0,22,22,20,19,0,20,21,18,18,0,20,22,19,19,0,0,0,0,0,0,20,20,17,17,0,0,22,22,21,0,22,0,18,18,0,20,22,19,19,0,0,0,0,0,0,21,21,17,18,0,0,0,21,20,0,0,22,19,18,0,18,18,15,15,0,22,21,17,16,0,0,22,17,17,0,20,22,18,18,0,0,22,20,20,0,21,19,16,16,0,21,21,18,18,0,19,19,17,17,0,0,22,19,19,0,22,20,17,17,0,21,19,16,16,0,22,22,19,18,0,19,20,16,16,0,22,21,19,21,0,21,22,17,18,0,21,20,18,18,0,0,0,19,20,0,20,19,16,16,0,22,22,0,0,0,21,21,17,16,0,22,20,19,18,0,0,0,20,20,0,20,19,16,16,0,0,0,0,0,0,21,22,17,17,0,11,11,13,13,0,13,13,15,16,0,13,13,16,16,0,17,18,21,0,0,17,18,0,0,0,12,12,15,16,0,15,15,19,18,0,12,12,16,16,0,17,17,22,0,0,17,17,0,22,0,12,12,17,16,0,16,16,19,20,0,12,12,16,16,0,17,17,0,0,0,17,17,0,21,0,17,16,22,0,0,0,0,0,0,0,15,15,20,22,0,20,18,0,0,0,18,18,0,0,0,17,17,21,0,0,0,0,0,0,0,15,15,21,22,0,19,20,22,0,0,19,18,0,0,0,14,14,18,18,0,16,16,22,20,0,16,16,22,19,0,17,17,20,22,0,19,19,0,0,0,15,15,20,0,0,18,21,0,20,0,15,15,21,20,0,18,17,0,0,0,17,17,0,22,0,15,15,19,19,0,19,18,0,0,0,15,15,20,0,0,18,18,22,22,0,17,17,0,20,0,18,18,0,0,0,0,22,0,0,0,15,15,19,20,0,20,19,0,0,0,17,17,20,21,0,17,18,20,22,0,0,0,0,22,0,15,15,20,20,0,22,20,0,0,0,17,18,20,0,0,12,12,17,16,0,14,14,17,17,0,13,13,17,17,0,16,16,18,18,0,17,16,17,17,0,13,13,17,17,0,15,16,18,18,0,13,13,16,16,0,16,16,18,18,0,16,16,17,16,0,13,13,16,16,0,17,17,18,17,0,12,12,15,16,0,17,17,19,19,0,16,16,16,16,0,16,17,19,18,0,0,0,21,22,0,14,14,16,16,0,18,18,0,22,0,16,16,16,16,0,16,16,18,17,0,0,0,21,20,0,14,14,16,16,0,21,22,22,0,0,16,16,16,16,0,9,9,14,13,0,13,14,15,16,0,14,13,15,14,0,22,0,18,18,0,21,0,17,18,0,13,13,15,15,0,15,16,18,17,0,14,14,15,14,0,20,22,18,18,0,22,21,17,17,0,13,13,15,15,0,17,17,19,19,0,14,14,14,14,0,0,22,18,18,0,0,22,17,17,0,0,22,19,20,0,0,0,0,0,0,21,20,17,16,0,0,0,21,22,0,0,0,18,19,0,0,0,18,18,0,0,0,0,0,0,22,0,17,17,0,0,0,20,22,0,0,0,18,19,0,18,19,16,16,0,22,20,17,17,0,22,22,17,18,0,22,22,18,17,0,0,22,18,19,0,20,20,17,18,0,0,22,19,18,0,22,22,17,17,0,22,0,19,19,0,0,22,18,18,0,20,22,17,17,0,0,22,18,18,0,19,20,17,17,0,22,0,20,19,0,22,21,17,17,0,0,0,18,18,0,0,0,22,19,0,20,0,17,17,0,22,0,0,22,0,0,20,17,18,0,22,0,19,19,0,0,0,0,19,0,19,21,17,17,0,0,0,0,0,0,20,21,17,16,0,11,11,13,13,0,13,13,16,16,0,13,13,15,16,0,17,17,21,22,0,17,18,0,0,0,12,12,16,16,0,15,15,18,18,0,13,13,16,16,0,17,16,21,21,0,17,17,0,0,0,13,13,16,16,0,16,16,19,18,0,13,13,16,16,0,17,17,0,22,0,17,18,20,22,0,17,18,0,0,0,0,0,0,0,0,15,15,20,0,0,18,19,0,0,0,17,17,0,0,0,18,17,22,0,0,0,0,0,0,0,15,16,21,20,0,20,20,0,0,0,18,19,0,0,0,15,15,22,22,0,17,16,20,22,0,17,17,20,22,0,18,18,0,21,0,19,18,0,0,0,16,16,20,20,0,19,19,22,0,0,15,16,21,22,0,18,19,22,0,0,17,18,0,0,0,16,16,22,0,0,19,19,0,21,0,15,16,20,0,0,18,18,0,22,0,18,17,0,0,0,18,18,0,0,0,0,0,0,0,0,16,16,22,21,0,20,21,0,0,0,17,18,22,0,0,18,18,0,0,0,0,0,0,0,0,16,16,20,19,0,22,21,0,0,0,18,18,22,22,3,4,4,8,8,11,9,9,12,12,11,10,10,12,12,12,10,10,11,11,12,12,12,12,12,12,11,11,13,13,12,12,12,13,13,12,10,10,12,12,12,11,11,13,13,12,13,13,13,13,12,11,11,13,13,12,12,12,13,13,12,10,10,12,12,12,11,11,13,13,12,13,13,12,12,12,11,11,13,13,12,13,13,13,13,12,11,11,12,12,12,11,11,12,12,12,13,13,12,12,12,13,13,13,13,12,13,13,13,13,13,13,13,12,12,12,13,13,13,13,12,13,13,12,12,11,8,8,10,10,12,11,11,11,11,12,10,10,10,10,13,11,11,10,10,13,11,11,10,10,13,12,12,12,12,13,11,11,11,11,13,12,12,11,11,13,12,12,11,11,13,12,12,12,11,13,12,12,12,12,13,11,11,11,11,13,12,12,11,11,13,11,12,11,11,13,12,12,11,11,14,12,12,11,11,13,11,11,11,11,14,12,12,11,11,13,11,12,10,10,14,12,12,11,11,14,12,12,11,11,14,11,11,11,11,14,12,12,11,11,13,12,12,11,11,14,12,12,11,11,11,8,8,10,10,12,7,7,10,10,12,9,9,11,11,13,9,9,9,9,13,13,13,10,10,13,9,9,12,12,13,13,13,12,12,13,9,8,11,11,13,10,10,12,12,14,13,13,11,11,13,9,9,11,11,13,13,13,12,12,13,9,9,10,10,13,10,10,11,11,13,13,13,10,10,14,10,10,11,11,14,14,14,12,12,13,9,9,10,10,13,10,10,11,11,14,13,14,10,10,14,14,14,11,12,14,14,14,14,14,14,13,13,10,10,13,14,14,11,11,14,14,14,10,10,14,9,9,9,9,14,9,9,9,9,14,10,10,9,9,14,10,10,8,8,14,11,11,8,8,15,11,11,10,10,15,12,12,10,10,15,10,10,10,10,15,11,11,10,10,15,13,13,10,10,15,11,11,10,10,15,12,12,10,10,15,10,10,10,10,15,11,11,10,10,15,13,13,10,10,15,11,11,10,10,15,12,12,10,10,15,11,11,9,9,15,11,11,9,9,15,13,13,9,9,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,12,9,9,15,13,13,9,9,14,12,12,9,9,14,13,13,9,9,14,13,13,9,9,14,13,13,7,7,14,13,13,8,8,15,14,14,10,10,15,14,14,10,10,15,14,14,10,10,15,14,14,10,10,15,14,14,9,9,15,14,14,10,10,15,14,14,10,10,14,14,14,9,9,15,14,14,10,10,14,14,14,9,9,15,14,14,10,10,15,14,14,10,10,14,14,14,9,9,14,14,14,9,9,14,14,14,8,8,15,14,14,10,10,15,14,14,11,11,15,14,14,9,9,15,14,14,9,9,14,14,14,8,8,13,9,9,12,12,17,11,11,12,12,17,12,12,12,12,17,12,12,11,11,18,15,15,12,12,17,12,12,12,12,17,14,15,13,13,17,12,12,12,12,17,13,13,12,13,17,15,15,12,12,18,13,13,13,13,18,15,15,13,13,18,12,12,12,12,18,13,13,13,13,18,15,15,12,12,18,13,13,12,12,18,15,15,13,13,18,13,13,12,12,17,13,13,12,12,17,15,15,12,12,18,15,15,13,13,18,15,15,13,14,18,15,16,12,12,18,15,15,12,12,18,16,16,12,12,13,8,8,10,10,14,15,14,11,11,14,15,15,12,12,15,14,14,12,11,15,15,15,12,12,15,15,15,12,12,15,15,15,13,13,15,15,15,12,12,15,15,15,13,13,15,15,15,13,13,15,15,15,13,13,15,15,16,13,13,15,15,15,12,12,15,15,15,13,13,15,15,15,13,13,15,15,15,13,13,15,15,15,13,13,15,15,14,12,12,15,15,15,12,12,16,15,14,12,12,16,15,15,13,13,16,16,16,13,13,16,15,15,12,12,15,15,15,13,13,15,15,15,12,12,13,12,12,10,10,14,14,14,11,11,15,14,14,12,12,15,14,14,11,11,15,14,14,11,11,15,15,15,13,13,15,14,14,13,13,15,15,15,12,12,15,14,15,13,13,16,15,15,12,12,15,15,15,13,13,16,14,14,13,13,15,15,15,12,12,15,15,15,13,13,16,15,15,12,12,16,15,15,12,12,16,14,14,13,13,15,15,15,11,11,15,15,15,12,12,16,15,15,11,11,16,15,15,13,13,16,14,15,14,14,16,15,15,12,12,16,15,14,12,12,16,15,15,12,12,14,10,10,9,9,14,11,11,12,12,14,12,12,13,13,14,12,12,12,12,15,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,12,12,13,13,15,13,13,14,14,15,14,14,13,13,15,13,13,13,14,15,14,14,15,15,15,12,12,13,13,15,13,13,14,14,15,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,13,13,12,12,15,13,13,13,13,15,14,14,13,12,15,15,15,14,15,15,15,14,20,20,15,14,14,13,13,15,14,14,13,13,15,14,14,13,13,14,12,12,9,9,14,14,14,12,12,14,13,13,12,13,14,14,14,12,12,15,14,14,12,12,15,14,14,14,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,15,15,15,14,14,15,14,14,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,15,15,15,15,14,15,15,15,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,14,15,15,14,14,15,15,15,14,14,15,14,14,14,14,15,15,15,14,14,15,14,14,13,14,15,15,15,14,14,13,10,10,12,12,17,11,11,12,12,17,12,12,12,12,17,12,12,11,11,17,15,15,12,11,18,13,13,13,13,18,15,15,13,13,17,12,12,12,12,18,13,13,13,13,17,15,15,12,12,17,12,12,12,12,17,15,15,13,13,17,12,12,12,12,17,13,13,12,12,17,15,15,12,12,18,14,13,12,12,18,15,15,13,13,18,13,13,12,12,18,13,13,12,12,18,16,16,12,12,18,16,16,12,12,18,15,15,13,13,18,16,16,12,12,17,15,15,12,12,17,16,16,12,12,13,8,8,10,10,14,14,15,12,12,14,15,15,12,12,15,14,14,12,12,15,15,14,12,12,15,15,15,13,13,15,15,15,13,13,15,15,15,12,12,16,15,15,13,13,16,15,15,13,13,15,15,15,12,12,15,15,15,14,14,15,15,15,12,12,15,15,15,13,13,16,15,15,13,13,15,15,15,13,13,16,15,15,13,13,15,15,14,12,12,15,15,15,12,12,16,14,15,13,13,16,15,15,13,13,15,16,15,13,13,16,15,14,13,13,16,15,15,13,13,16,15,15,13,13,13,12,12,11,11,14,14,14,11,11,14,14,14,12,12,15,14,14,11,11,16,14,14,11,11,15,15,15,12,13,16,14,14,13,13,15,15,15,12,12,15,14,14,13,13,16,15,15,12,12,15,15,15,12,12,15,14,14,13,13,15,15,15,12,12,15,14,14,12,12,16,15,15,12,12,16,15,15,12,12,16,14,14,13,13,15,15,15,11,11,15,15,14,12,12,16,15,15,11,11,16,15,15,12,12,16,14,14,13,13,16,15,15,11,11,16,14,14,12,12,16,15,15,11,11,14,10,10,9,9,14,11,11,12,12,14,12,12,13,14,14,12,12,12,12,14,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,12,12,13,13,15,13,13,14,14,15,15,15,14,14,15,13,13,14,14,15,15,15,15,15,15,12,12,13,13,15,13,13,14,14,15,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,12,12,13,13,15,13,13,13,13,14,14,14,13,13,15,15,15,14,15,15,15,15,21,19,15,14,14,13,13,15,14,14,14,14,14,14,14,13,13,14,12,12,9,9,14,14,14,12,12,14,14,13,13,13,14,14,14,12,12,14,14,14,12,12,15,14,14,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,15,15,15,15,15,15,14,14,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,14,15,15,15,15,15,14,15,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,14,15,15,14,14,15,15,15,14,14,15,14,14,14,14,15,15,15,15,15,15,14,14,14,13,14,15,15,14,14,13,10,10,12,12,18,12,12,12,12,17,12,12,12,12,18,13,13,11,11,18,15,14,11,11,17,13,13,13,13,18,15,15,12,12,18,12,12,12,12,17,13,13,12,12,18,15,15,12,12,18,13,13,13,12,18,15,15,13,13,18,13,13,12,12,18,13,13,12,12,18,15,15,12,12,17,13,13,12,12,17,15,15,12,12,17,12,12,11,11,17,13,13,11,11,17,15,15,11,11,18,16,16,12,12,18,15,15,13,13,18,15,15,11,11,17,15,15,12,12,18,15,15,11,11,13,8,8,10,10,14,14,14,11,11,15,15,15,12,12,15,14,14,11,11,16,14,14,12,12,15,15,15,12,12,15,15,15,13,13,15,15,15,12,12,15,15,15,12,12,16,15,15,13,13,15,15,15,12,12,15,15,15,13,13,16,15,15,12,12,15,15,15,12,12,16,15,15,13,13,16,15,15,12,12,15,15,15,13,13,15,14,14,12,12,15,15,15,12,12,16,15,14,12,12,16,15,15,13,13,16,16,16,13,13,16,14,15,13,13,15,15,15,13,13,16,15,15,12,12,13,12,12,10,10,14,14,14,11,11,15,14,14,12,12,15,14,14,11,11,16,14,14,11,11,15,14,15,12,12,15,14,14,13,13,15,15,15,12,12,15,14,14,12,12,15,14,15,12,12,15,15,15,12,12,16,14,14,13,13,15,15,15,11,12,16,14,14,12,12,16,15,15,12,12,15,15,15,12,12,16,14,14,12,12,15,15,15,11,11,15,14,14,11,12,15,15,14,11,11,16,15,15,12,12,16,14,14,13,13,16,15,15,11,11,16,14,14,12,12,16,15,15,11,11,13,10,10,8,8,14,12,12,12,12,14,12,12,13,13,14,12,12,12,12,14,14,14,13,13,15,13,13,14,14,15,15,14,15,15,15,13,13,13,13,15,13,13,14,14,15,14,15,14,14,15,13,13,13,13,15,15,15,15,15,15,12,12,13,12,15,13,13,14,14,15,14,14,13,13,15,13,13,14,13,15,15,15,16,16,15,13,13,12,12,15,13,13,13,13,14,14,14,12,12,15,15,15,14,14,15,15,15,20,20,15,14,14,13,13,15,15,14,14,14,15,14,14,13,13,13,12,12,9,9,14,13,13,12,12,14,13,13,12,12,14,14,14,12,12,14,14,14,13,13,15,14,14,13,13,15,14,14,14,14,15,15,14,12,12,15,14,14,13,13,15,14,15,14,15,15,14,14,13,13,15,14,14,14,14,15,14,14,12,12,15,14,14,13,13,14,15,14,15,14,15,14,14,13,13,15,14,14,14,14,15,14,14,12,12,15,14,14,13,13,15,15,15,14,14,15,15,15,14,14,16,14,14,14,14,15,15,15,14,14,15,14,14,14,14,14,15,15,14,14,13,13,13,12,13,17,15,15,12,12,17,15,15,12,12,18,15,15,11,11,17,16,16,11,11,18,16,16,13,13,18,17,16,13,13,18,16,16,12,12,18,16,16,12,12,18,17,17,12,12,17,16,16,12,13,17,16,16,12,13,17,16,16,12,12,17,16,16,12,12,18,17,16,12,12,18,16,16,12,12,17,16,17,12,12,18,15,15,11,11,18,15,15,12,12,17,17,17,11,11,17,17,17,12,12,17,16,16,13,13,18,16,16,11,11,18,16,16,12,12,18,17,16,11,11,14,14,14,10,10,16,15,14,11,11,16,15,15,12,12,16,14,14,12,12,17,14,14,13,13,17,15,15,13,13,17,15,15,14,14,16,15,15,12,12,16,15,15,13,13,18,15,15,14,14,16,15,15,12,12,16,15,15,14,14,16,15,15,12,12,16,15,15,13,13,17,15,15,13,13,17,15,15,13,13,17,15,15,14,14,16,14,14,12,12,17,15,15,12,12,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,17,15,14,13,13,17,15,15,14,14,17,15,15,13,13,14,12,12,11,11,15,14,14,12,12,16,14,14,12,12,16,14,14,11,11,17,14,14,12,12,16,15,14,13,13,16,14,14,13,13,16,15,15,12,12,16,14,14,13,13,17,15,15,13,13,16,15,15,13,13,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,16,15,15,12,12,17,15,15,12,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,16,15,15,12,12,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,12,12,14,14,14,8,8,14,14,14,13,13,14,15,15,14,14,14,14,14,14,14,15,15,15,19,19,15,15,15,14,14,15,15,16,20,19,15,15,15,14,14,15,16,16,15,15,15,15,15,19,19,15,15,15,14,14,15,16,16,19,20,15,15,15,14,14,15,15,15,15,15,15,15,15,19,19,15,15,15,15,15,15,15,16,19,20,15,14,15,14,14,15,15,15,15,15,15,15,15,20,19,15,15,15,21,19,15,16,16,20,20,15,15,14,19,19,15,15,16,20,21,15,15,15,20,19,13,12,12,9,9,14,14,14,12,12,14,13,13,13,13,14,14,14,13,13,15,14,14,20,19,15,14,14,14,13,15,14,14,19,19,15,15,14,13,13,15,14,14,14,14,15,15,15,19,20,15,14,14,13,13,15,14,14,20,19,14,15,14,13,13,15,14,14,14,13,15,15,15,19,20,15,15,14,14,14,15,14,14,21,19,15,15,15,13,13,15,14,14,14,14,14,15,15,20,20,15,15,15,21,20,15,14,14,19,20,15,15,15,20,20,15,14,14,19,20,15,15,15,21,19,1,6,6,6,7,7,7,8,8,7,8,8,10,11,11,9,8,8,7,8,8,11,11,11,9,8,8,6,7,7,9,11,11,9,11,11,10,11,11,12,13,13,11,12,12,10,11,11,13,14,14,12,12,12,6,6,6,8,6,6,8,7,7,9,7,7,11,10,10,10,6,6,9,7,7,12,10,10,11,6,7,7,7,7,11,10,10,12,10,10,11,10,10,14,13,13,13,10,10,12,11,11,15,13,13,14,10,10,8,7,7,12,11,11,12,11,11,11,11,11,14,14,14,13,12,12,12,11,11,15,15,15,13,12,12,0,10,10,0,11,11,0,11,11,0,11,11,0,14,14,0,11,11,0,11,11,0,15,15,0,11,11,7,8,8,12,10,10,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,12,11,11,12,11,11,16,14,14,14,12,12,13,12,12,15,14,14,15,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,12,12,0,14,14,0,12,12,2,3,3,0,8,8,0,8,8,0,9,9,0,9,9,0,9,9,0,9,9,0,9,9,0,8,8,0,6,6,0,7,7,0,7,7,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,6,6,0,6,6,0,6,6,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,6,6,0,8,8,0,9,9,0,9,9,0,10,10,0,10,10,0,10,10,0,10,10,0,11,11,0,9,9,0,7,7,0,10,10,0,10,10,0,12,11,0,12,12,0,11,11,0,11,11,0,12,12,0,10,10,0,7,7,0,10,10,0,10,10,0,12,12,0,11,12,0,11,11,0,11,11,0,11,11,0,10,10,0,8,8,0,9,9,0,9,9,0,10,10,0,10,10,0,10,9,0,10,10,0,10,10,0,9,9,0,6,6,0,10,10,0,10,10,0,11,11,0,12,12,0,11,11,0,11,11,0,12,12,0,11,11,0,7,7,0,9,9,0,9,9,0,11,11,0,11,11,0,10,10,0,10,10,0,11,11,0,9,9,1,5,5,6,7,7,0,8,8,6,9,9,8,11,11,0,8,8,0,9,9,0,12,12,0,8,8,5,7,7,7,10,10,0,12,12,8,11,11,9,12,12,0,11,12,0,12,12,0,15,15,0,12,12,0,6,6,0,6,6,0,7,7,0,7,7,0,10,10,0,7,7,0,8,8,0,11,11,0,7,7,6,7,7,10,9,9,0,11,10,10,9,9,12,12,12,0,10,10,0,11,11,0,13,13,0,11,11,7,6,6,10,10,10,0,11,11,11,11,11,12,12,12,0,11,11,0,12,12,0,15,15,0,11,11,0,11,11,0,11,11,0,12,12,0,12,12,0,14,14,0,12,12,0,12,12,0,15,15,0,11,11,0,8,8,0,10,10,0,11,11,0,11,11,0,12,12,0,12,12,0,11,11,0,15,15,0,11,11,0,6,6,0,10,10,0,12,12,0,10,10,0,13,13,0,12,12,0,13,13,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,8,8,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,6,6,0,0,0,7,7,0,0,0,8,8,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,11,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,13,13,0,0,0,0,0,0,0,0,14,13,0,0,0,0,0,0,0,0,13,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,14,14,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,12,13,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,14,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,14,14,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,12,9,8,12,15,17,4,2,11,6,5,9,13,15,11,7,8,7,7,10,14,13,8,5,7,5,5,8,12,12,8,4,7,4,3,6,11,12,11,8,9,7,6,8,11,12,15,13,14,12,9,7,10,13,16,12,17,12,7,5,8,11,3,4,4,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,13,14,16,16,16,16,1,4,4,4,4,4,4,4,4,1,4,4,6,6,5,5,5,6,6,5,6,5,6,6,6,6,7,7,7,6,7,6,7,7,1,4,4,7,7,8,8,9,9,10,10,11,11,4,6,5,8,6,9,8,10,9,10,10,11,10,5,5,6,6,8,8,9,9,10,10,10,10,11,7,8,8,9,8,10,9,10,9,11,10,11,10,7,8,8,8,10,9,10,10,10,10,11,10,11,9,10,10,11,11,11,11,12,11,12,11,12,11,9,10,10,11,11,11,11,11,11,11,12,11,12,11,11,11,12,12,12,12,12,12,12,12,12,11,11,12,11,12,12,12,12,12,12,12,12,11,12,12,12,12,12,13,12,13,12,12,12,12,12,12,12,12,12,13,13,13,13,12,13,12,12,12,12,12,13,13,12,13,12,13,12,13,12,12,12,12,13,13,13,13,13,13,12,12,12,12,12,11,12,1,3,2,3,3,3,7,7,9,13,16,3,2,4,6,10,13,17,7,4,4,6,9,12,14,7,6,6,5,7,9,12,10,10,9,6,6,9,12,14,14,13,9,8,10,11,18,18,15,13,11,10,11,1,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,7,7,7,7,7,7,7,7,7,8,8,9,8,8,8,7,7,8,8,8,9,8,8,9,7,7,6,6,6,9,8,7,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,8,8,10,8,8,7,6,6,9,6,6,9,7,7,9,7,7,10,8,8,9,6,6,9,7,7,10,8,8,9,7,7,7,8,8,11,9,9,11,9,9,11,8,9,12,9,9,12,8,8,11,9,9,12,9,9,12,8,8,8,7,7,10,9,9,10,10,9,10,9,9,11,10,10,11,9,9,11,9,9,11,10,11,11,9,9,10,8,8,11,9,9,10,9,9,11,9,9,11,10,10], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+511791);\n/* memory initializer */ allocate([11,9,9,11,9,9,11,10,10,11,9,9,9,8,8,11,9,9,12,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,9,12,8,8,9,7,7,11,9,9,11,10,10,11,9,9,11,11,11,11,9,9,11,10,10,11,11,11,11,9,9,10,9,9,11,9,9,11,10,10,11,9,9,11,10,10,11,9,9,11,9,10,11,10,10,11,9,9,1,6,6,7,8,8,7,8,8,7,9,8,10,11,11,9,8,8,7,8,8,11,11,11,9,8,8,6,7,7,10,10,10,10,10,10,10,10,10,14,13,13,12,11,11,10,10,10,14,14,13,12,11,11,6,6,6,8,5,5,8,7,7,9,7,7,11,10,10,9,7,7,9,7,7,12,10,10,10,7,7,7,8,8,12,11,10,12,10,10,11,10,10,15,13,13,13,10,10,11,10,10,17,14,13,13,10,10,7,7,7,12,11,12,12,11,11,12,11,11,16,14,14,13,12,12,12,11,11,17,15,14,14,12,12,10,9,9,13,11,11,13,11,11,13,11,11,17,14,13,14,11,11,12,11,11,16,15,14,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,15,13,13,14,11,10,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,12,11,11,12,11,11,17,14,14,14,12,12,12,11,11,16,15,15,14,12,12,10,10,10,13,11,11,13,11,11,13,11,12,16,14,14,14,11,11,13,12,11,16,15,15,14,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,7,7,14,14,7,7,7,14,14,0,13,13,16,16,0,13,13,15,14,7,8,8,15,15,9,10,10,16,16,9,8,8,15,15,0,13,13,17,16,0,13,13,15,16,8,8,8,15,15,12,11,11,16,16,9,8,8,14,14,0,13,13,17,18,0,13,13,15,15,0,14,14,16,16,0,0,0,19,18,0,12,12,16,15,0,15,16,0,20,0,14,14,16,16,0,14,14,17,17,0,0,0,19,18,0,12,12,15,15,0,17,17,0,20,0,14,14,16,16,5,6,7,12,12,9,9,9,14,14,10,10,10,14,14,0,21,21,18,17,0,20,20,18,17,9,10,10,14,14,12,12,12,16,16,12,10,10,14,14,0,20,19,18,17,0,0,20,17,18,11,10,10,14,14,14,13,13,18,18,13,11,11,14,14,0,20,20,17,18,0,21,21,17,17,0,21,0,18,18,0,0,0,0,0,0,20,19,16,17,0,0,0,19,19,0,0,0,18,18,0,21,21,18,18,0,0,0,0,0,0,20,20,16,17,0,0,0,21,21,0,0,0,18,19,6,6,6,13,12,8,6,6,11,11,8,6,6,13,13,0,9,9,11,11,0,11,10,14,14,9,7,7,13,13,11,9,9,13,13,10,6,6,13,13,0,10,10,14,15,0,10,10,13,13,9,7,7,13,13,13,10,9,13,13,10,6,6,13,13,0,10,10,15,14,0,10,10,13,13,0,11,11,15,15,0,19,20,17,17,0,9,9,13,13,0,13,13,20,20,0,11,11,13,13,0,11,11,15,15,0,19,19,17,17,0,10,10,13,13,0,15,15,20,20,0,12,12,13,13,0,10,10,12,12,0,11,11,15,15,0,11,11,15,15,0,15,15,20,0,0,16,16,0,21,0,11,11,15,15,0,14,14,18,17,0,11,11,15,15,0,15,16,19,20,0,16,16,21,21,0,12,12,15,15,0,15,14,18,18,0,11,11,16,16,0,15,15,21,21,0,16,15,0,0,0,16,16,21,0,0,0,0,0,0,0,14,14,20,20,0,18,18,0,0,0,16,17,21,0,0,16,16,21,21,0,0,0,0,0,0,15,15,21,21,0,20,19,0,21,0,17,17,0,0,0,10,10,12,11,0,10,10,10,11,0,11,11,12,12,0,11,11,9,9,0,13,13,11,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,12,12,13,13,0,12,12,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,13,14,14,0,12,12,12,12,0,14,14,14,13,0,19,20,15,15,0,12,11,12,12,0,15,15,21,20,0,13,13,11,11,0,13,13,13,13,0,19,0,15,15,0,12,12,12,12,0,17,16,19,0,0,13,13,12,12,7,7,7,16,16,11,9,9,15,15,12,9,9,16,16,0,13,13,15,14,0,14,14,17,16,10,9,9,16,16,14,11,11,17,16,12,9,8,15,15,0,13,13,18,18,0,13,13,15,15,12,10,10,18,17,15,12,12,17,17,14,9,9,16,16,0,13,13,18,19,0,14,13,17,16,0,14,14,18,18,0,0,0,20,21,0,12,12,16,16,0,16,16,20,21,0,14,14,17,16,0,14,14,18,19,0,0,0,19,21,0,13,13,17,17,0,17,17,0,21,0,15,15,16,16,8,7,7,14,14,11,10,10,15,15,12,10,10,15,15,0,20,20,18,18,0,0,0,17,17,11,10,10,16,16,14,12,12,18,17,14,11,11,15,15,0,20,21,18,18,0,0,19,18,17,12,10,10,16,16,17,14,14,19,19,14,11,11,15,15,0,21,21,19,19,0,21,20,19,18,0,21,0,18,19,0,0,0,0,0,0,20,20,18,17,0,21,0,0,0,0,0,0,19,18,0,0,0,18,19,0,0,0,0,0,0,0,21,17,18,0,0,0,0,21,0,0,21,18,19,11,9,9,14,14,13,10,10,13,13,13,11,11,15,15,0,13,13,12,12,0,15,15,16,16,13,10,10,15,15,16,12,12,15,15,15,10,10,15,15,0,14,13,16,15,0,14,13,15,15,13,10,10,15,15,18,14,14,15,15,15,10,10,14,15,0,14,14,16,16,0,14,14,16,15,0,15,15,17,16,0,21,0,18,18,0,12,13,15,15,0,16,16,0,0,0,14,14,15,15,0,15,15,16,16,0,21,20,18,18,0,13,13,15,15,0,19,18,0,0,0,15,15,15,15,0,11,11,13,13,0,12,12,16,16,0,12,12,16,16,0,15,16,20,0,0,16,17,0,0,0,12,12,16,16,0,14,14,18,18,0,11,11,16,17,0,15,15,20,0,0,16,16,0,0,0,12,12,16,16,0,15,15,19,19,0,11,11,17,17,0,16,16,21,0,0,16,16,0,0,0,17,17,20,20,0,0,0,0,0,0,15,15,20,0,0,17,18,0,0,0,17,17,0,0,0,16,16,0,21,0,0,0,0,0,0,15,15,21,0,0,19,18,0,0,0,18,17,0,0,0,11,11,14,14,0,11,11,15,15,0,12,12,16,16,0,13,13,14,14,0,14,14,17,17,0,12,12,16,16,0,14,14,16,16,0,11,11,16,15,0,13,13,16,17,0,13,13,16,16,0,12,12,15,16,0,15,14,16,16,0,11,11,15,15,0,14,14,17,17,0,13,13,16,16,0,15,14,18,18,0,21,0,19,19,0,13,13,15,15,0,16,16,20,20,0,14,14,16,15,0,14,14,17,17,0,21,0,20,18,0,13,13,15,15,0,17,17,0,0,0,14,14,16,15,8,8,8,16,16,12,9,9,16,16,13,9,9,16,16,0,14,14,18,17,0,14,14,16,17,12,10,10,18,17,14,11,11,18,18,14,9,9,16,16,0,13,13,18,18,0,13,13,17,16,12,9,9,16,17,17,13,13,16,16,14,9,9,15,15,0,14,14,20,20,0,13,13,15,15,0,15,14,18,18,0,0,0,20,21,0,12,13,16,17,0,16,16,20,21,0,14,14,16,17,0,14,14,18,17,0,0,0,20,21,0,13,13,16,16,0,19,17,0,21,0,14,15,16,16,8,7,7,14,13,12,10,10,15,15,13,10,10,15,15,0,21,21,18,19,0,20,21,18,18,12,10,10,16,15,15,12,12,17,17,14,11,11,15,15,0,21,21,19,18,0,0,21,17,18,13,11,11,15,15,16,13,13,18,19,15,11,11,15,14,0,21,0,19,19,0,0,21,18,18,0,0,21,19,19,0,0,0,0,0,0,20,19,17,17,0,0,0,21,0,0,21,0,18,19,0,0,20,20,19,0,0,0,0,0,0,21,20,18,17,0,0,0,0,20,0,0,0,18,19,0,10,10,15,14,0,11,11,14,14,0,11,11,15,16,0,14,14,15,15,0,15,15,16,16,0,11,11,16,16,0,14,13,16,16,0,11,11,15,15,0,14,14,16,16,0,14,14,15,15,0,11,11,15,15,0,13,13,15,15,0,11,11,15,15,0,15,15,18,17,0,14,14,15,15,0,15,16,18,18,0,0,0,20,20,0,14,13,16,15,0,17,17,21,0,0,15,15,15,15,0,16,15,17,17,0,0,0,19,19,0,13,13,15,15,0,20,19,0,0,0,15,15,15,15,0,11,11,13,13,0,12,12,16,16,0,12,12,16,16,0,15,15,21,21,0,17,16,0,0,0,12,12,16,16,0,14,14,17,17,0,11,11,16,16,0,15,15,0,0,0,16,16,21,0,0,12,12,17,16,0,14,15,20,20,0,11,11,16,16,0,15,15,0,20,0,16,16,0,21,0,16,17,21,0,0,0,0,0,0,0,15,15,0,21,0,18,18,0,0,0,17,16,0,0,0,17,17,21,0,0,0,0,0,0,0,15,15,0,20,0,19,20,21,0,0,17,18,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,16,16,0,13,13,15,15,0,15,15,17,17,0,13,12,17,16,0,14,14,17,16,0,11,11,16,16,0,14,14,17,17,0,14,14,17,17,0,12,12,16,16,0,15,15,17,17,0,11,11,16,16,0,14,14,17,17,0,14,14,16,16,0,15,15,18,17,0,0,0,19,0,0,13,13,16,16,0,16,16,0,21,0,14,14,16,16,0,15,15,18,17,0,0,0,19,19,0,13,13,16,16,0,18,17,0,21,0,14,15,16,16,0,11,11,16,16,0,13,13,17,17,0,13,13,17,17,0,16,16,16,17,0,16,16,18,18,0,12,12,17,17,0,16,15,18,17,0,12,12,16,16,0,16,15,19,19,0,16,15,17,17,0,12,12,17,18,0,16,16,18,18,0,12,12,16,16,0,16,16,19,19,0,15,16,17,17,0,15,16,18,18,0,0,0,20,20,0,13,13,16,16,0,18,18,21,20,0,15,15,16,16,0,16,16,19,18,0,0,0,19,20,0,14,14,17,17,0,19,19,0,21,0,15,16,16,16,0,9,9,14,14,0,13,13,15,15,0,14,14,15,15,0,0,21,19,19,0,0,21,18,18,0,12,12,15,15,0,15,15,18,18,0,14,13,15,15,0,21,21,18,19,0,21,20,18,18,0,13,13,16,16,0,17,17,18,19,0,14,14,15,15,0,0,21,19,19,0,21,20,18,19,0,20,20,19,19,0,0,0,0,0,0,19,20,17,17,0,0,0,21,21,0,21,0,18,20,0,21,0,18,21,0,0,0,0,0,0,21,21,19,18,0,0,0,0,0,0,0,0,19,19,0,18,18,15,15,0,18,20,17,16,0,20,0,17,17,0,21,0,17,17,0,21,20,19,20,0,19,19,16,16,0,21,21,17,18,0,19,19,17,17,0,20,21,21,21,0,20,20,18,18,0,19,19,16,16,0,0,21,18,19,0,18,19,16,17,0,21,21,19,20,0,21,19,18,18,0,21,20,19,21,0,0,0,20,21,0,19,19,17,16,0,0,0,0,0,0,21,20,17,17,0,20,21,19,18,0,0,0,0,21,0,19,18,16,17,0,0,0,0,0,0,20,20,17,17,0,11,11,14,14,0,13,13,16,16,0,13,13,16,16,0,17,17,21,0,0,17,18,0,0,0,12,12,16,16,0,15,15,17,18,0,12,12,16,16,0,16,16,0,20,0,17,17,0,21,0,12,12,17,17,0,16,16,19,20,0,12,12,17,17,0,17,17,0,20,0,17,17,0,0,0,17,17,21,0,0,0,0,0,0,0,15,15,0,20,0,19,19,0,0,0,18,18,0,0,0,17,17,0,0,0,0,0,0,0,0,15,15,0,0,0,20,19,0,0,0,19,18,0,0,0,14,14,21,19,0,16,16,20,21,0,16,16,20,20,0,17,17,20,0,0,17,17,20,20,0,15,15,20,20,0,19,18,20,0,0,15,15,20,20,0,17,18,21,20,0,17,17,20,21,0,15,15,19,19,0,19,18,21,21,0,15,15,19,20,0,17,18,0,0,0,17,17,20,20,0,17,18,20,21,0,0,0,0,0,0,15,15,20,20,0,19,19,0,0,0,17,17,19,21,0,17,17,0,21,0,0,0,0,21,0,15,15,20,19,0,0,20,0,0,0,17,17,21,20,0,12,12,16,16,0,14,14,17,17,0,13,13,17,17,0,16,16,17,18,0,17,16,18,18,0,13,13,18,17,0,15,16,19,18,0,13,13,16,16,0,16,16,19,19,0,16,16,17,17,0,13,12,17,17,0,16,16,18,17,0,12,12,16,16,0,17,17,19,18,0,16,15,16,16,0,16,17,18,19,0,0,0,20,20,0,14,14,17,16,0,18,18,21,0,0,16,16,16,16,0,16,16,18,17,0,0,21,21,21,0,14,14,16,16,0,21,20,21,0,0,16,16,16,16,0,10,10,14,14,0,14,14,15,16,0,14,14,15,15,0,0,21,18,18,0,0,21,18,19,0,13,13,16,16,0,16,16,18,17,0,14,14,15,15,0,20,0,18,18,0,21,0,18,17,0,13,13,16,15,0,17,17,19,19,0,14,14,15,15,0,20,20,18,19,0,0,0,18,17,0,0,21,18,18,0,0,0,0,0,0,20,21,18,17,0,0,0,0,0,0,0,0,19,19,0,0,21,18,18,0,0,0,0,0,0,21,0,18,17,0,0,0,0,21,0,0,0,19,20,0,19,19,16,16,0,0,21,18,17,0,21,0,18,18,0,20,0,19,18,0,21,20,19,19,0,21,19,17,18,0,0,21,19,19,0,21,19,18,18,0,21,0,20,18,0,0,21,18,18,0,20,21,17,17,0,21,0,18,18,0,21,19,17,17,0,21,0,0,20,0,0,20,17,18,0,0,0,19,20,0,0,0,20,19,0,19,21,17,18,0,21,0,0,0,0,21,21,18,17,0,0,21,18,18,0,0,0,0,21,0,20,19,16,17,0,0,0,0,0,0,21,20,17,17,0,11,11,13,13,0,13,13,16,16,0,13,13,16,16,0,17,17,0,21,0,18,19,21,0,0,12,12,16,16,0,15,15,19,18,0,13,13,16,16,0,16,17,21,19,0,17,17,21,21,0,13,13,16,16,0,16,16,20,18,0,13,13,16,16,0,17,17,0,0,0,18,18,0,0,0,18,17,0,20,0,0,0,0,0,0,15,15,21,21,0,19,18,0,0,0,17,17,21,21,0,17,17,0,0,0,0,0,0,0,0,15,15,20,21,0,20,20,0,0,0,19,19,0,0,0,14,15,21,19,0,16,16,0,21,0,17,16,21,21,0,17,18,21,20,0,18,18,0,21,0,16,16,0,20,0,19,19,0,0,0,16,15,0,20,0,18,18,0,0,0,17,17,0,21,0,16,16,20,20,0,20,19,0,0,0,15,16,21,22,0,18,18,0,0,0,18,17,0,0,0,18,18,0,0,0,0,0,0,0,0,16,16,21,20,0,19,20,0,0,0,18,17,21,0,0,17,18,0,0,0,0,0,0,0,0,16,16,0,20,0,0,20,0,0,0,18,18,22,0,2,3,4,7,7,10,12,12,12,12,10,11,11,13,13,11,12,12,11,11,12,12,12,12,12,11,13,13,13,13,12,12,12,13,14,12,13,13,13,13,12,13,13,13,13,12,13,13,13,13,11,13,13,13,13,12,12,12,14,14,12,13,13,12,12,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,14,14,12,13,13,12,12,12,13,13,13,13,12,13,13,12,12,12,13,13,13,13,12,12,12,14,14,12,13,13,12,12,12,13,13,13,13,12,13,13,12,12,10,10,11,10,10,11,11,11,11,11,11,9,9,10,10,12,11,11,10,10,12,10,10,10,10,13,12,12,12,12,13,11,11,11,11,13,12,12,12,12,13,11,11,11,11,13,12,12,12,12,13,12,12,12,12,13,11,11,11,11,13,12,12,12,12,13,11,11,11,11,13,12,12,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,11,11,11,10,10,11,11,11,9,9,11,12,12,11,11,12,12,12,9,9,13,13,13,10,10,13,13,13,11,11,13,13,13,14,14,13,13,13,11,10,13,13,14,12,12,13,13,13,11,11,13,13,13,11,11,13,13,13,14,14,13,13,13,10,10,13,13,13,11,11,13,13,13,10,10,13,14,13,11,11,13,14,14,14,14,13,13,13,10,10,13,14,14,11,11,13,13,13,10,10,13,14,14,11,11,13,13,13,14,14,14,13,13,10,10,13,14,14,11,11,13,13,13,10,10,14,12,12,9,9,14,12,12,9,9,14,11,11,9,9,14,12,12,8,8,14,11,11,7,7,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,15,12,12,9,9,14,13,13,9,9,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,15,12,12,9,9,15,13,13,9,9,13,12,12,9,9,13,13,13,8,8,13,13,13,9,9,13,13,13,7,7,14,13,13,8,8,14,14,14,10,10,15,14,14,11,11,14,14,14,9,9,15,14,14,10,10,15,14,14,9,9,14,14,14,10,10,15,14,14,11,11,15,14,14,9,9,14,14,14,10,10,14,14,14,9,9,15,14,15,10,10,15,14,14,11,11,14,14,14,9,9,14,14,14,9,9,14,14,14,8,8,15,14,14,10,10,15,14,14,11,11,14,14,14,9,9,15,14,14,9,9,14,14,14,8,8,12,12,12,13,13,16,16,16,11,11,17,16,16,12,12,17,16,16,11,11,17,16,16,11,11,17,17,16,13,13,17,16,16,13,13,18,17,16,12,12,17,16,16,13,13,17,16,17,12,12,18,17,17,13,13,17,16,16,14,14,18,17,17,12,12,18,16,16,13,13,17,17,17,13,12,17,17,17,13,13,17,16,16,13,13,18,17,17,12,12,17,16,16,13,12,17,17,17,12,12,18,17,17,13,13,18,16,16,14,14,18,17,17,12,12,17,17,17,13,13,18,17,18,12,12,13,14,14,10,10,16,14,14,13,13,17,15,15,14,14,17,14,14,12,13,16,14,14,13,13,17,15,15,14,14,16,16,16,15,15,17,15,15,14,14,17,16,16,14,15,17,15,15,14,14,17,15,16,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,14,17,15,15,14,14,16,16,16,15,15,17,15,15,13,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,13,11,11,10,10,16,14,14,13,12,16,14,14,13,13,16,15,14,12,12,16,14,14,12,12,16,15,15,14,14,16,14,14,14,14,17,15,15,13,13,16,15,15,14,14,17,15,15,13,14,17,15,15,14,14,17,15,14,14,14,17,15,15,13,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,17,14,14,14,14,17,15,15,13,13,17,15,15,13,13,17,15,15,13,13,17,15,15,14,14,17,15,15,14,14,17,15,15,13,13,17,15,15,13,13,17,15,15,13,13,14,14,15,8,8,14,14,14,19,19,14,15,15,18,19,14,14,14,19,18,14,14,14,19,19,15,15,15,19,18,15,16,16,19,19,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,15,15,19,19,16,16,16,20,19,15,15,15,19,18,15,16,16,20,19,15,15,15,18,18,15,15,15,19,20,15,16,16,19,19,15,15,15,20,19,15,15,15,20,19,15,15,15,19,18,15,15,15,19,19,15,16,16,19,20,15,15,15,19,19,15,15,15,19,20,15,15,15,19,19,14,12,12,9,9,14,14,14,19,19,14,14,14,19,19,14,14,15,20,19,15,14,14,18,19,15,15,15,19,19,15,15,14,20,19,15,15,15,20,19,15,15,14,20,19,15,15,15,20,19,15,15,15,19,20,15,14,14,19,20,15,15,15,20,20,15,14,14,20,19,15,15,15,19,19,15,15,15,19,19,15,14,14,19,19,15,15,15,19,20,15,15,15,20,20,15,15,15,19,19,15,15,15,20,19,16,14,14,19,19,15,15,15,20,19,15,14,15,20,19,14,15,15,20,19,12,12,12,13,13,16,16,16,11,11,16,16,16,12,12,17,16,16,11,11,17,15,16,11,11,17,17,17,13,13,18,16,17,13,13,18,17,17,13,12,17,16,17,13,13,17,17,17,13,13,16,16,16,12,12,17,16,16,13,13,17,16,16,12,12,17,16,16,12,13,17,17,17,12,12,17,17,17,13,13,18,16,16,13,13,18,17,17,12,12,18,17,17,12,12,17,17,17,12,12,17,17,17,12,12,17,16,16,13,13,17,17,17,12,12,17,16,16,12,12,17,17,17,12,12,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,17,14,14,13,13,16,14,14,13,13,17,15,15,15,15,16,16,16,15,15,17,15,15,14,14,17,15,15,15,15,17,15,15,14,14,17,15,15,14,14,16,16,16,15,15,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,16,16,16,15,15,18,15,15,14,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,16,16,15,15,17,15,15,14,13,17,15,15,14,14,17,15,15,13,13,13,11,11,11,11,16,14,14,12,12,16,14,14,13,13,16,15,14,12,12,17,14,14,12,12,17,15,15,13,13,17,14,14,14,14,17,15,15,13,13,17,14,15,14,13,17,15,15,13,13,16,15,15,13,13,16,14,14,14,14,17,15,15,13,13,16,14,14,13,13,16,15,15,13,13,17,15,15,13,13,17,14,14,14,14,17,15,15,12,12,17,15,15,13,13,17,15,15,12,12,16,15,15,13,13,17,14,14,13,14,17,15,15,12,12,17,14,14,13,13,17,15,15,12,12,14,14,14,8,8,14,14,14,18,18,14,15,15,19,19,14,14,14,19,19,14,15,14,18,19,15,15,15,18,19,15,16,16,20,20,15,15,15,19,20,15,16,16,19,20,15,15,15,19,20,15,15,16,19,19,15,16,16,20,20,15,15,15,20,19,15,16,16,20,19,15,15,15,19,20,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,16,15,20,19,15,15,15,19,19,15,15,15,19,20,15,16,16,20,20,15,15,15,19,19,15,15,15,20,20,15,15,15,19,19,14,12,12,9,9,14,14,14,18,18,14,14,14,19,20,14,14,14,18,18,14,14,14,18,19,15,15,15,19,20,15,14,14,19,19,15,15,15,19,19,15,14,15,19,19,15,15,15,18,20,15,15,15,19,19,15,14,14,19,19,15,15,15,20,19,15,15,14,20,20,15,15,15,19,19,15,15,15,19,19,15,14,14,19,19,15,15,15,19,19,15,14,14,19,20,14,15,15,19,19,15,15,15,19,19,15,14,14,20,19,15,15,15,19,19,15,14,14,20,19,15,15,15,19,19,13,12,12,13,13,17,17,16,11,11,16,16,16,12,12,17,17,16,11,11,17,16,16,11,11,17,17,17,13,13,17,16,16,13,13,18,17,17,12,12,17,16,16,13,13,18,17,17,12,12,18,17,17,13,13,18,16,17,13,13,17,17,17,12,12,18,17,17,13,13,18,17,17,12,12,17,16,17,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,17,17,17,11,11,17,17,17,12,12,18,16,16,13,13,18,17,17,12,11,17,16,16,12,12,18,17,17,11,11,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,17,14,14,12,12,16,14,14,13,13,17,15,15,14,14,17,16,16,15,16,18,15,15,14,14,17,15,15,14,14,17,15,15,14,14,18,15,15,14,14,16,16,16,15,16,18,15,15,14,14,17,16,15,14,14,18,15,15,14,14,17,15,15,14,14,17,16,16,15,15,18,14,15,13,13,17,15,15,14,14,18,15,15,13,13,17,15,15,14,14,17,16,15,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,13,11,11,10,10,16,14,14,12,12,16,14,14,12,12,17,14,15,11,11,17,14,14,11,11,17,15,15,13,13,17,14,14,14,13,17,15,15,13,13,16,15,15,13,13,17,15,15,13,13,17,15,15,13,13,17,14,14,14,14,17,15,15,13,13,17,14,15,13,13,16,15,15,13,13,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,16,14,14,12,12,17,15,15,12,12,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,12,12,13,15,14,8,8,14,14,14,19,19,14,15,15,18,19,14,14,14,18,19,14,15,14,19,19,15,16,15,19,19,15,16,16,19,20,15,15,15,19,19,15,16,16,19,19,15,16,16,19,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,19,15,15,15,19,19,15,15,15,19,19,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,15,15,19,19,15,15,15,19,19,15,16,15,19,19,15,16,16,21,19,15,15,15,20,20,15,15,15,20,21,15,15,15,19,20,14,12,12,8,8,14,14,14,19,19,14,13,13,19,19,14,14,14,19,19,14,13,14,19,19,15,15,15,20,20,15,14,14,20,19,15,15,15,19,20,15,14,14,19,20,15,15,15,20,19,15,15,15,19,20,15,14,14,20,20,15,15,15,20,19,15,14,14,19,19,15,15,15,19,19,15,15,15,20,19,15,14,14,21,19,15,15,15,20,21,15,14,14,21,19,15,15,15,19,19,15,15,15,20,20,15,14,14,19,21,15,15,15,19,19,15,14,14,19,20,15,15,15,19,19,13,12,12,13,13,17,16,16,11,11,17,16,15,12,12,18,16,16,11,11,17,16,16,11,11,18,17,17,13,13,18,16,16,13,13,17,17,17,12,13,18,17,16,13,13,18,17,17,13,13,17,17,17,13,13,17,16,16,13,13,18,16,17,12,12,17,16,16,13,12,17,17,17,12,12,18,17,17,13,12,18,16,16,13,13,18,17,17,12,12,17,16,16,12,12,17,17,17,11,11,17,16,16,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,17,17,17,11,11,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,17,14,14,12,12,16,14,14,13,13,17,15,15,14,14,17,15,16,15,15,17,15,15,14,14,17,15,16,14,15,18,15,15,14,14,17,15,15,14,14,16,16,16,15,15,18,15,15,13,14,17,15,15,14,14,18,15,15,14,14,17,15,15,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,13,11,11,10,10,16,14,14,12,12,16,14,14,13,13,17,14,14,11,11,17,14,14,12,12,17,15,15,14,14,17,14,14,14,14,17,15,15,13,13,17,15,14,13,13,16,15,15,13,13,16,15,15,13,13,17,14,14,14,14,17,15,15,13,13,17,14,14,13,13,16,15,15,13,13,16,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,16,15,15,12,12,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,16,15,15,12,12,14,14,14,8,8,14,14,14,18,18,14,15,15,19,18,14,14,14,18,18,14,14,14,18,19,15,16,15,19,19,15,17,16,20,20,15,15,15,19,19,15,16,16,19,19,15,15,15,19,19,15,16,15,18,19,15,16,16,20,20,15,15,15,19,19,15,16,16,19,20,15,15,15,19,19,15,15,16,19,19,15,16,16,20,20,15,15,15,19,19,15,15,15,19,20,15,15,15,19,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,20,15,16,16,20,20,15,15,15,19,19,13,12,12,8,8,14,14,14,19,20,14,14,14,19,19,14,14,14,18,19,14,14,14,19,20,15,15,15,19,20,15,14,14,21,20,15,15,15,20,20,15,15,14,19,19,15,15,15,19,19,15,15,15,19,19,15,14,14,19,20,15,15,15,19,20,15,14,14,19,19,15,15,15,19,19,15,15,15,19,19,16,14,14,19,19,15,15,15,20,20,15,14,14,21,19,15,15,15,19,19,15,15,15,19,20,16,14,14,19,20,15,15,15,19,19,15,14,14,19,19,15,15,15,20,19,1,6,6,6,7,7,7,8,8,7,8,8,10,11,11,9,8,8,7,9,9,11,12,12,9,8,8,6,7,7,9,11,11,10,11,11,10,11,11,13,13,13,11,12,12,10,11,11,13,14,14,12,12,12,6,6,6,8,6,6,8,6,6,9,7,7,12,10,10,10,6,6,9,7,7,12,10,10,11,7,6,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,10,10,12,11,11,15,13,13,14,11,11,8,7,7,12,11,11,12,11,11,11,11,11,14,14,14,13,12,12,12,11,11,16,15,15,14,12,12,0,10,10,0,11,11,0,12,12,0,11,11,0,14,14,0,11,11,0,11,11,0,15,15,0,11,11,7,8,8,13,10,10,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,13,11,11,12,11,11,15,14,14,14,12,12,13,12,12,15,14,14,15,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,12,12,0,15,14,0,12,12,1,3,3,0,8,8,0,8,8,0,10,10,0,9,9,0,10,10,0,10,10,0,9,9,0,10,10,0,7,7,0,7,7,0,7,7,0,8,8,0,8,8,0,8,8,0,9,9,0,8,8,0,8,8,0,7,7,0,8,8,0,8,8,0,10,10,0,9,9,0,9,9,0,10,10,0,9,9,0,10,10,0,8,8,0,11,11,0,11,11,0,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,12,12,0,8,8,0,11,11,0,11,11,0,13,12,0,12,12,0,13,12,0,13,13,0,12,12,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,11,11,0,11,11,0,13,12,0,12,12,0,12,12,0,12,12,0,11,11,0,12,12,0,8,8,0,12,12,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,12,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,7,7,0,8,8,0,9,9,0,12,12,0,8,8,0,9,9,0,12,12,0,8,8,0,6,6,0,11,11,0,11,11,0,12,12,0,14,14,0,11,11,0,12,12,0,14,14,0,11,11,0,6,6,0,6,5,0,7,6,0,7,7,0,10,10,0,6,6,0,7,7,0,10,10,0,7,7,0,7,7,0,10,10,0,11,11,0,11,11,0,14,14,0,10,10,0,12,12,0,14,14,0,12,12,0,6,6,0,11,11,0,11,11,0,12,12,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,11,11,0,11,11,0,12,12,0,15,15,0,12,12,0,11,11,0,15,15,0,11,11,0,6,6,0,11,11,0,12,12,0,12,12,0,15,15,0,11,11,0,12,12,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,7,8,10,13,14,4,2,4,6,8,11,12,7,4,3,5,8,12,14,8,5,4,4,8,12,12,9,7,7,7,9,10,11,13,11,11,9,7,8,10,13,11,10,6,5,7,9,3,4,4,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,12,14,14,14,15,15,1,4,4,4,4,4,4,4,4,1,4,4,6,6,5,5,5,7,5,5,5,5,6,7,7,6,7,7,7,6,7,7,7,7,1,3,4,7,7,8,8,9,9,9,10,10,10,5,6,5,8,7,9,8,9,9,10,9,11,10,5,5,7,7,8,8,9,9,9,9,10,10,11,8,9,8,10,9,10,9,10,9,11,10,11,10,8,8,9,9,10,9,10,9,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,10,12,12,12,12,12,12,12,11,12,12,12,11,11,11,12,12,12,12,12,12,12,11,12,11,12,11,11,13,12,12,12,13,12,12,12,12,11,12,11,11,13,13,13,12,12,12,12,12,12,11,11,11,10,13,13,13,12,13,12,13,11,13,10,12,11,11,13,13,12,13,12,12,12,12,11,12,11,11,11,1,3,2,3,2,3,6,7,10,14,16,3,2,5,7,11,14,17,6,5,5,7,10,12,14,7,7,6,6,7,9,13,10,11,9,6,6,9,11,15,15,13,10,9,10,12,18,18,16,14,12,13,16,1,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,7,7,7,8,8,7,7,7,7,8,8,8,8,9,8,7,7,8,8,8,9,9,9,9,7,7,6,6,6,9,7,7,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,8,8,10,8,8,7,6,6,9,6,6,9,6,6,9,7,7,10,8,8,9,6,6,9,7,7,10,8,8,9,7,7,7,8,8,11,9,9,11,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,10,9,12,8,8,8,7,7,10,9,9,11,9,9,11,9,9,11,11,10,11,9,9,11,10,9,11,10,11,11,9,9,10,8,8,11,9,9,11,9,9,11,9,9,11,10,10,11,9,9,11,9,9,11,10,10,11,9,9,9,8,8,12,9,9,12,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,9,12,8,8,9,7,7,11,9,10,11,10,9,11,9,9,11,11,11,11,9,9,11,10,10,11,11,11,11,9,9,10,9,9,11,9,9,11,10,10,11,10,9,11,10,10,11,9,9,11,10,10,11,10,11,11,9,9,1,6,6,6,8,8,7,8,8,7,9,8,10,11,11,9,8,8,7,8,8,11,11,11,9,8,8,6,7,7,10,10,10,10,10,10,10,10,10,14,13,13,12,11,11,10,10,10,14,14,13,13,11,11,6,6,6,8,5,5,8,7,7,8,7,7,11,9,9,9,7,7,8,7,7,12,10,10,10,7,7,7,8,8,12,11,11,12,10,10,11,10,10,14,13,13,13,10,10,11,10,11,16,14,14,13,10,10,7,8,7,12,12,12,12,11,11,12,11,11,16,14,15,13,12,12,11,11,11,17,15,14,14,13,13,10,9,9,13,11,11,13,11,11,12,11,11,16,14,13,14,11,11,12,11,11,16,15,14,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,16,14,13,13,11,11,12,10,10,16,14,14,13,10,10,8,8,8,12,12,12,12,11,11,12,11,11,16,14,15,14,12,12,12,11,11,16,15,15,14,12,12,10,10,10,13,11,11,13,11,11,12,12,12,16,14,14,14,11,11,12,11,11,17,14,15,14,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,8,8,14,14,7,7,7,14,14,0,13,13,15,16,0,13,13,15,15,7,8,8,15,15,9,10,10,16,16,9,8,8,14,15,0,13,13,17,17,0,13,13,16,16,8,8,8,15,15,12,11,11,16,16,9,8,8,14,14,0,13,13,17,17,0,13,13,15,15,0,14,14,16,16,0,0,0,18,19,0,12,12,16,15,0,16,16,0,20,0,14,14,16,16,0,14,14,17,17,0,0,0,19,19,0,12,12,15,15,0,18,17,21,21,0,14,14,16,16,5,7,7,12,13,9,10,9,14,14,11,10,10,14,14,0,0,0,18,17,0,20,21,18,18,9,10,10,14,14,12,12,12,17,16,12,10,10,14,14,0,20,20,18,17,0,21,21,17,17,11,10,10,14,14,15,13,13,18,18,13,11,11,14,14,0,20,0,18,18,0,20,21,18,17,0,21,0,18,19,0,0,0,0,21,0,21,20,16,17,0,0,0,21,21,0,0,0,20,18,0,20,0,17,18,0,0,0,0,0,0,0,20,16,17,0,0,0,20,0,0,0,0,18,18,6,6,6,13,13,8,5,5,11,11,9,6,6,13,13,0,9,9,12,12,0,10,10,14,14,9,7,7,13,13,12,9,9,13,13,10,6,6,13,13,0,10,10,14,14,0,10,10,13,13,9,7,7,13,13,13,10,10,13,13,11,6,6,13,13,0,10,10,15,15,0,10,10,13,13,0,12,11,15,15,0,20,19,17,16,0,9,9,13,13,0,13,13,20,19,0,11,11,13,13,0,11,11,15,15,0,20,19,17,17,0,10,10,13,13,0,14,15,0,21,0,12,12,13,13,0,10,10,12,12,0,11,11,15,15,0,11,11,15,15,0,15,15,20,20,0,16,16,0,0,0,11,11,15,15,0,14,14,17,17,0,11,11,15,15,0,15,15,20,21,0,16,16,21,21,0,12,12,15,15,0,15,15,18,20,0,11,11,16,15,0,15,15,21,21,0,16,16,0,21,0,16,16,0,0,0,0,0,0,0,0,14,14,21,21,0,17,18,0,0,0,16,17,20,0,0,16,16,0,0,0,0,0,0,0,0,15,15,20,20,0,19,18,0,21,0,18,17,0,0,0,10,10,11,11,0,10,10,10,10,0,11,11,12,12,0,11,11,9,9,0,13,13,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,12,12,13,13,0,12,12,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,13,13,13,0,12,12,12,12,0,14,13,13,13,0,19,21,15,15,0,12,11,12,12,0,16,15,19,19,0,13,13,11,11,0,13,13,13,13,0,0,21,15,16,0,12,12,12,12,0,16,16,19,21,0,13,13,12,12,7,7,7,16,16,11,9,9,16,16,12,9,9,16,16,0,13,13,16,16,0,14,14,17,16,11,9,9,16,16,14,12,11,17,17,13,8,9,15,15,0,13,13,19,19,0,13,13,16,15,12,10,10,17,17,15,12,12,19,18,14,9,9,17,16,0,14,14,18,0,0,14,13,16,16,0,14,15,18,17,0,21,0,19,21,0,12,12,16,16,0,16,16,0,0,0,14,14,16,16,0,14,14,18,18,0,0,21,20,0,0,13,13,16,17,0,18,18,0,0,0,15,14,17,16,8,7,7,14,14,11,10,10,15,15,13,10,10,15,15,0,21,20,19,19,0,21,0,17,18,11,10,10,15,16,14,12,12,18,18,14,11,11,15,14,0,21,20,18,19,0,0,21,18,18,12,11,11,16,16,16,14,14,18,20,14,11,11,16,15,0,20,20,19,19,0,0,20,18,18,0,21,0,18,19,0,0,0,0,0,0,20,20,17,18,0,0,0,20,20,0,0,0,19,19,0,0,0,20,18,0,0,0,0,0,0,0,21,18,18,0,21,21,0,21,0,0,0,19,20,11,9,9,14,14,13,10,10,14,14,13,11,11,15,15,0,13,13,13,13,0,14,14,16,16,13,11,11,15,15,16,12,12,15,15,14,10,10,14,14,0,14,14,16,16,0,14,14,15,15,13,10,10,15,15,17,13,14,15,16,15,10,10,15,15,0,14,14,17,16,0,14,14,15,15,0,15,15,17,17,0,0,21,18,18,0,13,13,15,15,0,16,16,21,20,0,14,14,15,14,0,15,14,16,17,0,0,20,20,19,0,13,13,15,15,0,19,18,0,0,0,15,15,15,15,0,11,11,14,14,0,12,12,16,16,0,12,12,16,16,0,15,16,21,21,0,16,17,21,0,0,12,12,17,16,0,14,14,18,19,0,11,11,16,16,0,15,15,20,21,0,16,16,21,0,0,12,12,17,16,0,15,15,19,19,0,12,12,16,17,0,16,15,0,0,0,16,16,0,0,0,17,17,0,21,0,0,0,0,0,0,14,15,20,0,0,17,17,0,0,0,17,17,0,0,0,17,16,0,0,0,0,0,0,0,0,15,15,0,0,0,18,18,0,0,0,18,17,0,0,0,11,11,14,14,0,12,12,15,15,0,12,12,15,15,0,13,13,14,14,0,14,14,17,17,0,12,12,16,16,0,14,14,16,16,0,11,11,15,15,0,13,13,16,17,0,13,13,16,16,0,12,12,15,15,0,14,14,17,16,0,11,11,15,15,0,14,14,17,17,0,13,13,16,16,0,15,15,17,18,0,21,20,20,21,0,12,12,15,15,0,16,16,20,21,0,14,14,15,15,0,14,14,17,17,0,0,0,18,19,0,12,13,15,15,0,18,17,21,0,0,14,15,15,15,8,8,8,16,16,12,10,10,16,16,13,9,9,16,16,0,14,14,18,17,0,14,14,16,17,12,10,10,18,17,14,12,11,18,18,14,9,9,16,16,0,13,13,18,18,0,13,13,17,16,12,9,9,16,17,17,13,13,17,17,14,9,9,15,15,0,14,14,20,19,0,13,13,16,16,0,15,15,19,18,0,0,0,20,19,0,12,13,17,17,0,16,16,20,0,0,14,14,16,17,0,14,14,19,18,0,0,0,20,20,0,13,13,16,16,0,18,17,0,0,0,15,15,16,16,9,7,7,14,14,12,10,10,15,15,13,10,10,15,15,0,21,0,18,19,0,20,21,19,18,12,10,10,16,15,15,13,13,18,18,14,11,11,15,15,0,0,0,19,18,0,0,21,18,18,13,11,11,15,15,16,14,14,17,19,15,11,11,15,15,0,21,21,20,18,0,0,21,18,18,0,0,21,21,19,0,0,0,0,0,0,19,20,18,17,0,0,0,21,21,0,21,0,20,18,0,0,21,19,19,0,0,0,0,0,0,20,21,17,17,0,0,0,0,0,0,21,0,18,20,0,10,10,14,14,0,11,11,15,15,0,11,11,15,15,0,14,14,15,15,0,15,15,16,16,0,11,12,16,16,0,13,13,16,16,0,11,11,15,15,0,14,14,17,17,0,14,14,15,15,0,11,11,16,15,0,14,14,15,15,0,11,11,15,15,0,15,15,17,17,0,14,14,15,15,0,16,16,18,18,0,0,0,20], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+522031);\n/* memory initializer */ allocate([19,0,14,13,16,15,0,17,17,21,0,0,15,15,15,15,0,16,15,17,16,0,20,0,20,18,0,13,14,15,15,0,19,18,0,21,0,15,15,15,15,0,11,11,14,14,0,12,12,16,16,0,12,12,16,16,0,16,15,20,21,0,17,16,0,0,0,12,12,16,16,0,14,14,18,18,0,11,11,16,16,0,15,15,21,20,0,16,16,0,0,0,12,12,16,17,0,15,14,19,19,0,11,12,16,16,0,15,15,21,0,0,16,16,0,0,0,16,17,0,0,0,0,0,0,0,0,15,15,21,0,0,17,17,0,0,0,17,17,0,0,0,17,16,0,0,0,0,0,0,0,0,15,15,0,20,0,19,20,0,0,0,17,17,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,16,16,0,13,13,15,15,0,15,15,17,17,0,13,13,17,16,0,14,14,17,17,0,11,11,16,16,0,14,14,17,17,0,13,13,16,16,0,12,12,16,16,0,15,15,16,17,0,11,11,15,16,0,14,14,17,17,0,13,14,16,16,0,15,15,18,18,0,21,20,20,19,0,13,13,16,17,0,16,16,0,0,0,14,14,16,16,0,15,15,18,18,0,0,0,20,19,0,13,13,16,16,0,17,17,0,0,0,14,14,16,16,0,11,11,16,16,0,13,13,18,17,0,13,13,17,17,0,16,16,17,17,0,16,16,17,18,0,12,12,17,17,0,15,15,18,18,0,12,12,16,16,0,16,16,19,19,0,15,15,16,17,0,12,12,17,17,0,17,17,18,18,0,12,12,17,17,0,16,16,19,19,0,15,16,17,17,0,16,16,18,17,0,0,0,21,21,0,13,13,16,16,0,17,17,0,20,0,15,15,16,17,0,16,16,19,18,0,0,21,20,21,0,14,14,17,16,0,20,0,0,0,0,15,16,16,17,0,9,9,14,14,0,13,13,16,16,0,14,14,15,15,0,0,20,19,19,0,0,0,19,19,0,12,12,15,15,0,15,16,19,18,0,14,14,15,15,0,21,0,18,18,0,20,0,17,18,0,13,13,16,16,0,17,17,17,19,0,14,14,16,15,0,21,20,20,19,0,0,0,19,19,0,0,0,19,18,0,0,0,0,0,0,20,20,17,18,0,0,0,21,21,0,0,0,18,18,0,21,0,18,19,0,0,0,0,0,0,20,21,18,18,0,0,0,20,21,0,0,0,19,19,0,18,18,15,15,0,20,21,17,17,0,19,21,17,17,0,0,0,17,18,0,0,0,20,19,0,19,19,17,17,0,0,0,18,18,0,19,20,16,17,0,0,21,20,20,0,19,20,19,18,0,19,20,16,16,0,0,0,18,19,0,19,20,17,17,0,0,21,0,20,0,21,21,17,19,0,20,0,19,20,0,0,0,20,0,0,19,18,17,16,0,0,0,0,0,0,0,20,17,17,0,20,21,18,20,0,0,0,0,21,0,19,20,17,17,0,0,0,0,0,0,20,21,17,17,0,11,11,14,14,0,13,13,16,17,0,13,13,16,16,0,17,17,0,21,0,18,17,21,0,0,13,13,16,16,0,15,15,18,18,0,12,12,16,16,0,17,16,21,0,0,17,17,0,0,0,12,12,17,17,0,17,17,19,21,0,13,12,16,16,0,17,17,0,0,0,17,17,0,0,0,18,17,0,21,0,0,0,0,0,0,15,15,20,0,0,20,18,0,0,0,17,18,0,0,0,16,17,0,0,0,0,0,0,0,0,15,15,0,0,0,19,19,0,0,0,18,18,0,0,0,14,14,18,18,0,16,16,0,21,0,16,16,21,21,0,17,17,0,20,0,17,17,20,0,0,16,15,0,0,0,20,20,0,0,0,15,15,20,20,0,17,17,21,0,0,17,18,20,20,0,15,15,20,20,0,18,18,0,0,0,15,15,19,20,0,17,18,0,0,0,17,17,20,20,0,18,17,21,0,0,0,0,0,21,0,15,15,20,20,0,19,19,0,0,0,17,17,21,0,0,17,17,0,0,0,0,0,21,0,0,15,15,19,19,0,20,21,0,0,0,18,17,21,21,0,12,12,16,16,0,14,14,17,17,0,13,13,17,18,0,16,16,18,17,0,16,16,18,18,0,13,13,18,18,0,15,16,19,18,0,13,13,16,16,0,16,16,20,18,0,16,16,17,17,0,12,13,17,17,0,17,16,18,18,0,12,12,16,16,0,17,16,20,19,0,16,16,16,16,0,16,17,18,20,0,0,0,21,20,0,14,14,17,16,0,19,18,0,20,0,16,16,17,16,0,16,16,17,18,0,0,21,21,21,0,14,14,16,16,0,20,20,21,0,0,16,16,16,16,0,10,10,14,14,0,14,14,15,16,0,14,14,15,15,0,0,21,18,18,0,0,21,18,19,0,13,13,16,16,0,16,16,18,18,0,14,14,15,15,0,21,0,18,18,0,21,0,18,18,0,13,13,16,16,0,17,17,19,20,0,14,14,15,15,0,0,0,18,20,0,0,21,18,18,0,0,21,19,18,0,0,0,0,0,0,20,21,18,17,0,0,0,21,21,0,0,0,19,19,0,21,0,18,19,0,0,0,0,0,0,21,20,17,17,0,0,21,20,0,0,0,0,19,19,0,19,20,15,16,0,0,20,18,17,0,20,21,17,18,0,21,0,18,18,0,0,0,19,19,0,20,20,17,18,0,0,0,18,19,0,20,20,18,17,0,0,0,0,20,0,0,21,17,18,0,20,21,17,17,0,0,0,18,18,0,19,19,17,17,0,0,0,21,21,0,20,20,17,17,0,0,0,21,19,0,0,0,20,19,0,21,20,17,18,0,0,0,0,0,0,0,20,18,17,0,21,20,18,18,0,0,0,20,21,0,20,20,17,17,0,0,0,0,0,0,20,0,17,17,0,11,11,13,14,0,13,13,16,16,0,13,13,16,16,0,17,17,0,0,0,17,18,0,0,0,13,13,16,16,0,15,16,18,18,0,13,13,16,17,0,16,17,20,0,0,17,18,20,0,0,13,13,17,17,0,16,16,20,21,0,13,13,16,16,0,17,17,21,0,0,17,18,0,0,0,17,18,0,21,0,0,0,0,0,0,15,15,20,0,0,19,19,0,0,0,17,17,0,0,0,18,17,21,20,0,0,0,0,0,0,16,16,20,21,0,21,20,0,21,0,19,21,0,0,0,15,15,0,0,0,16,17,0,19,0,16,16,0,0,0,17,17,0,0,0,19,18,0,0,0,16,16,20,20,0,20,18,21,0,0,15,15,21,21,0,18,18,0,0,0,18,19,0,0,0,16,15,0,21,0,20,19,0,0,0,16,16,0,0,0,20,18,0,21,0,17,18,21,0,0,18,19,0,0,0,0,0,0,0,0,16,16,20,20,0,19,20,0,0,0,17,17,0,0,0,18,17,20,21,0,0,0,0,0,0,16,16,0,20,0,20,22,0,0,0,18,18,0,22,2,4,4,8,8,10,12,12,11,11,9,11,11,12,13,11,12,12,11,11,11,12,12,12,12,10,13,12,13,13,11,12,12,13,13,11,12,12,13,13,11,12,13,13,13,11,13,13,13,13,10,13,13,12,13,11,12,12,14,14,11,13,12,12,12,11,12,12,13,13,11,13,13,12,12,11,13,13,13,13,11,12,12,13,13,11,13,13,12,12,11,12,12,13,13,11,13,13,12,12,11,13,13,13,13,11,12,12,14,14,11,13,13,12,12,11,12,12,13,13,11,13,13,12,12,11,10,10,10,10,12,10,10,11,11,11,8,8,11,11,13,10,10,10,10,12,10,10,10,10,13,11,11,11,11,13,10,10,11,11,13,11,11,12,12,13,11,11,11,11,13,11,11,12,12,13,11,11,12,12,13,10,10,11,11,13,11,11,11,11,13,11,10,11,11,13,11,11,11,11,13,11,11,11,11,13,10,10,11,11,13,11,11,11,11,12,10,11,11,11,13,11,11,11,11,13,11,11,11,11,13,10,10,11,11,13,11,11,11,11,13,11,11,11,11,13,11,11,11,11,11,10,10,10,10,12,10,10,9,9,12,12,12,11,11,13,12,12,9,9,13,12,12,10,10,12,12,12,12,12,13,13,13,14,14,13,12,12,11,11,13,13,13,12,12,13,12,12,11,11,13,12,13,11,11,13,13,13,14,14,13,12,12,10,10,13,13,13,11,11,13,12,12,10,10,13,13,13,11,11,13,13,13,14,14,13,12,12,10,10,13,13,13,11,11,13,12,13,10,10,13,13,13,11,11,13,13,13,14,14,13,12,12,10,10,13,13,13,11,11,13,13,12,10,10,14,12,12,8,8,14,12,12,9,9,14,11,11,9,9,14,12,12,8,8,14,11,11,7,7,14,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,12,9,9,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,14,12,12,9,9,14,13,13,9,9,14,13,13,9,9,15,12,12,9,9,15,13,13,9,9,14,12,12,9,9,14,13,13,9,9,14,13,13,9,9,15,12,12,9,9,14,13,13,9,9,14,12,12,9,9,14,13,13,9,9,13,12,12,8,8,13,13,13,8,8,14,13,13,9,9,13,13,13,7,7,14,13,13,8,8,14,14,14,10,10,14,14,14,11,11,14,14,14,9,9,14,14,14,10,10,14,14,14,9,9,14,14,14,10,9,15,14,14,11,11,14,14,14,9,9,14,14,14,10,10,14,14,14,9,9,14,14,14,9,9,15,14,14,11,11,14,14,14,8,8,14,14,14,9,9,14,14,14,8,8,14,14,14,9,9,15,14,14,11,11,14,14,14,8,8,14,14,14,9,9,14,14,14,8,8,12,12,12,13,13,16,15,15,11,11,16,15,16,12,12,17,16,16,11,11,17,15,15,12,11,16,16,16,12,13,16,15,15,13,13,16,16,16,12,12,16,16,15,13,13,16,16,16,12,12,16,16,16,13,13,17,16,16,14,14,17,17,16,12,12,17,16,16,13,13,17,17,16,12,13,16,16,17,13,12,17,16,16,14,13,17,16,16,12,12,17,16,16,12,12,17,16,17,12,12,17,17,17,13,13,16,16,16,13,14,17,17,16,12,12,16,16,16,13,13,17,17,17,12,12,13,14,14,10,10,16,14,14,12,12,16,15,15,14,14,16,14,14,12,12,15,14,14,13,13,17,15,15,14,13,16,16,15,15,15,16,15,15,14,14,16,15,15,14,14,17,15,15,14,14,16,15,15,14,14,16,16,15,15,15,17,15,15,13,13,16,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,15,15,15,15,16,14,14,13,13,16,15,15,14,14,16,14,14,13,13,17,15,15,14,14,16,16,15,15,15,17,14,14,13,13,16,15,15,14,14,17,14,14,13,13,13,11,11,10,10,16,14,14,13,13,15,14,14,13,13,16,14,14,12,12,16,14,14,12,12,15,15,15,14,14,16,14,14,14,14,16,15,14,14,14,16,14,14,14,14,16,15,15,14,13,16,15,15,14,14,16,14,14,14,14,17,15,15,14,14,16,14,14,14,14,16,15,15,13,14,16,15,15,14,14,16,14,14,14,14,16,15,15,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,14,14,16,14,14,14,14,17,15,15,13,13,16,15,14,13,13,17,15,15,13,13,14,14,14,9,9,14,14,14,17,17,14,15,15,18,18,14,14,14,18,19,14,14,14,18,18,15,15,15,19,18,15,16,15,18,20,15,15,15,18,19,15,15,15,19,19,15,15,15,18,20,15,15,15,18,19,15,15,16,20,18,15,15,15,18,18,15,15,15,19,19,15,15,15,18,19,15,15,15,18,19,15,15,15,19,19,14,15,14,19,19,15,15,15,20,19,15,14,14,19,18,14,15,15,18,19,15,15,16,20,20,14,14,14,18,19,15,15,15,19,18,14,14,14,18,18,14,12,12,9,9,13,14,14,18,18,14,13,13,18,19,14,14,14,18,18,14,14,14,18,18,15,15,15,19,19,15,14,14,19,18,14,15,15,19,18,15,14,14,18,18,15,15,15,19,18,14,15,15,19,19,15,14,14,19,18,14,15,15,19,18,15,14,14,19,18,14,15,15,19,18,15,15,15,21,18,15,14,14,19,18,14,15,15,18,19,14,15,14,20,19,14,15,15,18,19,14,15,15,19,19,15,14,14,19,20,14,15,15,18,18,14,14,14,19,19,14,15,15,19,18,12,12,12,13,13,16,15,15,11,11,16,15,15,12,12,16,16,16,11,11,16,15,15,11,11,16,16,16,13,13,17,16,16,13,13,17,17,17,12,12,16,16,16,13,13,17,16,17,13,12,15,16,16,12,12,16,15,15,13,13,17,16,16,12,12,16,16,15,12,12,16,16,16,12,12,17,17,16,13,12,16,16,16,13,13,17,16,16,12,12,17,16,16,12,12,17,17,16,12,12,16,17,16,12,12,17,15,15,13,13,17,16,16,12,12,16,16,16,12,12,16,16,16,12,12,13,13,13,9,9,15,14,14,13,13,16,15,14,14,14,16,14,14,13,13,15,14,14,13,13,17,15,15,14,14,16,15,15,15,15,16,15,15,14,14,16,15,15,15,15,17,15,15,14,14,16,15,15,14,14,16,15,15,15,15,17,14,15,14,14,16,15,15,14,14,17,15,15,13,14,17,15,15,14,14,16,15,15,15,15,17,14,14,13,13,16,15,15,14,14,17,14,14,13,13,17,15,15,14,14,16,15,16,15,15,17,14,14,13,13,16,15,15,14,14,18,14,14,13,13,13,11,11,11,11,15,14,14,12,12,15,14,14,13,13,16,14,14,12,12,16,13,14,12,12,16,15,15,13,13,16,14,14,14,14,16,15,15,13,13,16,14,14,13,13,16,14,15,13,13,15,15,15,13,13,16,14,14,14,13,16,14,14,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,13,13,16,14,14,14,14,16,15,15,12,12,16,14,14,13,13,16,15,15,12,12,16,15,15,13,13,16,14,14,14,14,17,15,14,12,12,16,14,14,13,13,16,15,15,12,12,14,14,14,8,8,14,14,14,17,18,14,15,15,17,18,14,14,14,17,18,14,14,14,18,18,14,15,15,18,18,14,16,15,19,19,15,15,15,18,19,15,16,15,20,19,15,15,15,18,18,14,15,15,18,19,15,16,16,20,19,15,15,15,19,17,14,15,15,20,18,14,15,15,18,18,14,15,15,18,19,14,15,15,19,20,14,14,14,18,18,14,15,15,18,19,14,14,14,18,19,14,15,15,19,18,15,16,16,20,21,14,14,15,19,19,14,15,15,19,19,14,14,14,19,18,13,12,12,9,9,13,14,14,18,19,14,14,14,18,19,14,14,14,18,18,14,14,14,18,18,14,15,15,19,19,15,14,14,19,18,15,15,15,19,19,15,14,14,19,20,14,15,15,18,19,14,15,15,20,18,15,14,14,18,18,14,15,15,18,18,14,14,14,19,19,14,15,15,18,18,14,15,15,19,18,15,14,14,19,19,14,15,15,19,18,15,14,14,19,18,14,14,15,18,19,14,15,15,19,18,15,14,14,18,19,14,15,14,19,20,14,14,14,19,19,14,15,15,19,19,12,12,12,13,13,16,16,16,11,11,16,16,16,12,12,17,16,16,11,11,17,15,15,11,11,16,16,16,13,13,17,15,16,13,13,16,16,16,12,12,17,16,16,13,13,17,17,16,12,12,17,17,16,13,13,17,16,16,13,13,17,17,17,12,12,17,16,16,13,13,17,17,17,12,12,16,16,16,12,12,17,15,15,13,13,17,16,16,11,11,17,16,16,12,12,16,16,16,11,11,16,17,16,12,12,17,16,16,13,13,17,17,16,12,12,17,17,16,12,12,17,16,16,11,11,13,14,14,9,9,16,14,14,13,13,16,14,15,14,14,16,14,14,12,12,16,14,14,13,13,17,15,15,14,14,16,15,15,15,15,17,15,15,14,14,16,15,15,14,14,17,15,15,14,14,16,15,15,14,14,16,15,15,15,16,17,14,15,14,14,16,15,15,14,14,17,15,15,14,14,16,15,15,14,14,16,15,15,15,15,17,14,14,13,13,16,15,15,14,14,16,14,14,13,13,17,15,15,14,14,16,16,15,15,15,17,14,14,13,13,16,15,15,14,14,17,14,14,13,13,13,11,11,10,10,16,14,14,12,12,15,13,13,13,12,16,14,14,11,11,16,14,14,11,11,16,14,15,13,14,16,14,14,13,13,16,15,15,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,13,13,17,14,14,14,14,17,15,15,13,13,16,14,15,13,13,16,15,15,13,13,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,15,15,12,12,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,17,14,14,12,12,16,15,15,12,12,13,14,14,8,8,13,14,14,18,18,13,15,15,17,18,14,14,14,18,19,14,14,14,19,18,14,15,15,19,18,15,15,16,21,18,15,15,15,19,19,14,16,16,19,19,14,15,15,18,19,14,15,15,19,20,14,16,16,19,18,15,15,15,18,19,14,15,15,19,18,15,15,15,18,18,15,15,15,20,18,15,16,16,20,19,14,15,14,18,19,14,15,16,19,20,14,15,15,19,18,15,15,15,19,18,15,16,16,20,19,15,14,14,18,18,14,15,15,19,19,14,15,15,18,18,13,12,12,8,8,13,14,14,19,18,14,13,13,20,18,14,14,14,19,18,14,13,13,18,19,14,15,15,20,19,15,14,14,19,19,14,15,15,19,18,15,14,14,20,20,15,15,15,19,18,14,15,15,19,18,15,14,14,19,18,14,15,15,20,19,14,14,14,20,19,14,15,15,19,18,15,15,15,18,18,15,14,14,18,18,14,15,15,19,19,14,14,14,19,19,14,15,15,19,19,15,15,15,19,18,15,14,14,20,19,15,15,15,19,19,14,14,14,20,19,14,15,15,20,20,12,12,12,13,13,17,16,16,11,11,16,16,15,12,12,17,16,16,11,11,17,15,15,11,11,17,17,17,13,13,17,16,16,13,13,17,17,17,12,12,17,16,16,13,13,17,17,16,12,13,16,17,16,13,13,17,16,15,13,13,17,16,16,12,12,17,16,16,12,13,17,16,17,12,12,17,17,17,12,12,17,16,15,13,13,17,16,16,12,12,17,16,16,12,12,17,16,16,11,11,16,16,16,12,12,17,15,15,13,13,17,16,15,11,11,16,16,16,12,12,17,16,16,11,11,13,14,14,9,9,16,14,14,13,13,16,14,15,14,14,16,14,14,12,12,16,14,14,13,13,17,15,15,14,15,16,15,15,15,15,17,15,15,14,14,16,15,15,15,14,16,15,15,14,14,16,15,15,14,14,16,15,16,15,15,17,15,14,14,14,16,15,15,14,14,17,15,15,13,13,16,15,15,14,14,16,16,16,15,15,17,14,14,13,13,16,15,15,14,14,18,14,15,13,13,16,15,15,14,14,16,16,15,15,15,16,14,14,13,13,16,15,15,14,14,17,14,15,13,13,13,11,11,10,10,15,14,14,12,12,15,14,14,13,13,16,14,14,12,12,16,13,14,12,12,16,14,15,14,13,16,14,14,14,14,16,15,15,13,13,16,14,14,13,13,16,15,15,13,13,15,15,15,13,13,16,14,14,14,14,17,15,15,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,14,15,12,12,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,15,15,12,12,14,14,14,8,8,14,14,14,17,17,14,15,15,18,18,14,14,14,18,17,14,14,14,18,18,14,15,15,18,20,15,16,15,19,18,15,15,15,19,18,15,15,16,19,18,15,15,15,18,18,14,15,15,18,18,15,16,16,18,19,15,15,15,18,18,15,15,15,19,20,15,15,15,18,18,15,15,15,18,18,15,16,16,19,19,15,14,15,19,19,15,15,15,19,20,14,14,15,18,18,15,15,15,19,19,15,16,16,19,19,15,15,14,18,19,15,15,15,20,20,15,15,14,18,18,13,12,12,8,8,13,14,14,18,18,14,14,14,18,18,14,14,14,18,20,14,14,14,18,18,14,15,15,19,18,15,14,14,18,19,15,15,15,18,19,15,14,14,18,19,15,15,15,18,18,14,15,14,18,19,15,14,14,21,19,15,15,15,19,18,14,14,14,19,18,14,15,15,19,18,15,15,15,20,19,15,14,14,20,18,14,15,15,18,19,14,14,14,19,18,14,15,15,18,19,15,15,15,18,19,15,14,14,19,19,15,15,15,19,19,14,14,14,19,20,14,15,15,18,19,1,6,6,7,8,8,7,8,8,7,9,9,10,12,11,9,8,8,7,9,9,11,12,12,9,9,9,6,7,7,10,11,11,10,11,11,10,11,11,13,13,14,12,12,12,11,11,11,14,14,14,12,12,12,6,5,5,9,6,5,9,6,6,9,7,7,12,10,10,11,6,6,10,7,7,13,10,10,12,7,7,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,9,9,12,11,11,16,13,13,15,11,11,8,7,7,12,12,12,12,11,11,12,11,11,14,14,14,14,12,12,12,12,12,16,15,15,14,12,12,0,10,10,0,12,12,0,12,12,0,11,11,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,8,8,8,13,11,11,13,10,10,13,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,9,7,7,13,11,11,13,11,11,12,11,11,16,14,14,14,12,12,13,12,12,15,14,14,15,13,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,13,12,0,14,15,0,12,12,1,3,3,0,9,9,0,9,9,0,10,10,0,9,9,0,10,10,0,10,10,0,9,9,0,10,10,0,7,7,0,7,7,0,6,6,0,8,8,0,7,7,0,8,8,0,8,9,0,8,8,0,8,8,0,7,7,0,9,9,0,8,8,0,10,10,0,9,9,0,10,10,0,10,10,0,9,9,0,10,10,0,9,9,0,11,11,0,11,11,0,12,12,0,11,11,0,12,12,0,13,13,0,12,12,0,13,12,0,8,8,0,12,12,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,13,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,11,11,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,12,12,0,12,12,0,8,8,0,12,12,0,12,12,0,13,13,0,13,13,0,13,14,0,14,13,0,13,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,7,7,0,8,8,0,9,9,0,12,12,0,8,8,0,9,9,0,12,12,0,8,8,0,6,6,0,11,11,0,12,12,0,12,12,0,15,15,0,11,11,0,12,12,0,15,15,0,12,12,0,5,5,0,5,5,0,6,6,0,7,7,0,11,11,0,6,6,0,7,7,0,10,11,0,6,6,0,7,7,0,11,11,0,12,12,0,11,11,0,15,15,0,10,10,0,12,12,0,15,15,0,12,12,0,6,6,0,12,12,0,12,12,0,12,12,0,15,15,0,11,11,0,12,12,0,15,15,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,11,12,0,15,16,0,11,11,0,6,6,0,11,12,0,12,12,0,12,12,0,16,15,0,12,12,0,13,12,0,15,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,7,8,10,13,16,3,2,5,7,9,13,16,6,4,4,6,10,14,15,7,5,5,7,10,13,14,9,8,9,9,9,11,13,12,11,12,9,7,8,11,14,12,10,6,5,7,10,3,5,4,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,4,4,4,4,4,4,4,4,1,4,4,7,7,4,5,6,7,7,4,6,5,7,7,7,6,7,6,7,7,7,6,7,6,1,3,3,8,8,10,10,10,10,10,10,10,10,5,7,5,9,8,10,10,10,10,11,10,11,10,5,5,7,8,9,10,10,11,10,10,11,10,11,10,10,10,11,11,11,11,11,11,11,10,11,11,10,10,10,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,12,11,11,11,11,11,11,12,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,12,11,13,11,11,11,11,11,11,11,11,11,11,11,12,11,13,1,3,2,3,2,3,6,7,9,13,17,3,2,5,7,9,13,17,6,5,5,6,9,12,16,7,7,6,6,7,10,13,10,10,9,7,6,10,13,13,13,12,10,10,11,15,17,17,17,14,14,15,17,1,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,7,6,8,8,7,7,8,7,8,8,9,9,9,8,7,7,8,8,8,9,9,9,9,8,8,6,6,6,9,7,7,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,9,8,10,8,8,7,6,6,9,6,6,9,6,6,9,7,7,10,8,8,10,6,6,9,7,7,10,8,8,10,6,6,7,7,7,11,9,9,11,9,9,10,9,9,12,10,10,12,8,8,11,9,9,13,9,10,12,8,8,8,7,7,11,9,10,11,10,10,10,9,9,11,11,11,11,9,9,11,10,9,12,11,11,11,9,10,10,8,8,11,9,10,11,9,9,11,9,9,12,10,10,11,9,9,11,9,9,12,10,11,11,9,9,8,8,8,12,9,9,12,9,9,11,9,9,13,9,9,13,8,8,12,9,9,13,10,10,12,8,8,9,7,7,11,10,10,11,10,10,11,10,10,12,11,11,11,10,9,11,10,10,11,11,11,11,9,9,11,9,9,12,10,10,11,10,10,12,10,10,11,11,11,11,9,9,11,10,10,12,11,11,11,9,9,1,7,7,6,8,8,7,8,8,7,9,9,11,11,11,9,8,8,7,9,9,11,12,11,9,9,9,6,7,7,10,11,11,10,10,10,10,11,11,15,14,14,12,12,12,11,11,11,14,14,14,12,12,12,5,6,6,8,5,5,8,7,7,8,8,8,12,10,10,10,7,7,8,7,7,12,10,10,10,7,7,6,7,7,12,11,11,12,10,10,11,10,10,14,14,13,13,10,10,11,10,10,16,14,14,14,11,10,7,7,7,13,12,12,12,12,11,11,11,11,15,14,17,13,12,12,12,11,11,15,15,15,14,13,13,10,9,9,14,12,11,13,11,11,12,11,11,16,15,14,14,11,11,12,11,11,17,14,14,15,11,11,7,8,8,12,11,11,13,10,10,11,10,10,17,14,13,14,10,10,12,10,10,18,15,15,14,10,10,8,7,7,13,12,12,13,11,11,12,11,11,16,14,15,14,12,12,12,11,11,18,16,16,14,12,12,11,10,10,13,12,11,13,11,11,13,12,12,0,15,14,14,11,11,13,11,11,16,15,15,15,11,11,2,3,3,3,3,3,3,1,7,7,14,14,6,8,8,15,16,7,8,8,16,15,0,14,14,17,17,0,14,14,16,16,7,9,9,16,16,10,11,11,17,18,9,8,8,16,16,0,14,14,19,19,0,14,14,17,16,8,9,9,16,16,12,12,12,17,17,10,9,9,16,16,0,15,14,18,20,0,14,14,17,17,0,15,15,18,17,0,21,0,0,21,0,13,13,17,17,0,17,17,0,0,0,15,15,17,17,0,15,15,17,18,0,0,0,0,21,0,13,13,17,17,0,18,18,0,21,0,16,15,17,18,6,7,7,14,14,9,10,10,16,16,11,10,10,15,15,0,21,0,20,21,0,0,0,18,20,10,10,10,15,16,12,13,13,18,18,12,11,11,15,15,0,0,0,20,20,0,0,21,19,19,12,11,11,15,15,15,14,14,18,18,13,11,11,15,16,0,0,0,20,19,0,0,0,20,21,0,0,20,19,19,0,0,0,0,0,0,20,0,17,18,0,0,21,0,0,0,0,0,21,0,0,21,0,20,19,0,0,0,0,0,0,21,0,18,18,0,0,0,21,0,0,0,0,0,20,7,6,6,13,13,9,6,6,12,12,9,7,7,14,14,0,10,10,12,12,0,11,11,15,15,9,7,7,14,14,12,9,9,14,14,10,7,7,14,13,0,11,11,16,15,0,11,11,14,14,9,7,7,14,14,13,10,10,14,14,11,7,7,14,13,0,11,11,16,16,0,11,11,14,14,0,12,12,16,16,0,19,0,17,18,0,10,10,14,14,0,15,14,0,0,0,12,12,14,14,0,12,12,15,15,0,20,0,18,19,0,10,10,14,14,0,16,15,0,20,0,13,13,14,14,0,11,11,13,13,0,12,13,16,16,0,12,12,16,16,0,16,16,0,21,0,17,18,0,0,0,12,12,16,16,0,15,15,18,0,0,12,12,16,16,0,17,16,21,21,0,16,17,0,0,0,13,13,17,16,0,16,16,20,21,0,12,12,17,16,0,17,17,0,21,0,17,17,21,21,0,17,18,0,0,0,0,0,0,0,0,15,15,0,0,0,18,21,0,0,0,18,19,0,0,0,18,17,21,21,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,19,19,0,0,0,11,11,12,12,0,11,11,10,10,0,12,12,13,13,0,12,12,9,9,0,14,14,13,13,0,12,12,13,13,0,14,14,12,13,0,11,11,12,12,0,13,13,13,13,0,13,13,13,13,0,12,12,13,13,0,14,14,12,12,0,11,11,12,12,0,14,13,14,14,0,13,13,13,13,0,15,15,14,15,0,0,0,16,16,0,12,12,13,13,0,16,17,20,21,0,14,13,12,12,0,14,14,14,14,0,21,0,16,16,0,12,12,13,13,0,18,17,21,0,0,14,14,13,13,7,8,8,17,17,11,10,10,18,18,12,10,10,17,17,0,15,15,20,18,0,15,15,17,17,11,9,9,17,17,14,12,12,19,19,13,9,9,16,16,0,15,14,0,19,0,14,14,16,16,12,10,10,20,18,16,13,13,21,20,14,10,10,17,17,0,15,15,21,20,0,15,14,17,17,0,15,15,21,21,0,0,21,0,0,0,13,13,18,18,0,19,16,0,0,0,15,15,17,16,0,16,16,0,21,0,0,0,0,21,0,13,14,18,17,0,20,19,0,0,0,15,15,18,18,8,7,7,15,15,12,11,11,17,16,13,11,11,16,16,0,0,0,21,20,0,0,0,0,20,11,10,10,17,17,14,13,13,19,18,14,11,11,16,16,0,20,0,21,19,0,0,21,0,20,12,11,11,17,17,16,15,15,0,19,14,11,11,17,16,0,21,0,0,19,0,0,0,21,20,0,0,21,20,0,0,0,0,0,0,0,0,0,19,21,0,0,0,0,0,0,0,0,19,20,0,0,0,20,21,0,0,0,0,0,0,20,0,19,21,0,0,0,0,0,0,0,0,21,20,11,10,9,15,15,14,11,11,15,15,14,11,11,16,16,0,14,14,14,14,0,16,15,17,16,13,11,11,16,16,16,13,13,16,16,15,10,10,15,15,0,14,15,17,17,0,14,14,16,15,13,11,11,16,16,17,15,14,16,16,15,10,10,15,15,0,15,15,17,18,0,15,15,16,16,0,16,16,17,17,0,21,0,21,20,0,13,13,15,15,0,18,18,0,21,0,15,15,15,15,0,16,16,17,17,0,0,0,0,18,0,13,13,15,15,0,19,18,0,0,0,15,15,16,16,0,12,12,15,15,0,13,13,17,17,0,13,13,17,18,0,16,17,21,0,0,20,18,0,0,0,13,13,17,17,0,15,15,0,18,0,12,12,17,18,0,16,16,0,0,0,17,17,21,0,0,13,13,18,18,0,16,16,21,21,0,12,12,17,18,0,16,17,21,0,0,17,17,0,21,0,17,18,0,0,0,0,0,0,0,0,16,15,0,21,0,21,19,0,0,0,18,18,0,0,0,18,19,0,0,0,0,0,0,0,0,16,16,21,21,0,20,19,0,0,0,19,21,0,21,0,12,12,15,15,0,12,12,15,16,0,13,13,16,16,0,14,14,15,15,0,16,15,17,17,0,13,13,17,17,0,15,15,16,18,0,12,12,16,16,0,14,14,17,17,0,15,14,16,16,0,13,13,16,16,0,16,15,17,17,0,12,12,16,16,0,15,15,18,18,0,14,14,17,16,0,16,16,17,18,0,0,0,20,21,0,13,13,16,17,0,17,17,0,0,0,15,15,16,16,0,15,16,17,17,0,0,0,19,0,0,13,13,15,16,0,19,18,0,0,0,16,15,16,17,8,8,8,17,17,13,11,10,17,18,13,10,10,17,17,0,15,15,20,19,0,15,15,17,17,12,10,10,19,18,15,12,12,20,18,14,10,10,17,16,0,15,15,20,20,0,14,15,16,16,13,10,10,17,17,17,14,14,0,18,15,10,10,17,17,0,16,15,20,20,0,14,14,17,17,0,15,16,20,20,0,0,21,0,0,0,13,13,17,17,0,18,17,0,0,0,15,16,17,18,0,15,15,18,21,0,0,0,21,0,0,13,13,18,18,0,19,19,0,0,0,16,16,18,17,9,8,8,15,15,12,11,11,16,16,13,11,11,16,15,0,0,0,0,21,0,21,0,19,19,12,11,11,17,18,15,13,13,18,19,14,11,11,16,16,0,0,21,21,19,0,0,0,21,20,13,11,11,18,17,17,14,15,20,21,15,11,12,16,16,0,0,0,20,0,0,0,21,0,19,0,0,0,0,19,0,0,0,0,0,0,21,21,19,19,0,0,0,21,0,0,0,0,19,21,0,0,0,19,20,0,0,0,21,0,0,0,21,19,19,0,0,0,0,0,0,0,0,21,20,0,11,11,15,15,0,12,12,15,16,0,12,12,16,16,0,15,15,16,15,0,16,16,17,17,0,12,12,17,17,0,14,14,17,17,0,11,11,16,16,0,15,15,19,18,0,15,15,16,16,0,12,12,17,16,0,14,15,16,16,0,11,11,15,15,0,16,16,18,19,0,15,15,15,16,0,17,17,18,20,0,21,0,21,19,0,14,14,16,16,0,18,18,0,0,0,16,16,15,15,0,16,16,18,17,0,0,0,19,20,0,14,14,16,16,0,19,19,0,0,0,16,17,15,15,0,12,12,14,15,0,13,13,16,17,0,12,12,17,17,0,17,16,0,0,0,18,17,21,0,0,13,13,19,17,0,15,15,20,21,0,12,12,17,17,0,17,17,0,0,0,17,17,0,0,0,13,13,17,18,0,16,16,21,0,0,12,12,17,17,0,17,17,0,0,0,17,17,0,0,0,18,21,0,0,0,0,0,0,0,0,15,15,21,0,0,20,21,0,0,0,18,19,0,0,0,18,17,0,0,0,0,0,0,0,0,16,16,21,0,0,21,21,0,0,0,18,19,0,0,0,12,12,16,16,0,13,13,16,17,0,13,13,17,16,0,14,14,16,16,0,16,15,19,18,0,13,13,17,17,0,15,15,18,18,0,12,12,16,16,0,15,15,18,19,0,15,15,17,16,0,13,13,17,17,0,16,16,18,17,0,12,12,17,16,0,15,15,18,18,0,15,15,17,17,0,16,16,0,19,0,0,0,0,0,0,14,14,16,17,0,18,18,0,0,0,15,15,17,17,0,16,16,21,19,0,21,0,21,21,0,13,14,16,16,0,19,19,0,0,0,15,16,16,16,0,11,11,17,16,0,15,14,19,18,0,14,14,19,19,0,18,17,18,20,0,17,17,18,19,0,13,13,17,17,0,16,17,21,18,0,13,13,17,16,0,18,17,19,0,0,16,17,18,18,0,12,12,19,18,0,18,18,20,20,0,13,13,17,17,0,17,17,21,0,0,16,17,17,18,0,18,17,19,18,0,0,0,0,0,0,14,14,17,17,0,19,19,21,0,0,16,16,16,17,0,17,17,19,20,0,0,0,0,21,0,15,15,17,18,0,21,21,0,0,0,17,17,17,18,0,10,10,15,15,0,15,14,17,18,0,14,14,16,16,0,0,0,18,0,0,21,0,19,0,0,13,13,17,16,0,17,17,18,0,0,14,14,16,15,0,0,0,21,0,0,21,0,19,18,0,13,13,17,17,0,18,18,20,20,0,15,15,16,16,0,0,0,21,21,0,0,0,20,20,0,0,0,19,0,0,0,0,0,0,0,21,20,18,18,0,0,0,0,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,0,0,0,19,18,0,0,0,0,21,0,0,0,18,20,0,18,19,16,17,0,21,19,17,17,0,0,21,18,18,0,0,21,20,19,0,0,0,20,20,0,0,21,17,17,0,0,0,19,19,0,20,20,17,17,0,0,0,0,20,0,0,20,18,18,0,21,20,17,17,0,0,0,20,21,0,19,0,17,17,0,0,21,0,0,0,20,0,18,19,0,0,0,21,21,0,0,0,0,21,0,20,20,17,17,0,0,0,0,0,0,21,0,18,17,0,0,0,20,19,0,0,0,0,21,0,20,20,17,17,0,0,0,0,0,0,21,21,18,18,0,12,12,15,14,0,14,14,17,17,0,14,14,17,16,0,18,18,21,0,0,19,20,0,0,0,13,13,18,17,0,16,16,19,18,0,13,13,17,17,0,17,17,0,0,0,17,17,21,0,0,13,13,17,17,0,17,17,21,20,0,13,13,18,17,0,18,19,21,21,0,19,18,0,0,0,18,17,0,0,0,0,0,0,0,0,15,16,0,0,0,21,21,0,0,0,20,18,21,0,0,17,18,0,0,0,0,0,0,0,0,15,16,0,0,0,0,20,0,0,0,0,19,0,0,0,15,15,18,19,0,18,17,21,0,0,16,18,0,20,0,17,18,21,0,0,18,20,0,0,0,16,16,21,21,0,19,20,21,0,0,16,15,0,21,0,18,20,0,0,0,18,19,0,0,0,16,15,21,21,0,21,0,0,0,0,16,15,21,0,0,20,19,0,0,0,18,21,21,0,0,20,18,0,0,0,0,0,0,0,0,16,16,0,20,0,21,0,0,0,0,17,18,20,21,0,18,18,21,21,0,0,0,0,0,0,16,16,20,0,0,0,21,0,0,0,21,18,0,0,0,12,12,20,17,0,15,15,19,18,0,14,14,19,18,0,18,17,21,19,0,17,17,21,17,0,13,13,21,19,0,16,17,20,19,0,13,13,16,16,0,17,17,20,21,0,16,16,19,17,0,13,13,18,18,0,17,19,19,19,0,13,13,17,17,0,18,18,0,19,0,16,17,18,18,0,16,17,19,21,0,0,0,0,0,0,15,15,16,17,0,20,19,21,0,0,17,17,17,17,0,17,17,21,19,0,0,0,0,0,0,15,15,17,17,0,21,0,0,0,0,18,18,17,17,0,10,10,15,15,0,15,15,17,17,0,15,14,16,16,0,0,0,21,19,0,21,21,19,21,0,13,13,17,16,0,17,17,18,19,0,14,15,16,15,0,0,0,21,19,0,21,21,18,19,0,14,14,16,17,0,18,18,18,19,0,15,15,15,16,0,0,21,0,21,0,0,0,19,20,0,0,0,21,19,0,0,0,0,0,0,21,21,19,17,0,0,0,0,0,0,0,0,21,21,0,21,0,0,21,0,0,0,0,0,0,21,21,19,18,0,0,0,0,0,0,0,0,0,19,0,21,18,18,17,0,21,0,20,20,0,0,0,18,20,0,0,21,18,21,0,0,0,21,18,0,0,0,0,19,0,0,0,21,21,0,20,21,17,19,0,21,0,21,0,0,21,0,18,18,0,20,21,17,18,0,0,0,21,19,0,20,21,17,18,0,0,0,21,21,0,0,0,20,19,0,0,0,21,21,0,0,0,0,0,0,21,21,19,18,0,0,0,0,0,0,0,21,19,18,0,21,21,19,0,0,0,0,21,0,0,21,21,18,17,0,0,0,0,0,0,21,0,21,18,0,12,12,14,14,0,15,14,17,17,0,14,14,17,16,0,19,17,0,0,0,19,19,0,0,0,13,13,17,17,0,17,17,20,20,0,13,13,18,18,0,18,17,0,0,0,18,21,0,0,0,13,13,17,17,0,18,18,21,20,0,14,14,18,19,0,19,18,21,0,0,19,19,0,0,0,20,18,20,0,0,0,0,0,0,0,15,16,0,0,0,21,21,0,0,0,19,19,0,0,0,18,18,0,0,0,0,0,0,0,0,16,16,0,21,0,0,0,0,0,0,19,20,0,0,0,15,15,20,21,0,17,17,21,21,0,17,17,0,0,0,19,18,0,0,0,18,19,0,0,0,17,16,0,21,0,0,20,0,0,0,16,16,0,20,0,19,19,0,21,0,19,18,0,21,0,16,16,0,0,0,21,21,0,0,0,16,16,0,0,0,21,21,0,0,0,19,19,0,0,0,20,0,0,0,0,0,0,0,0,0,17,17,0,21,0,0,20,0,0,0,20,18,21,21,0,19,18,0,20,0,0,0,0,0,0,16,17,21,0,0,0,21,0,0,0,19,20,21,20,2,3,4,9,9,10,12,12,12,11,10,12,12,13,12,11,13,12,11,11,11,12,12,12,11,11,13,13,13,13,11,12,12,14,14,12,13,13,13,13,11,13,13,13,13,11,13,13,13,13,11,13,13,13,13,11,12,12,14,14,12,13,13,12,12,11,13,13,13,13,11,13,13,12,12,11,13,13,13,13,12,12,13,14,14,12,13,13,12,12,11,13,13,13,13,11,13,13,12,12,11,13,13,13,13,12,13,13,14,14,12,13,13,12,12,11,13,13,13,13,11,13,13,12,12,11,10,10,10,10,12,10,10,11,11,12,9,9,11,11,13,11,11,10,10,13,10,10,10,10,13,11,11,12,12,13,10,10,12,12,14,12,11,12,12,13,11,11,11,12,13,12,12,12,12,13,11,11,12,12,13,10,10,12,12,14,11,11,12,12,13,11,11,12,12,13,11,11,12,12,14,12,12,12,12,14,10,10,11,11,14,12,11,11,11,13,11,11,11,11,13,12,12,11,11,14,12,12,12,11,14,10,10,11,11,14,12,11,11,11,13,11,11,11,11,13,12,12,11,11,11,11,11,10,10,12,10,11,9,9,12,12,12,11,11,13,12,12,9,9,13,13,13,10,10,13,13,13,12,12,13,13,13,14,14,13,12,12,11,11,14,13,13,12,12,14,13,13,11,11,13,13,13,12,11,13,13,13,14,14,13,12,12,10,10,14,13,13,11,11,13,13,13,10,10,13,13,13,11,11,14,13,13,14,14,14,12,12,10,10,13,13,13,11,11,13,13,13,10,10,13,13,13,11,11,14,13,13,14,14,14,13,13,10,10,13,13,13,11,11,13,13,13,10,10,14,12,12,8,8,14,12,12,9,9,14], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+532271);\n/* memory initializer */ allocate([11,11,9,9,14,12,12,8,8,14,12,12,7,7,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,13,9,9,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,13,9,9,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,14,13,12,9,9,14,13,13,9,9,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,15,13,13,9,9,14,13,13,9,9,14,12,12,8,8,13,13,13,8,8,14,14,13,9,9,14,14,13,7,7,14,14,14,8,8,14,14,14,10,10,15,14,14,12,12,14,14,14,9,9,15,14,14,10,10,14,14,14,9,9,14,14,14,10,9,15,14,14,12,12,14,14,14,9,9,15,14,14,10,10,14,14,14,9,9,15,14,15,9,9,15,14,14,11,11,14,14,14,8,8,14,14,14,9,9,14,14,14,8,8,14,15,14,10,10,15,14,14,11,11,14,14,14,8,8,15,14,14,9,9,14,14,14,8,8,12,12,12,13,13,16,16,15,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,17,16,17,13,13,17,16,16,14,14,17,17,16,12,12,18,16,16,13,13,17,16,17,12,12,17,17,17,13,13,18,16,16,14,14,18,17,17,12,12,17,17,17,13,13,18,17,17,13,13,17,17,17,13,13,17,16,16,14,14,17,17,17,12,12,16,16,17,13,13,17,17,16,12,12,18,17,17,13,13,18,16,16,14,14,18,17,17,12,12,19,16,17,13,13,17,16,17,12,12,13,14,14,10,10,16,14,14,13,13,17,15,15,14,14,17,14,14,13,13,16,14,14,13,13,17,16,15,14,14,16,16,16,15,15,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,16,15,14,14,16,16,16,15,15,18,15,15,13,13,16,16,15,14,14,17,15,15,14,13,17,15,15,14,14,16,16,16,15,15,18,15,14,13,13,17,15,15,14,14,18,14,15,13,13,18,15,15,14,14,16,16,16,15,15,17,15,15,13,13,17,15,15,14,14,17,15,15,13,13,13,11,11,10,10,16,14,14,13,13,17,14,15,14,14,17,15,15,12,12,17,14,14,12,12,16,15,15,14,14,16,14,14,14,14,16,15,15,14,14,16,15,15,14,14,16,15,15,14,14,16,15,15,14,14,16,15,14,15,15,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,15,16,14,14,16,14,14,14,14,17,15,15,13,13,17,15,15,13,13,16,15,15,13,13,17,16,16,14,14,17,15,14,15,14,17,15,15,13,13,17,15,15,13,13,17,15,15,13,13,14,14,14,9,9,14,14,14,18,19,14,15,15,19,18,14,14,14,19,19,15,14,14,19,19,15,16,16,19,19,15,16,16,19,19,15,15,15,19,19,15,16,16,19,20,15,15,15,19,19,15,15,15,19,19,15,16,16,20,20,15,15,15,18,19,15,15,16,19,20,15,15,15,19,18,15,15,15,18,18,15,16,16,21,20,15,15,15,19,19,15,15,15,19,19,15,15,14,19,20,15,15,15,20,19,15,16,16,19,20,15,15,15,19,19,15,15,15,20,21,15,14,15,19,19,14,12,12,9,9,14,14,15,21,19,14,14,14,18,19,14,15,15,19,20,14,14,14,19,19,15,15,15,19,20,15,15,14,21,19,15,15,15,20,19,15,14,15,20,21,15,15,15,18,18,15,15,15,20,21,16,14,14,18,19,15,15,15,20,19,15,15,15,18,21,15,15,15,19,19,15,15,15,19,20,16,15,14,20,19,15,16,15,19,19,15,15,15,19,0,14,15,15,19,19,15,15,15,19,19,15,15,14,20,19,15,15,15,20,19,15,15,15,19,19,15,15,15,20,19,12,12,12,13,13,16,15,16,11,11,16,16,16,12,12,17,16,16,11,11,17,16,16,12,11,17,17,17,13,13,18,16,16,14,14,18,18,17,13,13,17,16,16,13,13,17,17,17,13,13,17,16,17,12,12,17,15,16,13,13,17,16,17,12,12,17,16,16,13,12,17,16,16,12,12,18,17,17,13,13,18,16,16,13,14,18,17,17,12,12,17,16,16,12,12,17,17,17,12,12,18,17,17,13,13,17,16,16,14,14,17,17,17,12,12,17,16,16,12,12,18,17,17,12,12,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,16,14,14,13,13,16,14,14,13,13,17,16,15,15,15,16,15,16,16,15,17,15,15,14,14,17,15,15,15,15,17,15,15,14,14,17,15,15,14,14,16,15,16,16,16,17,15,15,14,14,16,15,15,14,15,16,15,15,14,14,17,15,15,15,15,16,16,16,15,16,18,15,14,13,14,17,15,15,14,14,17,14,14,13,13,17,15,15,14,14,16,15,15,15,15,17,15,14,14,14,17,15,15,14,14,17,14,14,13,13,13,11,11,11,11,16,14,14,12,12,16,14,14,13,13,16,14,14,12,12,16,14,14,12,12,16,15,15,13,13,17,14,14,14,14,17,15,15,13,13,16,15,15,14,13,16,15,15,13,13,16,15,15,13,13,16,14,14,14,14,16,15,15,13,13,16,14,15,13,13,17,15,15,13,13,17,15,15,13,13,16,14,14,14,14,17,15,15,12,12,17,14,15,13,13,17,15,15,12,12,16,15,15,13,13,17,14,14,14,14,17,15,15,12,12,17,15,15,13,13,16,15,15,12,12,14,15,15,8,8,14,14,14,19,18,14,15,15,19,20,14,14,14,19,19,14,14,15,19,20,15,16,15,19,21,15,16,16,21,19,15,15,15,20,19,15,16,16,19,20,15,15,15,19,18,15,16,15,20,19,15,16,16,19,20,15,15,15,19,19,15,16,15,20,20,14,15,15,19,19,15,15,15,21,19,15,17,16,19,20,15,14,15,0,21,15,15,15,19,20,14,14,14,19,19,15,15,15,20,19,15,16,16,19,19,15,15,15,19,18,15,15,15,20,19,14,14,15,18,18,14,12,12,9,9,14,14,14,18,18,14,14,14,18,18,14,15,14,19,18,14,14,14,19,18,15,15,15,19,20,15,14,14,18,18,15,15,15,20,19,15,15,15,18,20,15,15,15,19,18,15,15,15,19,19,15,14,14,19,21,15,15,15,20,20,15,15,15,18,19,14,15,15,19,20,15,15,15,20,19,15,14,14,19,21,15,15,15,18,19,15,14,15,20,19,14,15,15,21,21,14,15,15,19,20,15,14,14,19,20,15,15,15,19,20,15,15,14,20,20,14,15,15,20,19,13,12,12,13,13,17,16,16,11,11,17,16,16,12,12,18,17,16,11,11,18,16,16,11,11,17,17,17,13,13,18,16,16,13,13,18,17,17,12,12,18,16,16,13,13,18,17,17,12,12,18,17,17,13,13,18,16,16,14,14,18,16,17,12,12,18,17,17,13,13,17,17,17,12,12,17,17,17,12,12,17,16,15,13,13,18,16,16,11,11,17,16,16,12,12,17,16,17,11,11,18,17,17,13,12,17,16,16,13,13,17,17,17,12,12,17,16,17,12,12,18,17,17,11,11,14,14,14,9,9,16,14,14,13,13,17,15,15,14,14,17,14,14,13,13,16,14,14,13,13,17,15,15,14,14,16,16,16,16,15,18,15,15,14,14,17,16,15,15,15,17,15,15,14,14,17,15,15,14,15,16,16,16,15,16,18,15,15,14,14,17,15,15,14,15,17,15,15,14,14,17,15,15,14,14,16,16,16,15,16,17,14,14,13,13,17,15,15,14,14,18,15,15,13,13,17,15,15,14,14,16,16,16,15,15,17,14,14,13,13,17,15,15,14,14,17,14,14,13,13,13,11,11,11,11,16,14,14,12,12,16,14,14,12,13,17,15,14,11,11,17,14,14,11,11,17,15,15,13,14,17,14,14,14,14,17,15,15,13,13,17,14,14,13,13,17,15,15,13,13,17,15,15,13,13,17,14,14,14,14,17,15,15,13,13,18,14,15,13,13,17,15,15,13,13,16,15,15,13,13,17,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,15,15,12,12,17,16,15,13,13,17,14,14,13,13,17,15,15,12,12,16,15,15,12,12,16,15,15,12,12,13,15,15,8,8,14,14,14,18,19,14,15,15,19,20,14,14,14,18,18,14,15,15,18,18,15,16,16,19,19,15,16,17,20,20,15,15,15,19,19,15,16,16,18,20,15,15,15,19,19,15,15,16,18,18,15,17,16,19,19,15,15,15,18,21,15,16,16,21,20,15,15,15,19,21,15,16,15,20,19,15,16,17,20,20,15,15,15,19,19,15,16,16,21,20,15,15,15,19,20,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,16,15,20,21,15,15,15,21,19,14,12,12,8,8,14,14,14,20,18,14,13,13,19,19,14,14,14,19,18,15,14,14,19,20,14,15,15,20,20,15,14,14,21,20,15,15,15,20,20,15,15,14,21,19,15,15,15,19,19,15,15,15,19,20,15,14,14,20,20,15,15,15,19,20,15,14,14,19,20,15,15,15,20,20,15,15,15,20,19,15,14,14,20,21,15,15,15,20,21,15,14,14,20,0,15,16,15,20,21,15,15,15,19,20,15,14,14,19,19,15,15,15,19,20,15,15,15,19,19,15,15,15,18,20,13,12,12,13,13,18,16,17,12,12,17,16,16,12,12,17,17,16,11,11,18,16,16,11,11,17,17,18,13,13,18,16,16,14,14,18,17,17,13,13,18,16,16,13,13,18,17,17,12,12,17,17,16,13,13,17,16,16,13,14,18,17,17,12,12,18,16,16,12,13,17,16,17,12,12,17,18,17,13,13,18,16,16,13,13,18,17,17,12,12,17,16,16,12,12,17,17,17,11,11,17,16,17,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,18,16,17,11,11,14,14,14,9,9,16,14,15,13,13,17,15,15,14,14,17,14,14,12,12,16,14,14,13,13,18,15,15,15,15,17,15,16,15,16,18,15,15,14,14,17,15,16,15,15,17,15,15,14,14,18,15,15,14,14,16,16,16,16,15,17,15,15,14,14,16,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,16,16,15,15,17,15,14,13,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,16,16,15,15,18,15,14,14,14,17,15,15,14,14,18,15,15,13,13,13,12,12,11,11,16,14,14,12,12,16,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,14,14,17,14,14,14,14,17,15,15,13,13,17,15,14,13,13,17,15,15,13,13,17,15,15,13,13,16,14,14,14,14,17,15,15,13,13,16,14,14,13,13,16,15,15,13,13,17,15,16,13,13,17,14,14,14,13,17,15,15,12,12,16,15,14,12,12,17,15,15,12,12,16,15,16,13,13,16,14,14,14,13,17,15,15,12,12,16,14,14,12,12,17,15,15,12,12,14,15,15,8,8,14,14,14,18,18,14,15,15,19,18,14,14,14,18,18,14,15,15,19,20,15,16,15,21,18,15,16,16,18,0,15,15,15,19,20,15,16,16,20,0,15,16,15,19,18,15,15,15,19,19,15,16,16,21,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,19,15,15,15,19,18,15,16,16,20,20,15,14,15,20,19,15,15,15,19,20,15,15,15,19,19,15,16,15,19,20,15,16,16,19,20,15,15,15,19,19,15,16,15,20,20,15,15,15,20,18,13,12,12,8,8,14,14,14,19,20,14,14,14,19,19,14,15,15,20,20,14,14,14,18,19,15,15,15,20,0,15,14,14,18,20,15,15,15,19,19,15,15,15,21,19,15,15,15,19,20,15,15,15,20,21,15,14,14,20,19,15,15,15,20,19,15,15,14,21,19,15,15,15,19,18,15,15,15,20,19,15,14,14,19,19,15,15,16,20,19,15,15,15,20,0,15,15,15,19,21,15,15,15,22,20,15,14,14,22,19,15,15,15,19,20,15,14,14,20,19,14,15,15,19,21,1,6,6,6,8,8,6,8,8,7,9,9,10,11,11,8,8,8,7,9,9,11,12,12,9,9,9,6,7,7,10,11,11,10,11,11,10,11,11,13,13,13,12,12,12,10,12,11,14,14,14,12,12,12,6,5,5,9,6,6,9,6,6,9,7,7,12,10,10,11,7,6,9,7,7,13,11,11,12,7,7,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,9,9,12,11,11,15,14,14,15,11,11,8,7,7,12,11,11,12,11,11,11,11,11,14,13,14,14,12,12,12,11,11,16,15,15,14,12,12,0,10,10,0,12,12,0,12,12,0,11,11,0,14,14,0,11,11,0,11,11,0,15,15,0,11,11,7,8,8,13,11,11,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,15,10,10,9,7,7,13,11,12,13,12,11,12,11,11,15,14,14,14,12,12,13,12,12,16,15,15,15,12,12,0,11,11,0,12,12,0,12,13,0,12,12,0,15,15,0,12,12,0,12,12,0,16,15,0,12,12,1,3,3,0,9,9,0,9,9,0,10,10,0,9,9,0,10,10,0,10,10,0,10,10,0,10,10,0,7,7,0,7,7,0,6,6,0,8,8,0,7,7,0,8,8,0,8,8,0,7,7,0,8,8,0,7,7,0,9,9,0,8,9,0,10,10,0,9,9,0,10,10,0,10,11,0,9,9,0,10,10,0,9,9,0,11,11,0,12,12,0,12,12,0,11,11,0,12,12,0,13,13,0,12,12,0,13,13,0,8,8,0,12,12,0,12,12,0,13,13,0,13,13,0,13,13,0,13,13,0,13,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,11,11,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,12,12,0,12,12,0,9,9,0,12,12,0,13,13,0,14,14,0,13,13,0,14,14,0,14,14,0,13,13,0,14,14,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,7,7,0,8,8,0,9,9,0,12,12,0,8,8,0,9,9,0,13,13,0,8,8,0,6,6,0,11,11,0,12,12,0,12,12,0,14,14,0,11,12,0,12,12,0,15,15,0,12,12,0,5,5,0,5,5,0,6,6,0,7,7,0,10,10,0,6,6,0,7,7,0,11,11,0,6,6,0,7,7,0,11,11,0,12,11,0,11,11,0,14,14,0,10,10,0,12,12,0,15,15,0,12,12,0,6,6,0,12,12,0,12,12,0,12,12,0,14,14,0,11,11,0,12,12,0,16,16,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,11,11,0,16,16,0,11,11,0,6,6,0,12,12,0,12,12,0,13,13,0,15,15,0,12,12,0,13,13,0,15,15,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,7,9,12,16,16,3,2,5,7,11,14,15,7,4,5,6,9,12,15,8,5,5,5,8,10,14,9,7,6,6,8,10,12,12,10,10,7,6,8,10,15,12,10,6,4,7,9], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+542511);\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = STATICTOP; STATICTOP += 16;\n\nassert(tempDoublePtr % 8 == 0);\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n\n}\n\nfunction copyTempDouble(ptr) {\n\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n\n}\n\n// {{PRE_LIBRARY}}\n\n\n   \n  Module[\"_i64Add\"] = _i64Add;\n\n   \n  Module[\"_memset\"] = _memset;\n\n   \n  Module[\"_bitshift64Lshr\"] = _bitshift64Lshr;\n\n   \n  Module[\"_bitshift64Shl\"] = _bitshift64Shl;\n\n  function _abort() {\n      Module['abort']();\n    }\n\n  function ___lock() {}\n\n  function ___unlock() {}\n\n  \n  var SYSCALLS={varargs:0,get:function (varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function () {\n        var ret = Pointer_stringify(SYSCALLS.get());\n        return ret;\n      },get64:function () {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        if (low >= 0) assert(high === 0);\n        else assert(high === -1);\n        return low;\n      },getZero:function () {\n        assert(SYSCALLS.get() === 0);\n      }};function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // close\n      var stream = SYSCALLS.getStreamFromFD();\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  \n   \n  Module[\"___muldsi3\"] = ___muldsi3; \n  Module[\"___muldi3\"] = ___muldi3;\n\n  var _llvm_pow_f64=Math_pow;\n\n  \n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      else Module.printErr('failed to set errno from JS');\n      return value;\n    } \n  Module[\"_sbrk\"] = _sbrk;\n\n  \n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n      return dest;\n    } \n  Module[\"_memcpy\"] = _memcpy; \n  Module[\"_memmove\"] = _memmove;\n\n\n  \n  function __exit(status) {\n      // void _exit(int status);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html\n      Module['exit'](status);\n    }function _exit(status) {\n      __exit(status);\n    }\n\n  function _time(ptr) {\n      var ret = (Date.now()/1000)|0;\n      if (ptr) {\n        HEAP32[((ptr)>>2)]=ret;\n      }\n      return ret;\n    }\n\n  var _llvm_sqrt_f64=Math_sqrt;\n\n   \n  Module[\"_llvm_bswap_i32\"] = _llvm_bswap_i32;\n\n  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // llseek\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\n      var offset = offset_low;\n      assert(offset_high === 0);\n      FS.llseek(stream, offset, whence);\n      HEAP32[((result)>>2)]=stream.position;\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // writev\n      // hack to support printf in NO_FILESYSTEM\n      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      var ret = 0;\n      if (!___syscall146.buffer) {\n        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr\n        ___syscall146.printChar = function(stream, curr) {\n          var buffer = ___syscall146.buffers[stream];\n          assert(buffer);\n          if (curr === 0 || curr === 10) {\n            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));\n            buffer.length = 0;\n          } else {\n            buffer.push(curr);\n          }\n        };\n      }\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n        for (var j = 0; j < len; j++) {\n          ___syscall146.printChar(stream, HEAPU8[ptr+j]);\n        }\n        ret += len;\n      }\n      return ret;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function _floor0_exportbundle() {\n  Module['printErr']('missing function: floor0_exportbundle'); abort(-1);\n  }\n/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module[\"_fflush\"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;\nDYNAMICTOP_PTR = allocate(1, \"i32\", ALLOC_STATIC);\n\nSTACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);\n\nSTACK_MAX = STACK_BASE + TOTAL_STACK;\n\nDYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\nstaticSealed = true; // seal the static portion of memory\n\nassert(DYNAMIC_BASE < TOTAL_MEMORY, \"TOTAL_MEMORY not big enough for stack\");\n\n\n\nfunction nullFunc_iiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_vi(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_vii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_ii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_viii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiiiiiiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiiiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  try {\n    return Module[\"dynCall_iiii\"](index,a1,a2,a3);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  try {\n    Module[\"dynCall_vi\"](index,a1);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  try {\n    Module[\"dynCall_vii\"](index,a1,a2);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_ii(index,a1) {\n  try {\n    return Module[\"dynCall_ii\"](index,a1);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  try {\n    Module[\"dynCall_viii\"](index,a1,a2,a3);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {\n  try {\n    return Module[\"dynCall_iiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  try {\n    return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  try {\n    return Module[\"dynCall_iii\"](index,a1,a2);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iiiiii(index,a1,a2,a3,a4,a5) {\n  try {\n    return Module[\"dynCall_iiiiii\"](index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    Module[\"setThrew\"](1, 0);\n  }\n}\n\nModule.asmGlobalArg = { \"Math\": Math, \"Int8Array\": Int8Array, \"Int16Array\": Int16Array, \"Int32Array\": Int32Array, \"Uint8Array\": Uint8Array, \"Uint16Array\": Uint16Array, \"Uint32Array\": Uint32Array, \"Float32Array\": Float32Array, \"Float64Array\": Float64Array, \"NaN\": NaN, \"Infinity\": Infinity };\n\nModule.asmLibraryArg = { \"abort\": abort, \"assert\": assert, \"enlargeMemory\": enlargeMemory, \"getTotalMemory\": getTotalMemory, \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory, \"abortStackOverflow\": abortStackOverflow, \"nullFunc_iiii\": nullFunc_iiii, \"nullFunc_vi\": nullFunc_vi, \"nullFunc_vii\": nullFunc_vii, \"nullFunc_ii\": nullFunc_ii, \"nullFunc_viii\": nullFunc_viii, \"nullFunc_iiiiiiiii\": nullFunc_iiiiiiiii, \"nullFunc_iiiii\": nullFunc_iiiii, \"nullFunc_iii\": nullFunc_iii, \"nullFunc_iiiiii\": nullFunc_iiiiii, \"invoke_iiii\": invoke_iiii, \"invoke_vi\": invoke_vi, \"invoke_vii\": invoke_vii, \"invoke_ii\": invoke_ii, \"invoke_viii\": invoke_viii, \"invoke_iiiiiiiii\": invoke_iiiiiiiii, \"invoke_iiiii\": invoke_iiiii, \"invoke_iii\": invoke_iii, \"invoke_iiiiii\": invoke_iiiiii, \"_llvm_pow_f64\": _llvm_pow_f64, \"_llvm_sqrt_f64\": _llvm_sqrt_f64, \"___lock\": ___lock, \"_abort\": _abort, \"___setErrNo\": ___setErrNo, \"___syscall6\": ___syscall6, \"_time\": _time, \"_emscripten_memcpy_big\": _emscripten_memcpy_big, \"___syscall54\": ___syscall54, \"___unlock\": ___unlock, \"___syscall140\": ___syscall140, \"_exit\": _exit, \"__exit\": __exit, \"___syscall146\": ___syscall146, \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR, \"tempDoublePtr\": tempDoublePtr, \"ABORT\": ABORT, \"STACKTOP\": STACKTOP, \"STACK_MAX\": STACK_MAX, \"_floor0_exportbundle\": _floor0_exportbundle };\n// EMSCRIPTEN_START_ASM\nvar asm = (function(global, env, buffer) {\n  'use asm';\n  \n  \n  var HEAP8 = new global.Int8Array(buffer);\n  var HEAP16 = new global.Int16Array(buffer);\n  var HEAP32 = new global.Int32Array(buffer);\n  var HEAPU8 = new global.Uint8Array(buffer);\n  var HEAPU16 = new global.Uint16Array(buffer);\n  var HEAPU32 = new global.Uint32Array(buffer);\n  var HEAPF32 = new global.Float32Array(buffer);\n  var HEAPF64 = new global.Float64Array(buffer);\n\n\n  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;\n  var tempDoublePtr=env.tempDoublePtr|0;\n  var ABORT=env.ABORT|0;\n  var STACKTOP=env.STACKTOP|0;\n  var STACK_MAX=env.STACK_MAX|0;\n  var _floor0_exportbundle=env._floor0_exportbundle|0;\n\n  var __THREW__ = 0;\n  var threwValue = 0;\n  var setjmpId = 0;\n  var undef = 0;\n  var nan = global.NaN, inf = global.Infinity;\n  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;\n  var tempRet0 = 0;\n\n  var Math_floor=global.Math.floor;\n  var Math_abs=global.Math.abs;\n  var Math_sqrt=global.Math.sqrt;\n  var Math_pow=global.Math.pow;\n  var Math_cos=global.Math.cos;\n  var Math_sin=global.Math.sin;\n  var Math_tan=global.Math.tan;\n  var Math_acos=global.Math.acos;\n  var Math_asin=global.Math.asin;\n  var Math_atan=global.Math.atan;\n  var Math_atan2=global.Math.atan2;\n  var Math_exp=global.Math.exp;\n  var Math_log=global.Math.log;\n  var Math_ceil=global.Math.ceil;\n  var Math_imul=global.Math.imul;\n  var Math_min=global.Math.min;\n  var Math_max=global.Math.max;\n  var Math_clz32=global.Math.clz32;\n  var abort=env.abort;\n  var assert=env.assert;\n  var enlargeMemory=env.enlargeMemory;\n  var getTotalMemory=env.getTotalMemory;\n  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;\n  var abortStackOverflow=env.abortStackOverflow;\n  var nullFunc_iiii=env.nullFunc_iiii;\n  var nullFunc_vi=env.nullFunc_vi;\n  var nullFunc_vii=env.nullFunc_vii;\n  var nullFunc_ii=env.nullFunc_ii;\n  var nullFunc_viii=env.nullFunc_viii;\n  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;\n  var nullFunc_iiiii=env.nullFunc_iiiii;\n  var nullFunc_iii=env.nullFunc_iii;\n  var nullFunc_iiiiii=env.nullFunc_iiiiii;\n  var invoke_iiii=env.invoke_iiii;\n  var invoke_vi=env.invoke_vi;\n  var invoke_vii=env.invoke_vii;\n  var invoke_ii=env.invoke_ii;\n  var invoke_viii=env.invoke_viii;\n  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;\n  var invoke_iiiii=env.invoke_iiiii;\n  var invoke_iii=env.invoke_iii;\n  var invoke_iiiiii=env.invoke_iiiiii;\n  var _llvm_pow_f64=env._llvm_pow_f64;\n  var _llvm_sqrt_f64=env._llvm_sqrt_f64;\n  var ___lock=env.___lock;\n  var _abort=env._abort;\n  var ___setErrNo=env.___setErrNo;\n  var ___syscall6=env.___syscall6;\n  var _time=env._time;\n  var _emscripten_memcpy_big=env._emscripten_memcpy_big;\n  var ___syscall54=env.___syscall54;\n  var ___unlock=env.___unlock;\n  var ___syscall140=env.___syscall140;\n  var _exit=env._exit;\n  var __exit=env.__exit;\n  var ___syscall146=env.___syscall146;\n  var tempFloat = 0.0;\n\n// EMSCRIPTEN_START_FUNCS\n\nfunction stackAlloc(size) {\n  size = size|0;\n  var ret = 0;\n  ret = STACKTOP;\n  STACKTOP = (STACKTOP + size)|0;\n  STACKTOP = (STACKTOP + 15)&-16;\n  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);\n\n  return ret|0;\n}\nfunction stackSave() {\n  return STACKTOP|0;\n}\nfunction stackRestore(top) {\n  top = top|0;\n  STACKTOP = top;\n}\nfunction establishStackSpace(stackBase, stackMax) {\n  stackBase = stackBase|0;\n  stackMax = stackMax|0;\n  STACKTOP = stackBase;\n  STACK_MAX = stackMax;\n}\n\nfunction setThrew(threw, value) {\n  threw = threw|0;\n  value = value|0;\n  if ((__THREW__|0) == 0) {\n    __THREW__ = threw;\n    threwValue = value;\n  }\n}\n\nfunction setTempRet0(value) {\n  value = value|0;\n  tempRet0 = value;\n}\nfunction getTempRet0() {\n  return tempRet0|0;\n}\n\nfunction _oggpack_writeinit($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = $0;\n $2 = $1;\n HEAP32[$2>>2] = 0;\n $3 = (($1) + 4)|0;\n $4 = $3;\n HEAP32[$4>>2] = 0;\n $5 = (_malloc(256)|0);\n $6 = ((($0)) + 8|0);\n HEAP32[$6>>2] = $5;\n $7 = ((($0)) + 12|0);\n HEAP32[$7>>2] = $5;\n HEAP8[$5>>0] = 0;\n $8 = ((($0)) + 16|0);\n HEAP32[$8>>2] = 256;\n return;\n}\nfunction _oggpack_writetrunc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = $1 >> 3;\n $3 = ((($0)) + 12|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  return;\n }\n $6 = $2 << 3;\n $7 = (($1) - ($6))|0;\n $8 = ((($0)) + 8|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = (($9) + ($2)|0);\n HEAP32[$3>>2] = $10;\n $11 = ((($0)) + 4|0);\n HEAP32[$11>>2] = $7;\n HEAP32[$0>>2] = $2;\n $12 = (2512 + ($7<<2)|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = HEAP8[$10>>0]|0;\n $15 = $14&255;\n $16 = $15 & $13;\n $17 = $16&255;\n HEAP8[$10>>0] = $17;\n return;\n}\nfunction _oggpack_write($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$phi$trans$insert = 0, $$pre = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($2>>>0)>(32);\n do {\n  if (!($3)) {\n   $4 = HEAP32[$0>>2]|0;\n   $5 = ((($0)) + 16|0);\n   $6 = HEAP32[$5>>2]|0;\n   $7 = (($6) + -4)|0;\n   $8 = ($4|0)<($7|0);\n   $$phi$trans$insert = ((($0)) + 12|0);\n   $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n   if ($8) {\n    $28 = $$pre;\n   } else {\n    $9 = ($$pre|0)==(0|0);\n    if ($9) {\n     return;\n    }\n    $10 = ($6|0)>(2147483391);\n    if ($10) {\n     break;\n    }\n    $11 = ((($0)) + 8|0);\n    $12 = HEAP32[$11>>2]|0;\n    $13 = (($6) + 256)|0;\n    $14 = (_realloc($12,$13)|0);\n    $15 = ($14|0)==(0|0);\n    if ($15) {\n     break;\n    }\n    HEAP32[$11>>2] = $14;\n    $16 = HEAP32[$5>>2]|0;\n    $17 = (($16) + 256)|0;\n    HEAP32[$5>>2] = $17;\n    $18 = HEAP32[$0>>2]|0;\n    $19 = (($14) + ($18)|0);\n    HEAP32[$$phi$trans$insert>>2] = $19;\n    $28 = $19;\n   }\n   $20 = (2512 + ($2<<2)|0);\n   $21 = HEAP32[$20>>2]|0;\n   $22 = $21 & $1;\n   $23 = ((($0)) + 4|0);\n   $24 = HEAP32[$23>>2]|0;\n   $25 = (($24) + ($2))|0;\n   $26 = $22 << $24;\n   $27 = HEAP8[$28>>0]|0;\n   $29 = $27&255;\n   $30 = $29 | $26;\n   $31 = $30&255;\n   HEAP8[$28>>0] = $31;\n   $32 = ($25|0)>(7);\n   if ($32) {\n    $33 = HEAP32[$23>>2]|0;\n    $34 = (8 - ($33))|0;\n    $35 = $22 >>> $34;\n    $36 = $35&255;\n    $37 = HEAP32[$$phi$trans$insert>>2]|0;\n    $38 = ((($37)) + 1|0);\n    HEAP8[$38>>0] = $36;\n    $39 = ($25|0)>(15);\n    if ($39) {\n     $40 = HEAP32[$23>>2]|0;\n     $41 = (16 - ($40))|0;\n     $42 = $22 >>> $41;\n     $43 = $42&255;\n     $44 = HEAP32[$$phi$trans$insert>>2]|0;\n     $45 = ((($44)) + 2|0);\n     HEAP8[$45>>0] = $43;\n     $46 = ($25|0)>(23);\n     if ($46) {\n      $47 = HEAP32[$23>>2]|0;\n      $48 = (24 - ($47))|0;\n      $49 = $22 >>> $48;\n      $50 = $49&255;\n      $51 = HEAP32[$$phi$trans$insert>>2]|0;\n      $52 = ((($51)) + 3|0);\n      HEAP8[$52>>0] = $50;\n      $53 = ($25|0)>(31);\n      if ($53) {\n       $54 = HEAP32[$23>>2]|0;\n       $55 = ($54|0)==(0);\n       $56 = (32 - ($54))|0;\n       $57 = $22 >>> $56;\n       $58 = $57&255;\n       $$sink = $55 ? 0 : $58;\n       $59 = HEAP32[$$phi$trans$insert>>2]|0;\n       $60 = ((($59)) + 4|0);\n       HEAP8[$60>>0] = $$sink;\n      }\n     }\n    }\n   }\n   $61 = (($25|0) / 8)&-1;\n   $62 = HEAP32[$0>>2]|0;\n   $63 = (($62) + ($61))|0;\n   HEAP32[$0>>2] = $63;\n   $64 = HEAP32[$$phi$trans$insert>>2]|0;\n   $65 = (($64) + ($61)|0);\n   HEAP32[$$phi$trans$insert>>2] = $65;\n   $66 = $25 & 7;\n   HEAP32[$23>>2] = $66;\n   return;\n  }\n } while(0);\n $67 = ((($0)) + 8|0);\n $68 = HEAP32[$67>>2]|0;\n $69 = ($68|0)==(0|0);\n if (!($69)) {\n  _free($68);\n }\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;\n return;\n}\nfunction _oggpack_writeclear($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 8|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0|0);\n if (!($3)) {\n  _free($2);\n }\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;\n return;\n}\nfunction _oggpack_reset($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 12|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n HEAP32[$1>>2] = $5;\n HEAP8[$5>>0] = 0;\n HEAP32[$0>>2] = 0;\n $6 = ((($0)) + 4|0);\n HEAP32[$6>>2] = 0;\n return;\n}\nfunction _oggpack_look($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$036 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($1>>>0)>(32);\n if ($2) {\n  $$0 = -1;\n  return ($$0|0);\n }\n $3 = (2512 + ($1<<2)|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($0)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = (($6) + ($1))|0;\n $8 = HEAP32[$0>>2]|0;\n $9 = ((($0)) + 16|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = (($10) + -4)|0;\n $12 = ($8|0)<($11|0);\n if (!($12)) {\n  $13 = (($7) + 7)|0;\n  $14 = $13 >> 3;\n  $15 = (($10) - ($14))|0;\n  $16 = ($8|0)>($15|0);\n  if ($16) {\n   $$0 = -1;\n   return ($$0|0);\n  }\n  $17 = ($7|0)==(0);\n  if ($17) {\n   $$0 = 0;\n   return ($$0|0);\n  }\n }\n $18 = ((($0)) + 12|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = HEAP8[$19>>0]|0;\n $21 = $20&255;\n $22 = $21 >>> $6;\n $23 = ($7|0)>(8);\n if ($23) {\n  $24 = ((($19)) + 1|0);\n  $25 = HEAP8[$24>>0]|0;\n  $26 = $25&255;\n  $27 = (8 - ($6))|0;\n  $28 = $26 << $27;\n  $29 = $28 | $22;\n  $30 = ($7|0)>(16);\n  if ($30) {\n   $31 = ((($19)) + 2|0);\n   $32 = HEAP8[$31>>0]|0;\n   $33 = $32&255;\n   $34 = (16 - ($6))|0;\n   $35 = $33 << $34;\n   $36 = $35 | $29;\n   $37 = ($7|0)>(24);\n   if ($37) {\n    $38 = ((($19)) + 3|0);\n    $39 = HEAP8[$38>>0]|0;\n    $40 = $39&255;\n    $41 = (24 - ($6))|0;\n    $42 = $40 << $41;\n    $43 = $42 | $36;\n    $44 = ($7|0)<(33);\n    $45 = ($6|0)==(0);\n    $or$cond = $45 | $44;\n    if ($or$cond) {\n     $$036 = $43;\n    } else {\n     $46 = (32 - ($6))|0;\n     $47 = ((($19)) + 4|0);\n     $48 = HEAP8[$47>>0]|0;\n     $49 = $48&255;\n     $50 = $49 << $46;\n     $51 = $50 | $43;\n     $$036 = $51;\n    }\n   } else {\n    $$036 = $36;\n   }\n  } else {\n   $$036 = $29;\n  }\n } else {\n  $$036 = $22;\n }\n $52 = $$036 & $4;\n $$0 = $52;\n return ($$0|0);\n}\nfunction _oggpack_adv($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = (($3) + ($1))|0;\n $5 = HEAP32[$0>>2]|0;\n $6 = ((($0)) + 16|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = (($4) + 7)|0;\n $9 = $8 >> 3;\n $10 = (($7) - ($9))|0;\n $11 = ($5|0)>($10|0);\n if ($11) {\n  $18 = ((($0)) + 12|0);\n  HEAP32[$18>>2] = 0;\n  HEAP32[$0>>2] = $7;\n  $$sink = 1;\n  HEAP32[$2>>2] = $$sink;\n  return;\n } else {\n  $12 = (($4|0) / 8)&-1;\n  $13 = ((($0)) + 12|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = (($14) + ($12)|0);\n  HEAP32[$13>>2] = $15;\n  $16 = (($12) + ($5))|0;\n  HEAP32[$0>>2] = $16;\n  $17 = $4 & 7;\n  $$sink = $17;\n  HEAP32[$2>>2] = $$sink;\n  return;\n }\n}\nfunction _oggpack_read($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$047 = 0, $$pre$phi49Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($1>>>0)>(32);\n $3 = ((($0)) + 16|0);\n $4 = HEAP32[$3>>2]|0;\n do {\n  if ($2) {\n   $$pre48 = ((($0)) + 4|0);\n   $$pre$phi49Z2D = $$pre48;$$pre$phiZ2D = $0;\n  } else {\n   $5 = (2512 + ($1<<2)|0);\n   $6 = HEAP32[$5>>2]|0;\n   $7 = ((($0)) + 4|0);\n   $8 = HEAP32[$7>>2]|0;\n   $9 = (($8) + ($1))|0;\n   $10 = HEAP32[$0>>2]|0;\n   $11 = (($4) + -4)|0;\n   $12 = ($10|0)<($11|0);\n   if (!($12)) {\n    $13 = (($9) + 7)|0;\n    $14 = $13 >> 3;\n    $15 = (($4) - ($14))|0;\n    $16 = ($10|0)>($15|0);\n    if ($16) {\n     $$pre$phi49Z2D = $7;$$pre$phiZ2D = $0;\n     break;\n    }\n    $17 = ($9|0)==(0);\n    if ($17) {\n     $$0 = 0;\n     return ($$0|0);\n    }\n   }\n   $18 = ((($0)) + 12|0);\n   $19 = HEAP32[$18>>2]|0;\n   $20 = HEAP8[$19>>0]|0;\n   $21 = $20&255;\n   $22 = $21 >>> $8;\n   $23 = ($9|0)>(8);\n   if ($23) {\n    $24 = ((($19)) + 1|0);\n    $25 = HEAP8[$24>>0]|0;\n    $26 = $25&255;\n    $27 = (8 - ($8))|0;\n    $28 = $26 << $27;\n    $29 = $28 | $22;\n    $30 = ($9|0)>(16);\n    if ($30) {\n     $31 = ((($19)) + 2|0);\n     $32 = HEAP8[$31>>0]|0;\n     $33 = $32&255;\n     $34 = (16 - ($8))|0;\n     $35 = $33 << $34;\n     $36 = $35 | $29;\n     $37 = ($9|0)>(24);\n     if ($37) {\n      $38 = ((($19)) + 3|0);\n      $39 = HEAP8[$38>>0]|0;\n      $40 = $39&255;\n      $41 = (24 - ($8))|0;\n      $42 = $40 << $41;\n      $43 = $42 | $36;\n      $44 = ($9|0)<(33);\n      $45 = ($8|0)==(0);\n      $or$cond = $45 | $44;\n      if ($or$cond) {\n       $$047 = $43;\n      } else {\n       $46 = (32 - ($8))|0;\n       $47 = ((($19)) + 4|0);\n       $48 = HEAP8[$47>>0]|0;\n       $49 = $48&255;\n       $50 = $49 << $46;\n       $51 = $50 | $43;\n       $$047 = $51;\n      }\n     } else {\n      $$047 = $36;\n     }\n    } else {\n     $$047 = $29;\n    }\n   } else {\n    $$047 = $22;\n   }\n   $52 = $$047 & $6;\n   $53 = (($9|0) / 8)&-1;\n   $54 = (($19) + ($53)|0);\n   HEAP32[$18>>2] = $54;\n   $55 = (($10) + ($53))|0;\n   HEAP32[$0>>2] = $55;\n   $56 = $9 & 7;\n   HEAP32[$7>>2] = $56;\n   $$0 = $52;\n   return ($$0|0);\n  }\n } while(0);\n $57 = ((($0)) + 12|0);\n HEAP32[$57>>2] = 0;\n HEAP32[$$pre$phiZ2D>>2] = $4;\n HEAP32[$$pre$phi49Z2D>>2] = 1;\n $$0 = -1;\n return ($$0|0);\n}\nfunction _oggpack_bytes($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = HEAP32[$0>>2]|0;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = (($3) + 7)|0;\n $5 = (($4|0) / 8)&-1;\n $6 = (($5) + ($1))|0;\n return ($6|0);\n}\nfunction _oggpack_get_buffer($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 8|0);\n $2 = HEAP32[$1>>2]|0;\n return ($2|0);\n}\nfunction _ogg_stream_init($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$0 = -1;\n  return ($$0|0);\n }\n $3 = ((($0)) + 8|0);\n _memset(($3|0),0,352)|0;\n $4 = ((($0)) + 4|0);\n HEAP32[$4>>2] = 16384;\n $5 = ((($0)) + 24|0);\n HEAP32[$5>>2] = 1024;\n $6 = (_malloc(16384)|0);\n HEAP32[$0>>2] = $6;\n $7 = (_malloc(4096)|0);\n $8 = ((($0)) + 16|0);\n HEAP32[$8>>2] = $7;\n $9 = (_malloc(8192)|0);\n $10 = ((($0)) + 20|0);\n HEAP32[$10>>2] = $9;\n $11 = ($6|0)==(0|0);\n do {\n  if ($11) {\n   $14 = $7;$16 = $7;\n  } else {\n   $12 = ($7|0)==(0|0);\n   $13 = ($9|0)==(0|0);\n   $or$cond = $13 | $12;\n   if ($or$cond) {\n    _free($6);\n    $$pre = HEAP32[$8>>2]|0;\n    $14 = $$pre;$16 = $$pre;\n    break;\n   }\n   $19 = ((($0)) + 336|0);\n   HEAP32[$19>>2] = $1;\n   $$0 = 0;\n   return ($$0|0);\n  }\n } while(0);\n $15 = ($14|0)==(0|0);\n if (!($15)) {\n  _free($16);\n }\n $17 = HEAP32[$10>>2]|0;\n $18 = ($17|0)==(0|0);\n if (!($18)) {\n  _free($17);\n }\n _memset(($0|0),0,360)|0;\n $$0 = -1;\n return ($$0|0);\n}\nfunction _ogg_stream_clear($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return 0;\n }\n $2 = HEAP32[$0>>2]|0;\n $3 = ($2|0)==(0|0);\n if (!($3)) {\n  _free($2);\n }\n $4 = ((($0)) + 16|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if (!($6)) {\n  _free($5);\n }\n $7 = ((($0)) + 20|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)==(0|0);\n if (!($9)) {\n  _free($8);\n }\n _memset(($0|0),0,360)|0;\n return 0;\n}\nfunction _ogg_page_checksum_set($0) {\n $0 = $0|0;\n var $$028$lcssa = 0, $$02833 = 0, $$034 = 0, $$129$lcssa = 0, $$12930 = 0, $$131 = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0;\n var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = HEAP32[$0>>2]|0;\n $3 = ((($2)) + 22|0);\n HEAP8[$3>>0] = 0;\n $4 = HEAP32[$0>>2]|0;\n $5 = ((($4)) + 23|0);\n HEAP8[$5>>0] = 0;\n $6 = HEAP32[$0>>2]|0;\n $7 = ((($6)) + 24|0);\n HEAP8[$7>>0] = 0;\n $8 = HEAP32[$0>>2]|0;\n $9 = ((($8)) + 25|0);\n HEAP8[$9>>0] = 0;\n $10 = ((($0)) + 4|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ($11|0)>(0);\n if ($12) {\n  $13 = HEAP32[$0>>2]|0;\n  $$02833 = 0;$$034 = 0;\n  while(1) {\n   $20 = $$02833 << 8;\n   $21 = $$02833 >>> 24;\n   $22 = (($13) + ($$034)|0);\n   $23 = HEAP8[$22>>0]|0;\n   $24 = $23&255;\n   $25 = $24 ^ $21;\n   $26 = (2644 + ($25<<2)|0);\n   $27 = HEAP32[$26>>2]|0;\n   $28 = $27 ^ $20;\n   $29 = (($$034) + 1)|0;\n   $30 = ($29|0)<($11|0);\n   if ($30) {\n    $$02833 = $28;$$034 = $29;\n   } else {\n    $$028$lcssa = $28;\n    break;\n   }\n  }\n } else {\n  $$028$lcssa = 0;\n }\n $14 = ((($0)) + 12|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ($15|0)>(0);\n $17 = $$028$lcssa >>> 24;\n if ($16) {\n  $18 = ((($0)) + 8|0);\n  $19 = HEAP32[$18>>2]|0;\n  $$12930 = $$028$lcssa;$$131 = 0;$36 = $17;\n  while(1) {\n   $31 = $$12930 << 8;\n   $32 = (($19) + ($$131)|0);\n   $33 = HEAP8[$32>>0]|0;\n   $34 = $33&255;\n   $35 = $34 ^ $36;\n   $37 = (2644 + ($35<<2)|0);\n   $38 = HEAP32[$37>>2]|0;\n   $39 = $38 ^ $31;\n   $40 = (($$131) + 1)|0;\n   $41 = ($40|0)<($15|0);\n   $42 = $39 >>> 24;\n   if ($41) {\n    $$12930 = $39;$$131 = $40;$36 = $42;\n   } else {\n    $$129$lcssa = $39;$$lcssa = $42;\n    break;\n   }\n  }\n } else {\n  $$129$lcssa = $$028$lcssa;$$lcssa = $17;\n }\n $43 = $$129$lcssa&255;\n $44 = HEAP32[$0>>2]|0;\n $45 = ((($44)) + 22|0);\n HEAP8[$45>>0] = $43;\n $46 = $$129$lcssa >>> 8;\n $47 = $46&255;\n $48 = HEAP32[$0>>2]|0;\n $49 = ((($48)) + 23|0);\n HEAP8[$49>>0] = $47;\n $50 = $$129$lcssa >>> 16;\n $51 = $50&255;\n $52 = HEAP32[$0>>2]|0;\n $53 = ((($52)) + 24|0);\n HEAP8[$53>>0] = $51;\n $54 = $$lcssa&255;\n $55 = HEAP32[$0>>2]|0;\n $56 = ((($55)) + 25|0);\n HEAP8[$56>>0] = $54;\n return;\n}\nfunction _ogg_stream_iovecin($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$$i73 = 0, $$070 = 0, $$071$lcssa = 0, $$07189 = 0, $$090 = 0, $$187 = 0, $$282 = 0, $$lcssa = 0, $$pre = 0, $$pre96 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;\n var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0;\n var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;\n var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = ($0|0)==(0|0);\n if ($6) {\n  $$070 = -1;\n  return ($$070|0);\n }\n $7 = HEAP32[$0>>2]|0;\n $8 = ($7|0)==(0|0);\n if ($8) {\n  $$070 = -1;\n  return ($$070|0);\n }\n $9 = ($1|0)==(0|0);\n if ($9) {\n  $$070 = 0;\n  return ($$070|0);\n }\n $10 = ($2|0)>(0);\n L10: do {\n  if ($10) {\n   $$07189 = 0;$$090 = 0;\n   while(1) {\n    $11 = (((($1) + ($$090<<3)|0)) + 4|0);\n    $12 = HEAP32[$11>>2]|0;\n    $13 = ($12|0)<(0);\n    $14 = (2147483647 - ($12))|0;\n    $15 = ($$07189|0)>($14|0);\n    $or$cond = $13 | $15;\n    if ($or$cond) {\n     $$070 = -1;\n     break;\n    }\n    $16 = (($12) + ($$07189))|0;\n    $17 = (($$090) + 1)|0;\n    $18 = ($17|0)<($2|0);\n    if ($18) {\n     $$07189 = $16;$$090 = $17;\n    } else {\n     $$071$lcssa = $16;\n     break L10;\n    }\n   }\n   return ($$070|0);\n  } else {\n   $$071$lcssa = 0;\n  }\n } while(0);\n $19 = (($$071$lcssa|0) / 255)&-1;\n $20 = (($19) + 1)|0;\n $21 = ((($0)) + 12|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = ($22|0)==(0);\n $$pre96 = ((($0)) + 8|0);\n if (!($23)) {\n  $24 = HEAP32[$$pre96>>2]|0;\n  $25 = (($24) - ($22))|0;\n  HEAP32[$$pre96>>2] = $25;\n  $26 = ($25|0)==(0);\n  if (!($26)) {\n   $27 = (($7) + ($22)|0);\n   _memmove(($7|0),($27|0),($25|0))|0;\n  }\n  HEAP32[$21>>2] = 0;\n }\n $28 = ((($0)) + 4|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = (($29) - ($$071$lcssa))|0;\n $31 = HEAP32[$$pre96>>2]|0;\n $32 = ($30|0)>($31|0);\n do {\n  if (!($32)) {\n   $33 = (2147483647 - ($$071$lcssa))|0;\n   $34 = ($29|0)>($33|0);\n   if ($34) {\n    $35 = HEAP32[$0>>2]|0;\n    $36 = ($35|0)==(0|0);\n    if (!($36)) {\n     _free($35);\n    }\n    $37 = ((($0)) + 16|0);\n    $38 = HEAP32[$37>>2]|0;\n    $39 = ($38|0)==(0|0);\n    if (!($39)) {\n     _free($38);\n    }\n    $40 = ((($0)) + 20|0);\n    $41 = HEAP32[$40>>2]|0;\n    $42 = ($41|0)==(0|0);\n    if (!($42)) {\n     _free($41);\n    }\n    _memset(($0|0),0,360)|0;\n    $$070 = -1;\n    return ($$070|0);\n   }\n   $43 = (($29) + ($$071$lcssa))|0;\n   $44 = ($43|0)<(2147482623);\n   $45 = (($43) + 1024)|0;\n   $$$i73 = $44 ? $45 : $43;\n   $46 = HEAP32[$0>>2]|0;\n   $47 = (_realloc($46,$$$i73)|0);\n   $48 = ($47|0)==(0|0);\n   if (!($48)) {\n    HEAP32[$28>>2] = $$$i73;\n    HEAP32[$0>>2] = $47;\n    break;\n   }\n   $49 = HEAP32[$0>>2]|0;\n   $50 = ($49|0)==(0|0);\n   if (!($50)) {\n    _free($49);\n   }\n   $51 = ((($0)) + 16|0);\n   $52 = HEAP32[$51>>2]|0;\n   $53 = ($52|0)==(0|0);\n   if (!($53)) {\n    _free($52);\n   }\n   $54 = ((($0)) + 20|0);\n   $55 = HEAP32[$54>>2]|0;\n   $56 = ($55|0)==(0|0);\n   if (!($56)) {\n    _free($55);\n   }\n   _memset(($0|0),0,360)|0;\n   $$070 = -1;\n   return ($$070|0);\n  }\n } while(0);\n $57 = (__os_lacing_expand($0,$20)|0);\n $58 = ($57|0)==(0);\n if (!($58)) {\n  $$070 = -1;\n  return ($$070|0);\n }\n if ($10) {\n  $$pre = HEAP32[$$pre96>>2]|0;\n  $$187 = 0;$69 = $$pre;\n  while(1) {\n   $67 = HEAP32[$0>>2]|0;\n   $68 = (($67) + ($69)|0);\n   $70 = (($1) + ($$187<<3)|0);\n   $71 = HEAP32[$70>>2]|0;\n   $72 = (((($1) + ($$187<<3)|0)) + 4|0);\n   $73 = HEAP32[$72>>2]|0;\n   _memcpy(($68|0),($71|0),($73|0))|0;\n   $74 = HEAP32[$72>>2]|0;\n   $75 = HEAP32[$$pre96>>2]|0;\n   $76 = (($75) + ($74))|0;\n   HEAP32[$$pre96>>2] = $76;\n   $77 = (($$187) + 1)|0;\n   $exitcond = ($77|0)==($2|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$187 = $77;$69 = $76;\n   }\n  }\n }\n $59 = ($$071$lcssa|0)>(254);\n $60 = ((($0)) + 16|0);\n $61 = HEAP32[$60>>2]|0;\n $62 = ((($0)) + 28|0);\n $63 = HEAP32[$62>>2]|0;\n $64 = ((($0)) + 20|0);\n $65 = HEAP32[$64>>2]|0;\n $66 = ((($0)) + 352|0);\n if ($59) {\n  $$282 = 0;$79 = $63;\n  while(1) {\n   $78 = (($61) + ($79<<2)|0);\n   HEAP32[$78>>2] = 255;\n   $80 = $66;\n   $81 = $80;\n   $82 = HEAP32[$81>>2]|0;\n   $83 = (($80) + 4)|0;\n   $84 = $83;\n   $85 = HEAP32[$84>>2]|0;\n   $86 = (($65) + ($79<<3)|0);\n   $87 = $86;\n   $88 = $87;\n   HEAP32[$88>>2] = $82;\n   $89 = (($87) + 4)|0;\n   $90 = $89;\n   HEAP32[$90>>2] = $85;\n   $91 = (($$282) + 1)|0;\n   $92 = ($91|0)<($19|0);\n   $93 = (($63) + ($91))|0;\n   if ($92) {\n    $$282 = $91;$79 = $93;\n   } else {\n    $$lcssa = $93;\n    break;\n   }\n  }\n } else {\n  $$lcssa = $63;\n }\n $94 = (($$071$lcssa|0) % 255)&-1;\n $95 = (($61) + ($$lcssa<<2)|0);\n HEAP32[$95>>2] = $94;\n $96 = (($65) + ($$lcssa<<3)|0);\n $97 = $96;\n $98 = $97;\n HEAP32[$98>>2] = $4;\n $99 = (($97) + 4)|0;\n $100 = $99;\n HEAP32[$100>>2] = $5;\n $101 = $66;\n $102 = $101;\n HEAP32[$102>>2] = $4;\n $103 = (($101) + 4)|0;\n $104 = $103;\n HEAP32[$104>>2] = $5;\n $105 = (($61) + ($63<<2)|0);\n $106 = HEAP32[$105>>2]|0;\n $107 = $106 | 256;\n HEAP32[$105>>2] = $107;\n $108 = (($63) + ($20))|0;\n HEAP32[$62>>2] = $108;\n $109 = ((($0)) + 344|0);\n $110 = $109;\n $111 = $110;\n $112 = HEAP32[$111>>2]|0;\n $113 = (($110) + 4)|0;\n $114 = $113;\n $115 = HEAP32[$114>>2]|0;\n $116 = (_i64Add(($112|0),($115|0),1,0)|0);\n $117 = tempRet0;\n $118 = $109;\n $119 = $118;\n HEAP32[$119>>2] = $116;\n $120 = (($118) + 4)|0;\n $121 = $120;\n HEAP32[$121>>2] = $117;\n $122 = ($3|0)==(0);\n if ($122) {\n  $$070 = 0;\n  return ($$070|0);\n }\n $123 = ((($0)) + 328|0);\n HEAP32[$123>>2] = 1;\n $$070 = 0;\n return ($$070|0);\n}\nfunction __os_lacing_expand($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 24|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = (($3) - ($1))|0;\n $5 = ((($0)) + 28|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($4|0)>($6|0);\n if ($7) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $8 = (2147483647 - ($1))|0;\n $9 = ($3|0)>($8|0);\n if ($9) {\n  $10 = HEAP32[$0>>2]|0;\n  $11 = ($10|0)==(0|0);\n  if (!($11)) {\n   _free($10);\n  }\n  $12 = ((($0)) + 16|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = ($13|0)==(0|0);\n  if (!($14)) {\n   _free($13);\n  }\n  $15 = ((($0)) + 20|0);\n  $16 = HEAP32[$15>>2]|0;\n  $17 = ($16|0)==(0|0);\n  if (!($17)) {\n   _free($16);\n  }\n  _memset(($0|0),0,360)|0;\n  $$1 = -1;\n  return ($$1|0);\n }\n $18 = (($3) + ($1))|0;\n $19 = ($18|0)<(2147483615);\n $20 = (($18) + 32)|0;\n $$ = $19 ? $20 : $18;\n $21 = ((($0)) + 16|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = $$ << 2;\n $24 = (_realloc($22,$23)|0);\n $25 = ($24|0)==(0|0);\n if ($25) {\n  $26 = HEAP32[$0>>2]|0;\n  $27 = ($26|0)==(0|0);\n  if (!($27)) {\n   _free($26);\n  }\n  $28 = HEAP32[$21>>2]|0;\n  $29 = ($28|0)==(0|0);\n  if (!($29)) {\n   _free($28);\n  }\n  $30 = ((($0)) + 20|0);\n  $31 = HEAP32[$30>>2]|0;\n  $32 = ($31|0)==(0|0);\n  if (!($32)) {\n   _free($31);\n  }\n  _memset(($0|0),0,360)|0;\n  $$1 = -1;\n  return ($$1|0);\n }\n HEAP32[$21>>2] = $24;\n $33 = ((($0)) + 20|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = $$ << 3;\n $36 = (_realloc($34,$35)|0);\n $37 = ($36|0)==(0|0);\n if (!($37)) {\n  HEAP32[$33>>2] = $36;\n  HEAP32[$2>>2] = $$;\n  $$1 = 0;\n  return ($$1|0);\n }\n $38 = HEAP32[$0>>2]|0;\n $39 = ($38|0)==(0|0);\n if (!($39)) {\n  _free($38);\n }\n $40 = HEAP32[$21>>2]|0;\n $41 = ($40|0)==(0|0);\n if (!($41)) {\n  _free($40);\n }\n $42 = HEAP32[$33>>2]|0;\n $43 = ($42|0)==(0|0);\n if (!($43)) {\n  _free($42);\n }\n _memset(($0|0),0,360)|0;\n $$1 = -1;\n return ($$1|0);\n}\nfunction _ogg_stream_packetin($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = HEAP32[$1>>2]|0;\n HEAP32[$2>>2] = $3;\n $4 = ((($1)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($2)) + 4|0);\n HEAP32[$6>>2] = $5;\n $7 = ((($1)) + 12|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($1)) + 16|0);\n $10 = $9;\n $11 = $10;\n $12 = HEAP32[$11>>2]|0;\n $13 = (($10) + 4)|0;\n $14 = $13;\n $15 = HEAP32[$14>>2]|0;\n $16 = (_ogg_stream_iovecin($0,$2,1,$8,$12,$15)|0);\n STACKTOP = sp;return ($16|0);\n}\nfunction _ogg_stream_flush($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_ogg_stream_flush_i($0,$1,1,4096)|0);\n return ($2|0);\n}\nfunction _ogg_stream_flush_i($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$0117154 = 0, $$0118153 = 0, $$0120$lcssa$off0 = 0, $$0120$lcssa$off16 = 0, $$0120$lcssa$off24 = 0, $$0120$lcssa$off32 = 0, $$0120$lcssa$off40 = 0, $$0120$lcssa$off48 = 0, $$0120$lcssa$off56 = 0, $$0120$lcssa$off8 = 0, $$0120152$off0 = 0, $$0120152$off16 = 0, $$0120152$off24 = 0, $$0120152$off32 = 0, $$0120152$off40 = 0, $$0120152$off48 = 0, $$0120152$off56 = 0, $$0120152$off8 = 0, $$0122151 = 0;\n var $$0123$lcssa = 0, $$0123142 = 0, $$0124 = 0, $$0125 = 0, $$0132 = 0, $$1 = 0, $$1119 = 0, $$1121$off0 = 0, $$1121$off16 = 0, $$1121$off24 = 0, $$1121$off32 = 0, $$1121$off40 = 0, $$1121$off48 = 0, $$1121$off56 = 0, $$1121$off8 = 0, $$1126$lcssa = 0, $$1126150 = 0, $$2$off0 = 0, $$2$off16 = 0, $$2$off24 = 0;\n var $$2$off32 = 0, $$2$off40 = 0, $$2$off48 = 0, $$2$off56 = 0, $$2$off8 = 0, $$2127 = 0, $$2127138 = 0, $$2134 = 0, $$2139$off0 = 0, $$2139$off16 = 0, $$2139$off24 = 0, $$2139$off32 = 0, $$2139$off40 = 0, $$2139$off48 = 0, $$2139$off56 = 0, $$2139$off8 = 0, $$303 = 0, $$304 = 0, $$3131141 = 0, $$lcssa = 0;\n var $$lobit = 0, $$pre = 0, $$pre169 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;\n var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;\n var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;\n var $151 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;\n var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $or$cond = 0, $or$cond136 = 0, $or$cond305 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($0)) + 28|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)<(255);\n $$ = $6 ? $5 : 255;\n $7 = ($0|0)==(0|0);\n if ($7) {\n  $$0124 = 0;\n  return ($$0124|0);\n }\n $8 = HEAP32[$0>>2]|0;\n $9 = ($8|0)==(0|0);\n $10 = ($$|0)==(0);\n $or$cond136 = $10 | $9;\n if ($or$cond136) {\n  $$0124 = 0;\n  return ($$0124|0);\n }\n $11 = ((($0)) + 332|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ($12|0)==(0);\n L7: do {\n  if ($13) {\n   $17 = ((($0)) + 16|0);\n   $$0125 = 0;\n   while(1) {\n    $18 = ($$0125|0)<($$|0);\n    if (!($18)) {\n     $$2$off0 = 0;$$2$off16 = 0;$$2$off24 = 0;$$2$off32 = 0;$$2$off40 = 0;$$2$off48 = 0;$$2$off56 = 0;$$2$off8 = 0;$$2127 = $$0125;$$2134 = $2;\n     label = 14;\n     break L7;\n    }\n    $19 = HEAP32[$17>>2]|0;\n    $20 = (($19) + ($$0125<<2)|0);\n    $21 = HEAP32[$20>>2]|0;\n    $22 = $21 & 255;\n    $23 = ($22|0)==(255);\n    $24 = (($$0125) + 1)|0;\n    if ($23) {\n     $$0125 = $24;\n    } else {\n     $$2$off0 = 0;$$2$off16 = 0;$$2$off24 = 0;$$2$off32 = 0;$$2$off40 = 0;$$2$off48 = 0;$$2$off56 = 0;$$2$off8 = 0;$$2127 = $24;$$2134 = $2;\n     label = 14;\n     break;\n    }\n   }\n  } else {\n   $14 = ($5|0)>(0);\n   if ($14) {\n    $15 = ((($0)) + 16|0);\n    $16 = ((($0)) + 20|0);\n    $$0117154 = 0;$$0118153 = 0;$$0120152$off0 = -1;$$0120152$off16 = -1;$$0120152$off24 = -1;$$0120152$off32 = -1;$$0120152$off40 = -1;$$0120152$off48 = -1;$$0120152$off56 = -1;$$0120152$off8 = -1;$$0122151 = 0;$$1126150 = 0;\n    while(1) {\n     $25 = ($$0122151|0)>($3|0);\n     $26 = ($$0117154|0)>(3);\n     $or$cond = $25 & $26;\n     if ($or$cond) {\n      $$0120$lcssa$off0 = $$0120152$off0;$$0120$lcssa$off16 = $$0120152$off16;$$0120$lcssa$off24 = $$0120152$off24;$$0120$lcssa$off32 = $$0120152$off32;$$0120$lcssa$off40 = $$0120152$off40;$$0120$lcssa$off48 = $$0120152$off48;$$0120$lcssa$off56 = $$0120152$off56;$$0120$lcssa$off8 = $$0120152$off8;$$0132 = 1;$$1126$lcssa = $$1126150;\n      break;\n     }\n     $27 = HEAP32[$15>>2]|0;\n     $28 = (($27) + ($$1126150<<2)|0);\n     $29 = HEAP32[$28>>2]|0;\n     $30 = $29 & 255;\n     $31 = (($30) + ($$0122151))|0;\n     $32 = ($30|0)==(255);\n     $33 = (($$0118153) + 1)|0;\n     if ($32) {\n      $$1 = 0;$$1119 = $$0118153;$$1121$off0 = $$0120152$off0;$$1121$off16 = $$0120152$off16;$$1121$off24 = $$0120152$off24;$$1121$off32 = $$0120152$off32;$$1121$off40 = $$0120152$off40;$$1121$off48 = $$0120152$off48;$$1121$off56 = $$0120152$off56;$$1121$off8 = $$0120152$off8;\n     } else {\n      $34 = HEAP32[$16>>2]|0;\n      $35 = (($34) + ($$1126150<<3)|0);\n      $36 = $35;\n      $37 = $36;\n      $38 = HEAP32[$37>>2]|0;\n      $39 = (($36) + 4)|0;\n      $40 = $39;\n      $41 = HEAP32[$40>>2]|0;\n      $42 = $38&255;\n      $43 = (_bitshift64Lshr(($38|0),($41|0),8)|0);\n      $44 = tempRet0;\n      $45 = $43&255;\n      $46 = (_bitshift64Lshr(($38|0),($41|0),16)|0);\n      $47 = tempRet0;\n      $48 = $46&255;\n      $49 = (_bitshift64Lshr(($38|0),($41|0),24)|0);\n      $50 = tempRet0;\n      $51 = $49&255;\n      $52 = $41&255;\n      $53 = (_bitshift64Lshr(($38|0),($41|0),40)|0);\n      $54 = tempRet0;\n      $55 = $53&255;\n      $56 = (_bitshift64Lshr(($38|0),($41|0),48)|0);\n      $57 = tempRet0;\n      $58 = $56&255;\n      $59 = (_bitshift64Lshr(($38|0),($41|0),56)|0);\n      $60 = tempRet0;\n      $61 = $59&255;\n      $$1 = $33;$$1119 = $33;$$1121$off0 = $42;$$1121$off16 = $48;$$1121$off24 = $51;$$1121$off32 = $52;$$1121$off40 = $55;$$1121$off48 = $58;$$1121$off56 = $61;$$1121$off8 = $45;\n     }\n     $62 = (($$1126150) + 1)|0;\n     $63 = ($62|0)<($$|0);\n     if ($63) {\n      $$0117154 = $$1;$$0118153 = $$1119;$$0120152$off0 = $$1121$off0;$$0120152$off16 = $$1121$off16;$$0120152$off24 = $$1121$off24;$$0120152$off32 = $$1121$off32;$$0120152$off40 = $$1121$off40;$$0120152$off48 = $$1121$off48;$$0120152$off56 = $$1121$off56;$$0120152$off8 = $$1121$off8;$$0122151 = $31;$$1126150 = $62;\n     } else {\n      $$0120$lcssa$off0 = $$1121$off0;$$0120$lcssa$off16 = $$1121$off16;$$0120$lcssa$off24 = $$1121$off24;$$0120$lcssa$off32 = $$1121$off32;$$0120$lcssa$off40 = $$1121$off40;$$0120$lcssa$off48 = $$1121$off48;$$0120$lcssa$off56 = $$1121$off56;$$0120$lcssa$off8 = $$1121$off8;$$0132 = $2;$$1126$lcssa = $62;\n      break;\n     }\n    }\n    $64 = ($$1126$lcssa|0)==(255);\n    if ($64) {\n     $$2127138 = 255;$$2139$off0 = $$0120$lcssa$off0;$$2139$off16 = $$0120$lcssa$off16;$$2139$off24 = $$0120$lcssa$off24;$$2139$off32 = $$0120$lcssa$off32;$$2139$off40 = $$0120$lcssa$off40;$$2139$off48 = $$0120$lcssa$off48;$$2139$off56 = $$0120$lcssa$off56;$$2139$off8 = $$0120$lcssa$off8;\n    } else {\n     $$2$off0 = $$0120$lcssa$off0;$$2$off16 = $$0120$lcssa$off16;$$2$off24 = $$0120$lcssa$off24;$$2$off32 = $$0120$lcssa$off32;$$2$off40 = $$0120$lcssa$off40;$$2$off48 = $$0120$lcssa$off48;$$2$off56 = $$0120$lcssa$off56;$$2$off8 = $$0120$lcssa$off8;$$2127 = $$1126$lcssa;$$2134 = $$0132;\n     label = 14;\n    }\n   } else {\n    $$2$off0 = -1;$$2$off16 = -1;$$2$off24 = -1;$$2$off32 = -1;$$2$off40 = -1;$$2$off48 = -1;$$2$off56 = -1;$$2$off8 = -1;$$2127 = 0;$$2134 = $2;\n    label = 14;\n   }\n  }\n } while(0);\n if ((label|0) == 14) {\n  $65 = ($$2134|0)==(0);\n  if ($65) {\n   $$0124 = 0;\n   return ($$0124|0);\n  } else {\n   $$2127138 = $$2127;$$2139$off0 = $$2$off0;$$2139$off16 = $$2$off16;$$2139$off24 = $$2$off24;$$2139$off32 = $$2$off32;$$2139$off40 = $$2$off40;$$2139$off48 = $$2$off48;$$2139$off56 = $$2$off56;$$2139$off8 = $$2$off8;\n  }\n }\n $66 = ((($0)) + 40|0);\n HEAP8[$66>>0]=1399285583&255;HEAP8[$66+1>>0]=(1399285583>>8)&255;HEAP8[$66+2>>0]=(1399285583>>16)&255;HEAP8[$66+3>>0]=1399285583>>24;\n $67 = ((($0)) + 44|0);\n HEAP8[$67>>0] = 0;\n $68 = ((($0)) + 45|0);\n HEAP8[$68>>0] = 0;\n $69 = ((($0)) + 16|0);\n $70 = HEAP32[$69>>2]|0;\n $71 = HEAP32[$70>>2]|0;\n $72 = $71 >>> 8;\n $$lobit = $72 & 1;\n $73 = $$lobit ^ 1;\n $74 = $73&255;\n $75 = $74 | 2;\n $$303 = $13 ? $75 : $74;\n HEAP8[$68>>0] = $$303;\n $76 = ((($0)) + 328|0);\n $77 = HEAP32[$76>>2]|0;\n $78 = ($77|0)!=(0);\n $79 = ($5|0)==($$2127138|0);\n $or$cond305 = $78 & $79;\n if ($or$cond305) {\n  $$304 = $13 ? $75 : $74;\n  $80 = $$304 | 4;\n  HEAP8[$68>>0] = $80;\n }\n HEAP32[$11>>2] = 1;\n $81 = ((($0)) + 46|0);\n HEAP8[$81>>0] = $$2139$off0;\n $82 = ((($0)) + 47|0);\n HEAP8[$82>>0] = $$2139$off8;\n $83 = ((($0)) + 48|0);\n HEAP8[$83>>0] = $$2139$off16;\n $84 = ((($0)) + 49|0);\n HEAP8[$84>>0] = $$2139$off24;\n $85 = ((($0)) + 50|0);\n HEAP8[$85>>0] = $$2139$off32;\n $86 = ((($0)) + 51|0);\n HEAP8[$86>>0] = $$2139$off40;\n $87 = ((($0)) + 52|0);\n HEAP8[$87>>0] = $$2139$off48;\n $88 = ((($0)) + 53|0);\n HEAP8[$88>>0] = $$2139$off56;\n $89 = ((($0)) + 336|0);\n $90 = HEAP32[$89>>2]|0;\n $91 = $90&255;\n $92 = ((($0)) + 54|0);\n HEAP8[$92>>0] = $91;\n $93 = $90 >>> 8;\n $94 = $93&255;\n $95 = ((($0)) + 55|0);\n HEAP8[$95>>0] = $94;\n $96 = $90 >>> 16;\n $97 = $96&255;\n $98 = ((($0)) + 56|0);\n HEAP8[$98>>0] = $97;\n $99 = $90 >>> 24;\n $100 = $99&255;\n $101 = ((($0)) + 57|0);\n HEAP8[$101>>0] = $100;\n $102 = ((($0)) + 340|0);\n $103 = HEAP32[$102>>2]|0;\n $104 = ($103|0)==(-1);\n if ($104) {\n  HEAP32[$102>>2] = 0;\n  $106 = 0;\n } else {\n  $106 = $103;\n }\n $105 = (($106) + 1)|0;\n HEAP32[$102>>2] = $105;\n $107 = $106&255;\n $108 = ((($0)) + 58|0);\n HEAP8[$108>>0] = $107;\n $109 = $106 >>> 8;\n $110 = $109&255;\n $111 = ((($0)) + 59|0);\n HEAP8[$111>>0] = $110;\n $112 = $106 >>> 16;\n $113 = $112&255;\n $114 = ((($0)) + 60|0);\n HEAP8[$114>>0] = $113;\n $115 = $106 >>> 24;\n $116 = $115&255;\n $117 = ((($0)) + 61|0);\n HEAP8[$117>>0] = $116;\n $118 = ((($0)) + 62|0);\n $119 = $$2127138&255;\n $120 = ((($0)) + 66|0);\n HEAP16[$118>>1]=0&65535;HEAP16[$118+2>>1]=0>>>16;\n HEAP8[$120>>0] = $119;\n $121 = ($$2127138|0)>(0);\n if ($121) {\n  $$0123142 = 0;$$3131141 = 0;$123 = $70;\n  while(1) {\n   $122 = (($123) + ($$3131141<<2)|0);\n   $124 = HEAP32[$122>>2]|0;\n   $125 = $124&255;\n   $126 = (($$3131141) + 27)|0;\n   $127 = (((($0)) + 40|0) + ($126)|0);\n   HEAP8[$127>>0] = $125;\n   $128 = $124 & 255;\n   $129 = (($128) + ($$0123142))|0;\n   $130 = (($$3131141) + 1)|0;\n   $131 = HEAP32[$69>>2]|0;\n   $exitcond = ($130|0)==($$2127138|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$0123142 = $129;$$3131141 = $130;$123 = $131;\n   }\n  }\n  $$pre = HEAP32[$0>>2]|0;\n  $$pre169 = HEAP32[$4>>2]|0;\n  $$0123$lcssa = $129;$$lcssa = $131;$138 = $$pre;$142 = $$pre169;\n } else {\n  $$0123$lcssa = 0;$$lcssa = $70;$138 = $8;$142 = $5;\n }\n HEAP32[$1>>2] = $66;\n $132 = (($$2127138) + 27)|0;\n $133 = ((($0)) + 324|0);\n HEAP32[$133>>2] = $132;\n $134 = ((($1)) + 4|0);\n HEAP32[$134>>2] = $132;\n $135 = ((($0)) + 12|0);\n $136 = HEAP32[$135>>2]|0;\n $137 = (($138) + ($136)|0);\n $139 = ((($1)) + 8|0);\n HEAP32[$139>>2] = $137;\n $140 = ((($1)) + 12|0);\n HEAP32[$140>>2] = $$0123$lcssa;\n $141 = (($142) - ($$2127138))|0;\n HEAP32[$4>>2] = $141;\n $143 = (($$lcssa) + ($$2127138<<2)|0);\n $144 = $141 << 2;\n _memmove(($$lcssa|0),($143|0),($144|0))|0;\n $145 = ((($0)) + 20|0);\n $146 = HEAP32[$145>>2]|0;\n $147 = (($146) + ($$2127138<<3)|0);\n $148 = HEAP32[$4>>2]|0;\n $149 = $148 << 3;\n _memmove(($146|0),($147|0),($149|0))|0;\n $150 = HEAP32[$135>>2]|0;\n $151 = (($150) + ($$0123$lcssa))|0;\n HEAP32[$135>>2] = $151;\n _ogg_page_checksum_set($1);\n $$0124 = 1;\n return ($$0124|0);\n}\nfunction _ogg_stream_pageout($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$09 = 0, $$not = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$09 = 0;\n  return ($$09|0);\n }\n $3 = HEAP32[$0>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  $$09 = 0;\n  return ($$09|0);\n }\n $5 = ((($0)) + 328|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0);\n $8 = ((($0)) + 28|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)!=(0);\n $$not = $10 ^ 1;\n $brmerge = $7 | $$not;\n if ($brmerge) {\n  if ($10) {\n   $11 = ((($0)) + 332|0);\n   $12 = HEAP32[$11>>2]|0;\n   $13 = ($12|0)==(0);\n   if ($13) {\n    label = 6;\n   } else {\n    $$0 = 0;\n   }\n  } else {\n   $$0 = 0;\n  }\n } else {\n  label = 6;\n }\n if ((label|0) == 6) {\n  $$0 = 1;\n }\n $14 = (_ogg_stream_flush_i($0,$1,$$0,4096)|0);\n $$09 = $14;\n return ($$09|0);\n}\nfunction _vorbis_analysis($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;\n var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 104|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 88|0);\n $5 = ((($3)) + 12|0);\n ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;\n $6 = HEAP32[$5>>2]|0;\n _oggpack_reset($6);\n $7 = ((($3)) + 16|0);\n $8 = HEAP32[$7>>2]|0;\n _oggpack_reset($8);\n $9 = ((($3)) + 20|0);\n $10 = HEAP32[$9>>2]|0;\n _oggpack_reset($10);\n $11 = ((($3)) + 24|0);\n $12 = HEAP32[$11>>2]|0;\n _oggpack_reset($12);\n $13 = ((($3)) + 28|0);\n $14 = HEAP32[$13>>2]|0;\n _oggpack_reset($14);\n $15 = ((($3)) + 32|0);\n $16 = HEAP32[$15>>2]|0;\n _oggpack_reset($16);\n $17 = ((($3)) + 36|0);\n $18 = HEAP32[$17>>2]|0;\n _oggpack_reset($18);\n $19 = ((($3)) + 40|0);\n $20 = HEAP32[$19>>2]|0;\n _oggpack_reset($20);\n $21 = ((($3)) + 44|0);\n $22 = HEAP32[$21>>2]|0;\n _oggpack_reset($22);\n $23 = ((($3)) + 48|0);\n $24 = HEAP32[$23>>2]|0;\n _oggpack_reset($24);\n $25 = ((($3)) + 52|0);\n $26 = HEAP32[$25>>2]|0;\n _oggpack_reset($26);\n $27 = ((($3)) + 56|0);\n $28 = HEAP32[$27>>2]|0;\n _oggpack_reset($28);\n $29 = ((($3)) + 60|0);\n $30 = HEAP32[$29>>2]|0;\n _oggpack_reset($30);\n $31 = ((($3)) + 64|0);\n $32 = HEAP32[$31>>2]|0;\n _oggpack_reset($32);\n $33 = ((($3)) + 68|0);\n $34 = HEAP32[$33>>2]|0;\n _oggpack_reset($34);\n $35 = HEAP32[6990]|0;\n $36 = ((($35)) + 12|0);\n $37 = HEAP32[$36>>2]|0;\n $38 = (FUNCTION_TABLE_ii[$37 & 31]($0)|0);\n $39 = ($38|0)==(0);\n if (!($39)) {\n  $$0 = $38;\n  return ($$0|0);\n }\n $40 = ($1|0)==(0|0);\n if ($40) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $41 = (_vorbis_bitrate_managed($0)|0);\n $42 = ($41|0)==(0);\n if (!($42)) {\n  $$0 = -131;\n  return ($$0|0);\n }\n $43 = ((($0)) + 4|0);\n $44 = (_oggpack_get_buffer($43)|0);\n HEAP32[$1>>2] = $44;\n $45 = (_oggpack_bytes($43)|0);\n $46 = ((($1)) + 4|0);\n HEAP32[$46>>2] = $45;\n $47 = ((($1)) + 8|0);\n HEAP32[$47>>2] = 0;\n $48 = ((($0)) + 44|0);\n $49 = HEAP32[$48>>2]|0;\n $50 = ((($1)) + 12|0);\n HEAP32[$50>>2] = $49;\n $51 = ((($0)) + 48|0);\n $52 = $51;\n $53 = $52;\n $54 = HEAP32[$53>>2]|0;\n $55 = (($52) + 4)|0;\n $56 = $55;\n $57 = HEAP32[$56>>2]|0;\n $58 = ((($1)) + 16|0);\n $59 = $58;\n $60 = $59;\n HEAP32[$60>>2] = $54;\n $61 = (($59) + 4)|0;\n $62 = $61;\n HEAP32[$62>>2] = $57;\n $63 = ((($0)) + 56|0);\n $64 = $63;\n $65 = $64;\n $66 = HEAP32[$65>>2]|0;\n $67 = (($64) + 4)|0;\n $68 = $67;\n $69 = HEAP32[$68>>2]|0;\n $70 = ((($1)) + 24|0);\n $71 = $70;\n $72 = $71;\n HEAP32[$72>>2] = $66;\n $73 = (($71) + 4)|0;\n $74 = $73;\n HEAP32[$74>>2] = $69;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _vorbis_bitrate_init($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0;\n var $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0;\n var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 28|0);\n $3 = HEAP32[$2>>2]|0;\n dest=$1; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n $4 = ((($3)) + 3372|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)>(0);\n if (!($6)) {\n  return;\n }\n $7 = ((($0)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = HEAP32[$3>>2]|0;\n $10 = $9 >> 1;\n $11 = ((($3)) + 4|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = (($12|0) / ($9|0))&-1;\n $14 = ((($1)) + 24|0);\n HEAP32[$14>>2] = $13;\n HEAP32[$1>>2] = 1;\n $15 = ((($3)) + 3360|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = (+($16|0));\n $18 = (+($10|0));\n $19 = $17 * $18;\n $20 = (+($8|0));\n $21 = $19 / $20;\n $22 = (+_rint($21));\n $23 = (~~(($22)));\n $24 = ((($1)) + 12|0);\n HEAP32[$24>>2] = $23;\n $25 = ((($3)) + 3364|0);\n $26 = HEAP32[$25>>2]|0;\n $27 = (+($26|0));\n $28 = $27 * $18;\n $29 = $28 / $20;\n $30 = (+_rint($29));\n $31 = (~~(($30)));\n $32 = ((($1)) + 16|0);\n HEAP32[$32>>2] = $31;\n $33 = ((($3)) + 3368|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = (+($34|0));\n $36 = $35 * $18;\n $37 = $36 / $20;\n $38 = (+_rint($37));\n $39 = (~~(($38)));\n $40 = ((($1)) + 20|0);\n HEAP32[$40>>2] = $39;\n $41 = ((($1)) + 32|0);\n HEAPF64[$41>>3] = 7.0;\n $42 = (+($5|0));\n $43 = ((($3)) + 3376|0);\n $44 = +HEAPF64[$43>>3];\n $45 = $44 * $42;\n $46 = (~~(($45)));\n $47 = ((($1)) + 8|0);\n HEAP32[$47>>2] = $46;\n $48 = ((($1)) + 4|0);\n HEAP32[$48>>2] = $46;\n return;\n}\nfunction _vorbis_bitrate_clear($0) {\n $0 = $0|0;\n var dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n dest=$0; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n return;\n}\nfunction _vorbis_bitrate_managed($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $not$ = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 64|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($2)) + 104|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($4)) + 80|0);\n $6 = HEAP32[$5>>2]|0;\n $not$ = ($6|0)!=(0);\n $$0 = $not$&1;\n return ($$0|0);\n}\nfunction _vorbis_bitrate_addblock($0) {\n $0 = $0|0;\n var $$$7 = 0, $$0 = 0, $$0209239 = 0, $$0210258284 = 0, $$0220 = 0.0, $$1221 = 0.0, $$2 = 0, $$2213 = 0, $$3 = 0, $$3214248 = 0, $$4215 = 0, $$4249 = 0, $$5 = 0, $$5216240 = 0, $$6217 = 0, $$6241 = 0, $$7 = 0, $$8219 = 0, $$pre = 0, $$pre274 = 0;\n var $$pre275 = 0, $$sink226 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0;\n var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0.0, $130 = 0, $131 = 0, $132 = 0;\n var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;\n var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;\n var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;\n var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;\n var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;\n var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $or$cond = 0, $or$cond222 = 0, $or$cond222263 = 0, $or$cond223 = 0, $or$cond224 = 0, $or$cond227 = 0, $or$cond228 = 0, $or$cond256 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 104|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($0)) + 64|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($4)) + 104|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ((($4)) + 4|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($8)) + 28|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ((($6)) + 112|0);\n $12 = +HEAPF64[$11>>3];\n $13 = (+_rint($12));\n $14 = (~~(($13)));\n $15 = (((($2)) + 12|0) + ($14<<2)|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = (_oggpack_bytes($16)|0);\n $18 = $17 << 3;\n $19 = ((($0)) + 28|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = ($20|0)==(0);\n $22 = ((($6)) + 96|0);\n $23 = HEAP32[$22>>2]|0;\n if ($21) {\n  $24 = ((($6)) + 100|0);\n  $25 = HEAP32[$24>>2]|0;\n  $122 = $23;$139 = $24;$142 = $25;$227 = 0;$33 = 0;\n } else {\n  $26 = ((($6)) + 104|0);\n  $27 = HEAP32[$26>>2]|0;\n  $28 = ((($6)) + 100|0);\n  $29 = HEAP32[$28>>2]|0;\n  $30 = Math_imul($27, $23)|0;\n  $31 = Math_imul($27, $29)|0;\n  $122 = $30;$139 = $28;$142 = $31;$227 = 1;$33 = $20;\n }\n $32 = (($10) + ($33<<2)|0);\n $34 = HEAP32[$32>>2]|0;\n $35 = $34 >> 1;\n $36 = ((($10)) + 3372|0);\n $37 = HEAP32[$36>>2]|0;\n $38 = (+($37|0));\n $39 = ((($10)) + 3376|0);\n $40 = +HEAPF64[$39>>3];\n $41 = $38 * $40;\n $42 = (~~(($41)));\n $43 = ((($6)) + 80|0);\n $44 = HEAP32[$43>>2]|0;\n $45 = ($44|0)==(0);\n $46 = ((($6)) + 120|0);\n if ($45) {\n  $47 = HEAP32[$46>>2]|0;\n  $48 = ($47|0)==(0|0);\n  if (!($48)) {\n   $$0 = -1;\n   return ($$0|0);\n  }\n  HEAP32[$46>>2] = $0;\n  $$0 = 0;\n  return ($$0|0);\n }\n HEAP32[$46>>2] = $0;\n $49 = ((($6)) + 92|0);\n $50 = HEAP32[$49>>2]|0;\n $51 = ($50|0)>(0);\n if ($51) {\n  if ($227) {\n   $52 = ((($6)) + 104|0);\n   $53 = HEAP32[$52>>2]|0;\n   $54 = Math_imul($53, $50)|0;\n   $61 = $54;\n  } else {\n   $61 = $50;\n  }\n  $55 = ((($10)) + 3384|0);\n  $56 = +HEAPF64[$55>>3];\n  $57 = 15.0 / $56;\n  $58 = ((($6)) + 84|0);\n  $59 = HEAP32[$58>>2]|0;\n  $60 = (($18) - ($61))|0;\n  $62 = (($59) + ($60))|0;\n  $63 = ($62|0)>($42|0);\n  L17: do {\n   if ($63) {\n    $64 = ($14|0)>(0);\n    $65 = ($18|0)>($61|0);\n    $or$cond256 = $65 & $64;\n    if ($or$cond256) {\n     $66 = (($18) - ($61))|0;\n     $67 = (($66) + ($59))|0;\n     $68 = ($67|0)>($42|0);\n     if ($68) {\n      $$0210258284 = $14;\n      while(1) {\n       $69 = (($$0210258284) + -1)|0;\n       $70 = (((($2)) + 12|0) + ($69<<2)|0);\n       $71 = HEAP32[$70>>2]|0;\n       $72 = (_oggpack_bytes($71)|0);\n       $73 = $72 << 3;\n       $74 = ($$0210258284|0)>(1);\n       $75 = ($73|0)>($61|0);\n       $or$cond = $75 & $74;\n       if (!($or$cond)) {\n        $$2 = $69;\n        break L17;\n       }\n       $$pre274 = HEAP32[$58>>2]|0;\n       $76 = (($73) - ($61))|0;\n       $77 = (($76) + ($$pre274))|0;\n       $78 = ($77|0)>($42|0);\n       if ($78) {\n        $$0210258284 = $69;\n       } else {\n        $$2 = $69;\n        break;\n       }\n      }\n     } else {\n      $$2 = $14;\n     }\n    } else {\n     $$2 = $14;\n    }\n   } else {\n    $79 = ($62|0)<($42|0);\n    if ($79) {\n     $80 = (($14) + 1)|0;\n     $81 = ($80|0)<(15);\n     $82 = ($18|0)<($61|0);\n     $or$cond222263 = $82 & $81;\n     if ($or$cond222263) {\n      $83 = (($18) - ($61))|0;\n      $84 = (($83) + ($59))|0;\n      $85 = ($84|0)<($42|0);\n      if ($85) {\n       $87 = $80;\n       while(1) {\n        $86 = (((($2)) + 12|0) + ($87<<2)|0);\n        $88 = HEAP32[$86>>2]|0;\n        $89 = (_oggpack_bytes($88)|0);\n        $90 = $89 << 3;\n        $91 = (($87) + 1)|0;\n        $92 = ($91|0)<(15);\n        $93 = ($90|0)<($61|0);\n        $or$cond222 = $93 & $92;\n        if (!($or$cond222)) {\n         $$2 = $87;\n         break L17;\n        }\n        $$pre = HEAP32[$58>>2]|0;\n        $94 = (($90) - ($61))|0;\n        $95 = (($94) + ($$pre))|0;\n        $96 = ($95|0)<($42|0);\n        if ($96) {\n         $87 = $91;\n        } else {\n         $$2 = $87;\n         break;\n        }\n       }\n      } else {\n       $$2 = $14;\n      }\n     } else {\n      $$2 = $14;\n     }\n    } else {\n     $$2 = $14;\n    }\n   }\n  } while(0);\n  $97 = (+($$2|0));\n  $98 = +HEAPF64[$11>>3];\n  $99 = $97 - $98;\n  $100 = (+_rint($99));\n  $101 = (+($35|0));\n  $102 = $100 / $101;\n  $103 = ((($8)) + 8|0);\n  $104 = HEAP32[$103>>2]|0;\n  $105 = (+($104|0));\n  $106 = $105 * $102;\n  $107 = -$57;\n  $108 = $106 < $107;\n  $$0220 = $108 ? $107 : $106;\n  $109 = $$0220 > $57;\n  $$1221 = $109 ? $57 : $$0220;\n  $110 = $$1221 / $105;\n  $111 = $110 * $101;\n  $112 = $111 + $98;\n  HEAPF64[$11>>3] = $112;\n  $113 = (+_rint($112));\n  $114 = (~~(($113)));\n  $115 = (((($2)) + 12|0) + ($114<<2)|0);\n  $116 = HEAP32[$115>>2]|0;\n  $117 = (_oggpack_bytes($116)|0);\n  $118 = $117 << 3;\n  $$pre275 = HEAP32[$22>>2]|0;\n  $$2213 = $118;$$3 = $114;$119 = $$pre275;\n } else {\n  $$2213 = $18;$$3 = $14;$119 = $23;\n }\n $120 = ($119|0)>(0);\n $121 = ($$2213|0)<($122|0);\n $or$cond223 = $121 & $120;\n L31: do {\n  if ($or$cond223) {\n   $123 = ((($6)) + 88|0);\n   $124 = HEAP32[$123>>2]|0;\n   $125 = (($$2213) - ($122))|0;\n   $126 = (($125) + ($124))|0;\n   $127 = ($126|0)<(0);\n   if ($127) {\n    $$3214248 = $$2213;$$4249 = $$3;\n    while(1) {\n     $128 = (($$4249) + 1)|0;\n     $129 = ($$4249|0)>(13);\n     if ($129) {\n      $$4215 = $$3214248;$$5 = $128;\n      break L31;\n     }\n     $130 = (((($2)) + 12|0) + ($128<<2)|0);\n     $131 = HEAP32[$130>>2]|0;\n     $132 = (_oggpack_bytes($131)|0);\n     $133 = $132 << 3;\n     $134 = HEAP32[$123>>2]|0;\n     $135 = (($133) - ($122))|0;\n     $136 = (($135) + ($134))|0;\n     $137 = ($136|0)<(0);\n     if ($137) {\n      $$3214248 = $133;$$4249 = $128;\n     } else {\n      $$4215 = $133;$$5 = $128;\n      break;\n     }\n    }\n   } else {\n    $$4215 = $$2213;$$5 = $$3;\n   }\n  } else {\n   $$4215 = $$2213;$$5 = $$3;\n  }\n } while(0);\n $138 = HEAP32[$139>>2]|0;\n $140 = ($138|0)>(0);\n $141 = ($$4215|0)>($142|0);\n $or$cond224 = $141 & $140;\n L37: do {\n  if ($or$cond224) {\n   $143 = ((($6)) + 88|0);\n   $144 = HEAP32[$143>>2]|0;\n   $145 = (($$4215) - ($142))|0;\n   $146 = (($145) + ($144))|0;\n   $147 = HEAP32[$36>>2]|0;\n   $148 = ($146|0)>($147|0);\n   if ($148) {\n    $$5216240 = $$4215;$$6241 = $$5;\n    while(1) {\n     $149 = (($$6241) + -1)|0;\n     $150 = ($$6241|0)<(1);\n     if ($150) {\n      $$6217 = $$5216240;$$7 = $149;\n      break L37;\n     }\n     $151 = (((($2)) + 12|0) + ($149<<2)|0);\n     $152 = HEAP32[$151>>2]|0;\n     $153 = (_oggpack_bytes($152)|0);\n     $154 = $153 << 3;\n     $155 = HEAP32[$143>>2]|0;\n     $156 = (($154) - ($142))|0;\n     $157 = (($156) + ($155))|0;\n     $158 = HEAP32[$36>>2]|0;\n     $159 = ($157|0)>($158|0);\n     if ($159) {\n      $$5216240 = $154;$$6241 = $149;\n     } else {\n      $$6217 = $154;$$7 = $149;\n      break;\n     }\n    }\n   } else {\n    $$6217 = $$4215;$$7 = $$5;\n   }\n  } else {\n   $$6217 = $$4215;$$7 = $$5;\n  }\n } while(0);\n $160 = ($$7|0)<(0);\n if ($160) {\n  $161 = HEAP32[$36>>2]|0;\n  $162 = ((($6)) + 88|0);\n  $163 = HEAP32[$162>>2]|0;\n  $164 = (($161) + ($142))|0;\n  $165 = (($164) - ($163))|0;\n  $166 = (($165|0) / 8)&-1;\n  $167 = ((($6)) + 124|0);\n  HEAP32[$167>>2] = 0;\n  $168 = ((($2)) + 12|0);\n  $169 = HEAP32[$168>>2]|0;\n  $170 = (_oggpack_bytes($169)|0);\n  $171 = ($170|0)>($166|0);\n  if ($171) {\n   $172 = HEAP32[$168>>2]|0;\n   $173 = $166 << 3;\n   _oggpack_writetrunc($172,$173);\n   $174 = HEAP32[$168>>2]|0;\n   $$sink226 = $174;\n   label = 34;\n  } else {\n   $$8219 = $$6217;\n  }\n } else {\n  $175 = ((($6)) + 88|0);\n  $176 = HEAP32[$175>>2]|0;\n  $177 = (($122) + 7)|0;\n  $178 = (($177) - ($176))|0;\n  $179 = (($178|0) / 8)&-1;\n  $180 = ($$7|0)<(14);\n  $$$7 = $180 ? $$7 : 14;\n  $181 = ((($6)) + 124|0);\n  HEAP32[$181>>2] = $$$7;\n  $182 = (((($2)) + 12|0) + ($$$7<<2)|0);\n  $183 = HEAP32[$182>>2]|0;\n  $184 = (_oggpack_bytes($183)|0);\n  $185 = (($179) - ($184))|0;\n  $186 = ($185|0)>(0);\n  $187 = HEAP32[$182>>2]|0;\n  if ($186) {\n   $$0209239 = $185;$189 = $187;\n   while(1) {\n    $188 = (($$0209239) + -1)|0;\n    _oggpack_write($189,0,8);\n    $190 = ($$0209239|0)>(1);\n    $191 = HEAP32[$182>>2]|0;\n    if ($190) {\n     $$0209239 = $188;$189 = $191;\n    } else {\n     $$sink226 = $191;\n     label = 34;\n     break;\n    }\n   }\n  } else {\n   $$sink226 = $187;\n   label = 34;\n  }\n }\n if ((label|0) == 34) {\n  $192 = (_oggpack_bytes($$sink226)|0);\n  $193 = $192 << 3;\n  $$8219 = $193;\n }\n $194 = HEAP32[$22>>2]|0;\n $195 = ($194|0)>(0);\n if ($195) {\n  label = 37;\n } else {\n  $196 = HEAP32[$139>>2]|0;\n  $197 = ($196|0)>(0);\n  if ($197) {\n   label = 37;\n  }\n }\n do {\n  if ((label|0) == 37) {\n   $198 = ($142|0)>(0);\n   $199 = ((($6)) + 88|0);\n   $200 = HEAP32[$199>>2]|0;\n   $201 = ($$8219|0)>($142|0);\n   $or$cond227 = $198 & $201;\n   if ($or$cond227) {\n    $202 = (($$8219) - ($142))|0;\n    $203 = (($202) + ($200))|0;\n    HEAP32[$199>>2] = $203;\n    break;\n   }\n   $204 = ($122|0)>(0);\n   $205 = ($$8219|0)<($122|0);\n   $or$cond228 = $204 & $205;\n   if ($or$cond228) {\n    $206 = (($$8219) - ($122))|0;\n    $207 = (($206) + ($200))|0;\n    HEAP32[$199>>2] = $207;\n    break;\n   }\n   $208 = ($200|0)>($42|0);\n   if ($208) {\n    if ($198) {\n     $209 = (($$8219) - ($142))|0;\n     $210 = (($200) + ($209))|0;\n     HEAP32[$199>>2] = $210;\n     $211 = ($210|0)<($42|0);\n     if (!($211)) {\n      break;\n     }\n    }\n    HEAP32[$199>>2] = $42;\n    break;\n   } else {\n    if ($204) {\n     $212 = (($$8219) - ($122))|0;\n     $213 = (($200) + ($212))|0;\n     HEAP32[$199>>2] = $213;\n     $214 = ($213|0)>($42|0);\n     if (!($214)) {\n      break;\n     }\n    }\n    HEAP32[$199>>2] = $42;\n    break;\n   }\n  }\n } while(0);\n $215 = HEAP32[$49>>2]|0;\n $216 = ($215|0)>(0);\n if (!($216)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $217 = HEAP32[$19>>2]|0;\n $218 = ($217|0)==(0);\n if ($218) {\n  $223 = $215;\n } else {\n  $219 = ((($6)) + 104|0);\n  $220 = HEAP32[$219>>2]|0;\n  $221 = Math_imul($220, $215)|0;\n  $223 = $221;\n }\n $222 = (($$8219) - ($223))|0;\n $224 = ((($6)) + 84|0);\n $225 = HEAP32[$224>>2]|0;\n $226 = (($222) + ($225))|0;\n HEAP32[$224>>2] = $226;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _vorbis_bitrate_flushpacket($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$031 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 104|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($3)) + 120|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if ($6) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $7 = ($1|0)==(0|0);\n if (!($7)) {\n  $8 = ((($5)) + 104|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = ((($5)) + 64|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = ((($11)) + 104|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = ((($13)) + 80|0);\n  $15 = HEAP32[$14>>2]|0;\n  $not$$i = ($15|0)==(0);\n  if ($not$$i) {\n   $$031 = 7;\n  } else {\n   $16 = ((($3)) + 124|0);\n   $17 = HEAP32[$16>>2]|0;\n   $$031 = $17;\n  }\n  $18 = (((($9)) + 12|0) + ($$031<<2)|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = (_oggpack_get_buffer($19)|0);\n  HEAP32[$1>>2] = $20;\n  $21 = HEAP32[$18>>2]|0;\n  $22 = (_oggpack_bytes($21)|0);\n  $23 = ((($1)) + 4|0);\n  HEAP32[$23>>2] = $22;\n  $24 = ((($1)) + 8|0);\n  HEAP32[$24>>2] = 0;\n  $25 = ((($5)) + 44|0);\n  $26 = HEAP32[$25>>2]|0;\n  $27 = ((($1)) + 12|0);\n  HEAP32[$27>>2] = $26;\n  $28 = ((($5)) + 48|0);\n  $29 = $28;\n  $30 = $29;\n  $31 = HEAP32[$30>>2]|0;\n  $32 = (($29) + 4)|0;\n  $33 = $32;\n  $34 = HEAP32[$33>>2]|0;\n  $35 = ((($1)) + 16|0);\n  $36 = $35;\n  $37 = $36;\n  HEAP32[$37>>2] = $31;\n  $38 = (($36) + 4)|0;\n  $39 = $38;\n  HEAP32[$39>>2] = $34;\n  $40 = ((($5)) + 56|0);\n  $41 = $40;\n  $42 = $41;\n  $43 = HEAP32[$42>>2]|0;\n  $44 = (($41) + 4)|0;\n  $45 = $44;\n  $46 = HEAP32[$45>>2]|0;\n  $47 = ((($1)) + 24|0);\n  $48 = $47;\n  $49 = $48;\n  HEAP32[$49>>2] = $43;\n  $50 = (($48) + 4)|0;\n  $51 = $50;\n  HEAP32[$51>>2] = $46;\n }\n HEAP32[$4>>2] = 0;\n $$0 = 1;\n return ($$0|0);\n}\nfunction _vorbis_block_init($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$021 = 0, $$pn$in = 0, $$sink = 0, $$sink1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, dest = 0, label = 0, sp = 0;\n var stop = 0;\n sp = STACKTOP;\n dest=$1; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n $2 = ((($1)) + 64|0);\n HEAP32[$2>>2] = $0;\n $3 = ((($1)) + 76|0);\n HEAP32[$3>>2] = 0;\n $4 = ((($1)) + 68|0);\n HEAP32[$4>>2] = 0;\n $5 = HEAP32[$0>>2]|0;\n $6 = ($5|0)==(0);\n if ($6) {\n  return 0;\n }\n $7 = (_calloc(1,72)|0);\n $8 = ((($1)) + 104|0);\n HEAP32[$8>>2] = $7;\n $9 = ((($7)) + 4|0);\n HEAPF32[$9>>2] = -9999.0;\n $10 = ((($1)) + 4|0);\n $$pn$in = ((($7)) + 12|0);\n $$021 = 0;\n while(1) {\n  $11 = ($$021|0)==(7);\n  if ($11) {\n   $$sink = $10;\n  } else {\n   $12 = (_calloc(1,20)|0);\n   $$sink = $12;\n  }\n  $$sink1 = (($$pn$in) + ($$021<<2)|0);\n  HEAP32[$$sink1>>2] = $$sink;\n  _oggpack_writeinit($$sink);\n  $13 = (($$021) + 1)|0;\n  $exitcond = ($13|0)==(15);\n  if ($exitcond) {\n   break;\n  } else {\n   $$021 = $13;\n  }\n }\n return 0;\n}\nfunction __vorbis_block_alloc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (($1) + 7)|0;\n $3 = $2 & -8;\n $4 = ((($0)) + 72|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (($5) + ($3))|0;\n $7 = ((($0)) + 76|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($6|0)>($8|0);\n $10 = ((($0)) + 68|0);\n $11 = HEAP32[$10>>2]|0;\n if (!($9)) {\n  $23 = $11;$24 = $5;\n  $22 = (($23) + ($24)|0);\n  $25 = (($24) + ($3))|0;\n  HEAP32[$4>>2] = $25;\n  return ($22|0);\n }\n $12 = ($11|0)==(0|0);\n if (!($12)) {\n  $13 = $11;\n  $14 = (_malloc(8)|0);\n  $15 = ((($0)) + 80|0);\n  $16 = HEAP32[$15>>2]|0;\n  $17 = (($16) + ($5))|0;\n  HEAP32[$15>>2] = $17;\n  $18 = ((($0)) + 84|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = ((($14)) + 4|0);\n  HEAP32[$20>>2] = $19;\n  HEAP32[$14>>2] = $13;\n  HEAP32[$18>>2] = $14;\n }\n HEAP32[$7>>2] = $3;\n $21 = (_malloc($3)|0);\n HEAP32[$10>>2] = $21;\n HEAP32[$4>>2] = 0;\n $23 = $21;$24 = 0;\n $22 = (($23) + ($24)|0);\n $25 = (($24) + ($3))|0;\n HEAP32[$4>>2] = $25;\n return ($22|0);\n}\nfunction _vorbis_block_clear($0) {\n $0 = $0|0;\n var $$015 = 0, $$in2021$i = 0, $$phi$trans$insert = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 104|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($0)) + 84|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if (!($5)) {\n  $$in2021$i = $4;\n  while(1) {\n   $6 = ((($$in2021$i)) + 4|0);\n   $7 = HEAP32[$6>>2]|0;\n   $8 = HEAP32[$$in2021$i>>2]|0;\n   _free($8);\n   _free($$in2021$i);\n   $9 = ($7|0)==(0|0);\n   if ($9) {\n    break;\n   } else {\n    $$in2021$i = $7;\n   }\n  }\n }\n $10 = ((($0)) + 80|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ($11|0)==(0);\n $$phi$trans$insert = ((($0)) + 68|0);\n $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n if ($12) {\n  $21 = $$pre;\n } else {\n  $13 = ((($0)) + 76|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = (($14) + ($11))|0;\n  $16 = (_realloc($$pre,$15)|0);\n  HEAP32[$$phi$trans$insert>>2] = $16;\n  $17 = HEAP32[$10>>2]|0;\n  $18 = HEAP32[$13>>2]|0;\n  $19 = (($18) + ($17))|0;\n  HEAP32[$13>>2] = $19;\n  HEAP32[$10>>2] = 0;\n  $21 = $16;\n }\n $20 = ((($0)) + 72|0);\n HEAP32[$20>>2] = 0;\n HEAP32[$3>>2] = 0;\n $22 = ($21|0)==(0|0);\n if (!($22)) {\n  _free($21);\n }\n $23 = ($2|0)==(0|0);\n if ($23) {\n  dest=$0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n  return 0;\n }\n $24 = ((($2)) + 12|0);\n $$015 = 0;\n while(1) {\n  $25 = (($24) + ($$015<<2)|0);\n  $26 = HEAP32[$25>>2]|0;\n  _oggpack_writeclear($26);\n  $27 = ($$015|0)==(7);\n  if ($27) {\n   $$015 = 8;\n   continue;\n  }\n  $28 = HEAP32[$25>>2]|0;\n  _free($28);\n  $29 = (($$015) + 1)|0;\n  $exitcond = ($29|0)==(15);\n  if ($exitcond) {\n   break;\n  } else {\n   $$015 = $29;\n  }\n }\n _free($2);\n dest=$0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n return 0;\n}\nfunction _vorbis_analysis_init($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (__vds_shared_init($0,$1,1)|0);\n $3 = ($2|0)==(0);\n if (!($3)) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $4 = ((($0)) + 104|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (__vp_global_look($1)|0);\n $7 = ((($5)) + 60|0);\n HEAP32[$7>>2] = $6;\n $8 = (_calloc(1,180)|0);\n HEAP32[$5>>2] = $8;\n __ve_envelope_init($8,$1);\n $9 = ((($5)) + 80|0);\n _vorbis_bitrate_init($1,$9);\n $10 = ((($0)) + 64|0);\n $11 = $10;\n $12 = $11;\n HEAP32[$12>>2] = 3;\n $13 = (($11) + 4)|0;\n $14 = $13;\n HEAP32[$14>>2] = 0;\n $$0 = 0;\n return ($$0|0);\n}\nfunction __vds_shared_init($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0134 = 0, $$1152 = 0, $$2149 = 0, $$3142 = 0, $$4140 = 0, $$5139 = 0, $$pre = 0, $$pre160 = 0, $$pre161 = 0, $$pre162 = 0, $$pre163 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;\n var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;\n var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;\n var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;\n var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;\n var $180 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $3 = ((($1)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  $$0134 = 1;\n  return ($$0134|0);\n }\n $6 = ((($4)) + 8|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($7|0)<(1);\n if ($8) {\n  $$0134 = 1;\n  return ($$0134|0);\n }\n $9 = HEAP32[$4>>2]|0;\n $10 = ($9|0)<(64);\n if ($10) {\n  $$0134 = 1;\n  return ($$0134|0);\n }\n $11 = ((($4)) + 4|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ($12|0)<($9|0);\n if ($13) {\n  $$0134 = 1;\n  return ($$0134|0);\n }\n $14 = ((($4)) + 3656|0);\n $15 = HEAP32[$14>>2]|0;\n dest=$0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n $16 = (_calloc(1,136)|0);\n $17 = ((($0)) + 104|0);\n HEAP32[$17>>2] = $16;\n $18 = ((($0)) + 4|0);\n HEAP32[$18>>2] = $1;\n $19 = HEAP32[$6>>2]|0;\n $20 = (($19) + -1)|0;\n $21 = (_ov_ilog($20)|0);\n $22 = ((($16)) + 44|0);\n HEAP32[$22>>2] = $21;\n $23 = (_calloc(1,4)|0);\n $24 = ((($16)) + 12|0);\n HEAP32[$24>>2] = $23;\n $25 = (_calloc(1,4)|0);\n $26 = ((($16)) + 16|0);\n HEAP32[$26>>2] = $25;\n $27 = (_calloc(1,20)|0);\n HEAP32[$23>>2] = $27;\n $28 = (_calloc(1,20)|0);\n HEAP32[$25>>2] = $28;\n $29 = HEAP32[$24>>2]|0;\n $30 = HEAP32[$29>>2]|0;\n $31 = HEAP32[$4>>2]|0;\n $32 = $31 >> $15;\n _mdct_init($30,$32);\n $33 = HEAP32[$26>>2]|0;\n $34 = HEAP32[$33>>2]|0;\n $35 = HEAP32[$11>>2]|0;\n $36 = $35 >> $15;\n _mdct_init($34,$36);\n $37 = HEAP32[$4>>2]|0;\n $38 = (_ov_ilog($37)|0);\n $39 = (($38) + -7)|0;\n $40 = ((($16)) + 4|0);\n HEAP32[$40>>2] = $39;\n $41 = HEAP32[$11>>2]|0;\n $42 = (_ov_ilog($41)|0);\n $43 = (($42) + -7)|0;\n $44 = ((($16)) + 8|0);\n HEAP32[$44>>2] = $43;\n $45 = ($2|0)==(0);\n L13: do {\n  if ($45) {\n   $89 = ((($4)) + 2848|0);\n   $90 = HEAP32[$89>>2]|0;\n   $91 = ($90|0)==(0|0);\n   if ($91) {\n    $92 = ((($4)) + 24|0);\n    $93 = HEAP32[$92>>2]|0;\n    $94 = (_calloc($93,56)|0);\n    HEAP32[$89>>2] = $94;\n    $95 = HEAP32[$92>>2]|0;\n    $96 = ($95|0)>(0);\n    if ($96) {\n     $$2149 = 0;$179 = $95;\n     while(1) {\n      $97 = (((($4)) + 1824|0) + ($$2149<<2)|0);\n      $98 = HEAP32[$97>>2]|0;\n      $99 = ($98|0)==(0|0);\n      if ($99) {\n       $100 = $179;\n       break;\n      }\n      $102 = HEAP32[$89>>2]|0;\n      $103 = (($102) + (($$2149*56)|0)|0);\n      $104 = (_vorbis_book_init_decode($103,$98)|0);\n      $105 = ($104|0)==(0);\n      if (!($105)) {\n       label = 20;\n       break;\n      }\n      $106 = HEAP32[$97>>2]|0;\n      _vorbis_staticbook_destroy($106);\n      HEAP32[$97>>2] = 0;\n      $107 = (($$2149) + 1)|0;\n      $108 = HEAP32[$92>>2]|0;\n      $109 = ($107|0)<($108|0);\n      if ($109) {\n       $$2149 = $107;$179 = $108;\n      } else {\n       break L13;\n      }\n     }\n     if ((label|0) == 20) {\n      $$pre162 = HEAP32[$92>>2]|0;\n      $100 = $$pre162;\n     }\n     $101 = ($100|0)>(0);\n     if ($101) {\n      $$5139 = 0;$180 = $100;\n      while(1) {\n       $173 = (((($4)) + 1824|0) + ($$5139<<2)|0);\n       $174 = HEAP32[$173>>2]|0;\n       $175 = ($174|0)==(0|0);\n       if ($175) {\n        $178 = $180;\n       } else {\n        _vorbis_staticbook_destroy($174);\n        HEAP32[$173>>2] = 0;\n        $$pre163 = HEAP32[$92>>2]|0;\n        $178 = $$pre163;\n       }\n       $176 = (($$5139) + 1)|0;\n       $177 = ($176|0)<($178|0);\n       if ($177) {\n        $$5139 = $176;$180 = $178;\n       } else {\n        break;\n       }\n      }\n     }\n     _vorbis_dsp_clear($0);\n     $$0134 = -1;\n     return ($$0134|0);\n    }\n   }\n  } else {\n   $46 = ((($16)) + 20|0);\n   $47 = HEAP32[$4>>2]|0;\n   _drft_init($46,$47);\n   $48 = ((($16)) + 32|0);\n   $49 = HEAP32[$11>>2]|0;\n   _drft_init($48,$49);\n   $50 = ((($4)) + 2848|0);\n   $51 = HEAP32[$50>>2]|0;\n   $52 = ($51|0)==(0|0);\n   if ($52) {\n    $53 = ((($4)) + 24|0);\n    $54 = HEAP32[$53>>2]|0;\n    $55 = (_calloc($54,56)|0);\n    HEAP32[$50>>2] = $55;\n    $56 = HEAP32[$53>>2]|0;\n    $57 = ($56|0)>(0);\n    if ($57) {\n     $58 = ((($4)) + 1824|0);\n     $59 = HEAP32[$58>>2]|0;\n     (_vorbis_book_init_encode($55,$59)|0);\n     $60 = HEAP32[$53>>2]|0;\n     $61 = ($60|0)>(1);\n     if ($61) {\n      $63 = 1;\n      while(1) {\n       $$pre = HEAP32[$50>>2]|0;\n       $62 = (($$pre) + (($63*56)|0)|0);\n       $64 = (((($4)) + 1824|0) + ($63<<2)|0);\n       $65 = HEAP32[$64>>2]|0;\n       (_vorbis_book_init_encode($62,$65)|0);\n       $66 = (($63) + 1)|0;\n       $67 = HEAP32[$53>>2]|0;\n       $68 = ($66|0)<($67|0);\n       if ($68) {\n        $63 = $66;\n       } else {\n        break;\n       }\n      }\n     }\n    }\n   }\n   $69 = ((($4)) + 28|0);\n   $70 = HEAP32[$69>>2]|0;\n   $71 = (_calloc($70,52)|0);\n   $72 = ((($16)) + 56|0);\n   HEAP32[$72>>2] = $71;\n   $73 = HEAP32[$69>>2]|0;\n   $74 = ($73|0)>(0);\n   L38: do {\n    if ($74) {\n     $75 = ((($4)) + 2868|0);\n     $76 = ((($1)) + 8|0);\n     $$1152 = 0;$78 = $71;\n     while(1) {\n      $77 = (($78) + (($$1152*52)|0)|0);\n      $79 = (((($4)) + 2852|0) + ($$1152<<2)|0);\n      $80 = HEAP32[$79>>2]|0;\n      $81 = HEAP32[$80>>2]|0;\n      $82 = (($4) + ($81<<2)|0);\n      $83 = HEAP32[$82>>2]|0;\n      $84 = (($83|0) / 2)&-1;\n      $85 = HEAP32[$76>>2]|0;\n      __vp_psy_init($77,$80,$75,$84,$85);\n      $86 = (($$1152) + 1)|0;\n      $87 = HEAP32[$69>>2]|0;\n      $88 = ($86|0)<($87|0);\n      if (!($88)) {\n       break L38;\n      }\n      $$pre160 = HEAP32[$72>>2]|0;\n      $$1152 = $86;$78 = $$pre160;\n     }\n    }\n   } while(0);\n   HEAP32[$0>>2] = 1;\n  }\n } while(0);\n $110 = HEAP32[$11>>2]|0;\n $111 = ((($0)) + 16|0);\n HEAP32[$111>>2] = $110;\n $112 = ((($1)) + 4|0);\n $113 = HEAP32[$112>>2]|0;\n $114 = $113 << 2;\n $115 = (_malloc($114)|0);\n $116 = ((($0)) + 8|0);\n HEAP32[$116>>2] = $115;\n $117 = (_malloc($114)|0);\n $118 = ((($0)) + 12|0);\n HEAP32[$118>>2] = $117;\n $119 = ($113|0)>(0);\n if ($119) {\n  $120 = (_calloc($110,4)|0);\n  HEAP32[$115>>2] = $120;\n  $121 = ($113|0)==(1);\n  if (!($121)) {\n   $124 = 1;\n   while(1) {\n    $$pre161 = HEAP32[$116>>2]|0;\n    $122 = (_calloc($110,4)|0);\n    $123 = (($$pre161) + ($124<<2)|0);\n    HEAP32[$123>>2] = $122;\n    $125 = (($124) + 1)|0;\n    $126 = ($125|0)<($113|0);\n    if ($126) {\n     $124 = $125;\n    } else {\n     break;\n    }\n   }\n  }\n }\n $127 = ((($0)) + 36|0);\n HEAP32[$127>>2] = 0;\n $128 = ((($0)) + 40|0);\n HEAP32[$128>>2] = 0;\n $129 = HEAP32[$11>>2]|0;\n $130 = (($129|0) / 2)&-1;\n $131 = ((($0)) + 48|0);\n HEAP32[$131>>2] = $130;\n $132 = ((($0)) + 20|0);\n HEAP32[$132>>2] = $130;\n $133 = ((($4)) + 16|0);\n $134 = HEAP32[$133>>2]|0;\n $135 = (_calloc($134,4)|0);\n $136 = ((($16)) + 48|0);\n HEAP32[$136>>2] = $135;\n $137 = ((($4)) + 20|0);\n $138 = HEAP32[$137>>2]|0;\n $139 = (_calloc($138,4)|0);\n $140 = ((($16)) + 52|0);\n HEAP32[$140>>2] = $139;\n $141 = HEAP32[$133>>2]|0;\n $142 = ($141|0)>(0);\n if ($142) {\n  $$3142 = 0;\n  while(1) {\n   $145 = (((($4)) + 800|0) + ($$3142<<2)|0);\n   $146 = HEAP32[$145>>2]|0;\n   $147 = (27940 + ($146<<2)|0);\n   $148 = HEAP32[$147>>2]|0;\n   $149 = ((($148)) + 8|0);\n   $150 = HEAP32[$149>>2]|0;\n   $151 = (((($4)) + 1056|0) + ($$3142<<2)|0);\n   $152 = HEAP32[$151>>2]|0;\n   $153 = (FUNCTION_TABLE_iii[$150 & 63]($0,$152)|0);\n   $154 = HEAP32[$136>>2]|0;\n   $155 = (($154) + ($$3142<<2)|0);\n   HEAP32[$155>>2] = $153;\n   $156 = (($$3142) + 1)|0;\n   $157 = HEAP32[$133>>2]|0;\n   $158 = ($156|0)<($157|0);\n   if ($158) {\n    $$3142 = $156;\n   } else {\n    break;\n   }\n  }\n }\n $143 = HEAP32[$137>>2]|0;\n $144 = ($143|0)>(0);\n if ($144) {\n  $$4140 = 0;\n } else {\n  $$0134 = 0;\n  return ($$0134|0);\n }\n while(1) {\n  $159 = (((($4)) + 1312|0) + ($$4140<<2)|0);\n  $160 = HEAP32[$159>>2]|0;\n  $161 = (27948 + ($160<<2)|0);\n  $162 = HEAP32[$161>>2]|0;\n  $163 = ((($162)) + 8|0);\n  $164 = HEAP32[$163>>2]|0;\n  $165 = (((($4)) + 1568|0) + ($$4140<<2)|0);\n  $166 = HEAP32[$165>>2]|0;\n  $167 = (FUNCTION_TABLE_iii[$164 & 63]($0,$166)|0);\n  $168 = HEAP32[$140>>2]|0;\n  $169 = (($168) + ($$4140<<2)|0);\n  HEAP32[$169>>2] = $167;\n  $170 = (($$4140) + 1)|0;\n  $171 = HEAP32[$137>>2]|0;\n  $172 = ($170|0)<($171|0);\n  if ($172) {\n   $$4140 = $170;\n  } else {\n   $$0134 = 0;\n   break;\n  }\n }\n return ($$0134|0);\n}\nfunction _vorbis_dsp_clear($0) {\n $0 = $0|0;\n var $$383 = 0, $$pre = 0, $$pre100 = 0, $$pre90 = 0, $$pre91 = 0, $$pre93 = 0, $$pre94 = 0, $$pre96 = 0, $$pre97 = 0, $$pre98 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;\n var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;\n var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;\n var $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)!=(0|0);\n if ($4) {\n  $5 = ((($3)) + 28|0);\n  $6 = HEAP32[$5>>2]|0;\n  $30 = $6;\n } else {\n  $30 = 0;\n }\n $7 = ((($0)) + 104|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)!=(0|0);\n if ($9) {\n  $10 = HEAP32[$8>>2]|0;\n  $11 = ($10|0)==(0|0);\n  if (!($11)) {\n   __ve_envelope_clear($10);\n   $12 = HEAP32[$8>>2]|0;\n   _free($12);\n  }\n  $13 = ((($8)) + 12|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = ($14|0)==(0|0);\n  if (!($15)) {\n   $16 = HEAP32[$14>>2]|0;\n   _mdct_clear($16);\n   $17 = HEAP32[$13>>2]|0;\n   $18 = HEAP32[$17>>2]|0;\n   _free($18);\n   $19 = HEAP32[$13>>2]|0;\n   _free($19);\n  }\n  $20 = ((($8)) + 16|0);\n  $21 = HEAP32[$20>>2]|0;\n  $22 = ($21|0)==(0|0);\n  if (!($22)) {\n   $23 = HEAP32[$21>>2]|0;\n   _mdct_clear($23);\n   $24 = HEAP32[$20>>2]|0;\n   $25 = HEAP32[$24>>2]|0;\n   _free($25);\n   $26 = HEAP32[$20>>2]|0;\n   _free($26);\n  }\n  $27 = ((($8)) + 48|0);\n  $28 = HEAP32[$27>>2]|0;\n  $29 = ($28|0)==(0|0);\n  if (!($29)) {\n   $31 = ($30|0)==(0|0);\n   if ($31) {\n    $56 = $28;\n   } else {\n    $32 = ((($30)) + 16|0);\n    $33 = HEAP32[$32>>2]|0;\n    $34 = ($33|0)>(0);\n    if ($34) {\n     $35 = ((($30)) + 800|0);\n     $36 = HEAP32[$35>>2]|0;\n     $37 = (27940 + ($36<<2)|0);\n     $38 = HEAP32[$37>>2]|0;\n     $39 = ((($38)) + 16|0);\n     $40 = HEAP32[$39>>2]|0;\n     $41 = HEAP32[$28>>2]|0;\n     FUNCTION_TABLE_vi[$40 & 31]($41);\n     $42 = HEAP32[$32>>2]|0;\n     $43 = ($42|0)>(1);\n     if ($43) {\n      $45 = 1;\n      while(1) {\n       $$pre = HEAP32[$27>>2]|0;\n       $44 = (((($30)) + 800|0) + ($45<<2)|0);\n       $46 = HEAP32[$44>>2]|0;\n       $47 = (27940 + ($46<<2)|0);\n       $48 = HEAP32[$47>>2]|0;\n       $49 = ((($48)) + 16|0);\n       $50 = HEAP32[$49>>2]|0;\n       $51 = (($$pre) + ($45<<2)|0);\n       $52 = HEAP32[$51>>2]|0;\n       FUNCTION_TABLE_vi[$50 & 31]($52);\n       $53 = (($45) + 1)|0;\n       $54 = HEAP32[$32>>2]|0;\n       $55 = ($53|0)<($54|0);\n       if ($55) {\n        $45 = $53;\n       } else {\n        break;\n       }\n      }\n     }\n     $$pre90 = HEAP32[$27>>2]|0;\n     $56 = $$pre90;\n    } else {\n     $56 = $28;\n    }\n   }\n   _free($56);\n  }\n  $57 = ((($8)) + 52|0);\n  $58 = HEAP32[$57>>2]|0;\n  $59 = ($58|0)==(0|0);\n  if (!($59)) {\n   $60 = ($30|0)==(0|0);\n   if ($60) {\n    $85 = $58;\n   } else {\n    $61 = ((($30)) + 20|0);\n    $62 = HEAP32[$61>>2]|0;\n    $63 = ($62|0)>(0);\n    if ($63) {\n     $64 = ((($30)) + 1312|0);\n     $65 = HEAP32[$64>>2]|0;\n     $66 = (27948 + ($65<<2)|0);\n     $67 = HEAP32[$66>>2]|0;\n     $68 = ((($67)) + 16|0);\n     $69 = HEAP32[$68>>2]|0;\n     $70 = HEAP32[$58>>2]|0;\n     FUNCTION_TABLE_vi[$69 & 31]($70);\n     $71 = HEAP32[$61>>2]|0;\n     $72 = ($71|0)>(1);\n     if ($72) {\n      $74 = 1;\n      while(1) {\n       $$pre91 = HEAP32[$57>>2]|0;\n       $73 = (((($30)) + 1312|0) + ($74<<2)|0);\n       $75 = HEAP32[$73>>2]|0;\n       $76 = (27948 + ($75<<2)|0);\n       $77 = HEAP32[$76>>2]|0;\n       $78 = ((($77)) + 16|0);\n       $79 = HEAP32[$78>>2]|0;\n       $80 = (($$pre91) + ($74<<2)|0);\n       $81 = HEAP32[$80>>2]|0;\n       FUNCTION_TABLE_vi[$79 & 31]($81);\n       $82 = (($74) + 1)|0;\n       $83 = HEAP32[$61>>2]|0;\n       $84 = ($82|0)<($83|0);\n       if ($84) {\n        $74 = $82;\n       } else {\n        break;\n       }\n      }\n     }\n     $$pre93 = HEAP32[$57>>2]|0;\n     $85 = $$pre93;\n    } else {\n     $85 = $58;\n    }\n   }\n   _free($85);\n  }\n  $86 = ((($8)) + 56|0);\n  $87 = HEAP32[$86>>2]|0;\n  $88 = ($87|0)==(0|0);\n  if (!($88)) {\n   $89 = ($30|0)==(0|0);\n   if ($89) {\n    $100 = $87;\n   } else {\n    $90 = ((($30)) + 28|0);\n    $91 = HEAP32[$90>>2]|0;\n    $92 = ($91|0)>(0);\n    if ($92) {\n     __vp_psy_clear($87);\n     $93 = HEAP32[$90>>2]|0;\n     $94 = ($93|0)>(1);\n     if ($94) {\n      $96 = 1;\n      while(1) {\n       $$pre94 = HEAP32[$86>>2]|0;\n       $95 = (($$pre94) + (($96*52)|0)|0);\n       __vp_psy_clear($95);\n       $97 = (($96) + 1)|0;\n       $98 = HEAP32[$90>>2]|0;\n       $99 = ($97|0)<($98|0);\n       if ($99) {\n        $96 = $97;\n       } else {\n        break;\n       }\n      }\n     }\n     $$pre96 = HEAP32[$86>>2]|0;\n     $100 = $$pre96;\n    } else {\n     $100 = $87;\n    }\n   }\n   _free($100);\n  }\n  $101 = ((($8)) + 60|0);\n  $102 = HEAP32[$101>>2]|0;\n  $103 = ($102|0)==(0|0);\n  if (!($103)) {\n   __vp_global_free($102);\n  }\n  $104 = ((($8)) + 80|0);\n  _vorbis_bitrate_clear($104);\n  $105 = ((($8)) + 20|0);\n  _drft_clear($105);\n  $106 = ((($8)) + 32|0);\n  _drft_clear($106);\n }\n $107 = ((($0)) + 8|0);\n $108 = HEAP32[$107>>2]|0;\n $109 = ($108|0)==(0|0);\n if (!($109)) {\n  if ($4) {\n   $110 = ((($3)) + 4|0);\n   $111 = HEAP32[$110>>2]|0;\n   $112 = ($111|0)>(0);\n   if ($112) {\n    $$383 = 0;$114 = $108;$133 = $111;\n    while(1) {\n     $113 = (($114) + ($$383<<2)|0);\n     $115 = HEAP32[$113>>2]|0;\n     $116 = ($115|0)==(0|0);\n     if ($116) {\n      $119 = $133;\n     } else {\n      _free($115);\n      $$pre98 = HEAP32[$110>>2]|0;\n      $119 = $$pre98;\n     }\n     $117 = (($$383) + 1)|0;\n     $118 = ($117|0)<($119|0);\n     if (!($118)) {\n      break;\n     }\n     $$pre97 = HEAP32[$107>>2]|0;\n     $$383 = $117;$114 = $$pre97;$133 = $119;\n    }\n    $$pre100 = HEAP32[$107>>2]|0;\n    $120 = $$pre100;\n   } else {\n    $120 = $108;\n   }\n  } else {\n   $120 = $108;\n  }\n  _free($120);\n  $121 = ((($0)) + 12|0);\n  $122 = HEAP32[$121>>2]|0;\n  $123 = ($122|0)==(0|0);\n  if (!($123)) {\n   _free($122);\n  }\n }\n if ($9) {\n  $124 = ((($8)) + 64|0);\n  $125 = HEAP32[$124>>2]|0;\n  $126 = ($125|0)==(0|0);\n  if (!($126)) {\n   _free($125);\n  }\n  $127 = ((($8)) + 68|0);\n  $128 = HEAP32[$127>>2]|0;\n  $129 = ($128|0)==(0|0);\n  if (!($129)) {\n   _free($128);\n  }\n  $130 = ((($8)) + 72|0);\n  $131 = HEAP32[$130>>2]|0;\n  $132 = ($131|0)==(0|0);\n  if (!($132)) {\n   _free($131);\n  }\n  _free($8);\n }\n dest=$0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n return;\n}\nfunction _vorbis_analysis_buffer($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$137 = 0, $$lcssa = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre43 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 104|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($5)) + 64|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($7|0)==(0|0);\n if (!($8)) {\n  _free($7);\n }\n HEAP32[$6>>2] = 0;\n $9 = ((($5)) + 68|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ($10|0)==(0|0);\n if (!($11)) {\n  _free($10);\n }\n HEAP32[$9>>2] = 0;\n $12 = ((($5)) + 72|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ($13|0)==(0|0);\n if (!($14)) {\n  _free($13);\n }\n HEAP32[$12>>2] = 0;\n $15 = ((($0)) + 20|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = (($16) + ($1))|0;\n $18 = ((($0)) + 16|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($17|0)<($19|0);\n do {\n  if ($20) {\n   $$phi$trans$insert = ((($3)) + 4|0);\n   $$pre43 = HEAP32[$$phi$trans$insert>>2]|0;\n   $36 = $$pre43;\n  } else {\n   $21 = $1 << 1;\n   $22 = (($16) + ($21))|0;\n   HEAP32[$18>>2] = $22;\n   $23 = ((($3)) + 4|0);\n   $24 = HEAP32[$23>>2]|0;\n   $25 = ($24|0)>(0);\n   if ($25) {\n    $28 = ((($0)) + 8|0);\n    $29 = HEAP32[$28>>2]|0;\n    $30 = HEAP32[$29>>2]|0;\n    $31 = $22 << 2;\n    $32 = (_realloc($30,$31)|0);\n    $33 = HEAP32[$28>>2]|0;\n    HEAP32[$33>>2] = $32;\n    $34 = HEAP32[$23>>2]|0;\n    $35 = ($34|0)>(1);\n    if ($35) {\n     $44 = 1;\n    } else {\n     $36 = $34;\n     break;\n    }\n    while(1) {\n     $$pre = HEAP32[$18>>2]|0;\n     $42 = HEAP32[$28>>2]|0;\n     $43 = (($42) + ($44<<2)|0);\n     $45 = HEAP32[$43>>2]|0;\n     $46 = $$pre << 2;\n     $47 = (_realloc($45,$46)|0);\n     $48 = HEAP32[$28>>2]|0;\n     $49 = (($48) + ($44<<2)|0);\n     HEAP32[$49>>2] = $47;\n     $50 = (($44) + 1)|0;\n     $51 = HEAP32[$23>>2]|0;\n     $52 = ($50|0)<($51|0);\n     if ($52) {\n      $44 = $50;\n     } else {\n      $36 = $51;\n      break;\n     }\n    }\n   } else {\n    $26 = ((($0)) + 12|0);\n    $27 = HEAP32[$26>>2]|0;\n    $$lcssa = $27;\n    return ($$lcssa|0);\n   }\n  }\n } while(0);\n $37 = ($36|0)>(0);\n $38 = ((($0)) + 12|0);\n $39 = HEAP32[$38>>2]|0;\n if (!($37)) {\n  $$lcssa = $39;\n  return ($$lcssa|0);\n }\n $40 = ((($0)) + 8|0);\n $41 = HEAP32[$15>>2]|0;\n $$137 = 0;$58 = $39;\n while(1) {\n  $53 = HEAP32[$40>>2]|0;\n  $54 = (($53) + ($$137<<2)|0);\n  $55 = HEAP32[$54>>2]|0;\n  $56 = (($55) + ($41<<2)|0);\n  $57 = (($58) + ($$137<<2)|0);\n  HEAP32[$57>>2] = $56;\n  $59 = (($$137) + 1)|0;\n  $60 = ($59|0)<($36|0);\n  $61 = HEAP32[$38>>2]|0;\n  if ($60) {\n   $$137 = $59;$58 = $61;\n  } else {\n   $$lcssa = $61;\n   break;\n  }\n }\n return ($$lcssa|0);\n}\nfunction _vorbis_analysis_wrote($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$065 = 0, $$06667 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($3)) + 28|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($1|0)<(1);\n if (!($6)) {\n  $49 = ((($0)) + 20|0);\n  $50 = HEAP32[$49>>2]|0;\n  $51 = (($50) + ($1))|0;\n  $52 = ((($0)) + 16|0);\n  $53 = HEAP32[$52>>2]|0;\n  $54 = ($51|0)>($53|0);\n  if ($54) {\n   $$065 = -131;\n   STACKTOP = sp;return ($$065|0);\n  }\n  HEAP32[$49>>2] = $51;\n  $55 = ((($0)) + 28|0);\n  $56 = HEAP32[$55>>2]|0;\n  $57 = ($56|0)==(0);\n  if (!($57)) {\n   $$065 = 0;\n   STACKTOP = sp;return ($$065|0);\n  }\n  $58 = ((($0)) + 48|0);\n  $59 = HEAP32[$58>>2]|0;\n  $60 = (($51) - ($59))|0;\n  $61 = ((($5)) + 4|0);\n  $62 = HEAP32[$61>>2]|0;\n  $63 = ($60|0)>($62|0);\n  if (!($63)) {\n   $$065 = 0;\n   STACKTOP = sp;return ($$065|0);\n  }\n  __preextrapolate_helper($0);\n  $$065 = 0;\n  STACKTOP = sp;return ($$065|0);\n }\n $7 = STACKTOP; STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);;\n $8 = ((($0)) + 28|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0);\n if ($10) {\n  __preextrapolate_helper($0);\n }\n $11 = ((($5)) + 4|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ($12*3)|0;\n (_vorbis_analysis_buffer($0,$13)|0);\n $14 = ((($0)) + 20|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ((($0)) + 32|0);\n HEAP32[$16>>2] = $15;\n $17 = HEAP32[$11>>2]|0;\n $18 = ($17*3)|0;\n $19 = (($18) + ($15))|0;\n HEAP32[$14>>2] = $19;\n $20 = ((($3)) + 4|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = ($21|0)>(0);\n if (!($22)) {\n  $$065 = 0;\n  STACKTOP = sp;return ($$065|0);\n }\n $23 = ((($0)) + 8|0);\n $$06667 = 0;$24 = $15;\n while(1) {\n  $25 = ($24|0)>(64);\n  $26 = HEAP32[$23>>2]|0;\n  $27 = (($26) + ($$06667<<2)|0);\n  $28 = HEAP32[$27>>2]|0;\n  if ($25) {\n   $29 = HEAP32[$11>>2]|0;\n   $30 = ($24|0)>($29|0);\n   $$ = $30 ? $29 : $24;\n   $31 = (($28) + ($24<<2)|0);\n   $32 = (0 - ($$))|0;\n   $33 = (($31) + ($32<<2)|0);\n   (+_vorbis_lpc_from_data($33,$7,$$,32));\n   $34 = HEAP32[$23>>2]|0;\n   $35 = (($34) + ($$06667<<2)|0);\n   $36 = HEAP32[$35>>2]|0;\n   $37 = HEAP32[$16>>2]|0;\n   $38 = (($36) + ($37<<2)|0);\n   $39 = ((($38)) + -128|0);\n   $40 = HEAP32[$14>>2]|0;\n   $41 = (($40) - ($37))|0;\n   _vorbis_lpc_predict($7,$39,32,$38,$41);\n  } else {\n   $42 = (($28) + ($24<<2)|0);\n   $43 = HEAP32[$14>>2]|0;\n   $44 = (($43) - ($24))|0;\n   $45 = $44 << 2;\n   _memset(($42|0),0,($45|0))|0;\n  }\n  $46 = (($$06667) + 1)|0;\n  $47 = HEAP32[$20>>2]|0;\n  $48 = ($46|0)<($47|0);\n  if (!($48)) {\n   $$065 = 0;\n   break;\n  }\n  $$pre = HEAP32[$16>>2]|0;\n  $$06667 = $46;$24 = $$pre;\n }\n STACKTOP = sp;return ($$065|0);\n}\nfunction __preextrapolate_helper($0) {\n $0 = $0|0;\n var $$05057 = 0, $$052 = 0, $$153 = 0, $$alloca_mul = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);\n $1 = sp;\n $2 = ((($0)) + 20|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 << 2;\n $$alloca_mul = $4;\n $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $6 = ((($0)) + 28|0);\n HEAP32[$6>>2] = 1;\n $7 = ((($0)) + 48|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = (($3) - ($8))|0;\n $10 = ($9|0)>(32);\n if (!($10)) {\n  STACKTOP = sp;return;\n }\n $11 = ((($0)) + 4|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ((($12)) + 4|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = ($14|0)>(0);\n if (!($15)) {\n  STACKTOP = sp;return;\n }\n $16 = ((($0)) + 8|0);\n $$05057 = 0;$17 = $3;\n while(1) {\n  $18 = ($17|0)>(0);\n  if ($18) {\n   $19 = HEAP32[$16>>2]|0;\n   $20 = (($19) + ($$05057<<2)|0);\n   $21 = HEAP32[$20>>2]|0;\n   $$052 = 0;\n   while(1) {\n    $22 = $$052 ^ -1;\n    $23 = (($17) + ($22))|0;\n    $24 = (($21) + ($23<<2)|0);\n    $25 = HEAP32[$24>>2]|0;\n    $26 = (($5) + ($$052<<2)|0);\n    HEAP32[$26>>2] = $25;\n    $27 = (($$052) + 1)|0;\n    $28 = ($17|0)>($27|0);\n    if ($28) {\n     $$052 = $27;\n    } else {\n     break;\n    }\n   }\n  }\n  $29 = HEAP32[$7>>2]|0;\n  $30 = (($17) - ($29))|0;\n  (+_vorbis_lpc_from_data($5,$1,$30,16));\n  $31 = HEAP32[$2>>2]|0;\n  $32 = (($5) + ($31<<2)|0);\n  $33 = HEAP32[$7>>2]|0;\n  $34 = (0 - ($33))|0;\n  $35 = (($32) + ($34<<2)|0);\n  $36 = ((($35)) + -64|0);\n  _vorbis_lpc_predict($1,$36,16,$35,$33);\n  $37 = HEAP32[$2>>2]|0;\n  $38 = ($37|0)>(0);\n  if ($38) {\n   $39 = HEAP32[$16>>2]|0;\n   $40 = (($39) + ($$05057<<2)|0);\n   $41 = HEAP32[$40>>2]|0;\n   $$153 = 0;\n   while(1) {\n    $42 = (($5) + ($$153<<2)|0);\n    $43 = HEAP32[$42>>2]|0;\n    $44 = $$153 ^ -1;\n    $45 = (($37) + ($44))|0;\n    $46 = (($41) + ($45<<2)|0);\n    HEAP32[$46>>2] = $43;\n    $47 = (($$153) + 1)|0;\n    $48 = ($37|0)>($47|0);\n    if ($48) {\n     $$153 = $47;\n    } else {\n     break;\n    }\n   }\n  }\n  $49 = (($$05057) + 1)|0;\n  $50 = HEAP32[$11>>2]|0;\n  $51 = ((($50)) + 4|0);\n  $52 = HEAP32[$51>>2]|0;\n  $53 = ($49|0)<($52|0);\n  if ($53) {\n   $$05057 = $49;$17 = $37;\n  } else {\n   break;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _vorbis_analysis_blockout($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$0170184 = 0, $$180 = 0, $$2 = 0, $$in2021$i = 0, $$pre = 0, $$pre187 = 0, $$pre188 = 0, $$pre189 = 0, $$pre190 = 0, $$pre191 = 0, $$pre193 = 0, $$sink = 0, $$sink$sink = 0, $$sink17$in = 0, $$sink5 = 0, $$sink8 = 0, $10 = 0, $100 = 0, $101 = 0;\n var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0.0, $117 = 0.0, $118 = 0, $119 = 0.0, $12 = 0;\n var $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;\n var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;\n var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;\n var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;\n var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;\n var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;\n var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;\n var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;\n var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;\n var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;\n var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $narrow = 0, $not$ = 0, $not$181 = 0, $not$182 = 0;\n var $not$194 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($3)) + 28|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($0)) + 104|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($7)) + 60|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($0)) + 48|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($0)) + 40|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (($5) + ($13<<2)|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = (($15|0) / 2)&-1;\n $17 = (($11) - ($16))|0;\n $18 = ((($1)) + 104|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ((($0)) + 28|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = ($21|0)==(0);\n if ($22) {\n  $$2 = 0;\n  return ($$2|0);\n }\n $23 = ((($0)) + 32|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = ($24|0)==(-1);\n if ($25) {\n  $$2 = 0;\n  return ($$2|0);\n }\n $26 = (__ve_envelope_search($0)|0);\n $27 = ($26|0)==(-1);\n if ($27) {\n  $28 = HEAP32[$23>>2]|0;\n  $29 = ($28|0)==(0);\n  if ($29) {\n   $$2 = 0;\n   return ($$2|0);\n  } else {\n   $$sink$sink = 0;\n  }\n } else {\n  $30 = HEAP32[$5>>2]|0;\n  $31 = ((($5)) + 4|0);\n  $32 = HEAP32[$31>>2]|0;\n  $33 = ($30|0)==($32|0);\n  $$sink = $33 ? 0 : $26;\n  $$sink$sink = $$sink;\n }\n $34 = ((($0)) + 44|0);\n HEAP32[$34>>2] = $$sink$sink;\n $35 = HEAP32[$10>>2]|0;\n $36 = HEAP32[$12>>2]|0;\n $37 = (($5) + ($36<<2)|0);\n $38 = HEAP32[$37>>2]|0;\n $39 = (($38|0) / 4)&-1;\n $40 = (($39) + ($35))|0;\n $41 = (($5) + ($$sink$sink<<2)|0);\n $42 = HEAP32[$41>>2]|0;\n $43 = (($42|0) / 4)&-1;\n $44 = (($40) + ($43))|0;\n $45 = (($42|0) / 2)&-1;\n $46 = (($44) + ($45))|0;\n $47 = ((($0)) + 20|0);\n $48 = HEAP32[$47>>2]|0;\n $not$181 = ($48|0)<($46|0);\n if ($not$181) {\n  $$2 = 0;\n  return ($$2|0);\n }\n $49 = ((($1)) + 84|0);\n $50 = HEAP32[$49>>2]|0;\n $51 = ($50|0)==(0|0);\n if (!($51)) {\n  $$in2021$i = $50;\n  while(1) {\n   $52 = ((($$in2021$i)) + 4|0);\n   $53 = HEAP32[$52>>2]|0;\n   $54 = HEAP32[$$in2021$i>>2]|0;\n   _free($54);\n   _free($$in2021$i);\n   $55 = ($53|0)==(0|0);\n   if ($55) {\n    break;\n   } else {\n    $$in2021$i = $53;\n   }\n  }\n }\n $56 = ((($1)) + 80|0);\n $57 = HEAP32[$56>>2]|0;\n $58 = ($57|0)==(0);\n if (!($58)) {\n  $59 = ((($1)) + 68|0);\n  $60 = HEAP32[$59>>2]|0;\n  $61 = ((($1)) + 76|0);\n  $62 = HEAP32[$61>>2]|0;\n  $63 = (($62) + ($57))|0;\n  $64 = (_realloc($60,$63)|0);\n  HEAP32[$59>>2] = $64;\n  $65 = HEAP32[$56>>2]|0;\n  $66 = HEAP32[$61>>2]|0;\n  $67 = (($66) + ($65))|0;\n  HEAP32[$61>>2] = $67;\n  HEAP32[$56>>2] = 0;\n }\n $68 = ((($1)) + 72|0);\n HEAP32[$68>>2] = 0;\n HEAP32[$49>>2] = 0;\n $69 = ((($0)) + 36|0);\n $70 = HEAP32[$69>>2]|0;\n $71 = ((($1)) + 24|0);\n HEAP32[$71>>2] = $70;\n $72 = HEAP32[$12>>2]|0;\n $73 = ((($1)) + 28|0);\n HEAP32[$73>>2] = $72;\n $74 = HEAP32[$34>>2]|0;\n $75 = ((($1)) + 32|0);\n HEAP32[$75>>2] = $74;\n $76 = ($72|0)==(0);\n if ($76) {\n  $78 = (__ve_envelope_mark($0)|0);\n  $79 = ((($19)) + 8|0);\n  $not$ = ($78|0)==(0);\n  $$sink8 = $not$&1;\n  HEAP32[$79>>2] = $$sink8;\n  $$pre = HEAP32[$12>>2]|0;\n  $112 = $$pre;\n } else {\n  $not$182 = ($74|0)!=(0);\n  $not$194 = ($70|0)!=(0);\n  $narrow = $not$182 & $not$194;\n  $$sink5 = $narrow&1;\n  $77 = ((($19)) + 8|0);\n  HEAP32[$77>>2] = $$sink5;\n  $112 = $72;\n }\n $80 = ((($1)) + 64|0);\n HEAP32[$80>>2] = $0;\n $81 = ((($0)) + 64|0);\n $82 = $81;\n $83 = $82;\n $84 = HEAP32[$83>>2]|0;\n $85 = (($82) + 4)|0;\n $86 = $85;\n $87 = HEAP32[$86>>2]|0;\n $88 = (_i64Add(($84|0),($87|0),1,0)|0);\n $89 = tempRet0;\n $90 = $81;\n $91 = $90;\n HEAP32[$91>>2] = $88;\n $92 = (($90) + 4)|0;\n $93 = $92;\n HEAP32[$93>>2] = $89;\n $94 = ((($1)) + 56|0);\n $95 = $94;\n $96 = $95;\n HEAP32[$96>>2] = $84;\n $97 = (($95) + 4)|0;\n $98 = $97;\n HEAP32[$98>>2] = $87;\n $99 = ((($0)) + 56|0);\n $100 = $99;\n $101 = $100;\n $102 = HEAP32[$101>>2]|0;\n $103 = (($100) + 4)|0;\n $104 = $103;\n $105 = HEAP32[$104>>2]|0;\n $106 = ((($1)) + 48|0);\n $107 = $106;\n $108 = $107;\n HEAP32[$108>>2] = $102;\n $109 = (($107) + 4)|0;\n $110 = $109;\n HEAP32[$110>>2] = $105;\n $111 = (($5) + ($112<<2)|0);\n $113 = HEAP32[$111>>2]|0;\n $114 = ((($1)) + 36|0);\n HEAP32[$114>>2] = $113;\n $115 = ((($19)) + 4|0);\n $116 = +HEAPF32[$115>>2];\n $117 = +HEAPF32[$9>>2];\n $118 = $116 > $117;\n if ($118) {\n  HEAPF32[$9>>2] = $116;\n  $119 = $116;\n } else {\n  $119 = $117;\n }\n $120 = (+__vp_ampmax_decay($119,$0));\n HEAPF32[$9>>2] = $120;\n HEAPF32[$115>>2] = $120;\n $121 = ((($3)) + 4|0);\n $122 = HEAP32[$121>>2]|0;\n $123 = $122 << 2;\n $124 = (($123) + 7)|0;\n $125 = $124 & -8;\n $126 = HEAP32[$68>>2]|0;\n $127 = (($125) + ($126))|0;\n $128 = ((($1)) + 76|0);\n $129 = HEAP32[$128>>2]|0;\n $130 = ($127|0)>($129|0);\n $131 = ((($1)) + 68|0);\n $132 = HEAP32[$131>>2]|0;\n if ($130) {\n  $133 = ($132|0)==(0|0);\n  if (!($133)) {\n   $134 = $132;\n   $135 = (_malloc(8)|0);\n   $136 = HEAP32[$56>>2]|0;\n   $137 = (($136) + ($126))|0;\n   HEAP32[$56>>2] = $137;\n   $138 = HEAP32[$49>>2]|0;\n   $139 = ((($135)) + 4|0);\n   HEAP32[$139>>2] = $138;\n   HEAP32[$135>>2] = $134;\n   HEAP32[$49>>2] = $135;\n  }\n  HEAP32[$128>>2] = $125;\n  $140 = (_malloc($125)|0);\n  HEAP32[$131>>2] = $140;\n  HEAP32[$68>>2] = 0;\n  $$pre187 = HEAP32[$121>>2]|0;\n  $142 = $140;$143 = 0;$146 = $$pre187;$151 = $125;\n } else {\n  $142 = $132;$143 = $126;$146 = $122;$151 = $129;\n }\n $141 = (($142) + ($143)|0);\n $144 = (($143) + ($125))|0;\n HEAP32[$68>>2] = $144;\n HEAP32[$1>>2] = $141;\n $145 = $146 << 2;\n $147 = (($145) + 7)|0;\n $148 = $147 & -8;\n $149 = (($148) + ($144))|0;\n $150 = ($149|0)>($151|0);\n if ($150) {\n  $152 = ($142|0)==(0|0);\n  if (!($152)) {\n   $153 = $142;\n   $154 = (_malloc(8)|0);\n   $155 = HEAP32[$56>>2]|0;\n   $156 = (($155) + ($144))|0;\n   HEAP32[$56>>2] = $156;\n   $157 = HEAP32[$49>>2]|0;\n   $158 = ((($154)) + 4|0);\n   HEAP32[$158>>2] = $157;\n   HEAP32[$154>>2] = $153;\n   HEAP32[$49>>2] = $154;\n  }\n  HEAP32[$128>>2] = $148;\n  $159 = (_malloc($148)|0);\n  HEAP32[$131>>2] = $159;\n  HEAP32[$68>>2] = 0;\n  $$pre188 = HEAP32[$121>>2]|0;\n  $161 = $159;$162 = 0;$164 = $$pre188;$260 = $148;\n } else {\n  $161 = $142;$162 = $144;$164 = $146;$260 = $151;\n }\n $160 = (($161) + ($162)|0);\n $163 = (($162) + ($148))|0;\n HEAP32[$68>>2] = $163;\n HEAP32[$19>>2] = $160;\n $165 = ($164|0)>(0);\n L41: do {\n  if ($165) {\n   $166 = ((($0)) + 8|0);\n   $$0170184 = 0;$173 = $163;$175 = $260;$176 = $161;\n   while(1) {\n    $167 = HEAP32[$114>>2]|0;\n    $168 = (($167) + ($17))|0;\n    $169 = $168 << 2;\n    $170 = (($169) + 7)|0;\n    $171 = $170 & -8;\n    $172 = (($171) + ($173))|0;\n    $174 = ($172|0)>($175|0);\n    if ($174) {\n     $177 = ($176|0)==(0|0);\n     if (!($177)) {\n      $178 = $176;\n      $179 = (_malloc(8)|0);\n      $180 = HEAP32[$56>>2]|0;\n      $181 = (($180) + ($173))|0;\n      HEAP32[$56>>2] = $181;\n      $182 = HEAP32[$49>>2]|0;\n      $183 = ((($179)) + 4|0);\n      HEAP32[$183>>2] = $182;\n      HEAP32[$179>>2] = $178;\n      HEAP32[$49>>2] = $179;\n     }\n     HEAP32[$128>>2] = $171;\n     $184 = (_malloc($171)|0);\n     HEAP32[$131>>2] = $184;\n     HEAP32[$68>>2] = 0;\n     $186 = $184;$187 = 0;\n    } else {\n     $186 = $176;$187 = $173;\n    }\n    $185 = (($186) + ($187)|0);\n    $188 = (($187) + ($171))|0;\n    HEAP32[$68>>2] = $188;\n    $189 = HEAP32[$19>>2]|0;\n    $190 = (($189) + ($$0170184<<2)|0);\n    HEAP32[$190>>2] = $185;\n    $191 = HEAP32[$19>>2]|0;\n    $192 = (($191) + ($$0170184<<2)|0);\n    $193 = HEAP32[$192>>2]|0;\n    $194 = HEAP32[$166>>2]|0;\n    $195 = (($194) + ($$0170184<<2)|0);\n    $196 = HEAP32[$195>>2]|0;\n    _memcpy(($193|0),($196|0),($169|0))|0;\n    $197 = HEAP32[$19>>2]|0;\n    $198 = (($197) + ($$0170184<<2)|0);\n    $199 = HEAP32[$198>>2]|0;\n    $200 = (($199) + ($17<<2)|0);\n    $201 = HEAP32[$1>>2]|0;\n    $202 = (($201) + ($$0170184<<2)|0);\n    HEAP32[$202>>2] = $200;\n    $203 = (($$0170184) + 1)|0;\n    $204 = HEAP32[$121>>2]|0;\n    $205 = ($203|0)<($204|0);\n    if (!($205)) {\n     break L41;\n    }\n    $$pre189 = HEAP32[$68>>2]|0;\n    $$pre190 = HEAP32[$128>>2]|0;\n    $$pre191 = HEAP32[$131>>2]|0;\n    $$0170184 = $203;$173 = $$pre189;$175 = $$pre190;$176 = $$pre191;\n   }\n  }\n } while(0);\n $206 = HEAP32[$23>>2]|0;\n $207 = ($206|0)==(0);\n if (!($207)) {\n  $208 = HEAP32[$10>>2]|0;\n  $209 = ($208|0)<($206|0);\n  if (!($209)) {\n   HEAP32[$23>>2] = -1;\n   $210 = ((($1)) + 44|0);\n   HEAP32[$210>>2] = 1;\n   $$2 = 1;\n   return ($$2|0);\n  }\n }\n $211 = ((($5)) + 4|0);\n $212 = HEAP32[$211>>2]|0;\n $213 = (($212|0) / 2)&-1;\n $214 = (($44) - ($213))|0;\n $215 = ($214|0)>(0);\n if (!($215)) {\n  $$2 = 1;\n  return ($$2|0);\n }\n $216 = HEAP32[$7>>2]|0;\n __ve_envelope_shift($216,$214);\n $217 = HEAP32[$47>>2]|0;\n $218 = (($217) - ($214))|0;\n HEAP32[$47>>2] = $218;\n $219 = HEAP32[$121>>2]|0;\n $220 = ($219|0)>(0);\n if ($220) {\n  $221 = ((($0)) + 8|0);\n  $222 = HEAP32[$221>>2]|0;\n  $223 = HEAP32[$222>>2]|0;\n  $224 = (($223) + ($214<<2)|0);\n  $225 = $218 << 2;\n  _memmove(($223|0),($224|0),($225|0))|0;\n  $226 = HEAP32[$121>>2]|0;\n  $227 = ($226|0)>(1);\n  if ($227) {\n   $230 = 1;\n   while(1) {\n    $$pre193 = HEAP32[$47>>2]|0;\n    $228 = HEAP32[$221>>2]|0;\n    $229 = (($228) + ($230<<2)|0);\n    $231 = HEAP32[$229>>2]|0;\n    $232 = (($231) + ($214<<2)|0);\n    $233 = $$pre193 << 2;\n    _memmove(($231|0),($232|0),($233|0))|0;\n    $234 = (($230) + 1)|0;\n    $235 = HEAP32[$121>>2]|0;\n    $236 = ($234|0)<($235|0);\n    if ($236) {\n     $230 = $234;\n    } else {\n     break;\n    }\n   }\n  }\n }\n $237 = HEAP32[$12>>2]|0;\n HEAP32[$69>>2] = $237;\n $238 = HEAP32[$34>>2]|0;\n HEAP32[$12>>2] = $238;\n HEAP32[$10>>2] = $213;\n $239 = HEAP32[$23>>2]|0;\n $240 = ($239|0)==(0);\n if ($240) {\n  $$sink17$in = $214;\n } else {\n  $241 = (($239) - ($214))|0;\n  $242 = ($241|0)<(1);\n  $$ = $242 ? -1 : $241;\n  HEAP32[$23>>2] = $$;\n  $243 = ($$|0)>($213|0);\n  $244 = (($$) - ($213))|0;\n  $245 = $243 ? 0 : $244;\n  $$180 = (($245) + ($214))|0;\n  $$sink17$in = $$180;\n }\n $246 = ($$sink17$in|0)<(0);\n $247 = $246 << 31 >> 31;\n $248 = $99;\n $249 = $248;\n $250 = HEAP32[$249>>2]|0;\n $251 = (($248) + 4)|0;\n $252 = $251;\n $253 = HEAP32[$252>>2]|0;\n $254 = (_i64Add(($250|0),($253|0),($$sink17$in|0),($247|0))|0);\n $255 = tempRet0;\n $256 = $99;\n $257 = $256;\n HEAP32[$257>>2] = $254;\n $258 = (($256) + 4)|0;\n $259 = $258;\n HEAP32[$259>>2] = $255;\n $$2 = 1;\n return ($$2|0);\n}\nfunction _vorbis_staticbook_pack($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$0100 = 0, $$0101$lcssa = 0, $$0101139 = 0, $$0102$lcssa = 0, $$0102116 = 0, $$0106113 = 0, $$1$lcssa = 0, $$1103114 = 0, $$1117 = 0, $$2$lcssa = 0, $$2104 = 0, $$2130 = 0, $$3124 = 0, $$4127 = 0, $$5112 = 0, $$lcssa = 0, $$pre = 0, $$pre156 = 0, $10 = 0;\n var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;\n var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;\n var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;\n var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond154 = 0, $ispos = 0, $neg = 0, label = 0, sp = 0;\n sp = STACKTOP;\n _oggpack_write($1,5653314,24);\n $2 = HEAP32[$0>>2]|0;\n _oggpack_write($1,$2,16);\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n _oggpack_write($1,$4,24);\n $5 = HEAP32[$3>>2]|0;\n $6 = ($5|0)>(1);\n L1: do {\n  if ($6) {\n   $7 = ((($0)) + 8|0);\n   $8 = HEAP32[$7>>2]|0;\n   $$pre = HEAP8[$8>>0]|0;\n   $$0101139 = 1;$9 = $$pre;\n   while(1) {\n    $10 = ($9<<24>>24)==(0);\n    if ($10) {\n     $$0101$lcssa = $$0101139;\n     break L1;\n    }\n    $11 = (($8) + ($$0101139)|0);\n    $12 = HEAP8[$11>>0]|0;\n    $13 = ($12<<24>>24)<($9<<24>>24);\n    if ($13) {\n     $$0101$lcssa = $$0101139;\n     break L1;\n    }\n    $14 = (($$0101139) + 1)|0;\n    $15 = ($14|0)<($5|0);\n    if ($15) {\n     $$0101139 = $14;$9 = $12;\n    } else {\n     $$0101$lcssa = $14;\n     break;\n    }\n   }\n  } else {\n   $$0101$lcssa = 1;\n  }\n } while(0);\n $16 = ($$0101$lcssa|0)==($5|0);\n L8: do {\n  if ($16) {\n   _oggpack_write($1,1,1);\n   $17 = ((($0)) + 8|0);\n   $18 = HEAP32[$17>>2]|0;\n   $19 = HEAP8[$18>>0]|0;\n   $20 = $19 << 24 >> 24;\n   $21 = (($20) + -1)|0;\n   _oggpack_write($1,$21,5);\n   $22 = HEAP32[$3>>2]|0;\n   $23 = ($22|0)>(1);\n   if ($23) {\n    $$0102116 = 0;$$1117 = 1;$107 = $22;\n    while(1) {\n     $24 = HEAP32[$17>>2]|0;\n     $25 = (($24) + ($$1117)|0);\n     $26 = HEAP8[$25>>0]|0;\n     $27 = (($$1117) + -1)|0;\n     $28 = (($24) + ($27)|0);\n     $29 = HEAP8[$28>>0]|0;\n     $30 = $26 << 24 >> 24;\n     $31 = ($26<<24>>24)>($29<<24>>24);\n     if ($31) {\n      $32 = $29 << 24 >> 24;\n      $$0106113 = $32;$$1103114 = $$0102116;$35 = $107;\n      while(1) {\n       $33 = (($$1117) - ($$1103114))|0;\n       $34 = (($35) - ($$1103114))|0;\n       $36 = (_ov_ilog($34)|0);\n       _oggpack_write($1,$33,$36);\n       $37 = (($$0106113) + 1)|0;\n       $exitcond154 = ($37|0)==($30|0);\n       $$pre156 = HEAP32[$3>>2]|0;\n       if ($exitcond154) {\n        $$2104 = $$1117;$40 = $$pre156;\n        break;\n       } else {\n        $$0106113 = $37;$$1103114 = $$1117;$35 = $$pre156;\n       }\n      }\n     } else {\n      $$2104 = $$0102116;$40 = $107;\n     }\n     $38 = (($$1117) + 1)|0;\n     $39 = ($38|0)<($40|0);\n     if ($39) {\n      $$0102116 = $$2104;$$1117 = $38;$107 = $40;\n     } else {\n      $$0102$lcssa = $$2104;$$1$lcssa = $38;$$lcssa = $40;\n      break;\n     }\n    }\n   } else {\n    $$0102$lcssa = 0;$$1$lcssa = 1;$$lcssa = $22;\n   }\n   $41 = (($$1$lcssa) - ($$0102$lcssa))|0;\n   $42 = (($$lcssa) - ($$0102$lcssa))|0;\n   $43 = (_ov_ilog($42)|0);\n   _oggpack_write($1,$41,$43);\n  } else {\n   _oggpack_write($1,0,1);\n   $44 = HEAP32[$3>>2]|0;\n   $45 = ($44|0)>(0);\n   L20: do {\n    if ($45) {\n     $46 = ((($0)) + 8|0);\n     $47 = HEAP32[$46>>2]|0;\n     $$2130 = 0;\n     while(1) {\n      $48 = (($47) + ($$2130)|0);\n      $49 = HEAP8[$48>>0]|0;\n      $50 = ($49<<24>>24)==(0);\n      if ($50) {\n       $$2$lcssa = $$2130;\n       break L20;\n      }\n      $51 = (($$2130) + 1)|0;\n      $52 = ($51|0)<($44|0);\n      if ($52) {\n       $$2130 = $51;\n      } else {\n       $$2$lcssa = $51;\n       break;\n      }\n     }\n    } else {\n     $$2$lcssa = 0;\n    }\n   } while(0);\n   $53 = ($$2$lcssa|0)==($44|0);\n   if ($53) {\n    _oggpack_write($1,0,1);\n    $54 = HEAP32[$3>>2]|0;\n    $55 = ($54|0)>(0);\n    if (!($55)) {\n     break;\n    }\n    $56 = ((($0)) + 8|0);\n    $$3124 = 0;\n    while(1) {\n     $57 = HEAP32[$56>>2]|0;\n     $58 = (($57) + ($$3124)|0);\n     $59 = HEAP8[$58>>0]|0;\n     $60 = $59 << 24 >> 24;\n     $61 = (($60) + -1)|0;\n     _oggpack_write($1,$61,5);\n     $62 = (($$3124) + 1)|0;\n     $63 = HEAP32[$3>>2]|0;\n     $64 = ($62|0)<($63|0);\n     if ($64) {\n      $$3124 = $62;\n     } else {\n      break L8;\n     }\n    }\n   }\n   _oggpack_write($1,1,1);\n   $65 = HEAP32[$3>>2]|0;\n   $66 = ($65|0)>(0);\n   if ($66) {\n    $67 = ((($0)) + 8|0);\n    $$4127 = 0;\n    while(1) {\n     $68 = HEAP32[$67>>2]|0;\n     $69 = (($68) + ($$4127)|0);\n     $70 = HEAP8[$69>>0]|0;\n     $71 = ($70<<24>>24)==(0);\n     if ($71) {\n      _oggpack_write($1,0,1);\n     } else {\n      _oggpack_write($1,1,1);\n      $72 = HEAP32[$67>>2]|0;\n      $73 = (($72) + ($$4127)|0);\n      $74 = HEAP8[$73>>0]|0;\n      $75 = $74 << 24 >> 24;\n      $76 = (($75) + -1)|0;\n      _oggpack_write($1,$76,5);\n     }\n     $77 = (($$4127) + 1)|0;\n     $78 = HEAP32[$3>>2]|0;\n     $79 = ($77|0)<($78|0);\n     if ($79) {\n      $$4127 = $77;\n     } else {\n      break;\n     }\n    }\n   }\n  }\n } while(0);\n $80 = ((($0)) + 12|0);\n $81 = HEAP32[$80>>2]|0;\n _oggpack_write($1,$81,4);\n $82 = HEAP32[$80>>2]|0;\n switch ($82|0) {\n case 0:  {\n  break;\n }\n case 2: case 1:  {\n  label = 28;\n  break;\n }\n default: {\n  $$0100 = -1;\n  return ($$0100|0);\n }\n }\n L42: do {\n  if ((label|0) == 28) {\n   $83 = ((($0)) + 32|0);\n   $84 = HEAP32[$83>>2]|0;\n   $85 = ($84|0)==(0|0);\n   if ($85) {\n    $$0100 = -1;\n    return ($$0100|0);\n   }\n   $86 = ((($0)) + 16|0);\n   $87 = HEAP32[$86>>2]|0;\n   _oggpack_write($1,$87,32);\n   $88 = ((($0)) + 20|0);\n   $89 = HEAP32[$88>>2]|0;\n   _oggpack_write($1,$89,32);\n   $90 = ((($0)) + 24|0);\n   $91 = HEAP32[$90>>2]|0;\n   $92 = (($91) + -1)|0;\n   _oggpack_write($1,$92,4);\n   $93 = ((($0)) + 28|0);\n   $94 = HEAP32[$93>>2]|0;\n   _oggpack_write($1,$94,1);\n   $95 = HEAP32[$80>>2]|0;\n   switch ($95|0) {\n   case 1:  {\n    $96 = (__book_maptype1_quantvals($0)|0);\n    $$0 = $96;\n    break;\n   }\n   case 2:  {\n    $97 = HEAP32[$3>>2]|0;\n    $98 = HEAP32[$0>>2]|0;\n    $99 = Math_imul($98, $97)|0;\n    $$0 = $99;\n    break;\n   }\n   default: {\n    break L42;\n   }\n   }\n   $100 = ($$0|0)>(0);\n   if ($100) {\n    $$5112 = 0;\n    while(1) {\n     $101 = HEAP32[$83>>2]|0;\n     $102 = (($101) + ($$5112<<2)|0);\n     $103 = HEAP32[$102>>2]|0;\n     $ispos = ($103|0)>(-1);\n     $neg = (0 - ($103))|0;\n     $104 = $ispos ? $103 : $neg;\n     $105 = HEAP32[$90>>2]|0;\n     _oggpack_write($1,$104,$105);\n     $106 = (($$5112) + 1)|0;\n     $exitcond = ($106|0)==($$0|0);\n     if ($exitcond) {\n      break;\n     } else {\n      $$5112 = $106;\n     }\n    }\n   }\n  }\n } while(0);\n $$0100 = 0;\n return ($$0100|0);\n}\nfunction _vorbis_book_encode($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($1|0)<(0);\n if ($3) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $4 = ((($0)) + 12|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($5)) + 4|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($7|0)>($1|0);\n if (!($8)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $9 = ((($0)) + 20|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = (($10) + ($1<<2)|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ((($5)) + 8|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (($14) + ($1)|0);\n $16 = HEAP8[$15>>0]|0;\n $17 = $16 << 24 >> 24;\n _oggpack_write($2,$12,$17);\n $18 = HEAP32[$4>>2]|0;\n $19 = ((($18)) + 8|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = (($20) + ($1)|0);\n $22 = HEAP8[$21>>0]|0;\n $23 = $22 << 24 >> 24;\n $$0 = $23;\n return ($$0|0);\n}\nfunction _vorbis_book_decode($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 8|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)>(0);\n if (!($4)) {\n  $$1 = -1;\n  return ($$1|0);\n }\n $5 = (_decode_packed_entry_number($0,$1)|0);\n $6 = ($5|0)>(-1);\n if (!($6)) {\n  $$1 = -1;\n  return ($$1|0);\n }\n $7 = ((($0)) + 24|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = (($8) + ($5<<2)|0);\n $10 = HEAP32[$9>>2]|0;\n $$1 = $10;\n return ($$1|0);\n}\nfunction _decode_packed_entry_number($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$166 = 0, $$171 = 0, $$267$lcssa = 0, $$26777 = 0, $$27276 = 0, $$3 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;\n var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 40|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 36|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (_oggpack_look($1,$5)|0);\n $7 = ($6|0)>(-1);\n do {\n  if ($7) {\n   $8 = ((($0)) + 32|0);\n   $9 = HEAP32[$8>>2]|0;\n   $10 = (($9) + ($6<<2)|0);\n   $11 = HEAP32[$10>>2]|0;\n   $12 = ($11|0)<(0);\n   if ($12) {\n    $13 = $11 >>> 15;\n    $14 = $13 & 32767;\n    $15 = ((($0)) + 8|0);\n    $16 = HEAP32[$15>>2]|0;\n    $17 = $11 & 32767;\n    $18 = (($16) - ($17))|0;\n    $$166 = $14;$$171 = $18;\n    break;\n   }\n   $19 = ((($0)) + 28|0);\n   $20 = HEAP32[$19>>2]|0;\n   $21 = (($11) + -1)|0;\n   $22 = (($20) + ($21)|0);\n   $23 = HEAP8[$22>>0]|0;\n   $24 = $23 << 24 >> 24;\n   _oggpack_adv($1,$24);\n   $$3 = $21;\n   return ($$3|0);\n  } else {\n   $25 = ((($0)) + 8|0);\n   $26 = HEAP32[$25>>2]|0;\n   $$166 = 0;$$171 = $26;\n  }\n } while(0);\n $$sink = $3;\n while(1) {\n  $27 = (_oggpack_look($1,$$sink)|0);\n  $28 = ($27|0)<(0);\n  $29 = ($$sink|0)>(1);\n  $30 = $29 & $28;\n  $31 = (($$sink) + -1)|0;\n  if ($30) {\n   $$sink = $31;\n  } else {\n   break;\n  }\n }\n if ($28) {\n  $$3 = -1;\n  return ($$3|0);\n }\n $32 = (_llvm_bswap_i32(($27|0))|0);\n $33 = $32 >>> 4;\n $34 = $33 & 252645135;\n $35 = $32 << 4;\n $36 = $35 & -252645136;\n $37 = $34 | $36;\n $38 = $37 >>> 2;\n $39 = $38 & 858993459;\n $40 = $37 << 2;\n $41 = $40 & -858993460;\n $42 = $39 | $41;\n $43 = $42 >>> 1;\n $44 = $43 & 1431655765;\n $45 = $42 << 1;\n $46 = $45 & -1431655766;\n $47 = $44 | $46;\n $48 = (($$171) - ($$166))|0;\n $49 = ($48|0)>(1);\n if ($49) {\n  $50 = ((($0)) + 20|0);\n  $51 = HEAP32[$50>>2]|0;\n  $$26777 = $$166;$$27276 = $$171;$53 = $48;\n  while(1) {\n   $52 = $53 >>> 1;\n   $54 = (($52) + ($$26777))|0;\n   $55 = (($51) + ($54<<2)|0);\n   $56 = HEAP32[$55>>2]|0;\n   $57 = ($56>>>0)>($47>>>0);\n   $58 = $57 ? 0 : $52;\n   $59 = (($58) + ($$26777))|0;\n   $60 = $57 ? $52 : 0;\n   $61 = (($$27276) - ($60))|0;\n   $62 = (($61) - ($59))|0;\n   $63 = ($62|0)>(1);\n   if ($63) {\n    $$26777 = $59;$$27276 = $61;$53 = $62;\n   } else {\n    $$267$lcssa = $59;\n    break;\n   }\n  }\n } else {\n  $$267$lcssa = $$166;\n }\n $64 = ((($0)) + 28|0);\n $65 = HEAP32[$64>>2]|0;\n $66 = (($65) + ($$267$lcssa)|0);\n $67 = HEAP8[$66>>0]|0;\n $68 = $67 << 24 >> 24;\n $69 = ($68|0)>($$sink|0);\n if ($69) {\n  _oggpack_adv($1,$$sink);\n  $$3 = -1;\n  return ($$3|0);\n } else {\n  _oggpack_adv($1,$68);\n  $$3 = $$267$lcssa;\n  return ($$3|0);\n }\n return (0)|0;\n}\nfunction _vorbis_book_decodevs_add($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$04655$us = 0, $$04753$us = 0, $$04857 = 0, $$150 = 0, $$154$us = 0, $$alloca_mul = 0, $$not = 0, $$not63 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0.0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge = 0;\n var $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($0)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)>(0);\n if (!($6)) {\n  $$150 = 0;\n  STACKTOP = sp;return ($$150|0);\n }\n $7 = HEAP32[$0>>2]|0;\n $8 = (($3|0) / ($7|0))&-1;\n $9 = $8 << 2;\n $$alloca_mul = $9;\n $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $11 = ($8|0)>(0);\n L4: do {\n  if ($11) {\n   $12 = ((($0)) + 16|0);\n   $$04857 = 0;\n   while(1) {\n    $26 = (_decode_packed_entry_number($0,$2)|0);\n    $27 = ($26|0)==(-1);\n    if ($27) {\n     $$150 = -1;\n     break;\n    }\n    $28 = HEAP32[$12>>2]|0;\n    $29 = HEAP32[$0>>2]|0;\n    $30 = Math_imul($29, $26)|0;\n    $31 = (($28) + ($30<<2)|0);\n    $32 = (($10) + ($$04857<<2)|0);\n    HEAP32[$32>>2] = $31;\n    $33 = (($$04857) + 1)|0;\n    $34 = ($33|0)<($8|0);\n    if ($34) {\n     $$04857 = $33;\n    } else {\n     $13 = $29;\n     break L4;\n    }\n   }\n   STACKTOP = sp;return ($$150|0);\n  } else {\n   $13 = $7;\n  }\n } while(0);\n $$not = ($13|0)<(1);\n $$not63 = $11 ^ 1;\n $brmerge = $$not | $$not63;\n if ($brmerge) {\n  $$150 = 0;\n  STACKTOP = sp;return ($$150|0);\n } else {\n  $$04655$us = 0;$$154$us = 0;\n }\n while(1) {\n  $$04753$us = 0;\n  while(1) {\n   $14 = (($10) + ($$04753$us<<2)|0);\n   $15 = HEAP32[$14>>2]|0;\n   $16 = (($15) + ($$154$us<<2)|0);\n   $17 = +HEAPF32[$16>>2];\n   $18 = (($$04753$us) + ($$04655$us))|0;\n   $19 = (($1) + ($18<<2)|0);\n   $20 = +HEAPF32[$19>>2];\n   $21 = $20 + $17;\n   HEAPF32[$19>>2] = $21;\n   $22 = (($$04753$us) + 1)|0;\n   $exitcond = ($22|0)==($8|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$04753$us = $22;\n   }\n  }\n  $23 = (($$154$us) + 1)|0;\n  $24 = (($$04655$us) + ($8))|0;\n  $25 = ($23|0)<($13|0);\n  if ($25) {\n   $$04655$us = $24;$$154$us = $23;\n  } else {\n   $$150 = 0;\n   break;\n  }\n }\n STACKTOP = sp;return ($$150|0);\n}\nfunction _vorbis_book_decodev_add($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$06595 = 0, $$06696 = 0, $$1 = 0, $$167$lcssa = 0, $$16794 = 0, $$175 = 0, $$2 = 0, $$268$ph195 = 0, $$3 = 0, $$369 = 0, $$4 = 0, $$470 = 0, $$5 = 0, $$571 = 0, $$6 = 0, $$672 = 0, $$7 = 0, $$773 = 0, $$8 = 0, $$9 = 0;\n var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0.0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0;\n var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0.0, $76 = 0.0;\n var $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0, $93 = 0, $94 = 0.0;\n var $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($0)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)>(0);\n if (!($6)) {\n  $$175 = 0;\n  return ($$175|0);\n }\n $7 = HEAP32[$0>>2]|0;\n $8 = ($7|0)>(8);\n if ($8) {\n  $11 = ($3|0)>(0);\n  if (!($11)) {\n   $$175 = 0;\n   return ($$175|0);\n  }\n  $12 = ((($0)) + 16|0);\n  $$06696 = 0;\n  while(1) {\n   $16 = (_decode_packed_entry_number($0,$2)|0);\n   $17 = ($16|0)==(-1);\n   if ($17) {\n    $$175 = -1;\n    label = 29;\n    break;\n   }\n   $18 = HEAP32[$12>>2]|0;\n   $14 = HEAP32[$0>>2]|0;\n   $19 = Math_imul($14, $16)|0;\n   $20 = (($18) + ($19<<2)|0);\n   $21 = ($14|0)>(0);\n   if ($21) {\n    $$06595 = 0;$$16794 = $$06696;\n    while(1) {\n     $22 = (($$06595) + 1)|0;\n     $23 = (($20) + ($$06595<<2)|0);\n     $24 = +HEAPF32[$23>>2];\n     $25 = (($$16794) + 1)|0;\n     $26 = (($1) + ($$16794<<2)|0);\n     $27 = +HEAPF32[$26>>2];\n     $28 = $27 + $24;\n     HEAPF32[$26>>2] = $28;\n     $exitcond = ($22|0)==($14|0);\n     if ($exitcond) {\n      break;\n     } else {\n      $$06595 = $22;$$16794 = $25;\n     }\n    }\n    $13 = (($$06696) + ($14))|0;\n    $$167$lcssa = $13;\n   } else {\n    $$167$lcssa = $$06696;\n   }\n   $15 = ($$167$lcssa|0)<($3|0);\n   if ($15) {\n    $$06696 = $$167$lcssa;\n   } else {\n    $$175 = 0;\n    label = 29;\n    break;\n   }\n  }\n  if ((label|0) == 29) {\n   return ($$175|0);\n  }\n }\n $9 = ((($0)) + 16|0);\n $10 = ($3|0)>(0);\n if ($10) {\n  $$268$ph195 = 0;\n } else {\n  $$175 = 0;\n  return ($$175|0);\n }\n L23: while(1) {\n  L25: while(1) {\n   $85 = (_decode_packed_entry_number($0,$2)|0);\n   $86 = ($85|0)==(-1);\n   if ($86) {\n    $$175 = -1;\n    label = 29;\n    break L23;\n   }\n   $87 = HEAP32[$9>>2]|0;\n   $88 = HEAP32[$0>>2]|0;\n   switch ($88|0) {\n   case 8:  {\n    label = 21;\n    break L25;\n    break;\n   }\n   case 7:  {\n    label = 22;\n    break L25;\n    break;\n   }\n   case 6:  {\n    label = 23;\n    break L25;\n    break;\n   }\n   case 5:  {\n    label = 24;\n    break L25;\n    break;\n   }\n   case 4:  {\n    label = 25;\n    break L25;\n    break;\n   }\n   case 3:  {\n    label = 26;\n    break L25;\n    break;\n   }\n   case 2:  {\n    label = 27;\n    break L25;\n    break;\n   }\n   case 1:  {\n    label = 28;\n    break L25;\n    break;\n   }\n   default: {\n   }\n   }\n  }\n  if ((label|0) == 21) {\n   label = 0;\n   $89 = $85 << 3;\n   $90 = (($87) + ($89<<2)|0);\n   $91 = +HEAPF32[$90>>2];\n   $92 = (($$268$ph195) + 1)|0;\n   $93 = (($1) + ($$268$ph195<<2)|0);\n   $94 = +HEAPF32[$93>>2];\n   $95 = $94 + $91;\n   HEAPF32[$93>>2] = $95;\n   $$1 = 1;$$369 = $92;$31 = $90;\n   label = 11;\n  }\n  else if ((label|0) == 22) {\n   label = 0;\n   $96 = ($85*7)|0;\n   $97 = (($87) + ($96<<2)|0);\n   $$1 = 0;$$369 = $$268$ph195;$31 = $97;\n   label = 11;\n  }\n  else if ((label|0) == 23) {\n   label = 0;\n   $98 = ($85*6)|0;\n   $99 = (($87) + ($98<<2)|0);\n   $$2 = 0;$$470 = $$268$ph195;$39 = $99;\n   label = 12;\n  }\n  else if ((label|0) == 24) {\n   label = 0;\n   $100 = ($85*5)|0;\n   $101 = (($87) + ($100<<2)|0);\n   $$3 = 0;$$571 = $$268$ph195;$47 = $101;\n   label = 13;\n  }\n  else if ((label|0) == 25) {\n   label = 0;\n   $102 = $85 << 2;\n   $103 = (($87) + ($102<<2)|0);\n   $$4 = 0;$$672 = $$268$ph195;$55 = $103;\n   label = 14;\n  }\n  else if ((label|0) == 26) {\n   label = 0;\n   $104 = ($85*3)|0;\n   $105 = (($87) + ($104<<2)|0);\n   $$5 = 0;$$773 = $$268$ph195;$63 = $105;\n   label = 15;\n  }\n  else if ((label|0) == 27) {\n   label = 0;\n   $106 = $85 << 1;\n   $107 = (($87) + ($106<<2)|0);\n   $$6 = 0;$$8 = $$268$ph195;$71 = $107;\n   label = 16;\n  }\n  else if ((label|0) == 28) {\n   label = 0;\n   $108 = (($87) + ($85<<2)|0);\n   $$7 = 0;$$9 = $$268$ph195;$78 = $108;\n  }\n  if ((label|0) == 11) {\n   label = 0;\n   $29 = (($$1) + 1)|0;\n   $30 = (($31) + ($$1<<2)|0);\n   $32 = +HEAPF32[$30>>2];\n   $33 = (($$369) + 1)|0;\n   $34 = (($1) + ($$369<<2)|0);\n   $35 = +HEAPF32[$34>>2];\n   $36 = $35 + $32;\n   HEAPF32[$34>>2] = $36;\n   $$2 = $29;$$470 = $33;$39 = $31;\n   label = 12;\n  }\n  if ((label|0) == 12) {\n   label = 0;\n   $37 = (($$2) + 1)|0;\n   $38 = (($39) + ($$2<<2)|0);\n   $40 = +HEAPF32[$38>>2];\n   $41 = (($$470) + 1)|0;\n   $42 = (($1) + ($$470<<2)|0);\n   $43 = +HEAPF32[$42>>2];\n   $44 = $43 + $40;\n   HEAPF32[$42>>2] = $44;\n   $$3 = $37;$$571 = $41;$47 = $39;\n   label = 13;\n  }\n  if ((label|0) == 13) {\n   label = 0;\n   $45 = (($$3) + 1)|0;\n   $46 = (($47) + ($$3<<2)|0);\n   $48 = +HEAPF32[$46>>2];\n   $49 = (($$571) + 1)|0;\n   $50 = (($1) + ($$571<<2)|0);\n   $51 = +HEAPF32[$50>>2];\n   $52 = $51 + $48;\n   HEAPF32[$50>>2] = $52;\n   $$4 = $45;$$672 = $49;$55 = $47;\n   label = 14;\n  }\n  if ((label|0) == 14) {\n   label = 0;\n   $53 = (($$4) + 1)|0;\n   $54 = (($55) + ($$4<<2)|0);\n   $56 = +HEAPF32[$54>>2];\n   $57 = (($$672) + 1)|0;\n   $58 = (($1) + ($$672<<2)|0);\n   $59 = +HEAPF32[$58>>2];\n   $60 = $59 + $56;\n   HEAPF32[$58>>2] = $60;\n   $$5 = $53;$$773 = $57;$63 = $55;\n   label = 15;\n  }\n  if ((label|0) == 15) {\n   label = 0;\n   $61 = (($$5) + 1)|0;\n   $62 = (($63) + ($$5<<2)|0);\n   $64 = +HEAPF32[$62>>2];\n   $65 = (($$773) + 1)|0;\n   $66 = (($1) + ($$773<<2)|0);\n   $67 = +HEAPF32[$66>>2];\n   $68 = $67 + $64;\n   HEAPF32[$66>>2] = $68;\n   $$6 = $61;$$8 = $65;$71 = $63;\n   label = 16;\n  }\n  if ((label|0) == 16) {\n   label = 0;\n   $69 = (($$6) + 1)|0;\n   $70 = (($71) + ($$6<<2)|0);\n   $72 = +HEAPF32[$70>>2];\n   $73 = (($$8) + 1)|0;\n   $74 = (($1) + ($$8<<2)|0);\n   $75 = +HEAPF32[$74>>2];\n   $76 = $75 + $72;\n   HEAPF32[$74>>2] = $76;\n   $$7 = $69;$$9 = $73;$78 = $71;\n  }\n  $77 = (($78) + ($$7<<2)|0);\n  $79 = +HEAPF32[$77>>2];\n  $80 = (($$9) + 1)|0;\n  $81 = (($1) + ($$9<<2)|0);\n  $82 = +HEAPF32[$81>>2];\n  $83 = $82 + $79;\n  HEAPF32[$81>>2] = $83;\n  $84 = ($80|0)<($3|0);\n  if ($84) {\n   $$268$ph195 = $80;\n  } else {\n   $$175 = 0;\n   label = 29;\n   break;\n  }\n }\n if ((label|0) == 29) {\n  return ($$175|0);\n }\n return (0)|0;\n}\nfunction _vorbis_book_decodevv_add($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$ = 0, $$$135 = 0, $$0 = 0, $$03344 = 0, $$03443 = 0, $$03739 = 0, $$1$lcssa = 0, $$135$lcssa = 0, $$13540 = 0, $$141 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = ((($0)) + 8|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($7|0)>(0);\n if (!($8)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $9 = (($2|0) / ($3|0))&-1;\n $10 = (($5) + ($2))|0;\n $11 = (($10|0) / ($3|0))&-1;\n $12 = ($9|0)<($11|0);\n if (!($12)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $13 = ((($0)) + 16|0);\n $$03344 = 0;$$03443 = $9;\n while(1) {\n  $15 = (_decode_packed_entry_number($0,$4)|0);\n  $16 = ($15|0)==(-1);\n  if ($16) {\n   $$0 = -1;\n   label = 8;\n   break;\n  }\n  $17 = HEAP32[$13>>2]|0;\n  $18 = HEAP32[$0>>2]|0;\n  $19 = Math_imul($18, $15)|0;\n  $20 = (($17) + ($19<<2)|0);\n  $21 = ($18|0)>(0);\n  if ($21) {\n   $$03739 = 0;$$13540 = $$03443;$$141 = $$03344;\n   while(1) {\n    $22 = (($20) + ($$03739<<2)|0);\n    $23 = +HEAPF32[$22>>2];\n    $24 = (($$141) + 1)|0;\n    $25 = (($1) + ($$141<<2)|0);\n    $26 = HEAP32[$25>>2]|0;\n    $27 = (($26) + ($$13540<<2)|0);\n    $28 = +HEAPF32[$27>>2];\n    $29 = $28 + $23;\n    HEAPF32[$27>>2] = $29;\n    $30 = ($24|0)==($3|0);\n    $31 = $30&1;\n    $$$135 = (($31) + ($$13540))|0;\n    $$ = $30 ? 0 : $24;\n    $32 = (($$03739) + 1)|0;\n    $exitcond = ($32|0)==($18|0);\n    if ($exitcond) {\n     $$1$lcssa = $$;$$135$lcssa = $$$135;\n     break;\n    } else {\n     $$03739 = $32;$$13540 = $$$135;$$141 = $$;\n    }\n   }\n  } else {\n   $$1$lcssa = $$03344;$$135$lcssa = $$03443;\n  }\n  $14 = ($$135$lcssa|0)<($11|0);\n  if ($14) {\n   $$03344 = $$1$lcssa;$$03443 = $$135$lcssa;\n  } else {\n   $$0 = 0;\n   label = 8;\n   break;\n  }\n }\n if ((label|0) == 8) {\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction __ve_envelope_init($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$07982 = 0, $$081 = 0, $$180 = 0, $$phi$trans$insert = 0, $$phi$trans$insert85 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre86 = 0.0, $$promoted = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;\n var $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0.0;\n var $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond83 = 0, $exitcond84 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($1)) + 28|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($1)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($0)) + 4|0);\n HEAP32[$6>>2] = 128;\n $7 = ((($0)) + 8|0);\n HEAP32[$7>>2] = 64;\n $8 = ((($3)) + 2932|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($0)) + 12|0);\n HEAP32[$10>>2] = $9;\n HEAP32[$0>>2] = $5;\n $11 = ((($0)) + 164|0);\n HEAP32[$11>>2] = 128;\n $12 = ((($3)) + 4|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (($13|0) / 2)&-1;\n $15 = ((($0)) + 176|0);\n HEAP32[$15>>2] = $14;\n $16 = (_calloc(128,4)|0);\n $17 = ((($0)) + 36|0);\n HEAP32[$17>>2] = $16;\n $18 = ((($0)) + 16|0);\n _mdct_init($18,128);\n $19 = HEAP32[$17>>2]|0;\n $$07982 = 0;\n while(1) {\n  $20 = (+($$07982|0));\n  $21 = $20 * 0.024736950028266088;\n  $22 = (+Math_sin((+$21)));\n  $23 = $22;\n  $24 = (($19) + ($$07982<<2)|0);\n  $25 = $23 * $23;\n  HEAPF32[$24>>2] = $25;\n  $26 = (($$07982) + 1)|0;\n  $exitcond84 = ($26|0)==(128);\n  if ($exitcond84) {\n   break;\n  } else {\n   $$07982 = $26;\n  }\n }\n $27 = ((($0)) + 40|0);\n HEAP32[$27>>2] = 2;\n $28 = ((($0)) + 44|0);\n HEAP32[$28>>2] = 4;\n $29 = ((($0)) + 56|0);\n HEAP32[$29>>2] = 4;\n $30 = ((($0)) + 60|0);\n HEAP32[$30>>2] = 5;\n $31 = ((($0)) + 72|0);\n HEAP32[$31>>2] = 6;\n $32 = ((($0)) + 76|0);\n HEAP32[$32>>2] = 6;\n $33 = ((($0)) + 88|0);\n HEAP32[$33>>2] = 9;\n $34 = ((($0)) + 92|0);\n HEAP32[$34>>2] = 8;\n $35 = ((($0)) + 104|0);\n HEAP32[$35>>2] = 13;\n $36 = ((($0)) + 108|0);\n HEAP32[$36>>2] = 8;\n $37 = ((($0)) + 120|0);\n HEAP32[$37>>2] = 17;\n $38 = ((($0)) + 124|0);\n HEAP32[$38>>2] = 8;\n $39 = ((($0)) + 136|0);\n HEAP32[$39>>2] = 22;\n $40 = ((($0)) + 140|0);\n HEAP32[$40>>2] = 8;\n $$081 = 0;$42 = 4;\n while(1) {\n  $41 = $42 << 2;\n  $43 = (_malloc($41)|0);\n  $44 = (((((($0)) + 40|0) + ($$081<<4)|0)) + 8|0);\n  HEAP32[$44>>2] = $43;\n  $45 = ($42|0)>(0);\n  if ($45) {\n   $46 = (+($42|0));\n   $47 = (((((($0)) + 40|0) + ($$081<<4)|0)) + 12|0);\n   $$promoted = +HEAPF32[$47>>2];\n   $$180 = 0;$56 = $$promoted;\n   while(1) {\n    $48 = (+($$180|0));\n    $49 = $48 + 0.5;\n    $50 = $49 / $46;\n    $51 = $50 * 3.1415926535897931;\n    $52 = (+Math_sin((+$51)));\n    $53 = $52;\n    $54 = (($43) + ($$180<<2)|0);\n    HEAPF32[$54>>2] = $53;\n    $55 = $56 + $53;\n    $57 = (($$180) + 1)|0;\n    $exitcond = ($57|0)==($42|0);\n    if ($exitcond) {\n     break;\n    } else {\n     $$180 = $57;$56 = $55;\n    }\n   }\n   HEAPF32[$47>>2] = $55;\n   $$pre$phiZ2D = $47;$59 = $55;\n  } else {\n   $$phi$trans$insert85 = (((((($0)) + 40|0) + ($$081<<4)|0)) + 12|0);\n   $$pre86 = +HEAPF32[$$phi$trans$insert85>>2];\n   $$pre$phiZ2D = $$phi$trans$insert85;$59 = $$pre86;\n  }\n  $58 = 1.0 / $59;\n  HEAPF32[$$pre$phiZ2D>>2] = $58;\n  $60 = (($$081) + 1)|0;\n  $exitcond83 = ($60|0)==(7);\n  if ($exitcond83) {\n   break;\n  }\n  $$phi$trans$insert = (((((($0)) + 40|0) + ($60<<4)|0)) + 4|0);\n  $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n  $$081 = $60;$42 = $$pre;\n }\n $61 = ($5*7)|0;\n $62 = (_calloc($61,144)|0);\n $63 = ((($0)) + 152|0);\n HEAP32[$63>>2] = $62;\n $64 = HEAP32[$11>>2]|0;\n $65 = (_calloc($64,4)|0);\n $66 = ((($0)) + 160|0);\n HEAP32[$66>>2] = $65;\n return;\n}\nfunction __ve_envelope_clear($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 16|0);\n _mdct_clear($1);\n $2 = ((($0)) + 48|0);\n $3 = HEAP32[$2>>2]|0;\n _free($3);\n $4 = ((($0)) + 64|0);\n $5 = HEAP32[$4>>2]|0;\n _free($5);\n $6 = ((($0)) + 80|0);\n $7 = HEAP32[$6>>2]|0;\n _free($7);\n $8 = ((($0)) + 96|0);\n $9 = HEAP32[$8>>2]|0;\n _free($9);\n $10 = ((($0)) + 112|0);\n $11 = HEAP32[$10>>2]|0;\n _free($11);\n $12 = ((($0)) + 128|0);\n $13 = HEAP32[$12>>2]|0;\n _free($13);\n $14 = ((($0)) + 144|0);\n $15 = HEAP32[$14>>2]|0;\n _free($15);\n $16 = ((($0)) + 36|0);\n $17 = HEAP32[$16>>2]|0;\n _free($17);\n $18 = ((($0)) + 152|0);\n $19 = HEAP32[$18>>2]|0;\n _free($19);\n $20 = ((($0)) + 160|0);\n $21 = HEAP32[$20>>2]|0;\n _free($21);\n _memset(($0|0),0,180)|0;\n return;\n}\nfunction __ve_envelope_search($0) {\n $0 = $0|0;\n var $$ = 0, $$0105116 = 0, $$0106119 = 0, $$0108115 = 0, $$110 = 0, $$1107112 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;\n var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 4|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($2)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($4)) + 2868|0);\n $6 = ((($0)) + 104|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($8)) + 168|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ((($8)) + 8|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = (($10|0) / ($12|0))&-1;\n $14 = ((($0)) + 20|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = (($15|0) / ($12|0))&-1;\n $17 = (($16) + -4)|0;\n $18 = ($13|0)>(0);\n $$ = $18 ? $13 : 0;\n $19 = (($16) + 2)|0;\n $20 = ((($8)) + 164|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = ($19|0)>($21|0);\n $23 = ((($8)) + 160|0);\n if ($22) {\n  $24 = $19 << 2;\n  HEAP32[$20>>2] = $19;\n  $25 = HEAP32[$23>>2]|0;\n  $26 = (_realloc($25,$24)|0);\n  HEAP32[$23>>2] = $26;\n }\n $27 = ($$|0)<($17|0);\n if ($27) {\n  $28 = ((($8)) + 156|0);\n  $29 = ((($0)) + 8|0);\n  $30 = ((($8)) + 40|0);\n  $31 = ((($8)) + 152|0);\n  $$0106119 = $$;\n  while(1) {\n   $32 = HEAP32[$28>>2]|0;\n   $33 = (($32) + 1)|0;\n   $34 = ($32|0)>(23);\n   $$110 = $34 ? 24 : $33;\n   HEAP32[$28>>2] = $$110;\n   $35 = HEAP32[$8>>2]|0;\n   $36 = ($35|0)>(0);\n   if ($36) {\n    $$0105116 = 0;$$0108115 = 0;\n    while(1) {\n     $40 = HEAP32[$29>>2]|0;\n     $41 = (($40) + ($$0105116<<2)|0);\n     $42 = HEAP32[$41>>2]|0;\n     $43 = HEAP32[$11>>2]|0;\n     $44 = Math_imul($43, $$0106119)|0;\n     $45 = (($42) + ($44<<2)|0);\n     $46 = HEAP32[$31>>2]|0;\n     $47 = ($$0105116*7)|0;\n     $48 = (($46) + (($47*144)|0)|0);\n     $49 = (__ve_amp($8,$5,$45,$30,$48)|0);\n     $50 = $49 | $$0108115;\n     $51 = (($$0105116) + 1)|0;\n     $52 = HEAP32[$8>>2]|0;\n     $53 = ($51|0)<($52|0);\n     if ($53) {\n      $$0105116 = $51;$$0108115 = $50;\n     } else {\n      break;\n     }\n    }\n    $54 = HEAP32[$23>>2]|0;\n    $55 = (($$0106119) + 2)|0;\n    $56 = (($54) + ($55<<2)|0);\n    HEAP32[$56>>2] = 0;\n    $57 = $50 & 1;\n    $58 = ($57|0)==(0);\n    if (!($58)) {\n     $59 = (($$0106119) + 1)|0;\n     $60 = (($54) + ($59<<2)|0);\n     $61 = (($54) + ($$0106119<<2)|0);\n     HEAP32[$61>>2] = 1;\n     HEAP32[$60>>2] = 1;\n    }\n    $62 = $50 & 2;\n    $63 = ($62|0)==(0);\n    if (!($63)) {\n     $64 = (($54) + ($$0106119<<2)|0);\n     HEAP32[$64>>2] = 1;\n     $65 = ($$0106119|0)>(0);\n     if ($65) {\n      $66 = (($$0106119) + -1)|0;\n      $67 = (($54) + ($66<<2)|0);\n      HEAP32[$67>>2] = 1;\n     }\n    }\n    $68 = $50 & 4;\n    $69 = ($68|0)==(0);\n    if (!($69)) {\n     HEAP32[$28>>2] = -1;\n    }\n   } else {\n    $37 = HEAP32[$23>>2]|0;\n    $38 = (($$0106119) + 2)|0;\n    $39 = (($37) + ($38<<2)|0);\n    HEAP32[$39>>2] = 0;\n   }\n   $70 = (($$0106119) + 1)|0;\n   $71 = ($70|0)<($17|0);\n   if ($71) {\n    $$0106119 = $70;\n   } else {\n    break;\n   }\n  }\n }\n $72 = HEAP32[$11>>2]|0;\n $73 = Math_imul($72, $17)|0;\n HEAP32[$9>>2] = $73;\n $74 = ((($0)) + 48|0);\n $75 = HEAP32[$74>>2]|0;\n $76 = ((($0)) + 40|0);\n $77 = HEAP32[$76>>2]|0;\n $78 = (($4) + ($77<<2)|0);\n $79 = HEAP32[$78>>2]|0;\n $80 = (($79|0) / 4)&-1;\n $81 = (($80) + ($75))|0;\n $82 = ((($4)) + 4|0);\n $83 = HEAP32[$82>>2]|0;\n $84 = (($83|0) / 2)&-1;\n $85 = (($81) + ($84))|0;\n $86 = HEAP32[$4>>2]|0;\n $87 = (($86|0) / 4)&-1;\n $88 = (($85) + ($87))|0;\n $89 = ((($8)) + 176|0);\n $90 = HEAP32[$89>>2]|0;\n $91 = (($73) - ($72))|0;\n $92 = ($90|0)<($91|0);\n if ($92) {\n  $$1107112 = $90;\n } else {\n  $103 = -1;\n  return ($103|0);\n }\n while(1) {\n  $95 = ($$1107112|0)<($88|0);\n  if (!($95)) {\n   $103 = 1;\n   label = 21;\n   break;\n  }\n  HEAP32[$89>>2] = $$1107112;\n  $96 = HEAP32[$23>>2]|0;\n  $97 = (($$1107112|0) / ($72|0))&-1;\n  $98 = (($96) + ($97<<2)|0);\n  $99 = HEAP32[$98>>2]|0;\n  $100 = ($99|0)!=(0);\n  $101 = ($$1107112|0)>($75|0);\n  $or$cond = $101 & $100;\n  $93 = (($72) + ($$1107112))|0;\n  if ($or$cond) {\n   label = 20;\n   break;\n  }\n  $94 = ($93|0)<($91|0);\n  if ($94) {\n   $$1107112 = $93;\n  } else {\n   $103 = -1;\n   label = 21;\n   break;\n  }\n }\n if ((label|0) == 20) {\n  $102 = ((($8)) + 172|0);\n  HEAP32[$102>>2] = $$1107112;\n  $103 = 0;\n  return ($103|0);\n }\n else if ((label|0) == 21) {\n  return ($103|0);\n }\n return (0)|0;\n}\nfunction __ve_amp($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0, $$$0$us = 0.0, $$0187217$us = 0.0, $$0188$lcssa = 0, $$0188226 = 0, $$0188226$us = 0, $$0189231 = 0, $$0192224 = 0, $$0192224$us = 0, $$0196 = 0.0, $$0198$lcssa = 0.0, $$0198$lcssa$us = 0.0, $$0198213 = 0.0, $$0198213$us = 0.0, $$0218$us = 0.0, $$1 = 0, $$1$us = 0, $$1190228 = 0, $$1194215$us = 0, $$1197 = 0.0;\n var $$2 = 0, $$2$us = 0, $$200 = 0, $$200$us = 0, $$200$v = 0, $$200$v$us = 0, $$201 = 0.0, $$201$us = 0.0, $$202$us = 0, $$202$v$us = 0, $$203 = 0, $$203$us = 0, $$2191214 = 0, $$2191214$us = 0, $$3216$us = 0, $$alloca_mul = 0, $$phi$trans$insert = 0, $$pre = 0.0, $$sink = 0.0, $$sink211 = 0.0;\n var $$sroa$0$0$v = 0.0, $$sroa$0$1$v = 0.0, $$sroa$0206$1$in227 = 0.0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0;\n var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0;\n var $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;\n var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0, $168 = 0, $169 = 0;\n var $17 = 0.0, $170 = 0, $171 = 0.0, $172 = 0, $173 = 0.0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0, $187 = 0.0;\n var $188 = 0.0, $189 = 0, $19 = 0.0, $190 = 0, $191 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0;\n var $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0;\n var $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0.0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond238 = 0, $exitcond239 = 0, $exitcond240 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ((($0)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ((($0)) + 12|0);\n $8 = +HEAPF32[$7>>2];\n $9 = $6 << 2;\n $$alloca_mul = $9;\n $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $11 = ((($0)) + 156|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ($12|0)>(5);\n $14 = (($12|0) / 2)&-1;\n $15 = $13 ? $14 : 2;\n $16 = ((($1)) + 60|0);\n $17 = +HEAPF32[$16>>2];\n $18 = (($14) + -2)|0;\n $19 = (+($18|0));\n $20 = $17 - $19;\n $21 = $20 < 0.0;\n $$0196 = $21 ? 0.0 : $20;\n $22 = $$0196 > $17;\n $$1197 = $22 ? $17 : $$0196;\n $23 = ($6|0)>(0);\n if ($23) {\n  $24 = ((($0)) + 36|0);\n  $25 = HEAP32[$24>>2]|0;\n  $$0189231 = 0;\n  while(1) {\n   $26 = (($2) + ($$0189231<<2)|0);\n   $27 = +HEAPF32[$26>>2];\n   $28 = (($25) + ($$0189231<<2)|0);\n   $29 = +HEAPF32[$28>>2];\n   $30 = $29 * $27;\n   $31 = (($10) + ($$0189231<<2)|0);\n   HEAPF32[$31>>2] = $30;\n   $32 = (($$0189231) + 1)|0;\n   $exitcond240 = ($32|0)==($6|0);\n   if ($exitcond240) {\n    break;\n   } else {\n    $$0189231 = $32;\n   }\n  }\n }\n $33 = ((($0)) + 16|0);\n _mdct_forward($33,$10,$10);\n $34 = +HEAPF32[$10>>2];\n $35 = $34 * $34;\n $36 = $35;\n $37 = ((($10)) + 4|0);\n $38 = +HEAPF32[$37>>2];\n $39 = $38;\n $40 = $39 * $39;\n $41 = $40 * 0.69999999999999996;\n $42 = $41 + $36;\n $43 = ((($10)) + 8|0);\n $44 = +HEAPF32[$43>>2];\n $45 = $44;\n $46 = $45 * $45;\n $47 = $46 * 0.20000000000000001;\n $48 = $42 + $47;\n $49 = $48;\n $50 = ((($4)) + 140|0);\n $51 = HEAP32[$50>>2]|0;\n $52 = ($51|0)==(0);\n $53 = ((($4)) + 136|0);\n $54 = +HEAPF32[$53>>2];\n $55 = $49 + $54;\n $56 = ((($4)) + 132|0);\n if ($52) {\n  $$sink = $49;$$sink211 = $55;\n } else {\n  $57 = +HEAPF32[$56>>2];\n  $58 = $57 + $49;\n  $$sink = $55;$$sink211 = $58;\n }\n HEAPF32[$56>>2] = $$sink211;\n HEAPF32[$53>>2] = $$sink;\n $59 = (((($4)) + 72|0) + ($51<<2)|0);\n $60 = +HEAPF32[$59>>2];\n $61 = $$sink211 - $60;\n HEAPF32[$56>>2] = $61;\n HEAPF32[$59>>2] = $49;\n $62 = HEAP32[$50>>2]|0;\n $63 = (($62) + 1)|0;\n $64 = ($62|0)>(13);\n $$ = $64 ? 0 : $63;\n HEAP32[$50>>2] = $$;\n $65 = (($6|0) / 2)&-1;\n $66 = ($6|0)>(1);\n L9: do {\n  if ($66) {\n   $67 = $$sink211 * 0.0625;\n   $68 = (HEAPF32[tempDoublePtr>>2]=$67,HEAP32[tempDoublePtr>>2]|0);\n   $69 = $68 & 2147483647;\n   $70 = (+($69>>>0));\n   $71 = $70 * 7.1771142984289327E-7;\n   $72 = $71 + -764.6162109375;\n   $73 = $72;\n   $74 = $73 * 0.5;\n   $75 = $74 + -15.0;\n   $76 = $75;\n   $$1190228 = 0;$$sroa$0206$1$in227 = $76;$130 = $34;\n   while(1) {\n    $129 = $130 * $130;\n    $131 = $$1190228 | 1;\n    $132 = (($10) + ($131<<2)|0);\n    $133 = +HEAPF32[$132>>2];\n    $134 = $133 * $133;\n    $135 = $134 + $129;\n    $136 = (HEAPF32[tempDoublePtr>>2]=$135,HEAP32[tempDoublePtr>>2]|0);\n    $137 = $136 & 2147483647;\n    $138 = (+($137>>>0));\n    $139 = $138 * 3.5885571492144663E-7;\n    $140 = $139 + -382.30810546875;\n    $141 = $140 < $$sroa$0206$1$in227;\n    $$sroa$0$0$v = $141 ? $$sroa$0206$1$in227 : $140;\n    $142 = $$sroa$0$0$v < $8;\n    $$sroa$0$1$v = $142 ? $8 : $$sroa$0$0$v;\n    $143 = $$1190228 >> 1;\n    $144 = (($10) + ($143<<2)|0);\n    HEAPF32[$144>>2] = $$sroa$0$1$v;\n    $145 = (($$1190228) + 2)|0;\n    $146 = ($145|0)<($65|0);\n    if (!($146)) {\n     break L9;\n    }\n    $147 = $$sroa$0206$1$in227 + -8.0;\n    $$phi$trans$insert = (($10) + ($145<<2)|0);\n    $$pre = +HEAPF32[$$phi$trans$insert>>2];\n    $$1190228 = $145;$$sroa$0206$1$in227 = $147;$130 = $$pre;\n   }\n  }\n } while(0);\n $77 = ($15|0)>(0);\n if ($77) {\n  $$0188226$us = 0;$$0192224$us = 0;\n } else {\n  $$0188226 = 0;$$0192224 = 0;\n  while(1) {\n   $148 = (((($3) + ($$0192224<<4)|0)) + 4|0);\n   $149 = HEAP32[$148>>2]|0;\n   $150 = ($149|0)>(0);\n   if ($150) {\n    $151 = (($3) + ($$0192224<<4)|0);\n    $152 = HEAP32[$151>>2]|0;\n    $153 = (((($3) + ($$0192224<<4)|0)) + 8|0);\n    $154 = HEAP32[$153>>2]|0;\n    $$0198213 = 0.0;$$2191214 = 0;\n    while(1) {\n     $155 = (($152) + ($$2191214))|0;\n     $156 = (($10) + ($155<<2)|0);\n     $157 = +HEAPF32[$156>>2];\n     $158 = (($154) + ($$2191214<<2)|0);\n     $159 = +HEAPF32[$158>>2];\n     $160 = $159 * $157;\n     $161 = $160 + $$0198213;\n     $162 = (($$2191214) + 1)|0;\n     $163 = ($162|0)<($149|0);\n     if ($163) {\n      $$0198213 = $161;$$2191214 = $162;\n     } else {\n      $$0198$lcssa = $161;\n      break;\n     }\n    }\n   } else {\n    $$0198$lcssa = 0.0;\n   }\n   $164 = (((($3) + ($$0192224<<4)|0)) + 12|0);\n   $165 = +HEAPF32[$164>>2];\n   $166 = $165 * $$0198$lcssa;\n   $167 = (((($4) + (($$0192224*144)|0)|0)) + 68|0);\n   $168 = HEAP32[$167>>2]|0;\n   $169 = ($168|0)<(1);\n   $$200$v = $169 ? 16 : -1;\n   $$200 = (($$200$v) + ($168))|0;\n   $170 = ((($4) + (($$0192224*144)|0)|0) + ($$200<<2)|0);\n   $171 = +HEAPF32[$170>>2];\n   $172 = $166 < $171;\n   $173 = $172 ? $171 : $166;\n   $174 = $166 > $171;\n   $$201 = $174 ? $171 : $166;\n   $175 = $$201 + -99999.0;\n   $176 = $173 + 99999.0;\n   $177 = ((($4) + (($$0192224*144)|0)|0) + ($168<<2)|0);\n   HEAPF32[$177>>2] = $166;\n   $178 = HEAP32[$167>>2]|0;\n   $179 = (($178) + 1)|0;\n   $180 = ($178|0)>(15);\n   $$203 = $180 ? 0 : $179;\n   HEAP32[$167>>2] = $$203;\n   $181 = (((($1)) + 4|0) + ($$0192224<<2)|0);\n   $182 = +HEAPF32[$181>>2];\n   $183 = $182 + $$1197;\n   $184 = $176 > $183;\n   $185 = $$0188226 | 5;\n   $$1 = $184 ? $185 : $$0188226;\n   $186 = (((($1)) + 32|0) + ($$0192224<<2)|0);\n   $187 = +HEAPF32[$186>>2];\n   $188 = $187 - $$1197;\n   $189 = $175 < $188;\n   $190 = $$1 | 2;\n   $$2 = $189 ? $190 : $$1;\n   $191 = (($$0192224) + 1)|0;\n   $exitcond239 = ($191|0)==(7);\n   if ($exitcond239) {\n    $$0188$lcssa = $$2;\n    break;\n   } else {\n    $$0188226 = $$2;$$0192224 = $191;\n   }\n  }\n  STACKTOP = sp;return ($$0188$lcssa|0);\n }\n while(1) {\n  $78 = (((($3) + ($$0192224$us<<4)|0)) + 4|0);\n  $79 = HEAP32[$78>>2]|0;\n  $80 = ($79|0)>(0);\n  if ($80) {\n   $109 = (($3) + ($$0192224$us<<4)|0);\n   $99 = HEAP32[$109>>2]|0;\n   $110 = (((($3) + ($$0192224$us<<4)|0)) + 8|0);\n   $103 = HEAP32[$110>>2]|0;\n   $$0198213$us = 0.0;$$2191214$us = 0;\n   while(1) {\n    $98 = (($99) + ($$2191214$us))|0;\n    $100 = (($10) + ($98<<2)|0);\n    $101 = +HEAPF32[$100>>2];\n    $102 = (($103) + ($$2191214$us<<2)|0);\n    $104 = +HEAPF32[$102>>2];\n    $105 = $104 * $101;\n    $106 = $105 + $$0198213$us;\n    $107 = (($$2191214$us) + 1)|0;\n    $108 = ($107|0)<($79|0);\n    if ($108) {\n     $$0198213$us = $106;$$2191214$us = $107;\n    } else {\n     $$0198$lcssa$us = $106;\n     break;\n    }\n   }\n  } else {\n   $$0198$lcssa$us = 0.0;\n  }\n  $81 = (((($3) + ($$0192224$us<<4)|0)) + 12|0);\n  $82 = +HEAPF32[$81>>2];\n  $83 = $82 * $$0198$lcssa$us;\n  $84 = (((($4) + (($$0192224$us*144)|0)|0)) + 68|0);\n  $85 = HEAP32[$84>>2]|0;\n  $86 = ($85|0)<(1);\n  $$200$v$us = $86 ? 16 : -1;\n  $$200$us = (($$200$v$us) + ($85))|0;\n  $87 = ((($4) + (($$0192224$us*144)|0)|0) + ($$200$us<<2)|0);\n  $88 = +HEAPF32[$87>>2];\n  $89 = $83 < $88;\n  $90 = $83 > $88;\n  $$0187217$us = -99999.0;$$0218$us = 99999.0;$$1194215$us = $$200$us;$$3216$us = 0;\n  while(1) {\n   $91 = ($$1194215$us|0)<(1);\n   $$202$v$us = $91 ? 16 : -1;\n   $$202$us = (($$202$v$us) + ($$1194215$us))|0;\n   $92 = ((($4) + (($$0192224$us*144)|0)|0) + ($$202$us<<2)|0);\n   $93 = +HEAPF32[$92>>2];\n   $94 = $$0187217$us < $93;\n   $95 = $94 ? $93 : $$0187217$us;\n   $96 = $$0218$us > $93;\n   $$$0$us = $96 ? $93 : $$0218$us;\n   $97 = (($$3216$us) + 1)|0;\n   $exitcond = ($97|0)==($15|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$0187217$us = $95;$$0218$us = $$$0$us;$$1194215$us = $$202$us;$$3216$us = $97;\n   }\n  }\n  $111 = $89 ? $88 : $83;\n  $$201$us = $90 ? $88 : $83;\n  $112 = $$201$us - $$$0$us;\n  $113 = $111 - $95;\n  $114 = ((($4) + (($$0192224$us*144)|0)|0) + ($85<<2)|0);\n  HEAPF32[$114>>2] = $83;\n  $115 = HEAP32[$84>>2]|0;\n  $116 = (($115) + 1)|0;\n  $117 = ($115|0)>(15);\n  $$203$us = $117 ? 0 : $116;\n  HEAP32[$84>>2] = $$203$us;\n  $118 = (((($1)) + 4|0) + ($$0192224$us<<2)|0);\n  $119 = +HEAPF32[$118>>2];\n  $120 = $119 + $$1197;\n  $121 = $113 > $120;\n  $122 = $$0188226$us | 5;\n  $$1$us = $121 ? $122 : $$0188226$us;\n  $123 = (((($1)) + 32|0) + ($$0192224$us<<2)|0);\n  $124 = +HEAPF32[$123>>2];\n  $125 = $124 - $$1197;\n  $126 = $112 < $125;\n  $127 = $$1$us | 2;\n  $$2$us = $126 ? $127 : $$1$us;\n  $128 = (($$0192224$us) + 1)|0;\n  $exitcond238 = ($128|0)==(7);\n  if ($exitcond238) {\n   $$0188$lcssa = $$2$us;\n   break;\n  } else {\n   $$0188226$us = $$2$us;$$0192224$us = $128;\n  }\n }\n STACKTOP = sp;return ($$0188$lcssa|0);\n}\nfunction __ve_envelope_mark($0) {\n $0 = $0|0;\n var $$053 = 0, $$055 = 0, $$057 = 0, $$pn = 0, $$pn56 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 104|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($5)) + 28|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($0)) + 48|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($0)) + 40|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (($7) + ($11<<2)|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (($13|0) / 4)&-1;\n $15 = (($9) - ($14))|0;\n $16 = (($14) + ($9))|0;\n $17 = ($11|0)==(0);\n if ($17) {\n  $28 = HEAP32[$7>>2]|0;\n  $29 = (($28|0) / 4)&-1;\n  $$pn = $29;$$pn56 = $29;\n } else {\n  $18 = ((($0)) + 36|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = (($7) + ($19<<2)|0);\n  $21 = HEAP32[$20>>2]|0;\n  $22 = (($21|0) / 4)&-1;\n  $23 = ((($0)) + 44|0);\n  $24 = HEAP32[$23>>2]|0;\n  $25 = (($7) + ($24<<2)|0);\n  $26 = HEAP32[$25>>2]|0;\n  $27 = (($26|0) / 4)&-1;\n  $$pn = $27;$$pn56 = $22;\n }\n $$053 = (($15) - ($$pn56))|0;\n $$055 = (($16) + ($$pn))|0;\n $30 = ((($3)) + 172|0);\n $31 = HEAP32[$30>>2]|0;\n $32 = ($31|0)>=($$053|0);\n $33 = ($31|0)<($$055|0);\n $or$cond = $32 & $33;\n if ($or$cond) {\n  $46 = 1;\n  return ($46|0);\n }\n $34 = ((($3)) + 8|0);\n $35 = HEAP32[$34>>2]|0;\n $36 = (($$053|0) / ($35|0))&-1;\n $37 = (($$055|0) / ($35|0))&-1;\n $38 = ($36|0)<($37|0);\n if (!($38)) {\n  $46 = 0;\n  return ($46|0);\n }\n $39 = ((($3)) + 160|0);\n $40 = HEAP32[$39>>2]|0;\n $$057 = $36;\n while(1) {\n  $43 = (($40) + ($$057<<2)|0);\n  $44 = HEAP32[$43>>2]|0;\n  $45 = ($44|0)==(0);\n  $41 = (($$057) + 1)|0;\n  if (!($45)) {\n   $46 = 1;\n   label = 9;\n   break;\n  }\n  $42 = ($41|0)<($37|0);\n  if ($42) {\n   $$057 = $41;\n  } else {\n   $46 = 0;\n   label = 9;\n   break;\n  }\n }\n if ((label|0) == 9) {\n  return ($46|0);\n }\n return (0)|0;\n}\nfunction __ve_envelope_shift($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 168|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (($3|0) / ($5|0))&-1;\n $7 = (($6) + 2)|0;\n $8 = (($1|0) / ($5|0))&-1;\n $9 = ((($0)) + 160|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = (($10) + ($8<<2)|0);\n $12 = (($7) - ($8))|0;\n $13 = $12 << 2;\n _memmove(($10|0),($11|0),($13|0))|0;\n $14 = HEAP32[$2>>2]|0;\n $15 = (($14) - ($1))|0;\n HEAP32[$2>>2] = $15;\n $16 = ((($0)) + 172|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ($17|0)>(-1);\n if (!($18)) {\n  $20 = ((($0)) + 176|0);\n  $21 = HEAP32[$20>>2]|0;\n  $22 = (($21) - ($1))|0;\n  HEAP32[$20>>2] = $22;\n  return;\n }\n $19 = (($17) - ($1))|0;\n HEAP32[$16>>2] = $19;\n $20 = ((($0)) + 176|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = (($21) - ($1))|0;\n HEAP32[$20>>2] = $22;\n return;\n}\nfunction _floor1_pack($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$0 = 0, $$06687 = 0, $$06880 = 0, $$07174 = 0, $$088 = 0, $$16783 = 0, $$16975 = 0, $$270$lcssa = 0, $$27073 = 0, $$276 = 0, $$pre = 0, $$pre93 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;\n var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond92 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 836|0);\n $3 = ((($0)) + 840|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = HEAP32[$0>>2]|0;\n _oggpack_write($1,$5,5);\n $6 = HEAP32[$0>>2]|0;\n $7 = ($6|0)>(0);\n if ($7) {\n  $8 = ((($0)) + 4|0);\n  $$06687 = 0;$$088 = -1;\n  while(1) {\n   $14 = (($8) + ($$06687<<2)|0);\n   $15 = HEAP32[$14>>2]|0;\n   _oggpack_write($1,$15,4);\n   $16 = HEAP32[$14>>2]|0;\n   $17 = ($$088|0)<($16|0);\n   $$$0 = $17 ? $16 : $$088;\n   $18 = (($$06687) + 1)|0;\n   $19 = HEAP32[$0>>2]|0;\n   $20 = ($18|0)<($19|0);\n   if ($20) {\n    $$06687 = $18;$$088 = $$$0;\n   } else {\n    break;\n   }\n  }\n  $9 = ($$$0|0)<(0);\n  if (!($9)) {\n   $10 = ((($0)) + 128|0);\n   $11 = ((($0)) + 192|0);\n   $12 = ((($0)) + 256|0);\n   $13 = ((($0)) + 320|0);\n   $$16783 = 0;\n   while(1) {\n    $21 = (($10) + ($$16783<<2)|0);\n    $22 = HEAP32[$21>>2]|0;\n    $23 = (($22) + -1)|0;\n    _oggpack_write($1,$23,3);\n    $24 = (($11) + ($$16783<<2)|0);\n    $25 = HEAP32[$24>>2]|0;\n    _oggpack_write($1,$25,2);\n    $26 = HEAP32[$24>>2]|0;\n    $27 = ($26|0)==(0);\n    if ($27) {\n     $$06880 = 0;\n     label = 8;\n    } else {\n     $28 = (($12) + ($$16783<<2)|0);\n     $29 = HEAP32[$28>>2]|0;\n     _oggpack_write($1,$29,8);\n     $$pre = HEAP32[$24>>2]|0;\n     $30 = ($$pre|0)==(31);\n     if (!($30)) {\n      $$06880 = 0;\n      label = 8;\n     }\n    }\n    if ((label|0) == 8) {\n     while(1) {\n      label = 0;\n      $31 = ((($13) + ($$16783<<5)|0) + ($$06880<<2)|0);\n      $32 = HEAP32[$31>>2]|0;\n      $33 = (($32) + 1)|0;\n      _oggpack_write($1,$33,8);\n      $34 = (($$06880) + 1)|0;\n      $35 = HEAP32[$24>>2]|0;\n      $36 = 1 << $35;\n      $37 = ($34|0)<($36|0);\n      if ($37) {\n       $$06880 = $34;\n       label = 8;\n      } else {\n       break;\n      }\n     }\n    }\n    $38 = (($$16783) + 1)|0;\n    $exitcond92 = ($$16783|0)==($$$0|0);\n    if ($exitcond92) {\n     break;\n    } else {\n     $$16783 = $38;\n    }\n   }\n  }\n }\n $39 = ((($0)) + 832|0);\n $40 = HEAP32[$39>>2]|0;\n $41 = (($40) + -1)|0;\n _oggpack_write($1,$41,2);\n $42 = (($4) + -1)|0;\n $43 = (_ov_ilog($42)|0);\n _oggpack_write($1,$43,4);\n $44 = (_ov_ilog($42)|0);\n $45 = HEAP32[$0>>2]|0;\n $46 = ($45|0)>(0);\n if (!($46)) {\n  return;\n }\n $47 = ((($0)) + 128|0);\n $48 = ((($0)) + 4|0);\n $$07174 = 0;$$16975 = 0;$$276 = 0;$62 = $45;\n while(1) {\n  $49 = (($48) + ($$276<<2)|0);\n  $50 = HEAP32[$49>>2]|0;\n  $51 = (($47) + ($50<<2)|0);\n  $52 = HEAP32[$51>>2]|0;\n  $53 = (($52) + ($$07174))|0;\n  $54 = ($$16975|0)<($53|0);\n  if ($54) {\n   $$27073 = $$16975;\n   while(1) {\n    $55 = (($$27073) + 2)|0;\n    $56 = (($2) + ($55<<2)|0);\n    $57 = HEAP32[$56>>2]|0;\n    _oggpack_write($1,$57,$44);\n    $58 = (($$27073) + 1)|0;\n    $exitcond = ($58|0)==($53|0);\n    if ($exitcond) {\n     break;\n    } else {\n     $$27073 = $58;\n    }\n   }\n   $$pre93 = HEAP32[$0>>2]|0;\n   $$270$lcssa = $53;$61 = $$pre93;\n  } else {\n   $$270$lcssa = $$16975;$61 = $62;\n  }\n  $59 = (($$276) + 1)|0;\n  $60 = ($59|0)<($61|0);\n  if ($60) {\n   $$07174 = $53;$$16975 = $$270$lcssa;$$276 = $59;$62 = $61;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _floor1_unpack($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$0112 = 0, $$0106 = 0, $$0107152 = 0, $$0109144 = 0, $$0112151 = 0, $$0114$lcssa = 0, $$0114138 = 0, $$1108147 = 0, $$1110139 = 0, $$2111$lcssa = 0, $$2111134 = 0, $$2140 = 0, $$3130 = 0, $$4129 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi169Z2D = 0, $$pre$phi171Z2D = 0, $$pre164 = 0, $$pre166 = 0;\n var $$pre167 = 0, $$pre168 = 0, $$pre170 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);\n $2 = sp;\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = (_calloc(1,1120)|0);\n $6 = (_oggpack_read($1,5)|0);\n HEAP32[$5>>2] = $6;\n $7 = ($6|0)>(0);\n L1: do {\n  if ($7) {\n   $8 = ((($5)) + 4|0);\n   $$0107152 = 0;$$0112151 = -1;\n   while(1) {\n    $15 = (_oggpack_read($1,4)|0);\n    $16 = (($8) + ($$0107152<<2)|0);\n    HEAP32[$16>>2] = $15;\n    $17 = ($15|0)<(0);\n    if ($17) {\n     break L1;\n    }\n    $18 = ($$0112151|0)<($15|0);\n    $$$0112 = $18 ? $15 : $$0112151;\n    $19 = (($$0107152) + 1)|0;\n    $20 = HEAP32[$5>>2]|0;\n    $21 = ($19|0)<($20|0);\n    if ($21) {\n     $$0107152 = $19;$$0112151 = $$$0112;\n    } else {\n     break;\n    }\n   }\n   $9 = ($$$0112|0)<(0);\n   if ($9) {\n    label = 18;\n   } else {\n    $10 = ((($5)) + 128|0);\n    $11 = ((($5)) + 192|0);\n    $12 = ((($5)) + 256|0);\n    $13 = ((($4)) + 24|0);\n    $14 = ((($5)) + 320|0);\n    $$1108147 = 0;\n    while(1) {\n     $22 = (_oggpack_read($1,3)|0);\n     $23 = (($22) + 1)|0;\n     $24 = (($10) + ($$1108147<<2)|0);\n     HEAP32[$24>>2] = $23;\n     $25 = (_oggpack_read($1,2)|0);\n     $26 = (($11) + ($$1108147<<2)|0);\n     HEAP32[$26>>2] = $25;\n     $27 = ($25|0)<(0);\n     if ($27) {\n      break L1;\n     }\n     $28 = ($25|0)==(0);\n     $$phi$trans$insert = (($12) + ($$1108147<<2)|0);\n     if ($28) {\n      $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n      $30 = $$pre;\n     } else {\n      $29 = (_oggpack_read($1,8)|0);\n      HEAP32[$$phi$trans$insert>>2] = $29;\n      $30 = $29;\n     }\n     $31 = ($30|0)<(0);\n     if ($31) {\n      break L1;\n     }\n     $32 = HEAP32[$13>>2]|0;\n     $33 = ($30|0)<($32|0);\n     if (!($33)) {\n      break L1;\n     }\n     $34 = HEAP32[$26>>2]|0;\n     $35 = ($34|0)==(31);\n     if (!($35)) {\n      $$0109144 = 0;\n      while(1) {\n       $40 = (_oggpack_read($1,8)|0);\n       $41 = (($40) + -1)|0;\n       $42 = ((($14) + ($$1108147<<5)|0) + ($$0109144<<2)|0);\n       HEAP32[$42>>2] = $41;\n       $43 = ($40|0)<(0);\n       if ($43) {\n        break L1;\n       }\n       $44 = HEAP32[$13>>2]|0;\n       $45 = ($40|0)>($44|0);\n       $38 = (($$0109144) + 1)|0;\n       if ($45) {\n        break L1;\n       }\n       $36 = HEAP32[$26>>2]|0;\n       $37 = 1 << $36;\n       $39 = ($38|0)<($37|0);\n       if ($39) {\n        $$0109144 = $38;\n       } else {\n        break;\n       }\n      }\n     }\n     $46 = (($$1108147) + 1)|0;\n     $47 = ($$1108147|0)<($$$0112|0);\n     if ($47) {\n      $$1108147 = $46;\n     } else {\n      label = 18;\n      break;\n     }\n    }\n   }\n  } else {\n   label = 18;\n  }\n } while(0);\n L23: do {\n  if ((label|0) == 18) {\n   $48 = (_oggpack_read($1,2)|0);\n   $49 = (($48) + 1)|0;\n   $50 = ((($5)) + 832|0);\n   HEAP32[$50>>2] = $49;\n   $51 = (_oggpack_read($1,4)|0);\n   $52 = ($51|0)<(0);\n   if (!($52)) {\n    $53 = HEAP32[$5>>2]|0;\n    $54 = ($53|0)>(0);\n    if ($54) {\n     $55 = ((($5)) + 128|0);\n     $56 = ((($5)) + 4|0);\n     $57 = ((($5)) + 836|0);\n     $58 = 1 << $51;\n     $$0114138 = 0;$$1110139 = 0;$$2140 = 0;$92 = $53;\n     while(1) {\n      $59 = (($56) + ($$2140<<2)|0);\n      $60 = HEAP32[$59>>2]|0;\n      $61 = (($55) + ($60<<2)|0);\n      $62 = HEAP32[$61>>2]|0;\n      $63 = (($62) + ($$0114138))|0;\n      $64 = ($63|0)>(63);\n      if ($64) {\n       break L23;\n      }\n      $65 = ($$1110139|0)<($63|0);\n      if ($65) {\n       $$2111134 = $$1110139;\n       while(1) {\n        $66 = (_oggpack_read($1,$51)|0);\n        $67 = (($$2111134) + 2)|0;\n        $68 = (($57) + ($67<<2)|0);\n        HEAP32[$68>>2] = $66;\n        $69 = ($66|0)>(-1);\n        $70 = ($66|0)<($58|0);\n        $or$cond = $69 & $70;\n        if (!($or$cond)) {\n         break L23;\n        }\n        $71 = (($$2111134) + 1)|0;\n        $72 = ($71|0)<($63|0);\n        if ($72) {\n         $$2111134 = $71;\n        } else {\n         break;\n        }\n       }\n       $$pre164 = HEAP32[$5>>2]|0;\n       $$2111$lcssa = $71;$75 = $$pre164;\n      } else {\n       $$2111$lcssa = $$1110139;$75 = $92;\n      }\n      $73 = (($$2140) + 1)|0;\n      $74 = ($73|0)<($75|0);\n      if ($74) {\n       $$0114138 = $63;$$1110139 = $$2111$lcssa;$$2140 = $73;$92 = $75;\n      } else {\n       $$0114$lcssa = $63;$$pre$phi169Z2D = $57;$$pre$phi171Z2D = $58;\n       break;\n      }\n     }\n    } else {\n     $$pre168 = ((($5)) + 836|0);\n     $$pre170 = 1 << $51;\n     $$0114$lcssa = 0;$$pre$phi169Z2D = $$pre168;$$pre$phi171Z2D = $$pre170;\n    }\n    HEAP32[$$pre$phi169Z2D>>2] = 0;\n    $76 = ((($5)) + 840|0);\n    HEAP32[$76>>2] = $$pre$phi171Z2D;\n    $77 = (($$0114$lcssa) + 2)|0;\n    $78 = ($$0114$lcssa|0)>(-2);\n    if ($78) {\n     $$3130 = 0;\n     while(1) {\n      $79 = (($$pre$phi169Z2D) + ($$3130<<2)|0);\n      $80 = (($2) + ($$3130<<2)|0);\n      HEAP32[$80>>2] = $79;\n      $81 = (($$3130) + 1)|0;\n      $82 = ($81|0)<($77|0);\n      if ($82) {\n       $$3130 = $81;\n      } else {\n       break;\n      }\n     }\n    }\n    _qsort($2,$77,4,28);\n    $83 = ($77|0)>(1);\n    L43: do {\n     if ($83) {\n      $$pre166 = HEAP32[$2>>2]|0;\n      $$pre167 = HEAP32[$$pre166>>2]|0;\n      $$4129 = 1;$89 = $$pre167;\n      while(1) {\n       $86 = (($2) + ($$4129<<2)|0);\n       $87 = HEAP32[$86>>2]|0;\n       $88 = HEAP32[$87>>2]|0;\n       $90 = ($89|0)==($88|0);\n       $84 = (($$4129) + 1)|0;\n       if ($90) {\n        break;\n       }\n       $85 = ($84|0)<($77|0);\n       if ($85) {\n        $$4129 = $84;$89 = $88;\n       } else {\n        break L43;\n       }\n      }\n      $91 = ($5|0)==(0|0);\n      if ($91) {\n       $$0106 = 0;\n      } else {\n       break L23;\n      }\n      STACKTOP = sp;return ($$0106|0);\n     }\n    } while(0);\n    $$0106 = $5;\n    STACKTOP = sp;return ($$0106|0);\n   }\n  }\n } while(0);\n _free($5);\n $$0106 = 0;\n STACKTOP = sp;return ($$0106|0);\n}\nfunction _floor1_look($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0101118 = 0, $$0102117 = 0, $$0104116 = 0, $$0106115 = 0, $$0108114 = 0, $$0110$lcssa142144146149 = 0, $$0110$lcssa143 = 0, $$0110135 = 0, $$0136 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$1109 = 0, $$1131 = 0, $$2128 = 0, $$3126 = 0, $$4123 = 0, $$5120 = 0, $$sink = 0, $10 = 0;\n var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;\n var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond141 = 0, $indvars$iv = 0, $indvars$iv$next = 0, $or$cond = 0, $or$cond111 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);\n $2 = sp;\n $3 = (_calloc(1,1312)|0);\n $4 = ((($3)) + 1296|0);\n HEAP32[$4>>2] = $1;\n $5 = ((($1)) + 836|0);\n $6 = ((($1)) + 840|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($3)) + 1288|0);\n HEAP32[$8>>2] = $7;\n $9 = HEAP32[$1>>2]|0;\n $10 = ($9|0)>(0);\n if ($10) {\n  $12 = ((($1)) + 128|0);\n  $13 = ((($1)) + 4|0);\n  $$0110135 = 0;$$0136 = 0;\n  while(1) {\n   $14 = (($13) + ($$0136<<2)|0);\n   $15 = HEAP32[$14>>2]|0;\n   $16 = (($12) + ($15<<2)|0);\n   $17 = HEAP32[$16>>2]|0;\n   $18 = (($17) + ($$0110135))|0;\n   $19 = (($$0136) + 1)|0;\n   $20 = ($19|0)<($9|0);\n   if ($20) {\n    $$0110135 = $18;$$0136 = $19;\n   } else {\n    break;\n   }\n  }\n  $21 = (($18) + 2)|0;\n  $22 = ((($3)) + 1284|0);\n  HEAP32[$22>>2] = $21;\n  $23 = ($18|0)>(-2);\n  if ($23) {\n   $$0110$lcssa143 = $18;$28 = $21;\n   label = 7;\n  } else {\n   _qsort($2,$21,4,28);\n   $$0110$lcssa142144146149 = $18;\n  }\n } else {\n  $11 = ((($3)) + 1284|0);\n  HEAP32[$11>>2] = 2;\n  $$0110$lcssa143 = 0;$28 = 2;\n  label = 7;\n }\n if ((label|0) == 7) {\n  $$1131 = 0;\n  while(1) {\n   $24 = (($5) + ($$1131<<2)|0);\n   $25 = (($2) + ($$1131<<2)|0);\n   HEAP32[$25>>2] = $24;\n   $26 = (($$1131) + 1)|0;\n   $27 = ($26|0)<($28|0);\n   if ($27) {\n    $$1131 = $26;\n   } else {\n    break;\n   }\n  }\n  _qsort($2,$28,4,28);\n  $29 = $5;\n  $30 = ((($3)) + 260|0);\n  $$2128 = 0;\n  while(1) {\n   $33 = (($2) + ($$2128<<2)|0);\n   $34 = HEAP32[$33>>2]|0;\n   $35 = (($34) - ($29))|0;\n   $36 = $35 >> 2;\n   $37 = (($30) + ($$2128<<2)|0);\n   HEAP32[$37>>2] = $36;\n   $38 = (($$2128) + 1)|0;\n   $39 = ($38|0)<($28|0);\n   if ($39) {\n    $$2128 = $38;\n   } else {\n    break;\n   }\n  }\n  $31 = ((($3)) + 520|0);\n  $32 = ((($3)) + 260|0);\n  $$3126 = 0;\n  while(1) {\n   $41 = (($32) + ($$3126<<2)|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = (($31) + ($42<<2)|0);\n   HEAP32[$43>>2] = $$3126;\n   $44 = (($$3126) + 1)|0;\n   $45 = ($44|0)<($28|0);\n   if ($45) {\n    $$3126 = $44;\n   } else {\n    break;\n   }\n  }\n  $40 = ((($3)) + 260|0);\n  $$4123 = 0;\n  while(1) {\n   $46 = (($40) + ($$4123<<2)|0);\n   $47 = HEAP32[$46>>2]|0;\n   $48 = (($5) + ($47<<2)|0);\n   $49 = HEAP32[$48>>2]|0;\n   $50 = (($3) + ($$4123<<2)|0);\n   HEAP32[$50>>2] = $49;\n   $51 = (($$4123) + 1)|0;\n   $52 = ($51|0)<($28|0);\n   if ($52) {\n    $$4123 = $51;\n   } else {\n    $$0110$lcssa142144146149 = $$0110$lcssa143;\n    break;\n   }\n  }\n }\n $53 = ((($1)) + 832|0);\n $54 = HEAP32[$53>>2]|0;\n switch ($54|0) {\n case 1:  {\n  $$sink = 256;\n  label = 19;\n  break;\n }\n case 2:  {\n  $$sink = 128;\n  label = 19;\n  break;\n }\n case 3:  {\n  $$sink = 86;\n  label = 19;\n  break;\n }\n case 4:  {\n  $$sink = 64;\n  label = 19;\n  break;\n }\n default: {\n }\n }\n if ((label|0) == 19) {\n  $55 = ((($3)) + 1292|0);\n  HEAP32[$55>>2] = $$sink;\n }\n $56 = ($$0110$lcssa142144146149|0)>(0);\n if (!($56)) {\n  STACKTOP = sp;return ($3|0);\n }\n $57 = ((($3)) + 1032|0);\n $58 = ((($3)) + 780|0);\n $$5120 = 0;$indvars$iv = 2;\n while(1) {\n  $59 = (($$5120) + 2)|0;\n  $60 = (($5) + ($59<<2)|0);\n  $61 = HEAP32[$60>>2]|0;\n  $62 = HEAP32[$8>>2]|0;\n  $$0101118 = 0;$$0102117 = $62;$$0104116 = 0;$$0106115 = 1;$$0108114 = 0;\n  while(1) {\n   $63 = (($5) + ($$0101118<<2)|0);\n   $64 = HEAP32[$63>>2]|0;\n   $65 = ($64|0)>($$0104116|0);\n   $66 = ($64|0)<($61|0);\n   $or$cond = $65 & $66;\n   $$1109 = $or$cond ? $$0101118 : $$0108114;\n   $$1105 = $or$cond ? $64 : $$0104116;\n   $67 = ($64|0)<($$0102117|0);\n   $68 = ($64|0)>($61|0);\n   $or$cond111 = $67 & $68;\n   $$1107 = $or$cond111 ? $$0101118 : $$0106115;\n   $$1103 = $or$cond111 ? $64 : $$0102117;\n   $69 = (($$0101118) + 1)|0;\n   $exitcond = ($69|0)==($indvars$iv|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$0101118 = $69;$$0102117 = $$1103;$$0104116 = $$1105;$$0106115 = $$1107;$$0108114 = $$1109;\n   }\n  }\n  $70 = (($57) + ($$5120<<2)|0);\n  HEAP32[$70>>2] = $$1109;\n  $71 = (($58) + ($$5120<<2)|0);\n  HEAP32[$71>>2] = $$1107;\n  $72 = (($$5120) + 1)|0;\n  $indvars$iv$next = (($indvars$iv) + 1)|0;\n  $exitcond141 = ($72|0)==($$0110$lcssa142144146149|0);\n  if ($exitcond141) {\n   break;\n  } else {\n   $$5120 = $72;$indvars$iv = $indvars$iv$next;\n  }\n }\n STACKTOP = sp;return ($3|0);\n}\nfunction _floor1_free_info($0) {\n $0 = $0|0;\n var $1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if (!($1)) {\n  _free($0);\n }\n return;\n}\nfunction _floor1_free_look($0) {\n $0 = $0|0;\n var $1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if (!($1)) {\n  _free($0);\n }\n return;\n}\nfunction _floor1_inverse1($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$0$i = 0, $$0$p$i = 0, $$0143165 = 0, $$0145163 = 0, $$0147161 = 0, $$1 = 0, $$1144159 = 0, $$1151$ph = 0, $$1151160 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;\n var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0;\n var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ispos$i = 0, $neg$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($1)) + 1296|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 64|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($5)) + 4|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($7)) + 28|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($9)) + 2848|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($0)) + 4|0);\n $13 = (_oggpack_read($12,1)|0);\n $14 = ($13|0)==(1);\n if (!($14)) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $15 = ((($1)) + 1284|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = $16 << 2;\n $18 = (__vorbis_block_alloc($0,$17)|0);\n $19 = ((($1)) + 1292|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = (($20) + -1)|0;\n $22 = (_ov_ilog($21)|0);\n $23 = (_oggpack_read($12,$22)|0);\n HEAP32[$18>>2] = $23;\n $24 = HEAP32[$19>>2]|0;\n $25 = (($24) + -1)|0;\n $26 = (_ov_ilog($25)|0);\n $27 = (_oggpack_read($12,$26)|0);\n $28 = ((($18)) + 4|0);\n HEAP32[$28>>2] = $27;\n $29 = HEAP32[$3>>2]|0;\n $30 = ($29|0)>(0);\n L4: do {\n  if ($30) {\n   $$0143165 = 0;$$0145163 = 2;\n   L5: while(1) {\n    $35 = (((($3)) + 4|0) + ($$0143165<<2)|0);\n    $36 = HEAP32[$35>>2]|0;\n    $37 = (((($3)) + 128|0) + ($36<<2)|0);\n    $38 = HEAP32[$37>>2]|0;\n    $39 = (((($3)) + 192|0) + ($36<<2)|0);\n    $40 = HEAP32[$39>>2]|0;\n    $41 = 1 << $40;\n    $42 = ($40|0)==(0);\n    if ($42) {\n     $$1151$ph = 0;\n    } else {\n     $43 = (((($3)) + 256|0) + ($36<<2)|0);\n     $44 = HEAP32[$43>>2]|0;\n     $45 = (($11) + (($44*56)|0)|0);\n     $46 = (_vorbis_book_decode($45,$12)|0);\n     $47 = ($46|0)==(-1);\n     if ($47) {\n      $$1 = 0;\n      label = 25;\n      break;\n     } else {\n      $$1151$ph = $46;\n     }\n    }\n    $48 = ($38|0)>(0);\n    if ($48) {\n     $49 = (($41) + -1)|0;\n     $$0147161 = 0;$$1151160 = $$1151$ph;\n     while(1) {\n      $50 = $$1151160 & $49;\n      $51 = ((((($3)) + 320|0) + ($36<<5)|0) + ($50<<2)|0);\n      $52 = HEAP32[$51>>2]|0;\n      $53 = $$1151160 >> $40;\n      $54 = ($52|0)>(-1);\n      if ($54) {\n       $55 = (($11) + (($52*56)|0)|0);\n       $56 = (_vorbis_book_decode($55,$12)|0);\n       $57 = (($$0147161) + ($$0145163))|0;\n       $58 = (($18) + ($57<<2)|0);\n       HEAP32[$58>>2] = $56;\n       $59 = ($56|0)==(-1);\n       if ($59) {\n        $$1 = 0;\n        label = 25;\n        break L5;\n       }\n      } else {\n       $60 = (($$0147161) + ($$0145163))|0;\n       $61 = (($18) + ($60<<2)|0);\n       HEAP32[$61>>2] = 0;\n      }\n      $62 = (($$0147161) + 1)|0;\n      $63 = ($62|0)<($38|0);\n      if ($63) {\n       $$0147161 = $62;$$1151160 = $53;\n      } else {\n       break;\n      }\n     }\n    }\n    $64 = (($38) + ($$0145163))|0;\n    $65 = (($$0143165) + 1)|0;\n    $66 = HEAP32[$3>>2]|0;\n    $67 = ($65|0)<($66|0);\n    if ($67) {\n     $$0143165 = $65;$$0145163 = $64;\n    } else {\n     break L4;\n    }\n   }\n   if ((label|0) == 25) {\n    return ($$1|0);\n   }\n  }\n } while(0);\n $31 = HEAP32[$15>>2]|0;\n $32 = ($31|0)>(2);\n if (!($32)) {\n  $$1 = $18;\n  return ($$1|0);\n }\n $33 = ((($1)) + 1032|0);\n $34 = ((($1)) + 780|0);\n $$1144159 = 2;\n while(1) {\n  $68 = (($$1144159) + -2)|0;\n  $69 = (($33) + ($68<<2)|0);\n  $70 = HEAP32[$69>>2]|0;\n  $71 = (((($3)) + 836|0) + ($70<<2)|0);\n  $72 = HEAP32[$71>>2]|0;\n  $73 = (($34) + ($68<<2)|0);\n  $74 = HEAP32[$73>>2]|0;\n  $75 = (((($3)) + 836|0) + ($74<<2)|0);\n  $76 = HEAP32[$75>>2]|0;\n  $77 = (($18) + ($70<<2)|0);\n  $78 = HEAP32[$77>>2]|0;\n  $79 = (($18) + ($74<<2)|0);\n  $80 = HEAP32[$79>>2]|0;\n  $81 = (((($3)) + 836|0) + ($$1144159<<2)|0);\n  $82 = HEAP32[$81>>2]|0;\n  $83 = $78 & 32767;\n  $84 = $80 & 32767;\n  $85 = (($84) - ($83))|0;\n  $86 = (($76) - ($72))|0;\n  $ispos$i = ($85|0)>(-1);\n  $neg$i = (0 - ($85))|0;\n  $87 = $ispos$i ? $85 : $neg$i;\n  $88 = (($82) - ($72))|0;\n  $89 = Math_imul($87, $88)|0;\n  $90 = (($89|0) / ($86|0))&-1;\n  $91 = ($85|0)<(0);\n  $92 = (0 - ($90))|0;\n  $$0$p$i = $91 ? $92 : $90;\n  $$0$i = (($$0$p$i) + ($83))|0;\n  $93 = HEAP32[$19>>2]|0;\n  $94 = (($93) - ($$0$i))|0;\n  $95 = (($18) + ($$1144159<<2)|0);\n  $96 = HEAP32[$95>>2]|0;\n  $97 = ($96|0)==(0);\n  if ($97) {\n   $122 = $$0$i | 32768;\n   HEAP32[$95>>2] = $122;\n  } else {\n   $98 = ($94|0)<($$0$i|0);\n   $99 = $98 ? $94 : $$0$i;\n   $100 = $99 << 1;\n   $101 = ($96|0)<($100|0);\n   do {\n    if ($101) {\n     $106 = $96 & 1;\n     $107 = ($106|0)==(0);\n     if ($107) {\n      $111 = $96 >> 1;\n      $$0 = $111;\n      break;\n     } else {\n      $108 = (($96) + 1)|0;\n      $109 = $108 >> 1;\n      $110 = (0 - ($109))|0;\n      $$0 = $110;\n      break;\n     }\n    } else {\n     $102 = ($94|0)>($$0$i|0);\n     if ($102) {\n      $103 = (($96) - ($$0$i))|0;\n      $$0 = $103;\n      break;\n     } else {\n      $104 = (($96) - ($94))|0;\n      $105 = $104 ^ -1;\n      $$0 = $105;\n      break;\n     }\n    }\n   } while(0);\n   $112 = (($$0) + ($$0$i))|0;\n   $113 = $112 & 32767;\n   HEAP32[$95>>2] = $113;\n   $114 = HEAP32[$69>>2]|0;\n   $115 = (($18) + ($114<<2)|0);\n   $116 = HEAP32[$115>>2]|0;\n   $117 = $116 & 32767;\n   HEAP32[$115>>2] = $117;\n   $118 = HEAP32[$73>>2]|0;\n   $119 = (($18) + ($118<<2)|0);\n   $120 = HEAP32[$119>>2]|0;\n   $121 = $120 & 32767;\n   HEAP32[$119>>2] = $121;\n  }\n  $123 = (($$1144159) + 1)|0;\n  $124 = HEAP32[$15>>2]|0;\n  $125 = ($123|0)<($124|0);\n  if ($125) {\n   $$1144159 = $123;\n  } else {\n   $$1 = $18;\n   break;\n  }\n }\n return ($$1|0);\n}\nfunction _floor1_inverse2($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$i = 0, $$0 = 0, $$0$i = 0, $$054$i = 0, $$057$i = 0, $$067$lcssa = 0, $$06778 = 0, $$06877 = 0, $$070$lcssa = 0, $$07076 = 0, $$07275 = 0, $$1 = 0, $$1$i = 0, $$155$i = 0, $$158$i = 0, $$169 = 0, $$171 = 0, $$17374 = 0, $$2$i = 0, $$256$i = 0;\n var $$pn$i = 0, $$sink$i = 0, $$sink3$i = 0.0, $$sink3$in$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $exitcond = 0, $ispos$i = 0, $ispos60$i = 0, $neg$i = 0, $neg61$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($1)) + 1296|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($0)) + 64|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($7)) + 4|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($9)) + 28|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($0)) + 28|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (($11) + ($13<<2)|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = (($15|0) / 2)&-1;\n $17 = ($2|0)==(0|0);\n if ($17) {\n  $71 = $16 << 2;\n  _memset(($3|0),0,($71|0))|0;\n  $$0 = 0;\n  return ($$0|0);\n }\n $18 = HEAP32[$2>>2]|0;\n $19 = ((($5)) + 832|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = Math_imul($20, $18)|0;\n $22 = ($21|0)<(0);\n $23 = ($21|0)<(255);\n $24 = $23 ? $21 : 255;\n $25 = $22 ? 0 : $24;\n $26 = ((($1)) + 1284|0);\n $27 = HEAP32[$26>>2]|0;\n $28 = ($27|0)>(1);\n if ($28) {\n  $29 = ((($1)) + 260|0);\n  $$06778 = $25;$$06877 = 0;$$07076 = 0;$$07275 = 1;\n  while(1) {\n   $33 = (($29) + ($$07275<<2)|0);\n   $34 = HEAP32[$33>>2]|0;\n   $35 = (($2) + ($34<<2)|0);\n   $36 = HEAP32[$35>>2]|0;\n   $37 = $36 & 32767;\n   $38 = ($37|0)==($36|0);\n   L9: do {\n    if ($38) {\n     $39 = (((($5)) + 836|0) + ($34<<2)|0);\n     $40 = HEAP32[$39>>2]|0;\n     $41 = Math_imul($20, $36)|0;\n     $42 = ($41|0)<(0);\n     $43 = ($41|0)<(255);\n     $44 = $43 ? $41 : 255;\n     $45 = $42 ? 0 : $44;\n     $46 = (($45) - ($$06778))|0;\n     $47 = (($40) - ($$06877))|0;\n     $ispos$i = ($46|0)>(-1);\n     $neg$i = (0 - ($46))|0;\n     $48 = $ispos$i ? $46 : $neg$i;\n     $49 = (($46|0) / ($47|0))&-1;\n     $50 = $46 >> 31;\n     $51 = $50 | 1;\n     $52 = Math_imul($49, $47)|0;\n     $ispos60$i = ($52|0)>(-1);\n     $neg61$i = (0 - ($52))|0;\n     $53 = $ispos60$i ? $52 : $neg61$i;\n     $54 = (($48) - ($53))|0;\n     $55 = ($16|0)>($40|0);\n     $$$i = $55 ? $40 : $16;\n     $56 = ($$$i|0)>($$06877|0);\n     if ($56) {\n      $$0$i = 0;$$054$i = $$06778;$$057$i = $$06877;\n      label = 8;\n     } else {\n      $$1$i = 0;$$155$i = $$06778;$$158$i = $$06877;\n     }\n     while(1) {\n      if ((label|0) == 8) {\n       label = 0;\n       $$sink3$in$i = (26916 + ($$054$i<<2)|0);\n       $$sink3$i = +HEAPF32[$$sink3$in$i>>2];\n       $$sink$i = (($3) + ($$057$i<<2)|0);\n       $57 = +HEAPF32[$$sink$i>>2];\n       $58 = $57 * $$sink3$i;\n       HEAPF32[$$sink$i>>2] = $58;\n       $$1$i = $$0$i;$$155$i = $$054$i;$$158$i = $$057$i;\n      }\n      $59 = (($$158$i) + 1)|0;\n      $60 = ($59|0)<($$$i|0);\n      if (!($60)) {\n       $$1 = $45;$$169 = $40;$$171 = $40;\n       break L9;\n      }\n      $61 = (($$1$i) + ($54))|0;\n      $62 = ($61|0)<($47|0);\n      $63 = $62 ? 0 : $51;\n      $64 = $62 ? 0 : $47;\n      $$2$i = (($61) - ($64))|0;\n      $$pn$i = (($$155$i) + ($49))|0;\n      $$256$i = (($$pn$i) + ($63))|0;\n      $$0$i = $$2$i;$$054$i = $$256$i;$$057$i = $59;\n      label = 8;\n     }\n    } else {\n     $$1 = $$06778;$$169 = $$06877;$$171 = $$07076;\n    }\n   } while(0);\n   $65 = (($$07275) + 1)|0;\n   $66 = ($65|0)<($27|0);\n   if ($66) {\n    $$06778 = $$1;$$06877 = $$169;$$07076 = $$171;$$07275 = $65;\n   } else {\n    $$067$lcssa = $$1;$$070$lcssa = $$171;\n    break;\n   }\n  }\n } else {\n  $$067$lcssa = $25;$$070$lcssa = 0;\n }\n $30 = ($$070$lcssa|0)<($16|0);\n if (!($30)) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $31 = (26916 + ($$067$lcssa<<2)|0);\n $32 = +HEAPF32[$31>>2];\n $$17374 = $$070$lcssa;\n while(1) {\n  $67 = (($3) + ($$17374<<2)|0);\n  $68 = +HEAPF32[$67>>2];\n  $69 = $68 * $32;\n  HEAPF32[$67>>2] = $69;\n  $70 = (($$17374) + 1)|0;\n  $exitcond = ($70|0)==($16|0);\n  if ($exitcond) {\n   $$0 = 1;\n   break;\n  } else {\n   $$17374 = $70;\n  }\n }\n return ($$0|0);\n}\nfunction _icomp($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$0>>2]|0;\n $3 = HEAP32[$2>>2]|0;\n $4 = HEAP32[$1>>2]|0;\n $5 = HEAP32[$4>>2]|0;\n $6 = (($3) - ($5))|0;\n return ($6|0);\n}\nfunction _floor1_fit($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$$i = 0, $$$$i217 = 0, $$$$i262 = 0, $$$i = 0, $$$i$i = 0, $$$i$i235 = 0, $$$i$i266 = 0, $$$i106$i = 0, $$$i215 = 0, $$$i217 = 0, $$$i219 = 0, $$$i262 = 0, $$$i273 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i236 = 0, $$0$i$i267 = 0, $$0$i107$i = 0, $$0$lcssa$i = 0, $$0$p$i = 0;\n var $$0101$lcssa$i = 0, $$0101$lcssa$i258 = 0, $$0101132$i = 0, $$0101132$i223 = 0, $$0103$lcssa$i = 0, $$0103$lcssa$i257 = 0, $$0103131$i = 0, $$0103131$i224 = 0, $$0105$lcssa$i = 0, $$0105$lcssa$i256 = 0, $$0105130$i = 0, $$0105130$i225 = 0, $$0107$lcssa$i = 0, $$0107$lcssa$i255 = 0, $$0107129$i = 0, $$0107129$i226 = 0, $$0109$lcssa$i = 0, $$0109$lcssa$i254 = 0, $$0109128$i = 0, $$0109128$i227 = 0;\n var $$0111$lcssa$i = 0, $$0111$lcssa$i253 = 0, $$0111127$i = 0, $$0111127$i228 = 0, $$0113$i = 0, $$0113$lcssa$i = 0, $$0113$lcssa$i252 = 0, $$0113126$i = 0, $$0113126$i229 = 0, $$0115$lcssa$i = 0, $$0115$lcssa$i251 = 0, $$0115125$i = 0, $$0115125$i230 = 0, $$0117$lcssa$i = 0, $$0117$lcssa$i250 = 0, $$0117124$i = 0, $$0117124$i231 = 0, $$0119$lcssa$i = 0, $$0119$lcssa$i249 = 0, $$0119123$i = 0;\n var $$0119123$i232 = 0, $$0121122$i = 0, $$0121122$i233 = 0, $$0209290 = 0, $$0209290$in = 0, $$0211303 = 0, $$0213 = 0, $$0315 = 0, $$097$lcssa$i = 0, $$097112$i = 0, $$098$lcssa$i = 0, $$098$lcssa$i260 = 0, $$098111$i = 0, $$098134$i = 0, $$098134$i221 = 0, $$099$lcssa$i = 0, $$099$lcssa$i259 = 0, $$099110$i = 0, $$099133$i = 0, $$099133$i222 = 0;\n var $$1$i = 0, $$1$i248 = 0, $$1$i269 = 0, $$1100$i = 0, $$1100$i247 = 0, $$1100$i270 = 0, $$1102$i = 0, $$1102$i246 = 0, $$1104$i = 0, $$1104$i245 = 0, $$1106$i = 0, $$1106$i244 = 0, $$1108$i = 0, $$1108$i243 = 0, $$1110$i = 0, $$1110$i242 = 0, $$1112$i = 0, $$1112$i241 = 0, $$1114$i = 0, $$1114$i240 = 0;\n var $$1116$i = 0, $$1116$i239 = 0, $$1118$i = 0, $$1118$i238 = 0, $$1120$i = 0, $$1120$i237 = 0, $$1210 = 0, $$1210292 = 0, $$1210293 = 0, $$1212 = 0, $$1313 = 0, $$3309 = 0, $$5304 = 0, $$6296 = 0, $$7288 = 0, $$pn$i = 0, $$pre = 0, $$pre328 = 0, $$pre329 = 0, $$pre330 = 0;\n var $$pre331 = 0, $$sink = 0, $$sink6 = 0, $$val$i = 0.0, $$val$i234 = 0.0, $$val$i271 = 0.0, $$val105$i = 0.0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;\n var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;\n var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;\n var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;\n var $184 = 0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0.0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0.0, $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0;\n var $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0, $206 = 0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0.0, $22 = 0;\n var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0, $230 = 0, $231 = 0, $232 = 0.0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0.0, $238 = 0.0;\n var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0.0, $251 = 0, $252 = 0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0;\n var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;\n var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;\n var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;\n var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;\n var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;\n var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0.0;\n var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond321 = 0, $exitcond322 = 0, $exitcond324 = 0, $exitcond326 = 0, $exitcond327 = 0, $ispos$i = 0, $ispos$i264 = 0, $ispos103$i = 0, $neg$i = 0, $neg$i265 = 0, $neg104$i = 0, $or$cond = 0;\n var $or$cond$i = 0, $or$cond214 = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 4912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4912|0);\n $4 = sp + 1328|0;\n $5 = sp + 1064|0;\n $6 = sp + 804|0;\n $7 = sp + 544|0;\n $8 = sp + 284|0;\n $9 = sp + 24|0;\n $10 = sp + 20|0;\n $11 = sp + 16|0;\n $12 = sp + 12|0;\n $13 = sp + 8|0;\n $14 = sp + 4|0;\n $15 = sp;\n $16 = ((($1)) + 1296|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ((($1)) + 1288|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ((($1)) + 1284|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = ($21|0)>(0);\n if ($22) {\n  $$0315 = 0;\n  while(1) {\n   $23 = (($5) + ($$0315<<2)|0);\n   HEAP32[$23>>2] = -200;\n   $24 = (($$0315) + 1)|0;\n   $exitcond327 = ($24|0)==($21|0);\n   if ($exitcond327) {\n    break;\n   } else {\n    $$0315 = $24;\n   }\n  }\n  if ($22) {\n   $$1313 = 0;\n   while(1) {\n    $25 = (($6) + ($$1313<<2)|0);\n    HEAP32[$25>>2] = -200;\n    $26 = (($$1313) + 1)|0;\n    $exitcond326 = ($26|0)==($21|0);\n    if ($exitcond326) {\n     break;\n    } else {\n     $$1313 = $26;\n    }\n   }\n   if ($22) {\n    $27 = $21 << 2;\n    _memset(($7|0),0,($27|0))|0;\n    $$3309 = 0;\n    while(1) {\n     $28 = (($8) + ($$3309<<2)|0);\n     HEAP32[$28>>2] = 1;\n     $29 = (($$3309) + 1)|0;\n     $exitcond324 = ($29|0)==($21|0);\n     if ($exitcond324) {\n      break;\n     } else {\n      $$3309 = $29;\n     }\n    }\n    if ($22) {\n     $31 = $21 << 2;\n     _memset(($9|0),-1,($31|0))|0;\n     $32 = (($21) + -1)|0;\n     $33 = ($21|0)==(1);\n     if ($33) {\n      $$0213 = 0;\n      STACKTOP = sp;return ($$0213|0);\n     }\n     $34 = (($19) + -1)|0;\n     $35 = ((($17)) + 1112|0);\n     $$pre = HEAP32[$1>>2]|0;\n     $$0211303 = 0;$$5304 = 0;$86 = $$pre;\n     while(1) {\n      $81 = (($$5304) + 1)|0;\n      $82 = (($1) + ($81<<2)|0);\n      $83 = HEAP32[$82>>2]|0;\n      $84 = (((($4) + (($$5304*56)|0)|0)) + 8|0);\n      dest=$84; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n      $85 = (($4) + (($$5304*56)|0)|0);\n      HEAP32[$85>>2] = $86;\n      $87 = (((($4) + (($$5304*56)|0)|0)) + 4|0);\n      HEAP32[$87>>2] = $83;\n      $88 = ($83|0)<($19|0);\n      $$$i219 = $88 ? $83 : $34;\n      $89 = ($$$i219|0)<($86|0);\n      if ($89) {\n       $$0101$lcssa$i258 = 0;$$0103$lcssa$i257 = 0;$$0105$lcssa$i256 = 0;$$0107$lcssa$i255 = 0;$$0109$lcssa$i254 = 0;$$0111$lcssa$i253 = 0;$$0113$lcssa$i252 = 0;$$0115$lcssa$i251 = 0;$$0117$lcssa$i250 = 0;$$0119$lcssa$i249 = 0;$$098$lcssa$i260 = 0;$$099$lcssa$i259 = 0;\n      } else {\n       $$0101132$i223 = 0;$$0103131$i224 = 0;$$0105130$i225 = 0;$$0107129$i226 = 0;$$0109128$i227 = 0;$$0111127$i228 = 0;$$0113126$i229 = 0;$$0115125$i230 = 0;$$0117124$i231 = 0;$$0119123$i232 = 0;$$0121122$i233 = $86;$$098134$i221 = 0;$$099133$i222 = 0;\n       while(1) {\n        $90 = (($3) + ($$0121122$i233<<2)|0);\n        $$val$i234 = +HEAPF32[$90>>2];\n        $91 = $$val$i234 * 7.3142857551574707;\n        $92 = $91 + 1023.5;\n        $93 = (~~(($92)));\n        $94 = ($93|0)>(1023);\n        $95 = ($93|0)>(0);\n        $$$i$i235 = $95 ? $93 : 0;\n        $$0$i$i236 = $94 ? 1023 : $$$i$i235;\n        $96 = ($$0$i$i236|0)==(0);\n        do {\n         if ($96) {\n          $$1$i248 = $$098134$i221;$$1100$i247 = $$099133$i222;$$1102$i246 = $$0101132$i223;$$1104$i245 = $$0103131$i224;$$1106$i244 = $$0105130$i225;$$1108$i243 = $$0107129$i226;$$1110$i242 = $$0109128$i227;$$1112$i241 = $$0111127$i228;$$1114$i240 = $$0113126$i229;$$1116$i239 = $$0115125$i230;$$1118$i238 = $$0117124$i231;$$1120$i237 = $$0119123$i232;\n         } else {\n          $97 = (($2) + ($$0121122$i233<<2)|0);\n          $98 = +HEAPF32[$97>>2];\n          $99 = +HEAPF32[$35>>2];\n          $100 = $99 + $98;\n          $101 = !($100 >= $$val$i234);\n          $102 = Math_imul($$0121122$i233, $$0121122$i233)|0;\n          $103 = Math_imul($93, $93)|0;\n          $104 = $95 ? $103 : 0;\n          $105 = $94 ? 1046529 : $104;\n          $106 = Math_imul($$0$i$i236, $$0121122$i233)|0;\n          if ($101) {\n           $113 = (($$0121122$i233) + ($$0107129$i226))|0;\n           $114 = (($$0$i$i236) + ($$0105130$i225))|0;\n           $115 = (($102) + ($$0103131$i224))|0;\n           $116 = (($105) + ($$0101132$i223))|0;\n           $117 = (($106) + ($$099133$i222))|0;\n           $118 = (($$098134$i221) + 1)|0;\n           $$1$i248 = $118;$$1100$i247 = $117;$$1102$i246 = $116;$$1104$i245 = $115;$$1106$i244 = $114;$$1108$i243 = $113;$$1110$i242 = $$0109128$i227;$$1112$i241 = $$0111127$i228;$$1114$i240 = $$0113126$i229;$$1116$i239 = $$0115125$i230;$$1118$i238 = $$0117124$i231;$$1120$i237 = $$0119123$i232;\n           break;\n          } else {\n           $107 = (($$0121122$i233) + ($$0119123$i232))|0;\n           $108 = (($$0$i$i236) + ($$0117124$i231))|0;\n           $109 = (($102) + ($$0115125$i230))|0;\n           $110 = (($105) + ($$0113126$i229))|0;\n           $111 = (($106) + ($$0111127$i228))|0;\n           $112 = (($$0109128$i227) + 1)|0;\n           $$1$i248 = $$098134$i221;$$1100$i247 = $$099133$i222;$$1102$i246 = $$0101132$i223;$$1104$i245 = $$0103131$i224;$$1106$i244 = $$0105130$i225;$$1108$i243 = $$0107129$i226;$$1110$i242 = $112;$$1112$i241 = $111;$$1114$i240 = $110;$$1116$i239 = $109;$$1118$i238 = $108;$$1120$i237 = $107;\n           break;\n          }\n         }\n        } while(0);\n        $119 = (($$0121122$i233) + 1)|0;\n        $120 = ($$0121122$i233|0)<($$$i219|0);\n        if ($120) {\n         $$0101132$i223 = $$1102$i246;$$0103131$i224 = $$1104$i245;$$0105130$i225 = $$1106$i244;$$0107129$i226 = $$1108$i243;$$0109128$i227 = $$1110$i242;$$0111127$i228 = $$1112$i241;$$0113126$i229 = $$1114$i240;$$0115125$i230 = $$1116$i239;$$0117124$i231 = $$1118$i238;$$0119123$i232 = $$1120$i237;$$0121122$i233 = $119;$$098134$i221 = $$1$i248;$$099133$i222 = $$1100$i247;\n        } else {\n         $$0101$lcssa$i258 = $$1102$i246;$$0103$lcssa$i257 = $$1104$i245;$$0105$lcssa$i256 = $$1106$i244;$$0107$lcssa$i255 = $$1108$i243;$$0109$lcssa$i254 = $$1110$i242;$$0111$lcssa$i253 = $$1112$i241;$$0113$lcssa$i252 = $$1114$i240;$$0115$lcssa$i251 = $$1116$i239;$$0117$lcssa$i250 = $$1118$i238;$$0119$lcssa$i249 = $$1120$i237;$$098$lcssa$i260 = $$1$i248;$$099$lcssa$i259 = $$1100$i247;\n         break;\n        }\n       }\n      }\n      HEAP32[$84>>2] = $$0119$lcssa$i249;\n      $121 = (((($4) + (($$5304*56)|0)|0)) + 12|0);\n      HEAP32[$121>>2] = $$0117$lcssa$i250;\n      $122 = (((($4) + (($$5304*56)|0)|0)) + 16|0);\n      HEAP32[$122>>2] = $$0115$lcssa$i251;\n      $123 = (((($4) + (($$5304*56)|0)|0)) + 20|0);\n      HEAP32[$123>>2] = $$0113$lcssa$i252;\n      $124 = (((($4) + (($$5304*56)|0)|0)) + 24|0);\n      HEAP32[$124>>2] = $$0111$lcssa$i253;\n      $125 = (((($4) + (($$5304*56)|0)|0)) + 28|0);\n      HEAP32[$125>>2] = $$0109$lcssa$i254;\n      $126 = (((($4) + (($$5304*56)|0)|0)) + 32|0);\n      HEAP32[$126>>2] = $$0107$lcssa$i255;\n      $127 = (((($4) + (($$5304*56)|0)|0)) + 36|0);\n      HEAP32[$127>>2] = $$0105$lcssa$i256;\n      $128 = (((($4) + (($$5304*56)|0)|0)) + 40|0);\n      HEAP32[$128>>2] = $$0103$lcssa$i257;\n      $129 = (((($4) + (($$5304*56)|0)|0)) + 44|0);\n      HEAP32[$129>>2] = $$0101$lcssa$i258;\n      $130 = (((($4) + (($$5304*56)|0)|0)) + 48|0);\n      HEAP32[$130>>2] = $$099$lcssa$i259;\n      $131 = (((($4) + (($$5304*56)|0)|0)) + 52|0);\n      HEAP32[$131>>2] = $$098$lcssa$i260;\n      $132 = (($$0109$lcssa$i254) + ($$0211303))|0;\n      $exitcond322 = ($81|0)==($32|0);\n      if ($exitcond322) {\n       $$1212 = $132;\n       break;\n      } else {\n       $$0211303 = $132;$$5304 = $81;$86 = $83;\n      }\n     }\n    } else {\n     label = 9;\n    }\n   } else {\n    label = 9;\n   }\n  } else {\n   label = 9;\n  }\n } else {\n  label = 9;\n }\n if ((label|0) == 9) {\n  $30 = ($21|0)==(0);\n  if (!($30)) {\n   $$0213 = 0;\n   STACKTOP = sp;return ($$0213|0);\n  }\n  $36 = ((($4)) + 8|0);\n  dest=$36; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n  HEAP32[$4>>2] = 0;\n  $37 = ((($4)) + 4|0);\n  HEAP32[$37>>2] = $19;\n  $38 = ($19|0)<(1);\n  if ($38) {\n   $$0101$lcssa$i = 0;$$0103$lcssa$i = 0;$$0105$lcssa$i = 0;$$0107$lcssa$i = 0;$$0109$lcssa$i = 0;$$0111$lcssa$i = 0;$$0113$lcssa$i = 0;$$0115$lcssa$i = 0;$$0117$lcssa$i = 0;$$0119$lcssa$i = 0;$$098$lcssa$i = 0;$$099$lcssa$i = 0;\n  } else {\n   $39 = ((($17)) + 1112|0);\n   $$0101132$i = 0;$$0103131$i = 0;$$0105130$i = 0;$$0107129$i = 0;$$0109128$i = 0;$$0111127$i = 0;$$0113126$i = 0;$$0115125$i = 0;$$0117124$i = 0;$$0119123$i = 0;$$0121122$i = 0;$$098134$i = 0;$$099133$i = 0;\n   while(1) {\n    $40 = (($3) + ($$0121122$i<<2)|0);\n    $$val$i = +HEAPF32[$40>>2];\n    $41 = $$val$i * 7.3142857551574707;\n    $42 = $41 + 1023.5;\n    $43 = (~~(($42)));\n    $44 = ($43|0)>(1023);\n    $45 = ($43|0)>(0);\n    $$$i$i = $45 ? $43 : 0;\n    $$0$i$i = $44 ? 1023 : $$$i$i;\n    $46 = ($$0$i$i|0)==(0);\n    do {\n     if ($46) {\n      $$1$i = $$098134$i;$$1100$i = $$099133$i;$$1102$i = $$0101132$i;$$1104$i = $$0103131$i;$$1106$i = $$0105130$i;$$1108$i = $$0107129$i;$$1110$i = $$0109128$i;$$1112$i = $$0111127$i;$$1114$i = $$0113126$i;$$1116$i = $$0115125$i;$$1118$i = $$0117124$i;$$1120$i = $$0119123$i;\n     } else {\n      $47 = (($2) + ($$0121122$i<<2)|0);\n      $48 = +HEAPF32[$47>>2];\n      $49 = +HEAPF32[$39>>2];\n      $50 = $49 + $48;\n      $51 = !($50 >= $$val$i);\n      $52 = Math_imul($$0121122$i, $$0121122$i)|0;\n      $53 = Math_imul($43, $43)|0;\n      $54 = $45 ? $53 : 0;\n      $55 = $44 ? 1046529 : $54;\n      $56 = Math_imul($$0$i$i, $$0121122$i)|0;\n      if ($51) {\n       $63 = (($$0121122$i) + ($$0107129$i))|0;\n       $64 = (($$0$i$i) + ($$0105130$i))|0;\n       $65 = (($52) + ($$0103131$i))|0;\n       $66 = (($55) + ($$0101132$i))|0;\n       $67 = (($56) + ($$099133$i))|0;\n       $68 = (($$098134$i) + 1)|0;\n       $$1$i = $68;$$1100$i = $67;$$1102$i = $66;$$1104$i = $65;$$1106$i = $64;$$1108$i = $63;$$1110$i = $$0109128$i;$$1112$i = $$0111127$i;$$1114$i = $$0113126$i;$$1116$i = $$0115125$i;$$1118$i = $$0117124$i;$$1120$i = $$0119123$i;\n       break;\n      } else {\n       $57 = (($$0121122$i) + ($$0119123$i))|0;\n       $58 = (($$0$i$i) + ($$0117124$i))|0;\n       $59 = (($52) + ($$0115125$i))|0;\n       $60 = (($55) + ($$0113126$i))|0;\n       $61 = (($56) + ($$0111127$i))|0;\n       $62 = (($$0109128$i) + 1)|0;\n       $$1$i = $$098134$i;$$1100$i = $$099133$i;$$1102$i = $$0101132$i;$$1104$i = $$0103131$i;$$1106$i = $$0105130$i;$$1108$i = $$0107129$i;$$1110$i = $62;$$1112$i = $61;$$1114$i = $60;$$1116$i = $59;$$1118$i = $58;$$1120$i = $57;\n       break;\n      }\n     }\n    } while(0);\n    $69 = (($$0121122$i) + 1)|0;\n    $exitcond321 = ($69|0)==($19|0);\n    if ($exitcond321) {\n     $$0101$lcssa$i = $$1102$i;$$0103$lcssa$i = $$1104$i;$$0105$lcssa$i = $$1106$i;$$0107$lcssa$i = $$1108$i;$$0109$lcssa$i = $$1110$i;$$0111$lcssa$i = $$1112$i;$$0113$lcssa$i = $$1114$i;$$0115$lcssa$i = $$1116$i;$$0117$lcssa$i = $$1118$i;$$0119$lcssa$i = $$1120$i;$$098$lcssa$i = $$1$i;$$099$lcssa$i = $$1100$i;\n     break;\n    } else {\n     $$0101132$i = $$1102$i;$$0103131$i = $$1104$i;$$0105130$i = $$1106$i;$$0107129$i = $$1108$i;$$0109128$i = $$1110$i;$$0111127$i = $$1112$i;$$0113126$i = $$1114$i;$$0115125$i = $$1116$i;$$0117124$i = $$1118$i;$$0119123$i = $$1120$i;$$0121122$i = $69;$$098134$i = $$1$i;$$099133$i = $$1100$i;\n    }\n   }\n  }\n  HEAP32[$36>>2] = $$0119$lcssa$i;\n  $70 = ((($4)) + 12|0);\n  HEAP32[$70>>2] = $$0117$lcssa$i;\n  $71 = ((($4)) + 16|0);\n  HEAP32[$71>>2] = $$0115$lcssa$i;\n  $72 = ((($4)) + 20|0);\n  HEAP32[$72>>2] = $$0113$lcssa$i;\n  $73 = ((($4)) + 24|0);\n  HEAP32[$73>>2] = $$0111$lcssa$i;\n  $74 = ((($4)) + 28|0);\n  HEAP32[$74>>2] = $$0109$lcssa$i;\n  $75 = ((($4)) + 32|0);\n  HEAP32[$75>>2] = $$0107$lcssa$i;\n  $76 = ((($4)) + 36|0);\n  HEAP32[$76>>2] = $$0105$lcssa$i;\n  $77 = ((($4)) + 40|0);\n  HEAP32[$77>>2] = $$0103$lcssa$i;\n  $78 = ((($4)) + 44|0);\n  HEAP32[$78>>2] = $$0101$lcssa$i;\n  $79 = ((($4)) + 48|0);\n  HEAP32[$79>>2] = $$099$lcssa$i;\n  $80 = ((($4)) + 52|0);\n  HEAP32[$80>>2] = $$098$lcssa$i;\n  $$1212 = $$0109$lcssa$i;\n }\n $133 = ($$1212|0)==(0);\n if ($133) {\n  $$0213 = 0;\n  STACKTOP = sp;return ($$0213|0);\n }\n HEAP32[$10>>2] = -200;\n HEAP32[$11>>2] = -200;\n $134 = (($21) + -1)|0;\n (_fit_line($4,$134,$10,$11,$17)|0);\n $135 = HEAP32[$10>>2]|0;\n HEAP32[$5>>2] = $135;\n HEAP32[$6>>2] = $135;\n $136 = HEAP32[$11>>2]|0;\n $137 = ((($6)) + 4|0);\n HEAP32[$137>>2] = $136;\n $138 = ((($5)) + 4|0);\n HEAP32[$138>>2] = $136;\n $139 = ($21|0)>(2);\n do {\n  if ($139) {\n   $140 = ((($17)) + 1112|0);\n   $141 = ((($17)) + 1096|0);\n   $142 = ((($17)) + 1100|0);\n   $143 = ((($17)) + 1104|0);\n   $$6296 = 2;\n   L50: while(1) {\n    $144 = (((($1)) + 520|0) + ($$6296<<2)|0);\n    $145 = HEAP32[$144>>2]|0;\n    $146 = (($7) + ($145<<2)|0);\n    $147 = HEAP32[$146>>2]|0;\n    $148 = (($8) + ($145<<2)|0);\n    $149 = HEAP32[$148>>2]|0;\n    $150 = (($9) + ($147<<2)|0);\n    $151 = HEAP32[$150>>2]|0;\n    $152 = ($151|0)==($149|0);\n    L52: do {\n     if (!($152)) {\n      $153 = (((($1)) + 520|0) + ($147<<2)|0);\n      $154 = HEAP32[$153>>2]|0;\n      $155 = (((($1)) + 520|0) + ($149<<2)|0);\n      $156 = HEAP32[$155>>2]|0;\n      HEAP32[$150>>2] = $149;\n      $157 = (((($17)) + 836|0) + ($147<<2)|0);\n      $158 = HEAP32[$157>>2]|0;\n      $159 = (((($17)) + 836|0) + ($149<<2)|0);\n      $160 = HEAP32[$159>>2]|0;\n      $161 = (($5) + ($147<<2)|0);\n      $162 = HEAP32[$161>>2]|0;\n      $163 = ($162|0)<(0);\n      $164 = (($6) + ($147<<2)|0);\n      $165 = HEAP32[$164>>2]|0;\n      $166 = ($165|0)<(0);\n      $167 = (($165) + ($162))|0;\n      $168 = $167 >> 1;\n      $$$i262 = $166 ? $162 : $168;\n      $$$$i262 = $163 ? $165 : $$$i262;\n      $169 = (($5) + ($149<<2)|0);\n      $170 = HEAP32[$169>>2]|0;\n      $171 = ($170|0)<(0);\n      $172 = (($6) + ($149<<2)|0);\n      $173 = HEAP32[$172>>2]|0;\n      $174 = ($173|0)<(0);\n      $175 = (($173) + ($170))|0;\n      $176 = $175 >> 1;\n      $$$i273 = $174 ? $170 : $176;\n      $177 = $171 ? $173 : $$$i273;\n      $178 = ($$$$i262|0)==(-1);\n      $179 = ($177|0)==(-1);\n      $or$cond = $178 | $179;\n      if ($or$cond) {\n       label = 32;\n       break L50;\n      }\n      $180 = (($177) - ($$$$i262))|0;\n      $181 = (($160) - ($158))|0;\n      $ispos$i264 = ($180|0)>(-1);\n      $neg$i265 = (0 - ($180))|0;\n      $182 = $ispos$i264 ? $180 : $neg$i265;\n      $183 = (($180|0) / ($181|0))&-1;\n      $184 = $180 >> 31;\n      $185 = $184 | 1;\n      $186 = (($3) + ($158<<2)|0);\n      $$val105$i = +HEAPF32[$186>>2];\n      $187 = $$val105$i * 7.3142857551574707;\n      $188 = $187 + 1023.5;\n      $189 = (~~(($188)));\n      $190 = ($189|0)>(1023);\n      $191 = ($189|0)>(0);\n      $$$i$i266 = $191 ? $189 : 0;\n      $$0$i$i267 = $190 ? 1023 : $$$i$i266;\n      $192 = Math_imul($183, $181)|0;\n      $ispos103$i = ($192|0)>(-1);\n      $neg104$i = (0 - ($192))|0;\n      $193 = $ispos103$i ? $192 : $neg104$i;\n      $194 = (($182) - ($193))|0;\n      $195 = (($$$$i262) - ($$0$i$i267))|0;\n      $196 = Math_imul($195, $195)|0;\n      $197 = (($2) + ($158<<2)|0);\n      $198 = +HEAPF32[$197>>2];\n      $199 = +HEAPF32[$140>>2];\n      $200 = $199 + $198;\n      $201 = !($200 >= $$val105$i);\n      if ($201) {\n       label = 36;\n      } else {\n       $202 = (+($$$$i262|0));\n       $203 = +HEAPF32[$141>>2];\n       $204 = $203 + $202;\n       $205 = (+($$0$i$i267|0));\n       $206 = $204 < $205;\n       if (!($206)) {\n        $207 = +HEAPF32[$142>>2];\n        $208 = $202 - $207;\n        $209 = $208 > $205;\n        if (!($209)) {\n         label = 36;\n        }\n       }\n      }\n      L58: do {\n       if ((label|0) == 36) {\n        label = 0;\n        $210 = (($158) + 1)|0;\n        $211 = ($210|0)<($160|0);\n        if ($211) {\n         $$0113$i = 1;$$097112$i = $196;$$098111$i = 0;$$099110$i = $$$$i262;$217 = $210;\n         while(1) {\n          $212 = (($$098111$i) + ($194))|0;\n          $213 = ($212|0)<($181|0);\n          $214 = $213 ? 0 : $185;\n          $215 = $213 ? 0 : $181;\n          $$1$i269 = (($212) - ($215))|0;\n          $$pn$i = (($$099110$i) + ($183))|0;\n          $$1100$i270 = (($$pn$i) + ($214))|0;\n          $216 = (($3) + ($217<<2)|0);\n          $$val$i271 = +HEAPF32[$216>>2];\n          $218 = $$val$i271 * 7.3142857551574707;\n          $219 = $218 + 1023.5;\n          $220 = (~~(($219)));\n          $221 = ($220|0)>(1023);\n          $222 = ($220|0)>(0);\n          $$$i106$i = $222 ? $220 : 0;\n          $$0$i107$i = $221 ? 1023 : $$$i106$i;\n          $223 = (($$1100$i270) - ($$0$i107$i))|0;\n          $224 = Math_imul($223, $223)|0;\n          $225 = (($224) + ($$097112$i))|0;\n          $226 = (($$0113$i) + 1)|0;\n          $227 = (($2) + ($217<<2)|0);\n          $228 = +HEAPF32[$227>>2];\n          $229 = $228 + $199;\n          $230 = $229 >= $$val$i271;\n          $231 = ($$0$i107$i|0)!=(0);\n          $or$cond$i = $230 & $231;\n          if ($or$cond$i) {\n           $232 = (+($$1100$i270|0));\n           $233 = +HEAPF32[$141>>2];\n           $234 = $233 + $232;\n           $235 = (+($$0$i107$i|0));\n           $236 = $234 < $235;\n           if ($236) {\n            break L58;\n           }\n           $237 = +HEAPF32[$142>>2];\n           $238 = $232 - $237;\n           $239 = $238 > $235;\n           if ($239) {\n            break L58;\n           }\n          }\n          $240 = (($217) + 1)|0;\n          $241 = ($240|0)<($160|0);\n          if ($241) {\n           $$0113$i = $226;$$097112$i = $225;$$098111$i = $$1$i269;$$099110$i = $$1100$i270;$217 = $240;\n          } else {\n           $$0$lcssa$i = $226;$$097$lcssa$i = $225;\n           break;\n          }\n         }\n        } else {\n         $$0$lcssa$i = 1;$$097$lcssa$i = $196;\n        }\n        $242 = +HEAPF32[$141>>2];\n        $243 = $242 * $242;\n        $244 = (+($$0$lcssa$i|0));\n        $245 = $243 / $244;\n        $246 = +HEAPF32[$143>>2];\n        $247 = $245 > $246;\n        if (!($247)) {\n         $248 = +HEAPF32[$142>>2];\n         $249 = $248 * $248;\n         $250 = $249 / $244;\n         $251 = $250 > $246;\n         if (!($251)) {\n          $252 = (($$097$lcssa$i|0) / ($$0$lcssa$i|0))&-1;\n          $253 = (+($252|0));\n          $254 = $253 > $246;\n          if ($254) {\n           break;\n          }\n         }\n        }\n        $287 = (($5) + ($$6296<<2)|0);\n        HEAP32[$287>>2] = -200;\n        $288 = (($6) + ($$6296<<2)|0);\n        HEAP32[$288>>2] = -200;\n        break L52;\n       }\n      } while(0);\n      HEAP32[$12>>2] = -200;\n      HEAP32[$13>>2] = -200;\n      HEAP32[$14>>2] = -200;\n      HEAP32[$15>>2] = -200;\n      $255 = (($4) + (($154*56)|0)|0);\n      $256 = (($145) - ($154))|0;\n      $257 = (_fit_line($255,$256,$12,$13,$17)|0);\n      $258 = (($4) + (($145*56)|0)|0);\n      $259 = (($156) - ($145))|0;\n      $260 = (_fit_line($258,$259,$14,$15,$17)|0);\n      $261 = ($257|0)!=(0);\n      if ($261) {\n       HEAP32[$12>>2] = $$$$i262;\n       $262 = HEAP32[$14>>2]|0;\n       HEAP32[$13>>2] = $262;\n      }\n      $263 = ($260|0)==(0);\n      if ($263) {\n       label = 49;\n      } else {\n       $264 = HEAP32[$13>>2]|0;\n       HEAP32[$14>>2] = $264;\n       HEAP32[$15>>2] = $177;\n       if ($261) {\n        $265 = (($5) + ($$6296<<2)|0);\n        HEAP32[$265>>2] = -200;\n        $266 = (($6) + ($$6296<<2)|0);\n        HEAP32[$266>>2] = -200;\n       } else {\n        label = 49;\n       }\n      }\n      L79: do {\n       if ((label|0) == 49) {\n        label = 0;\n        $267 = HEAP32[$12>>2]|0;\n        HEAP32[$164>>2] = $267;\n        $268 = ($147|0)==(0);\n        if ($268) {\n         HEAP32[$5>>2] = $267;\n        }\n        $269 = HEAP32[$13>>2]|0;\n        $270 = (($5) + ($$6296<<2)|0);\n        HEAP32[$270>>2] = $269;\n        $271 = HEAP32[$14>>2]|0;\n        $272 = (($6) + ($$6296<<2)|0);\n        HEAP32[$272>>2] = $271;\n        $273 = HEAP32[$15>>2]|0;\n        HEAP32[$169>>2] = $273;\n        $274 = ($149|0)==(1);\n        if ($274) {\n         HEAP32[$137>>2] = $273;\n        }\n        $275 = $271 & $269;\n        $276 = ($275|0)>(-1);\n        if ($276) {\n         $277 = ($145|0)>(0);\n         L88: do {\n          if ($277) {\n           $$0209290$in = $145;\n           while(1) {\n            $$0209290 = (($$0209290$in) + -1)|0;\n            $279 = (($8) + ($$0209290<<2)|0);\n            $280 = HEAP32[$279>>2]|0;\n            $281 = ($280|0)==($149|0);\n            if (!($281)) {\n             break L88;\n            }\n            HEAP32[$279>>2] = $$6296;\n            $282 = ($$0209290$in|0)>(1);\n            if ($282) {\n             $$0209290$in = $$0209290;\n            } else {\n             break;\n            }\n           }\n          }\n         } while(0);\n         $$1210292 = (($145) + 1)|0;\n         $278 = ($$1210292|0)<($21|0);\n         if ($278) {\n          $$1210293 = $$1210292;\n          while(1) {\n           $283 = (($7) + ($$1210293<<2)|0);\n           $284 = HEAP32[$283>>2]|0;\n           $285 = ($284|0)==($147|0);\n           if (!($285)) {\n            break L79;\n           }\n           HEAP32[$283>>2] = $$6296;\n           $$1210 = (($$1210293) + 1)|0;\n           $286 = ($$1210|0)<($21|0);\n           if ($286) {\n            $$1210293 = $$1210;\n           } else {\n            break;\n           }\n          }\n         }\n        }\n       }\n      } while(0);\n     }\n    } while(0);\n    $289 = (($$6296) + 1)|0;\n    $290 = ($289|0)<($21|0);\n    if ($290) {\n     $$6296 = $289;\n    } else {\n     label = 63;\n     break;\n    }\n   }\n   if ((label|0) == 32) {\n    _exit(1);\n    // unreachable;\n   }\n   else if ((label|0) == 63) {\n    $$pre328 = HEAP32[$5>>2]|0;\n    $$pre329 = HEAP32[$6>>2]|0;\n    $$pre330 = HEAP32[$138>>2]|0;\n    $$pre331 = HEAP32[$137>>2]|0;\n    $293 = $$pre328;$295 = $$pre329;$299 = $$pre330;$301 = $$pre331;\n    break;\n   }\n  } else {\n   $293 = $135;$295 = $135;$299 = $136;$301 = $136;\n  }\n } while(0);\n $291 = $21 << 2;\n $292 = (__vorbis_block_alloc($0,$291)|0);\n $294 = ($293|0)<(0);\n $296 = ($295|0)<(0);\n $297 = (($295) + ($293))|0;\n $298 = $297 >> 1;\n $$$i217 = $296 ? $293 : $298;\n $$$$i217 = $294 ? $295 : $$$i217;\n HEAP32[$292>>2] = $$$$i217;\n $300 = ($299|0)<(0);\n $302 = ($301|0)<(0);\n $303 = (($301) + ($299))|0;\n $304 = $303 >> 1;\n $$$i215 = $302 ? $299 : $304;\n $305 = $300 ? $301 : $$$i215;\n $306 = ((($292)) + 4|0);\n HEAP32[$306>>2] = $305;\n if ($139) {\n  $$7288 = 2;\n  while(1) {\n   $307 = (($$7288) + -2)|0;\n   $308 = (((($1)) + 1032|0) + ($307<<2)|0);\n   $309 = HEAP32[$308>>2]|0;\n   $310 = (((($1)) + 780|0) + ($307<<2)|0);\n   $311 = HEAP32[$310>>2]|0;\n   $312 = (((($17)) + 836|0) + ($309<<2)|0);\n   $313 = HEAP32[$312>>2]|0;\n   $314 = (((($17)) + 836|0) + ($311<<2)|0);\n   $315 = HEAP32[$314>>2]|0;\n   $316 = (($292) + ($309<<2)|0);\n   $317 = HEAP32[$316>>2]|0;\n   $318 = (($292) + ($311<<2)|0);\n   $319 = HEAP32[$318>>2]|0;\n   $320 = (((($17)) + 836|0) + ($$7288<<2)|0);\n   $321 = HEAP32[$320>>2]|0;\n   $322 = $317 & 32767;\n   $323 = $319 & 32767;\n   $324 = (($323) - ($322))|0;\n   $325 = (($315) - ($313))|0;\n   $ispos$i = ($324|0)>(-1);\n   $neg$i = (0 - ($324))|0;\n   $326 = $ispos$i ? $324 : $neg$i;\n   $327 = (($321) - ($313))|0;\n   $328 = Math_imul($326, $327)|0;\n   $329 = (($328|0) / ($325|0))&-1;\n   $330 = ($324|0)<(0);\n   $331 = (0 - ($329))|0;\n   $$0$p$i = $330 ? $331 : $329;\n   $$0$i = (($$0$p$i) + ($322))|0;\n   $332 = (($5) + ($$7288<<2)|0);\n   $333 = HEAP32[$332>>2]|0;\n   $334 = ($333|0)<(0);\n   $335 = (($6) + ($$7288<<2)|0);\n   $336 = HEAP32[$335>>2]|0;\n   $337 = ($336|0)<(0);\n   $338 = (($336) + ($333))|0;\n   $339 = $338 >> 1;\n   $$$i = $337 ? $333 : $339;\n   $$$$i = $334 ? $336 : $$$i;\n   $340 = ($$$$i|0)<(0);\n   $341 = ($$0$i|0)==($$$$i|0);\n   $or$cond214 = $340 | $341;\n   $342 = $$0$i | 32768;\n   $$sink = $or$cond214 ? $342 : $$$$i;\n   $$sink6 = (($292) + ($$7288<<2)|0);\n   HEAP32[$$sink6>>2] = $$sink;\n   $343 = (($$7288) + 1)|0;\n   $exitcond = ($343|0)==($21|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$7288 = $343;\n   }\n  }\n }\n $$0213 = $292;\n STACKTOP = sp;return ($$0213|0);\n}\nfunction _fit_line($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0 = 0, $$0$ph = 0, $$0137$lcssa = 0.0, $$0137158 = 0.0, $$0138$lcssa = 0.0, $$0138157 = 0.0, $$0141$lcssa = 0.0, $$0141156 = 0.0, $$0146$lcssa = 0.0, $$0146155 = 0.0, $$0149154 = 0, $$0150$lcssa = 0.0, $$0150153 = 0.0, $$1 = 0.0, $$1139 = 0.0, $$1142 = 0.0, $$1147 = 0.0, $$1151 = 0.0, $$2 = 0.0, $$2140 = 0.0;\n var $$2143 = 0.0, $$2148 = 0.0, $$2152 = 0.0, $$pr = 0, $$pre = 0, $$pre167 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0.0, $110 = 0.0, $111 = 0.0;\n var $112 = 0.0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0;\n var $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0;\n var $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0;\n var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0.0;\n var $77 = 0.0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0;\n var $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = HEAP32[$0>>2]|0;\n $6 = (($1) + -1)|0;\n $7 = (((($0) + (($6*56)|0)|0)) + 4|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($1|0)>(0);\n if ($9) {\n  $10 = ((($4)) + 1108|0);\n  $11 = +HEAPF32[$10>>2];\n  $$0137158 = 0.0;$$0138157 = 0.0;$$0141156 = 0.0;$$0146155 = 0.0;$$0149154 = 0;$$0150153 = 0.0;\n  while(1) {\n   $12 = (((($0) + (($$0149154*56)|0)|0)) + 52|0);\n   $13 = HEAP32[$12>>2]|0;\n   $14 = (((($0) + (($$0149154*56)|0)|0)) + 28|0);\n   $15 = HEAP32[$14>>2]|0;\n   $16 = (($15) + ($13))|0;\n   $17 = (+($16|0));\n   $18 = $17 * $11;\n   $19 = (($15) + 1)|0;\n   $20 = (+($19|0));\n   $21 = $18 / $20;\n   $22 = $21;\n   $23 = $22 + 1.0;\n   $24 = (((($0) + (($$0149154*56)|0)|0)) + 32|0);\n   $25 = HEAP32[$24>>2]|0;\n   $26 = (+($25|0));\n   $27 = (((($0) + (($$0149154*56)|0)|0)) + 8|0);\n   $28 = HEAP32[$27>>2]|0;\n   $29 = (+($28|0));\n   $30 = $23 * $29;\n   $31 = $26 + $$0137158;\n   $32 = $31 + $30;\n   $33 = (((($0) + (($$0149154*56)|0)|0)) + 36|0);\n   $34 = HEAP32[$33>>2]|0;\n   $35 = (+($34|0));\n   $36 = (((($0) + (($$0149154*56)|0)|0)) + 12|0);\n   $37 = HEAP32[$36>>2]|0;\n   $38 = (+($37|0));\n   $39 = $38 * $23;\n   $40 = $35 + $$0138157;\n   $41 = $40 + $39;\n   $42 = (((($0) + (($$0149154*56)|0)|0)) + 40|0);\n   $43 = HEAP32[$42>>2]|0;\n   $44 = (+($43|0));\n   $45 = (((($0) + (($$0149154*56)|0)|0)) + 16|0);\n   $46 = HEAP32[$45>>2]|0;\n   $47 = (+($46|0));\n   $48 = $47 * $23;\n   $49 = $44 + $$0141156;\n   $50 = $49 + $48;\n   $51 = (((($0) + (($$0149154*56)|0)|0)) + 48|0);\n   $52 = HEAP32[$51>>2]|0;\n   $53 = (+($52|0));\n   $54 = (((($0) + (($$0149154*56)|0)|0)) + 24|0);\n   $55 = HEAP32[$54>>2]|0;\n   $56 = (+($55|0));\n   $57 = $56 * $23;\n   $58 = $53 + $$0146155;\n   $59 = $58 + $57;\n   $60 = (+($13|0));\n   $61 = (+($15|0));\n   $62 = $23 * $61;\n   $63 = $60 + $$0150153;\n   $64 = $63 + $62;\n   $65 = (($$0149154) + 1)|0;\n   $exitcond = ($65|0)==($1|0);\n   if ($exitcond) {\n    $$0137$lcssa = $32;$$0138$lcssa = $41;$$0141$lcssa = $50;$$0146$lcssa = $59;$$0150$lcssa = $64;\n    break;\n   } else {\n    $$0137158 = $32;$$0138157 = $41;$$0141156 = $50;$$0146155 = $59;$$0149154 = $65;$$0150153 = $64;\n   }\n  }\n } else {\n  $$0137$lcssa = 0.0;$$0138$lcssa = 0.0;$$0141$lcssa = 0.0;$$0146$lcssa = 0.0;$$0150$lcssa = 0.0;\n }\n $66 = HEAP32[$2>>2]|0;\n $67 = ($66|0)>(-1);\n if ($67) {\n  $68 = (+($5|0));\n  $69 = $$0137$lcssa + $68;\n  $70 = (+($66|0));\n  $71 = $70 + $$0138$lcssa;\n  $72 = Math_imul($5, $5)|0;\n  $73 = (+($72|0));\n  $74 = $$0141$lcssa + $73;\n  $75 = Math_imul($66, $5)|0;\n  $76 = (+($75|0));\n  $77 = $76 + $$0146$lcssa;\n  $78 = $$0150$lcssa + 1.0;\n  $$1 = $69;$$1139 = $71;$$1142 = $74;$$1147 = $77;$$1151 = $78;\n } else {\n  $$1 = $$0137$lcssa;$$1139 = $$0138$lcssa;$$1142 = $$0141$lcssa;$$1147 = $$0146$lcssa;$$1151 = $$0150$lcssa;\n }\n $79 = HEAP32[$3>>2]|0;\n $80 = ($79|0)>(-1);\n if ($80) {\n  $81 = (+($8|0));\n  $82 = $$1 + $81;\n  $83 = (+($79|0));\n  $84 = $83 + $$1139;\n  $85 = Math_imul($8, $8)|0;\n  $86 = (+($85|0));\n  $87 = $$1142 + $86;\n  $88 = Math_imul($79, $8)|0;\n  $89 = (+($88|0));\n  $90 = $89 + $$1147;\n  $91 = $$1151 + 1.0;\n  $$2 = $82;$$2140 = $84;$$2143 = $87;$$2148 = $90;$$2152 = $91;\n } else {\n  $$2 = $$1;$$2140 = $$1139;$$2143 = $$1142;$$2148 = $$1147;$$2152 = $$1151;\n }\n $92 = $$2143 * $$2152;\n $93 = $$2 * $$2;\n $94 = $92 - $93;\n $95 = $94 > 0.0;\n if ($95) {\n  $96 = $$2140 * $$2143;\n  $97 = $$2 * $$2148;\n  $98 = $96 - $97;\n  $99 = $98 / $94;\n  $100 = $$2148 * $$2152;\n  $101 = $$2 * $$2140;\n  $102 = $100 - $101;\n  $103 = $102 / $94;\n  $104 = (+($5|0));\n  $105 = $103 * $104;\n  $106 = $105 + $99;\n  $107 = (+_rint($106));\n  $108 = (~~(($107)));\n  HEAP32[$2>>2] = $108;\n  $109 = (+($8|0));\n  $110 = $103 * $109;\n  $111 = $110 + $99;\n  $112 = (+_rint($111));\n  $113 = (~~(($112)));\n  HEAP32[$3>>2] = $113;\n  $114 = HEAP32[$2>>2]|0;\n  $115 = ($114|0)>(1023);\n  if ($115) {\n   HEAP32[$2>>2] = 1023;\n   $$pr = HEAP32[$3>>2]|0;\n   $116 = $$pr;$122 = 1023;\n  } else {\n   $116 = $113;$122 = $114;\n  }\n  $117 = ($116|0)>(1023);\n  if ($117) {\n   HEAP32[$3>>2] = 1023;\n   $$pre = HEAP32[$2>>2]|0;\n   $118 = $$pre;$123 = 1023;\n  } else {\n   $118 = $122;$123 = $116;\n  }\n  $119 = ($118|0)<(0);\n  if ($119) {\n   HEAP32[$2>>2] = 0;\n   $$pre167 = HEAP32[$3>>2]|0;\n   $120 = $$pre167;\n  } else {\n   $120 = $123;\n  }\n  $121 = ($120|0)<(0);\n  if ($121) {\n   $$0$ph = 0;\n  } else {\n   $$0 = 0;\n   return ($$0|0);\n  }\n } else {\n  HEAP32[$2>>2] = 0;\n  $$0$ph = 1;\n }\n HEAP32[$3>>2] = 0;\n $$0 = $$0$ph;\n return ($$0|0);\n}\nfunction _floor1_interpolate_fit($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0 = 0, $$02829 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ((($1)) + 1284|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($2|0)!=(0|0);\n $8 = ($3|0)!=(0|0);\n $or$cond = $7 & $8;\n if (!($or$cond)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $9 = $6 << 2;\n $10 = (__vorbis_block_alloc($0,$9)|0);\n $11 = ($6|0)>(0);\n if (!($11)) {\n  $$0 = $10;\n  return ($$0|0);\n }\n $12 = (65536 - ($4))|0;\n $$02829 = 0;\n while(1) {\n  $13 = (($2) + ($$02829<<2)|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = $14 & 32767;\n  $16 = Math_imul($15, $12)|0;\n  $17 = (($3) + ($$02829<<2)|0);\n  $18 = HEAP32[$17>>2]|0;\n  $19 = $18 & 32767;\n  $20 = Math_imul($19, $4)|0;\n  $21 = (($16) + 32768)|0;\n  $22 = (($21) + ($20))|0;\n  $23 = $22 >> 16;\n  $24 = (($10) + ($$02829<<2)|0);\n  HEAP32[$24>>2] = $23;\n  $25 = HEAP32[$13>>2]|0;\n  $26 = $25 & 32768;\n  $27 = ($26|0)==(0);\n  if (!($27)) {\n   $28 = HEAP32[$17>>2]|0;\n   $29 = $28 & 32768;\n   $30 = ($29|0)==(0);\n   if (!($30)) {\n    $31 = $23 | 32768;\n    HEAP32[$24>>2] = $31;\n   }\n  }\n  $32 = (($$02829) + 1)|0;\n  $exitcond = ($32|0)==($6|0);\n  if ($exitcond) {\n   $$0 = $10;\n   break;\n  } else {\n   $$02829 = $32;\n  }\n }\n return ($$0|0);\n}\nfunction _floor1_encode($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$i277 = 0, $$0$p$i = 0, $$0256316 = 0, $$0257$lcssa = 0, $$0257288 = 0, $$0259287 = 0, $$0261$lcssa = 0, $$0261286 = 0, $$0263302 = 0, $$0267 = 0, $$0268 = 0, $$0269293$us = 0, $$0270291 = 0, $$0273296 = 0, $$0273296$us = 0, $$0274$lcssa = 0;\n var $$0274295 = 0, $$0274295$us = 0, $$052$i = 0, $$055$i = 0, $$1$i = 0, $$1258 = 0, $$1260 = 0, $$1262 = 0, $$1264285 = 0, $$1271297 = 0, $$1271297$us = 0, $$1311 = 0, $$153$i = 0, $$156$i = 0, $$2$i = 0, $$2265284 = 0, $$2272299 = 0, $$2307 = 0, $$254$i = 0, $$phi$trans$insert = 0;\n var $$pn$i = 0, $$pre = 0, $$pre326 = 0, $$pre327 = 0, $$pre328 = 0, $$sink = 0, $$sink1$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;\n var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;\n var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;\n var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;\n var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;\n var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;\n var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;\n var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;\n var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;\n var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond322 = 0, $exitcond323 = 0, $exitcond324 = 0, $exitcond325 = 0;\n var $ispos$i = 0, $ispos$i275 = 0, $ispos58$i = 0, $neg$i = 0, $neg$i276 = 0, $neg59$i = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);\n $5 = sp + 64|0;\n $6 = sp + 32|0;\n $7 = sp;\n $8 = ((($2)) + 1296|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($2)) + 1284|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($1)) + 64|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ((($13)) + 4|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ((($15)) + 28|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ((($17)) + 2848|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($3|0)==(0|0);\n if ($20) {\n  _oggpack_write($0,0,1);\n  $228 = ((($1)) + 36|0);\n  $229 = HEAP32[$228>>2]|0;\n  $230 = (($229|0) / 2)&-1;\n  $231 = $230 << 2;\n  _memset(($4|0),0,($231|0))|0;\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $21 = ($11|0)>(0);\n L5: do {\n  if ($21) {\n   $22 = ((($9)) + 832|0);\n   $$0256316 = 0;\n   while(1) {\n    $23 = (($3) + ($$0256316<<2)|0);\n    $24 = HEAP32[$23>>2]|0;\n    $25 = $24 & 32767;\n    $26 = HEAP32[$22>>2]|0;\n    switch ($26|0) {\n    case 1:  {\n     $27 = $25 >>> 2;\n     $$0267 = $27;\n     break;\n    }\n    case 2:  {\n     $28 = $25 >>> 3;\n     $$0267 = $28;\n     break;\n    }\n    case 3:  {\n     $29 = (($25>>>0) / 12)&-1;\n     $$0267 = $29;\n     break;\n    }\n    case 4:  {\n     $30 = $25 >>> 4;\n     $$0267 = $30;\n     break;\n    }\n    default: {\n     $$0267 = $25;\n    }\n    }\n    $31 = $24 & 32768;\n    $32 = $31 | $$0267;\n    HEAP32[$23>>2] = $32;\n    $33 = (($$0256316) + 1)|0;\n    $exitcond325 = ($33|0)==($11|0);\n    if ($exitcond325) {\n     break L5;\n    } else {\n     $$0256316 = $33;\n    }\n   }\n  }\n } while(0);\n $34 = HEAP32[$3>>2]|0;\n HEAP32[$5>>2] = $34;\n $35 = ((($3)) + 4|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = ((($5)) + 4|0);\n HEAP32[$37>>2] = $36;\n $38 = ($11|0)>(2);\n $39 = ((($2)) + 1292|0);\n if ($38) {\n  $$1311 = 2;\n  while(1) {\n   $40 = (($$1311) + -2)|0;\n   $41 = (((($2)) + 1032|0) + ($40<<2)|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = (((($2)) + 780|0) + ($40<<2)|0);\n   $44 = HEAP32[$43>>2]|0;\n   $45 = (((($9)) + 836|0) + ($42<<2)|0);\n   $46 = HEAP32[$45>>2]|0;\n   $47 = (((($9)) + 836|0) + ($44<<2)|0);\n   $48 = HEAP32[$47>>2]|0;\n   $49 = (($3) + ($42<<2)|0);\n   $50 = HEAP32[$49>>2]|0;\n   $51 = (($3) + ($44<<2)|0);\n   $52 = HEAP32[$51>>2]|0;\n   $53 = (((($9)) + 836|0) + ($$1311<<2)|0);\n   $54 = HEAP32[$53>>2]|0;\n   $55 = $50 & 32767;\n   $56 = $52 & 32767;\n   $57 = (($56) - ($55))|0;\n   $58 = (($48) - ($46))|0;\n   $ispos$i = ($57|0)>(-1);\n   $neg$i = (0 - ($57))|0;\n   $59 = $ispos$i ? $57 : $neg$i;\n   $60 = (($54) - ($46))|0;\n   $61 = Math_imul($59, $60)|0;\n   $62 = (($61|0) / ($58|0))&-1;\n   $63 = ($57|0)<(0);\n   $64 = (0 - ($62))|0;\n   $$0$p$i = $63 ? $64 : $62;\n   $$0$i = (($$0$p$i) + ($55))|0;\n   $65 = (($3) + ($$1311<<2)|0);\n   $66 = HEAP32[$65>>2]|0;\n   $67 = $66 & 32768;\n   $68 = ($67|0)!=(0);\n   $69 = ($66|0)==($$0$i|0);\n   $or$cond = $68 | $69;\n   if ($or$cond) {\n    $70 = $$0$i | 32768;\n    HEAP32[$65>>2] = $70;\n    $71 = (($5) + ($$1311<<2)|0);\n    HEAP32[$71>>2] = 0;\n   } else {\n    $72 = HEAP32[$39>>2]|0;\n    $73 = (($72) - ($$0$i))|0;\n    $74 = ($73|0)<($$0$i|0);\n    $$ = $74 ? $73 : $$0$i;\n    $75 = (($66) - ($$0$i))|0;\n    $76 = ($75|0)<(0);\n    do {\n     if ($76) {\n      $77 = (0 - ($$))|0;\n      $78 = ($75|0)<($77|0);\n      if ($78) {\n       $79 = $75 ^ -1;\n       $80 = (($$) + ($79))|0;\n       $$0268 = $80;\n       break;\n      } else {\n       $81 = $75 << 1;\n       $82 = $81 ^ -1;\n       $$0268 = $82;\n       break;\n      }\n     } else {\n      $83 = ($$|0)>($75|0);\n      if ($83) {\n       $85 = $75 << 1;\n       $$0268 = $85;\n       break;\n      } else {\n       $84 = (($$) + ($75))|0;\n       $$0268 = $84;\n       break;\n      }\n     }\n    } while(0);\n    $86 = (($5) + ($$1311<<2)|0);\n    HEAP32[$86>>2] = $$0268;\n    HEAP32[$49>>2] = $55;\n    $87 = HEAP32[$51>>2]|0;\n    $88 = $87 & 32767;\n    HEAP32[$51>>2] = $88;\n   }\n   $89 = (($$1311) + 1)|0;\n   $exitcond324 = ($89|0)==($11|0);\n   if ($exitcond324) {\n    break;\n   } else {\n    $$1311 = $89;\n   }\n  }\n  $$pre = HEAP32[$5>>2]|0;\n  $$pre326 = HEAP32[$37>>2]|0;\n  $103 = $$pre;$107 = $$pre326;\n } else {\n  $103 = $34;$107 = $36;\n }\n _oggpack_write($0,1,1);\n $90 = ((($2)) + 1308|0);\n $91 = HEAP32[$90>>2]|0;\n $92 = (($91) + 1)|0;\n HEAP32[$90>>2] = $92;\n $93 = HEAP32[$39>>2]|0;\n $94 = (($93) + -1)|0;\n $95 = (_ov_ilog($94)|0);\n $96 = $95 << 1;\n $97 = ((($2)) + 1304|0);\n $98 = HEAP32[$97>>2]|0;\n $99 = (($98) + ($96))|0;\n HEAP32[$97>>2] = $99;\n $100 = HEAP32[$39>>2]|0;\n $101 = (($100) + -1)|0;\n $102 = (_ov_ilog($101)|0);\n _oggpack_write($0,$103,$102);\n $104 = HEAP32[$39>>2]|0;\n $105 = (($104) + -1)|0;\n $106 = (_ov_ilog($105)|0);\n _oggpack_write($0,$107,$106);\n $108 = HEAP32[$9>>2]|0;\n $109 = ($108|0)>(0);\n if ($109) {\n  $110 = ((($2)) + 1300|0);\n  $$0263302 = 2;$$2307 = 0;\n  while(1) {\n   $111 = (((($9)) + 4|0) + ($$2307<<2)|0);\n   $112 = HEAP32[$111>>2]|0;\n   $113 = (((($9)) + 128|0) + ($112<<2)|0);\n   $114 = HEAP32[$113>>2]|0;\n   $115 = (((($9)) + 192|0) + ($112<<2)|0);\n   $116 = HEAP32[$115>>2]|0;\n   $117 = 1 << $116;\n   ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;HEAP32[$6+16>>2]=0|0;HEAP32[$6+20>>2]=0|0;HEAP32[$6+24>>2]=0|0;HEAP32[$6+28>>2]=0|0;\n   $118 = ($116|0)==(0);\n   if (!($118)) {\n    ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;HEAP32[$7+12>>2]=0|0;HEAP32[$7+16>>2]=0|0;HEAP32[$7+20>>2]=0|0;HEAP32[$7+24>>2]=0|0;HEAP32[$7+28>>2]=0|0;\n    $119 = ($116|0)==(31);\n    if (!($119)) {\n     $$0270291 = 0;\n     while(1) {\n      $135 = ((((($9)) + 320|0) + ($112<<5)|0) + ($$0270291<<2)|0);\n      $136 = HEAP32[$135>>2]|0;\n      $137 = ($136|0)<(0);\n      if ($137) {\n       $$sink = 1;\n      } else {\n       $138 = (((($17)) + 1824|0) + ($136<<2)|0);\n       $139 = HEAP32[$138>>2]|0;\n       $140 = ((($139)) + 4|0);\n       $141 = HEAP32[$140>>2]|0;\n       $$sink = $141;\n      }\n      $142 = (($7) + ($$0270291<<2)|0);\n      HEAP32[$142>>2] = $$sink;\n      $143 = (($$0270291) + 1)|0;\n      $144 = ($143|0)<($117|0);\n      if ($144) {\n       $$0270291 = $143;\n      } else {\n       break;\n      }\n     }\n    }\n    $120 = ($114|0)>(0);\n    L48: do {\n     if ($120) {\n      if ($119) {\n       $$0273296 = 0;$$0274295 = 0;$$1271297 = 0;\n       while(1) {\n        $145 = (($6) + ($$1271297<<2)|0);\n        $146 = HEAP32[$145>>2]|0;\n        $147 = $146 << $$0273296;\n        $148 = $147 | $$0274295;\n        $149 = (($$0273296) + 31)|0;\n        $150 = (($$1271297) + 1)|0;\n        $exitcond322 = ($150|0)==($114|0);\n        if ($exitcond322) {\n         $$0274$lcssa = $148;\n         break L48;\n        } else {\n         $$0273296 = $149;$$0274295 = $148;$$1271297 = $150;\n        }\n       }\n      } else {\n       $$0273296$us = 0;$$0274295$us = 0;$$1271297$us = 0;\n      }\n      while(1) {\n       $121 = (($$1271297$us) + ($$0263302))|0;\n       $122 = (($5) + ($121<<2)|0);\n       $123 = HEAP32[$122>>2]|0;\n       $$0269293$us = 0;\n       while(1) {\n        $124 = (($7) + ($$0269293$us<<2)|0);\n        $125 = HEAP32[$124>>2]|0;\n        $126 = ($123|0)<($125|0);\n        if ($126) {\n         label = 32;\n         break;\n        }\n        $127 = (($$0269293$us) + 1)|0;\n        $128 = ($127|0)<($117|0);\n        if ($128) {\n         $$0269293$us = $127;\n        } else {\n         label = 33;\n         break;\n        }\n       }\n       if ((label|0) == 32) {\n        label = 0;\n        $129 = (($6) + ($$1271297$us<<2)|0);\n        HEAP32[$129>>2] = $$0269293$us;\n        $131 = $$0269293$us;\n       }\n       else if ((label|0) == 33) {\n        label = 0;\n        $$phi$trans$insert = (($6) + ($$1271297$us<<2)|0);\n        $$pre327 = HEAP32[$$phi$trans$insert>>2]|0;\n        $131 = $$pre327;\n       }\n       $130 = $131 << $$0273296$us;\n       $132 = $130 | $$0274295$us;\n       $133 = (($$0273296$us) + ($116))|0;\n       $134 = (($$1271297$us) + 1)|0;\n       $exitcond = ($134|0)==($114|0);\n       if ($exitcond) {\n        $$0274$lcssa = $132;\n        break;\n       } else {\n        $$0273296$us = $133;$$0274295$us = $132;$$1271297$us = $134;\n       }\n      }\n     } else {\n      $$0274$lcssa = 0;\n     }\n    } while(0);\n    $151 = (((($9)) + 256|0) + ($112<<2)|0);\n    $152 = HEAP32[$151>>2]|0;\n    $153 = (($19) + (($152*56)|0)|0);\n    $154 = (_vorbis_book_encode($153,$$0274$lcssa,$0)|0);\n    $155 = HEAP32[$110>>2]|0;\n    $156 = (($155) + ($154))|0;\n    HEAP32[$110>>2] = $156;\n   }\n   $157 = ($114|0)>(0);\n   if ($157) {\n    $$2272299 = 0;\n    while(1) {\n     $158 = (($6) + ($$2272299<<2)|0);\n     $159 = HEAP32[$158>>2]|0;\n     $160 = ((((($9)) + 320|0) + ($112<<5)|0) + ($159<<2)|0);\n     $161 = HEAP32[$160>>2]|0;\n     $162 = ($161|0)>(-1);\n     if ($162) {\n      $163 = (($$2272299) + ($$0263302))|0;\n      $164 = (($5) + ($163<<2)|0);\n      $165 = HEAP32[$164>>2]|0;\n      $166 = (((($19) + (($161*56)|0)|0)) + 4|0);\n      $167 = HEAP32[$166>>2]|0;\n      $168 = ($165|0)<($167|0);\n      if ($168) {\n       $169 = (($19) + (($161*56)|0)|0);\n       $170 = (_vorbis_book_encode($169,$165,$0)|0);\n       $171 = HEAP32[$97>>2]|0;\n       $172 = (($171) + ($170))|0;\n       HEAP32[$97>>2] = $172;\n      }\n     }\n     $173 = (($$2272299) + 1)|0;\n     $exitcond323 = ($173|0)==($114|0);\n     if ($exitcond323) {\n      break;\n     } else {\n      $$2272299 = $173;\n     }\n    }\n   }\n   $174 = (($114) + ($$0263302))|0;\n   $175 = (($$2307) + 1)|0;\n   $176 = HEAP32[$9>>2]|0;\n   $177 = ($175|0)<($176|0);\n   if ($177) {\n    $$0263302 = $174;$$2307 = $175;\n   } else {\n    break;\n   }\n  }\n }\n $178 = HEAP32[$3>>2]|0;\n $179 = ((($9)) + 832|0);\n $180 = HEAP32[$179>>2]|0;\n $181 = Math_imul($180, $178)|0;\n $182 = ((($1)) + 28|0);\n $183 = HEAP32[$182>>2]|0;\n $184 = (($17) + ($183<<2)|0);\n $185 = HEAP32[$184>>2]|0;\n $186 = (($185|0) / 2)&-1;\n $187 = HEAP32[$10>>2]|0;\n $188 = ($187|0)>(1);\n if ($188) {\n  $$0257288 = $181;$$0259287 = 0;$$0261286 = 0;$$1264285 = 1;$232 = $187;\n  while(1) {\n   $193 = (((($2)) + 260|0) + ($$1264285<<2)|0);\n   $194 = HEAP32[$193>>2]|0;\n   $195 = (($3) + ($194<<2)|0);\n   $196 = HEAP32[$195>>2]|0;\n   $197 = $196 & 32767;\n   $198 = ($197|0)==($196|0);\n   if ($198) {\n    $199 = HEAP32[$179>>2]|0;\n    $200 = Math_imul($199, $196)|0;\n    $201 = (((($9)) + 836|0) + ($194<<2)|0);\n    $202 = HEAP32[$201>>2]|0;\n    $203 = (($200) - ($$0257288))|0;\n    $204 = (($202) - ($$0259287))|0;\n    $ispos$i275 = ($203|0)>(-1);\n    $neg$i276 = (0 - ($203))|0;\n    $205 = $ispos$i275 ? $203 : $neg$i276;\n    $206 = (($203|0) / ($204|0))&-1;\n    $207 = $203 >> 31;\n    $208 = $207 | 1;\n    $209 = Math_imul($206, $204)|0;\n    $ispos58$i = ($209|0)>(-1);\n    $neg59$i = (0 - ($209))|0;\n    $210 = $ispos58$i ? $209 : $neg59$i;\n    $211 = (($205) - ($210))|0;\n    $212 = ($186|0)>($202|0);\n    $$$i = $212 ? $202 : $186;\n    $213 = ($$$i|0)>($$0259287|0);\n    if ($213) {\n     $$0$i277 = 0;$$052$i = $$0257288;$$055$i = $$0259287;\n     label = 50;\n    } else {\n     $$1$i = 0;$$153$i = $$0257288;$$156$i = $$0259287;\n    }\n    while(1) {\n     if ((label|0) == 50) {\n      label = 0;\n      $$sink1$i = (($4) + ($$055$i<<2)|0);\n      HEAP32[$$sink1$i>>2] = $$052$i;\n      $$1$i = $$0$i277;$$153$i = $$052$i;$$156$i = $$055$i;\n     }\n     $214 = (($$156$i) + 1)|0;\n     $215 = ($214|0)<($$$i|0);\n     if (!($215)) {\n      break;\n     }\n     $216 = (($$1$i) + ($211))|0;\n     $217 = ($216|0)<($204|0);\n     $218 = $217 ? 0 : $208;\n     $219 = $217 ? 0 : $204;\n     $$2$i = (($216) - ($219))|0;\n     $$pn$i = (($$153$i) + ($206))|0;\n     $$254$i = (($$pn$i) + ($218))|0;\n     $$0$i277 = $$2$i;$$052$i = $$254$i;$$055$i = $214;\n     label = 50;\n    }\n    $$pre328 = HEAP32[$10>>2]|0;\n    $$1258 = $200;$$1260 = $202;$$1262 = $202;$222 = $$pre328;\n   } else {\n    $$1258 = $$0257288;$$1260 = $$0259287;$$1262 = $$0261286;$222 = $232;\n   }\n   $220 = (($$1264285) + 1)|0;\n   $221 = ($220|0)<($222|0);\n   if ($221) {\n    $$0257288 = $$1258;$$0259287 = $$1260;$$0261286 = $$1262;$$1264285 = $220;$232 = $222;\n   } else {\n    $$0257$lcssa = $$1258;$$0261$lcssa = $$1262;\n    break;\n   }\n  }\n } else {\n  $$0257$lcssa = $181;$$0261$lcssa = 0;\n }\n $189 = ((($1)) + 36|0);\n $190 = HEAP32[$189>>2]|0;\n $191 = (($190|0) / 2)&-1;\n $192 = ($$0261$lcssa|0)<($191|0);\n if ($192) {\n  $$2265284 = $$0261$lcssa;\n } else {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n while(1) {\n  $223 = (($4) + ($$2265284<<2)|0);\n  HEAP32[$223>>2] = $$0257$lcssa;\n  $224 = (($$2265284) + 1)|0;\n  $225 = HEAP32[$189>>2]|0;\n  $226 = (($225|0) / 2)&-1;\n  $227 = ($224|0)<($226|0);\n  if ($227) {\n   $$2265284 = $224;\n  } else {\n   $$0 = 1;\n   break;\n  }\n }\n STACKTOP = sp;return ($$0|0);\n}\nfunction _vorbis_comment_init($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;\n return;\n}\nfunction _vorbis_comment_add_tag($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $endptr = 0, $strlen = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_strlen($1)|0);\n $4 = (_strlen($2)|0);\n $5 = (($3) + 2)|0;\n $6 = (($5) + ($4))|0;\n $$alloca_mul = $6;\n $7 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n (_strcpy($7,$1)|0);\n $strlen = (_strlen($7)|0);\n $endptr = (($7) + ($strlen)|0);\n HEAP8[$endptr>>0]=61&255;HEAP8[$endptr+1>>0]=61>>8;\n (_strcat($7,$2)|0);\n $8 = HEAP32[$0>>2]|0;\n $9 = ((($0)) + 8|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = $10 << 2;\n $12 = (($11) + 8)|0;\n $13 = (_realloc($8,$12)|0);\n HEAP32[$0>>2] = $13;\n $14 = ((($0)) + 4|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = HEAP32[$9>>2]|0;\n $17 = $16 << 2;\n $18 = (($17) + 8)|0;\n $19 = (_realloc($15,$18)|0);\n HEAP32[$14>>2] = $19;\n $20 = (_strlen($7)|0);\n $21 = HEAP32[$9>>2]|0;\n $22 = (($19) + ($21<<2)|0);\n HEAP32[$22>>2] = $20;\n $23 = (($20) + 1)|0;\n $24 = (_malloc($23)|0);\n $25 = HEAP32[$0>>2]|0;\n $26 = (($25) + ($21<<2)|0);\n HEAP32[$26>>2] = $24;\n $27 = HEAP32[$0>>2]|0;\n $28 = (($27) + ($21<<2)|0);\n $29 = HEAP32[$28>>2]|0;\n (_strcpy($29,$7)|0);\n $30 = HEAP32[$9>>2]|0;\n $31 = (($30) + 1)|0;\n HEAP32[$9>>2] = $31;\n $32 = HEAP32[$0>>2]|0;\n $33 = (($32) + ($31<<2)|0);\n HEAP32[$33>>2] = 0;\n STACKTOP = sp;return;\n}\nfunction _vorbis_comment_clear($0) {\n $0 = $0|0;\n var $$014 = 0, $$lcssa = 0, $$pre = 0, $$pre16 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = HEAP32[$0>>2]|0;\n $3 = ($2|0)==(0|0);\n if (!($3)) {\n  $4 = ((($0)) + 8|0);\n  $5 = HEAP32[$4>>2]|0;\n  $6 = ($5|0)>(0);\n  if ($6) {\n   $$014 = 0;$20 = $5;$8 = $2;\n   while(1) {\n    $7 = (($8) + ($$014<<2)|0);\n    $9 = HEAP32[$7>>2]|0;\n    $10 = ($9|0)==(0|0);\n    if ($10) {\n     $13 = $20;$21 = $8;\n    } else {\n     _free($9);\n     $$pre = HEAP32[$4>>2]|0;\n     $$pre16 = HEAP32[$0>>2]|0;\n     $13 = $$pre;$21 = $$pre16;\n    }\n    $11 = (($$014) + 1)|0;\n    $12 = ($11|0)<($13|0);\n    if ($12) {\n     $$014 = $11;$20 = $13;$8 = $21;\n    } else {\n     $$lcssa = $21;\n     break;\n    }\n   }\n  } else {\n   $$lcssa = $2;\n  }\n  _free($$lcssa);\n }\n $14 = ((($0)) + 4|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ($15|0)==(0|0);\n if (!($16)) {\n  _free($15);\n }\n $17 = ((($0)) + 12|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ($18|0)==(0|0);\n if (!($19)) {\n  _free($18);\n }\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;\n return;\n}\nfunction _vorbis_info_init($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;\n $1 = (_calloc(1,3664)|0);\n $2 = ((($0)) + 28|0);\n HEAP32[$2>>2] = $1;\n return;\n}\nfunction _vorbis_info_clear($0) {\n $0 = $0|0;\n var $$070 = 0, $$168 = 0, $$266 = 0, $$364 = 0, $$461 = 0, $$560 = 0, $$pre = 0, $$pre$phi77Z2D = 0, $$pre72 = 0, $$pre73 = 0, $$pre74 = 0, $$pre75 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;\n var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 28|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0|0);\n if ($3) {\n  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;HEAP32[$0+28>>2]=0|0;\n  return;\n }\n $4 = ((($2)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)>(0);\n if ($6) {\n  $7 = ((($2)) + 32|0);\n  $$070 = 0;$90 = $5;\n  while(1) {\n   $13 = (($7) + ($$070<<2)|0);\n   $14 = HEAP32[$13>>2]|0;\n   $15 = ($14|0)==(0|0);\n   if ($15) {\n    $18 = $90;\n   } else {\n    _free($14);\n    $$pre = HEAP32[$4>>2]|0;\n    $18 = $$pre;\n   }\n   $16 = (($$070) + 1)|0;\n   $17 = ($16|0)<($18|0);\n   if ($17) {\n    $$070 = $16;$90 = $18;\n   } else {\n    break;\n   }\n  }\n }\n $8 = ((($2)) + 12|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)>(0);\n if ($10) {\n  $11 = ((($2)) + 544|0);\n  $12 = ((($2)) + 288|0);\n  $$168 = 0;$91 = $9;\n  while(1) {\n   $24 = (($11) + ($$168<<2)|0);\n   $25 = HEAP32[$24>>2]|0;\n   $26 = ($25|0)==(0|0);\n   if ($26) {\n    $35 = $91;\n   } else {\n    $27 = (($12) + ($$168<<2)|0);\n    $28 = HEAP32[$27>>2]|0;\n    $29 = (27960 + ($28<<2)|0);\n    $30 = HEAP32[$29>>2]|0;\n    $31 = ((($30)) + 8|0);\n    $32 = HEAP32[$31>>2]|0;\n    FUNCTION_TABLE_vi[$32 & 31]($25);\n    $$pre72 = HEAP32[$8>>2]|0;\n    $35 = $$pre72;\n   }\n   $33 = (($$168) + 1)|0;\n   $34 = ($33|0)<($35|0);\n   if ($34) {\n    $$168 = $33;$91 = $35;\n   } else {\n    break;\n   }\n  }\n }\n $19 = ((($2)) + 16|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = ($20|0)>(0);\n if ($21) {\n  $22 = ((($2)) + 1056|0);\n  $23 = ((($2)) + 800|0);\n  $$266 = 0;$92 = $20;\n  while(1) {\n   $41 = (($22) + ($$266<<2)|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = ($42|0)==(0|0);\n   if ($43) {\n    $52 = $92;\n   } else {\n    $44 = (($23) + ($$266<<2)|0);\n    $45 = HEAP32[$44>>2]|0;\n    $46 = (27940 + ($45<<2)|0);\n    $47 = HEAP32[$46>>2]|0;\n    $48 = ((($47)) + 12|0);\n    $49 = HEAP32[$48>>2]|0;\n    FUNCTION_TABLE_vi[$49 & 31]($42);\n    $$pre73 = HEAP32[$19>>2]|0;\n    $52 = $$pre73;\n   }\n   $50 = (($$266) + 1)|0;\n   $51 = ($50|0)<($52|0);\n   if ($51) {\n    $$266 = $50;$92 = $52;\n   } else {\n    break;\n   }\n  }\n }\n $36 = ((($2)) + 20|0);\n $37 = HEAP32[$36>>2]|0;\n $38 = ($37|0)>(0);\n if ($38) {\n  $39 = ((($2)) + 1568|0);\n  $40 = ((($2)) + 1312|0);\n  $$364 = 0;$93 = $37;\n  while(1) {\n   $58 = (($39) + ($$364<<2)|0);\n   $59 = HEAP32[$58>>2]|0;\n   $60 = ($59|0)==(0|0);\n   if ($60) {\n    $69 = $93;\n   } else {\n    $61 = (($40) + ($$364<<2)|0);\n    $62 = HEAP32[$61>>2]|0;\n    $63 = (27948 + ($62<<2)|0);\n    $64 = HEAP32[$63>>2]|0;\n    $65 = ((($64)) + 12|0);\n    $66 = HEAP32[$65>>2]|0;\n    FUNCTION_TABLE_vi[$66 & 31]($59);\n    $$pre74 = HEAP32[$36>>2]|0;\n    $69 = $$pre74;\n   }\n   $67 = (($$364) + 1)|0;\n   $68 = ($67|0)<($69|0);\n   if ($68) {\n    $$364 = $67;$93 = $69;\n   } else {\n    break;\n   }\n  }\n }\n $53 = ((($2)) + 24|0);\n $54 = HEAP32[$53>>2]|0;\n $55 = ($54|0)>(0);\n if ($55) {\n  $56 = ((($2)) + 1824|0);\n  $57 = ((($2)) + 2848|0);\n  $$461 = 0;\n  while(1) {\n   $70 = (($56) + ($$461<<2)|0);\n   $71 = HEAP32[$70>>2]|0;\n   $72 = ($71|0)==(0|0);\n   if (!($72)) {\n    _vorbis_staticbook_destroy($71);\n   }\n   $73 = HEAP32[$57>>2]|0;\n   $74 = ($73|0)==(0|0);\n   if (!($74)) {\n    $75 = (($73) + (($$461*56)|0)|0);\n    _vorbis_book_clear($75);\n   }\n   $76 = (($$461) + 1)|0;\n   $77 = HEAP32[$53>>2]|0;\n   $78 = ($76|0)<($77|0);\n   if ($78) {\n    $$461 = $76;\n   } else {\n    $$pre$phi77Z2D = $57;\n    break;\n   }\n  }\n } else {\n  $$pre75 = ((($2)) + 2848|0);\n  $$pre$phi77Z2D = $$pre75;\n }\n $79 = HEAP32[$$pre$phi77Z2D>>2]|0;\n $80 = ($79|0)==(0|0);\n if (!($80)) {\n  _free($79);\n }\n $81 = ((($2)) + 28|0);\n $82 = HEAP32[$81>>2]|0;\n $83 = ($82|0)>(0);\n if ($83) {\n  $84 = ((($2)) + 2852|0);\n  $$560 = 0;\n  while(1) {\n   $85 = (($84) + ($$560<<2)|0);\n   $86 = HEAP32[$85>>2]|0;\n   __vi_psy_free($86);\n   $87 = (($$560) + 1)|0;\n   $88 = HEAP32[$81>>2]|0;\n   $89 = ($87|0)<($88|0);\n   if ($89) {\n    $$560 = $87;\n   } else {\n    break;\n   }\n  }\n }\n _free($2);\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;HEAP32[$0+28>>2]=0|0;\n return;\n}\nfunction __vorbis_pack_comment($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$023$i2 = 0, $$023$i6 = 0, $$04$i1 = 0, $$04$i5 = 0, $$09 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n _oggpack_write($0,3,8);\n _oggpack_write($0,118,8);\n _oggpack_write($0,111,8);\n _oggpack_write($0,114,8);\n _oggpack_write($0,98,8);\n _oggpack_write($0,105,8);\n _oggpack_write($0,115,8);\n _oggpack_write($0,44,32);\n $$023$i2 = 224920;$$04$i1 = 44;\n while(1) {\n  $2 = (($$04$i1) + -1)|0;\n  $3 = ((($$023$i2)) + 1|0);\n  $4 = HEAP8[$$023$i2>>0]|0;\n  $5 = $4 << 24 >> 24;\n  _oggpack_write($0,$5,8);\n  $6 = ($2|0)==(0);\n  if ($6) {\n   break;\n  } else {\n   $$023$i2 = $3;$$04$i1 = $2;\n  }\n }\n $7 = ((($1)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n _oggpack_write($0,$8,32);\n $9 = HEAP32[$7>>2]|0;\n $10 = ($9|0)>(0);\n if (!($10)) {\n  _oggpack_write($0,1,1);\n  return;\n }\n $11 = ((($1)) + 4|0);\n $$09 = 0;\n while(1) {\n  $12 = HEAP32[$1>>2]|0;\n  $13 = (($12) + ($$09<<2)|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = ($14|0)==(0|0);\n  if ($15) {\n   _oggpack_write($0,0,32);\n  } else {\n   $16 = HEAP32[$11>>2]|0;\n   $17 = (($16) + ($$09<<2)|0);\n   $18 = HEAP32[$17>>2]|0;\n   _oggpack_write($0,$18,32);\n   $19 = HEAP32[$11>>2]|0;\n   $20 = (($19) + ($$09<<2)|0);\n   $21 = HEAP32[$20>>2]|0;\n   $22 = ($21|0)==(0);\n   if (!($22)) {\n    $23 = HEAP32[$1>>2]|0;\n    $24 = (($23) + ($$09<<2)|0);\n    $25 = HEAP32[$24>>2]|0;\n    $$023$i6 = $25;$$04$i5 = $21;\n    while(1) {\n     $26 = (($$04$i5) + -1)|0;\n     $27 = ((($$023$i6)) + 1|0);\n     $28 = HEAP8[$$023$i6>>0]|0;\n     $29 = $28 << 24 >> 24;\n     _oggpack_write($0,$29,8);\n     $30 = ($26|0)==(0);\n     if ($30) {\n      break;\n     } else {\n      $$023$i6 = $27;$$04$i5 = $26;\n     }\n    }\n   }\n  }\n  $31 = (($$09) + 1)|0;\n  $32 = HEAP32[$7>>2]|0;\n  $33 = ($31|0)<($32|0);\n  if ($33) {\n   $$09 = $31;\n  } else {\n   break;\n  }\n }\n _oggpack_write($0,1,1);\n return;\n}\nfunction _vorbis_analysis_headerout($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0 = 0, $$059$ph = 0, $$05961 = 0, $$085$i = 0, $$181$i = 0, $$277$i = 0, $$373$i = 0, $$472$i = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;\n var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;\n var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;\n var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;\n var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $5 = sp;\n $6 = ((($0)) + 4|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($0)) + 104|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0|0);\n if ($10) {\n  ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;\n  ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;\n  ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP32[$4+16>>2]=0|0;HEAP32[$4+20>>2]=0|0;HEAP32[$4+24>>2]=0|0;HEAP32[$4+28>>2]=0|0;\n  $$0 = -129;\n  STACKTOP = sp;return ($$0|0);\n }\n $11 = ((($7)) + 4|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ($12|0)<(1);\n if ($13) {\n  $$059$ph = -129;\n  label = 27;\n } else {\n  _oggpack_writeinit($5);\n  $14 = ((($7)) + 28|0);\n  $15 = HEAP32[$14>>2]|0;\n  $16 = ($15|0)==(0|0);\n  if ($16) {\n   $$059$ph = -130;\n   label = 27;\n  } else {\n   $17 = HEAP32[$15>>2]|0;\n   $18 = ($17|0)<(64);\n   if ($18) {\n    $$059$ph = -130;\n    label = 27;\n   } else {\n    $19 = ((($15)) + 4|0);\n    $20 = HEAP32[$19>>2]|0;\n    $21 = ($20|0)<($17|0);\n    if ($21) {\n     $$059$ph = -130;\n     label = 27;\n    } else {\n     _oggpack_write($5,1,8);\n     _oggpack_write($5,118,8);\n     _oggpack_write($5,111,8);\n     _oggpack_write($5,114,8);\n     _oggpack_write($5,98,8);\n     _oggpack_write($5,105,8);\n     _oggpack_write($5,115,8);\n     _oggpack_write($5,0,32);\n     $22 = HEAP32[$11>>2]|0;\n     _oggpack_write($5,$22,8);\n     $23 = ((($7)) + 8|0);\n     $24 = HEAP32[$23>>2]|0;\n     _oggpack_write($5,$24,32);\n     $25 = ((($7)) + 12|0);\n     $26 = HEAP32[$25>>2]|0;\n     _oggpack_write($5,$26,32);\n     $27 = ((($7)) + 16|0);\n     $28 = HEAP32[$27>>2]|0;\n     _oggpack_write($5,$28,32);\n     $29 = ((($7)) + 20|0);\n     $30 = HEAP32[$29>>2]|0;\n     _oggpack_write($5,$30,32);\n     $31 = HEAP32[$15>>2]|0;\n     $32 = (($31) + -1)|0;\n     $33 = (_ov_ilog($32)|0);\n     _oggpack_write($5,$33,4);\n     $34 = HEAP32[$19>>2]|0;\n     $35 = (($34) + -1)|0;\n     $36 = (_ov_ilog($35)|0);\n     _oggpack_write($5,$36,4);\n     _oggpack_write($5,1,1);\n     $37 = ((($9)) + 64|0);\n     $38 = HEAP32[$37>>2]|0;\n     $39 = ($38|0)==(0|0);\n     if (!($39)) {\n      _free($38);\n     }\n     $40 = (_oggpack_bytes($5)|0);\n     $41 = (_malloc($40)|0);\n     HEAP32[$37>>2] = $41;\n     $42 = ((($5)) + 8|0);\n     $43 = HEAP32[$42>>2]|0;\n     $44 = (_oggpack_bytes($5)|0);\n     _memcpy(($41|0),($43|0),($44|0))|0;\n     $45 = HEAP32[$37>>2]|0;\n     HEAP32[$2>>2] = $45;\n     $46 = (_oggpack_bytes($5)|0);\n     $47 = ((($2)) + 4|0);\n     HEAP32[$47>>2] = $46;\n     $48 = ((($2)) + 8|0);\n     HEAP32[$48>>2] = 1;\n     $49 = ((($2)) + 12|0);\n     ;HEAP32[$49>>2]=0|0;HEAP32[$49+4>>2]=0|0;HEAP32[$49+8>>2]=0|0;HEAP32[$49+12>>2]=0|0;HEAP32[$49+16>>2]=0|0;\n     _oggpack_reset($5);\n     __vorbis_pack_comment($5,$1);\n     $50 = ((($9)) + 68|0);\n     $51 = HEAP32[$50>>2]|0;\n     $52 = ($51|0)==(0|0);\n     if (!($52)) {\n      _free($51);\n     }\n     $53 = (_oggpack_bytes($5)|0);\n     $54 = (_malloc($53)|0);\n     HEAP32[$50>>2] = $54;\n     $55 = HEAP32[$42>>2]|0;\n     $56 = (_oggpack_bytes($5)|0);\n     _memcpy(($54|0),($55|0),($56|0))|0;\n     $57 = HEAP32[$50>>2]|0;\n     HEAP32[$3>>2] = $57;\n     $58 = (_oggpack_bytes($5)|0);\n     $59 = ((($3)) + 4|0);\n     HEAP32[$59>>2] = $58;\n     $60 = ((($3)) + 8|0);\n     $61 = ((($3)) + 24|0);\n     ;HEAP32[$60>>2]=0|0;HEAP32[$60+4>>2]=0|0;HEAP32[$60+8>>2]=0|0;HEAP32[$60+12>>2]=0|0;\n     $62 = $61;\n     $63 = $62;\n     HEAP32[$63>>2] = 1;\n     $64 = (($62) + 4)|0;\n     $65 = $64;\n     HEAP32[$65>>2] = 0;\n     _oggpack_reset($5);\n     $66 = HEAP32[$14>>2]|0;\n     $67 = ($66|0)==(0|0);\n     L16: do {\n      if (!($67)) {\n       _oggpack_write($5,5,8);\n       _oggpack_write($5,118,8);\n       _oggpack_write($5,111,8);\n       _oggpack_write($5,114,8);\n       _oggpack_write($5,98,8);\n       _oggpack_write($5,105,8);\n       _oggpack_write($5,115,8);\n       $68 = ((($66)) + 24|0);\n       $69 = HEAP32[$68>>2]|0;\n       $70 = (($69) + -1)|0;\n       _oggpack_write($5,$70,8);\n       $71 = HEAP32[$68>>2]|0;\n       $72 = ($71|0)>(0);\n       if ($72) {\n        $$085$i = 0;\n        while(1) {\n         $76 = (((($66)) + 1824|0) + ($$085$i<<2)|0);\n         $77 = HEAP32[$76>>2]|0;\n         $78 = (_vorbis_staticbook_pack($77,$5)|0);\n         $79 = ($78|0)==(0);\n         $74 = (($$085$i) + 1)|0;\n         if (!($79)) {\n          break L16;\n         }\n         $73 = HEAP32[$68>>2]|0;\n         $75 = ($74|0)<($73|0);\n         if ($75) {\n          $$085$i = $74;\n         } else {\n          break;\n         }\n        }\n       }\n       _oggpack_write($5,0,6);\n       _oggpack_write($5,0,16);\n       $80 = ((($66)) + 16|0);\n       $81 = HEAP32[$80>>2]|0;\n       $82 = (($81) + -1)|0;\n       _oggpack_write($5,$82,6);\n       $83 = HEAP32[$80>>2]|0;\n       $84 = ($83|0)>(0);\n       if ($84) {\n        $$181$i = 0;\n        while(1) {\n         $85 = (((($66)) + 800|0) + ($$181$i<<2)|0);\n         $86 = HEAP32[$85>>2]|0;\n         _oggpack_write($5,$86,16);\n         $87 = HEAP32[$85>>2]|0;\n         $88 = (27940 + ($87<<2)|0);\n         $89 = HEAP32[$88>>2]|0;\n         $90 = HEAP32[$89>>2]|0;\n         $91 = ($90|0)==(0|0);\n         if ($91) {\n          break L16;\n         }\n         $92 = (((($66)) + 1056|0) + ($$181$i<<2)|0);\n         $93 = HEAP32[$92>>2]|0;\n         FUNCTION_TABLE_vii[$90 & 31]($93,$5);\n         $94 = (($$181$i) + 1)|0;\n         $95 = HEAP32[$80>>2]|0;\n         $96 = ($94|0)<($95|0);\n         if ($96) {\n          $$181$i = $94;\n         } else {\n          break;\n         }\n        }\n       }\n       $97 = ((($66)) + 20|0);\n       $98 = HEAP32[$97>>2]|0;\n       $99 = (($98) + -1)|0;\n       _oggpack_write($5,$99,6);\n       $100 = HEAP32[$97>>2]|0;\n       $101 = ($100|0)>(0);\n       if ($101) {\n        $$277$i = 0;\n        while(1) {\n         $102 = (((($66)) + 1312|0) + ($$277$i<<2)|0);\n         $103 = HEAP32[$102>>2]|0;\n         _oggpack_write($5,$103,16);\n         $104 = HEAP32[$102>>2]|0;\n         $105 = (27948 + ($104<<2)|0);\n         $106 = HEAP32[$105>>2]|0;\n         $107 = HEAP32[$106>>2]|0;\n         $108 = (((($66)) + 1568|0) + ($$277$i<<2)|0);\n         $109 = HEAP32[$108>>2]|0;\n         FUNCTION_TABLE_vii[$107 & 31]($109,$5);\n         $110 = (($$277$i) + 1)|0;\n         $111 = HEAP32[$97>>2]|0;\n         $112 = ($110|0)<($111|0);\n         if ($112) {\n          $$277$i = $110;\n         } else {\n          break;\n         }\n        }\n       }\n       $113 = ((($66)) + 12|0);\n       $114 = HEAP32[$113>>2]|0;\n       $115 = (($114) + -1)|0;\n       _oggpack_write($5,$115,6);\n       $116 = HEAP32[$113>>2]|0;\n       $117 = ($116|0)>(0);\n       if ($117) {\n        $$373$i = 0;\n        while(1) {\n         $118 = (((($66)) + 288|0) + ($$373$i<<2)|0);\n         $119 = HEAP32[$118>>2]|0;\n         _oggpack_write($5,$119,16);\n         $120 = HEAP32[$118>>2]|0;\n         $121 = (27960 + ($120<<2)|0);\n         $122 = HEAP32[$121>>2]|0;\n         $123 = HEAP32[$122>>2]|0;\n         $124 = (((($66)) + 544|0) + ($$373$i<<2)|0);\n         $125 = HEAP32[$124>>2]|0;\n         FUNCTION_TABLE_viii[$123 & 15]($7,$125,$5);\n         $126 = (($$373$i) + 1)|0;\n         $127 = HEAP32[$113>>2]|0;\n         $128 = ($126|0)<($127|0);\n         if ($128) {\n          $$373$i = $126;\n         } else {\n          break;\n         }\n        }\n       }\n       $129 = ((($66)) + 8|0);\n       $130 = HEAP32[$129>>2]|0;\n       $131 = (($130) + -1)|0;\n       _oggpack_write($5,$131,6);\n       $132 = HEAP32[$129>>2]|0;\n       $133 = ($132|0)>(0);\n       if ($133) {\n        $$472$i = 0;\n        while(1) {\n         $134 = (((($66)) + 32|0) + ($$472$i<<2)|0);\n         $135 = HEAP32[$134>>2]|0;\n         $136 = HEAP32[$135>>2]|0;\n         _oggpack_write($5,$136,1);\n         $137 = HEAP32[$134>>2]|0;\n         $138 = ((($137)) + 4|0);\n         $139 = HEAP32[$138>>2]|0;\n         _oggpack_write($5,$139,16);\n         $140 = HEAP32[$134>>2]|0;\n         $141 = ((($140)) + 8|0);\n         $142 = HEAP32[$141>>2]|0;\n         _oggpack_write($5,$142,16);\n         $143 = HEAP32[$134>>2]|0;\n         $144 = ((($143)) + 12|0);\n         $145 = HEAP32[$144>>2]|0;\n         _oggpack_write($5,$145,8);\n         $146 = (($$472$i) + 1)|0;\n         $147 = HEAP32[$129>>2]|0;\n         $148 = ($146|0)<($147|0);\n         if ($148) {\n          $$472$i = $146;\n         } else {\n          break;\n         }\n        }\n       }\n       _oggpack_write($5,1,1);\n       $149 = ((($9)) + 72|0);\n       $150 = HEAP32[$149>>2]|0;\n       $151 = ($150|0)==(0|0);\n       if (!($151)) {\n        _free($150);\n       }\n       $152 = (_oggpack_bytes($5)|0);\n       $153 = (_malloc($152)|0);\n       HEAP32[$149>>2] = $153;\n       $154 = HEAP32[$42>>2]|0;\n       $155 = (_oggpack_bytes($5)|0);\n       _memcpy(($153|0),($154|0),($155|0))|0;\n       $156 = HEAP32[$149>>2]|0;\n       HEAP32[$4>>2] = $156;\n       $157 = (_oggpack_bytes($5)|0);\n       $158 = ((($4)) + 4|0);\n       HEAP32[$158>>2] = $157;\n       $159 = ((($4)) + 8|0);\n       $160 = ((($4)) + 24|0);\n       ;HEAP32[$159>>2]=0|0;HEAP32[$159+4>>2]=0|0;HEAP32[$159+8>>2]=0|0;HEAP32[$159+12>>2]=0|0;\n       $161 = $160;\n       $162 = $161;\n       HEAP32[$162>>2] = 2;\n       $163 = (($161) + 4)|0;\n       $164 = $163;\n       HEAP32[$164>>2] = 0;\n       _oggpack_writeclear($5);\n       $$0 = 0;\n       STACKTOP = sp;return ($$0|0);\n      }\n     } while(0);\n     ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;\n     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;\n     ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP32[$4+16>>2]=0|0;HEAP32[$4+20>>2]=0|0;HEAP32[$4+24>>2]=0|0;HEAP32[$4+28>>2]=0|0;\n     $$05961 = -130;$$pre$phiZ2D = $37;\n    }\n   }\n  }\n }\n if ((label|0) == 27) {\n  ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;\n  ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;\n  ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP32[$4+16>>2]=0|0;HEAP32[$4+20>>2]=0|0;HEAP32[$4+24>>2]=0|0;HEAP32[$4+28>>2]=0|0;\n  $$pre = ((($9)) + 64|0);\n  $$05961 = $$059$ph;$$pre$phiZ2D = $$pre;\n }\n _oggpack_writeclear($5);\n $165 = HEAP32[$$pre$phiZ2D>>2]|0;\n $166 = ($165|0)==(0|0);\n if (!($166)) {\n  _free($165);\n }\n $167 = ((($9)) + 68|0);\n $168 = HEAP32[$167>>2]|0;\n $169 = ($168|0)==(0|0);\n if (!($169)) {\n  _free($168);\n }\n $170 = ((($9)) + 72|0);\n $171 = HEAP32[$170>>2]|0;\n $172 = ($171|0)==(0|0);\n if (!($172)) {\n  _free($171);\n }\n HEAP32[$$pre$phiZ2D>>2] = 0;\n HEAP32[$167>>2] = 0;\n HEAP32[$170>>2] = 0;\n $$0 = $$05961;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _vorbis_lpc_from_data($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0110121156158 = 0.0, $$0110121157 = 0.0, $$0110138 = 0.0, $$0111128 = 0.0, $$0112$lcssa = 0.0, $$0112143 = 0.0, $$0116142 = 0, $$0125 = 0.0, $$1114127 = 0, $$2115$lcssa = 0, $$2115132 = 0, $$3124 = 0, $$4123 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$pre = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0;\n var $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0;\n var $34 = 0.0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0;\n var $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0;\n var $70 = 0.0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $9 = 0, $exitcond = 0, $exitcond153 = 0;\n var $exitcond154 = 0, $exitcond155 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = (($3) + 1)|0;\n $5 = $4 << 3;\n $$alloca_mul = $5;\n $6 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $7 = $3 << 3;\n $$alloca_mul1 = $7;\n $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;\n $9 = ($4|0)==(0);\n if ($9) {\n  $$0110121156158 = (0.0 * 1.0000000001);\n  $85 = $$0110121156158;\n  STACKTOP = sp;return (+$85);\n } else {\n  $10 = $3;\n }\n while(1) {\n  $11 = ($10|0)<($2|0);\n  if ($11) {\n   $$0112143 = 0.0;$$0116142 = $10;\n   while(1) {\n    $12 = (($0) + ($$0116142<<2)|0);\n    $13 = +HEAPF32[$12>>2];\n    $14 = $13;\n    $15 = (($$0116142) - ($10))|0;\n    $16 = (($0) + ($15<<2)|0);\n    $17 = +HEAPF32[$16>>2];\n    $18 = $17;\n    $19 = $18 * $14;\n    $20 = $19 + $$0112143;\n    $21 = (($$0116142) + 1)|0;\n    $exitcond155 = ($21|0)==($2|0);\n    if ($exitcond155) {\n     $$0112$lcssa = $20;\n     break;\n    } else {\n     $$0112143 = $20;$$0116142 = $21;\n    }\n   }\n  } else {\n   $$0112$lcssa = 0.0;\n  }\n  $22 = (($6) + ($10<<3)|0);\n  HEAPF64[$22>>3] = $$0112$lcssa;\n  $23 = (($10) + -1)|0;\n  $24 = ($10|0)==(0);\n  if ($24) {\n   break;\n  } else {\n   $10 = $23;\n  }\n }\n $$pre = +HEAPF64[$6>>3];\n $25 = $$pre * 1.0000000001;\n $26 = $$pre * 1.0000000000000001E-9;\n $27 = $26 + 1.0E-10;\n $28 = ($3|0)>(0);\n if ($28) {\n  $$0110138 = $25;$indvars$iv = 0;\n } else {\n  $$0110121156158 = $25;\n  $85 = $$0110121156158;\n  STACKTOP = sp;return (+$85);\n }\n while(1) {\n  $indvars$iv$next = (($indvars$iv) + 1)|0;\n  $29 = $$0110138 < $27;\n  if ($29) {\n   label = 16;\n   break;\n  }\n  $30 = (($6) + ($indvars$iv$next<<3)|0);\n  $31 = +HEAPF64[$30>>3];\n  $32 = -$31;\n  $33 = ($indvars$iv|0)>(0);\n  if ($33) {\n   $$0111128 = $32;$$1114127 = 0;\n   while(1) {\n    $36 = (($8) + ($$1114127<<3)|0);\n    $37 = +HEAPF64[$36>>3];\n    $38 = (($indvars$iv) - ($$1114127))|0;\n    $39 = (($6) + ($38<<3)|0);\n    $40 = +HEAPF64[$39>>3];\n    $41 = $40 * $37;\n    $42 = $$0111128 - $41;\n    $43 = (($$1114127) + 1)|0;\n    $exitcond154 = ($43|0)==($indvars$iv|0);\n    if ($exitcond154) {\n     break;\n    } else {\n     $$0111128 = $42;$$1114127 = $43;\n    }\n   }\n   $44 = $42 / $$0110138;\n   $45 = (($8) + ($indvars$iv<<3)|0);\n   HEAPF64[$45>>3] = $44;\n   $46 = (($indvars$iv|0) / 2)&-1;\n   $47 = ($indvars$iv|0)>(1);\n   if ($47) {\n    $48 = (($indvars$iv) + -1)|0;\n    $$2115132 = 0;\n    while(1) {\n     $49 = (($8) + ($$2115132<<3)|0);\n     $50 = +HEAPF64[$49>>3];\n     $51 = (($48) - ($$2115132))|0;\n     $52 = (($8) + ($51<<3)|0);\n     $53 = +HEAPF64[$52>>3];\n     $54 = $53 * $44;\n     $55 = $54 + $50;\n     HEAPF64[$49>>3] = $55;\n     $56 = $50 * $44;\n     $57 = +HEAPF64[$52>>3];\n     $58 = $57 + $56;\n     HEAPF64[$52>>3] = $58;\n     $59 = (($$2115132) + 1)|0;\n     $60 = ($59|0)<($46|0);\n     if ($60) {\n      $$2115132 = $59;\n     } else {\n      $$2115$lcssa = $59;$66 = $44;\n      break;\n     }\n    }\n   } else {\n    $$2115$lcssa = 0;$66 = $44;\n   }\n  } else {\n   $34 = $32 / $$0110138;\n   $35 = (($8) + ($indvars$iv<<3)|0);\n   HEAPF64[$35>>3] = $34;\n   $$2115$lcssa = 0;$66 = $34;\n  }\n  $61 = $indvars$iv & 1;\n  $62 = ($61|0)==(0);\n  $63 = (($8) + ($$2115$lcssa<<3)|0);\n  if (!($62)) {\n   $64 = +HEAPF64[$63>>3];\n   $65 = $64 * $66;\n   $67 = $65 + $64;\n   HEAPF64[$63>>3] = $67;\n  }\n  $68 = $66 * $66;\n  $69 = 1.0 - $68;\n  $70 = $69 * $$0110138;\n  $71 = ($indvars$iv$next|0)<($3|0);\n  if ($71) {\n   $$0110138 = $70;$indvars$iv = $indvars$iv$next;\n  } else {\n   label = 17;\n   break;\n  }\n }\n if ((label|0) == 16) {\n  $72 = (($8) + ($indvars$iv<<3)|0);\n  $73 = (($3) - ($indvars$iv))|0;\n  $74 = $73 << 3;\n  _memset(($72|0),0,($74|0))|0;\n  if ($28) {\n   $$0110121157 = $$0110138;\n  } else {\n   $$0110121156158 = $$0110138;\n   $85 = $$0110121156158;\n   STACKTOP = sp;return (+$85);\n  }\n }\n else if ((label|0) == 17) {\n  if ($28) {\n   $$0110121157 = $70;\n  } else {\n   $$0110121156158 = $70;\n   $85 = $$0110121156158;\n   STACKTOP = sp;return (+$85);\n  }\n }\n $$0125 = 0.98999999999999999;$$3124 = 0;\n while(1) {\n  $75 = (($8) + ($$3124<<3)|0);\n  $76 = +HEAPF64[$75>>3];\n  $77 = $76 * $$0125;\n  HEAPF64[$75>>3] = $77;\n  $78 = $$0125 * 0.98999999999999999;\n  $79 = (($$3124) + 1)|0;\n  $exitcond153 = ($79|0)==($3|0);\n  if ($exitcond153) {\n   $$4123 = 0;\n   break;\n  } else {\n   $$0125 = $78;$$3124 = $79;\n  }\n }\n while(1) {\n  $80 = (($8) + ($$4123<<3)|0);\n  $81 = +HEAPF64[$80>>3];\n  $82 = $81;\n  $83 = (($1) + ($$4123<<2)|0);\n  HEAPF32[$83>>2] = $82;\n  $84 = (($$4123) + 1)|0;\n  $exitcond = ($84|0)==($3|0);\n  if ($exitcond) {\n   $$0110121156158 = $$0110121157;\n   break;\n  } else {\n   $$4123 = $84;\n  }\n }\n $85 = $$0110121156158;\n STACKTOP = sp;return (+$85);\n}\nfunction _vorbis_lpc_predict($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$04354$us = 0.0, $$04453$us = 0, $$04552$us = 0, $$256$us = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond65 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = (($4) + ($2))|0;\n $6 = $5 << 2;\n $$alloca_mul = $6;\n $7 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $8 = ($1|0)==(0|0);\n $9 = ($2|0)>(0);\n if ($8) {\n  if ($9) {\n   $11 = $2 << 2;\n   _memset(($7|0),0,($11|0))|0;\n  }\n } else {\n  if ($9) {\n   $10 = $2 << 2;\n   _memcpy(($7|0),($1|0),($10|0))|0;\n  }\n }\n $12 = ($4|0)>(0);\n if (!($12)) {\n  STACKTOP = sp;return;\n }\n if ($9) {\n  $$256$us = 0;$indvars$iv = $2;\n } else {\n  $13 = $4 << 2;\n  _memset(($7|0),0,($13|0))|0;\n  _memset(($3|0),0,($13|0))|0;\n  STACKTOP = sp;return;\n }\n while(1) {\n  $$04354$us = 0.0;$$04453$us = $2;$$04552$us = $$256$us;\n  while(1) {\n   $14 = (($$04552$us) + 1)|0;\n   $15 = (($7) + ($$04552$us<<2)|0);\n   $16 = +HEAPF32[$15>>2];\n   $17 = (($$04453$us) + -1)|0;\n   $18 = (($0) + ($17<<2)|0);\n   $19 = +HEAPF32[$18>>2];\n   $20 = $19 * $16;\n   $21 = $$04354$us - $20;\n   $exitcond = ($14|0)==($indvars$iv|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$04354$us = $21;$$04453$us = $17;$$04552$us = $14;\n   }\n  }\n  $22 = (($7) + ($indvars$iv<<2)|0);\n  HEAPF32[$22>>2] = $21;\n  $23 = (($3) + ($$256$us<<2)|0);\n  HEAPF32[$23>>2] = $21;\n  $24 = (($$256$us) + 1)|0;\n  $indvars$iv$next = (($indvars$iv) + 1)|0;\n  $exitcond65 = ($24|0)==($4|0);\n  if ($exitcond65) {\n   break;\n  } else {\n   $$256$us = $24;$indvars$iv = $indvars$iv$next;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _mapping0_pack($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$044 = 0, $$142 = 0, $$241 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$1>>2]|0;\n $4 = ($3|0)>(1);\n if ($4) {\n  _oggpack_write($2,1,1);\n  $5 = HEAP32[$1>>2]|0;\n  $6 = (($5) + -1)|0;\n  _oggpack_write($2,$6,4);\n } else {\n  _oggpack_write($2,0,1);\n }\n $7 = ((($1)) + 1156|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)>(0);\n if ($9) {\n  _oggpack_write($2,1,1);\n  $10 = HEAP32[$7>>2]|0;\n  $11 = (($10) + -1)|0;\n  _oggpack_write($2,$11,8);\n  $12 = HEAP32[$7>>2]|0;\n  $13 = ($12|0)>(0);\n  if ($13) {\n   $14 = ((($1)) + 1160|0);\n   $15 = ((($0)) + 4|0);\n   $16 = ((($1)) + 2184|0);\n   $$044 = 0;\n   while(1) {\n    $17 = (($14) + ($$044<<2)|0);\n    $18 = HEAP32[$17>>2]|0;\n    $19 = HEAP32[$15>>2]|0;\n    $20 = (($19) + -1)|0;\n    $21 = (_ov_ilog($20)|0);\n    _oggpack_write($2,$18,$21);\n    $22 = (($16) + ($$044<<2)|0);\n    $23 = HEAP32[$22>>2]|0;\n    $24 = HEAP32[$15>>2]|0;\n    $25 = (($24) + -1)|0;\n    $26 = (_ov_ilog($25)|0);\n    _oggpack_write($2,$23,$26);\n    $27 = (($$044) + 1)|0;\n    $28 = HEAP32[$7>>2]|0;\n    $29 = ($27|0)<($28|0);\n    if ($29) {\n     $$044 = $27;\n    } else {\n     break;\n    }\n   }\n  }\n } else {\n  _oggpack_write($2,0,1);\n }\n _oggpack_write($2,0,2);\n $30 = HEAP32[$1>>2]|0;\n $31 = ($30|0)>(1);\n if ($31) {\n  $32 = ((($0)) + 4|0);\n  $33 = HEAP32[$32>>2]|0;\n  $34 = ($33|0)>(0);\n  if ($34) {\n   $35 = ((($1)) + 4|0);\n   $$142 = 0;\n   while(1) {\n    $40 = (($35) + ($$142<<2)|0);\n    $41 = HEAP32[$40>>2]|0;\n    _oggpack_write($2,$41,4);\n    $42 = (($$142) + 1)|0;\n    $43 = HEAP32[$32>>2]|0;\n    $44 = ($42|0)<($43|0);\n    if ($44) {\n     $$142 = $42;\n    } else {\n     break;\n    }\n   }\n   $$pre = HEAP32[$1>>2]|0;\n   $36 = $$pre;\n   label = 13;\n  }\n } else {\n  $36 = $30;\n  label = 13;\n }\n if ((label|0) == 13) {\n  $37 = ($36|0)>(0);\n  if (!($37)) {\n   return;\n  }\n }\n $38 = ((($1)) + 1028|0);\n $39 = ((($1)) + 1092|0);\n $$241 = 0;\n while(1) {\n  _oggpack_write($2,0,8);\n  $45 = (($38) + ($$241<<2)|0);\n  $46 = HEAP32[$45>>2]|0;\n  _oggpack_write($2,$46,8);\n  $47 = (($39) + ($$241<<2)|0);\n  $48 = HEAP32[$47>>2]|0;\n  _oggpack_write($2,$48,8);\n  $49 = (($$241) + 1)|0;\n  $50 = HEAP32[$1>>2]|0;\n  $51 = ($49|0)<($50|0);\n  if ($51) {\n   $$241 = $49;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _mapping0_unpack($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$083 = 0, $$08499 = 0, $$197 = 0, $$296 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0;\n var $or$cond = 0, $or$cond85 = 0, $or$cond86 = 0, $or$cond87 = 0, $or$cond88 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_calloc(1,3208)|0);\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n _memset(($2|0),0,3208)|0;\n $5 = ((($0)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)<(1);\n L1: do {\n  if ($7) {\n   label = 24;\n  } else {\n   $8 = (_oggpack_read($1,1)|0);\n   $9 = ($8|0)<(0);\n   if ($9) {\n    label = 24;\n   } else {\n    $10 = ($8|0)==(0);\n    if ($10) {\n     HEAP32[$2>>2] = 1;\n    } else {\n     $11 = (_oggpack_read($1,4)|0);\n     $12 = (($11) + 1)|0;\n     HEAP32[$2>>2] = $12;\n     $13 = ($11|0)<(0);\n     if ($13) {\n      break;\n     }\n    }\n    $14 = (_oggpack_read($1,1)|0);\n    $15 = ($14|0)<(0);\n    if (!($15)) {\n     $16 = ($14|0)==(0);\n     if (!($16)) {\n      $17 = (_oggpack_read($1,8)|0);\n      $18 = (($17) + 1)|0;\n      $19 = ((($2)) + 1156|0);\n      HEAP32[$19>>2] = $18;\n      $20 = ($17|0)<(0);\n      if ($20) {\n       break;\n      }\n      $21 = ((($2)) + 1160|0);\n      $22 = ((($2)) + 2184|0);\n      $$pre = HEAP32[$5>>2]|0;\n      $$08499 = 0;$27 = $$pre;\n      while(1) {\n       $26 = (($27) + -1)|0;\n       $28 = (_ov_ilog($26)|0);\n       $29 = (_oggpack_read($1,$28)|0);\n       $30 = (($21) + ($$08499<<2)|0);\n       HEAP32[$30>>2] = $29;\n       $31 = HEAP32[$5>>2]|0;\n       $32 = (($31) + -1)|0;\n       $33 = (_ov_ilog($32)|0);\n       $34 = (_oggpack_read($1,$33)|0);\n       $35 = (($22) + ($$08499<<2)|0);\n       HEAP32[$35>>2] = $34;\n       $36 = $34 | $29;\n       $37 = ($36|0)<(0);\n       $38 = ($29|0)==($34|0);\n       $or$cond = $38 | $37;\n       if ($or$cond) {\n        break L1;\n       }\n       $39 = HEAP32[$5>>2]|0;\n       $40 = ($29|0)<($39|0);\n       $41 = ($34|0)<($39|0);\n       $or$cond85 = $40 & $41;\n       $24 = (($$08499) + 1)|0;\n       if (!($or$cond85)) {\n        break L1;\n       }\n       $23 = HEAP32[$19>>2]|0;\n       $25 = ($24|0)<($23|0);\n       if ($25) {\n        $$08499 = $24;$27 = $39;\n       } else {\n        break;\n       }\n      }\n     }\n     $42 = (_oggpack_read($1,2)|0);\n     $43 = ($42|0)==(0);\n     if ($43) {\n      $44 = HEAP32[$2>>2]|0;\n      $45 = ($44|0)>(1);\n      if ($45) {\n       $46 = HEAP32[$5>>2]|0;\n       $47 = ($46|0)>(0);\n       if ($47) {\n        $48 = ((($2)) + 4|0);\n        $$197 = 0;\n        while(1) {\n         $58 = (_oggpack_read($1,4)|0);\n         $59 = (($48) + ($$197<<2)|0);\n         HEAP32[$59>>2] = $58;\n         $60 = HEAP32[$2>>2]|0;\n         $61 = ($58|0)>=($60|0);\n         $62 = ($58|0)<(0);\n         $or$cond86 = $62 | $61;\n         $56 = (($$197) + 1)|0;\n         if ($or$cond86) {\n          break L1;\n         }\n         $55 = HEAP32[$5>>2]|0;\n         $57 = ($56|0)<($55|0);\n         if ($57) {\n          $$197 = $56;\n         } else {\n          $49 = $60;\n          label = 17;\n          break;\n         }\n        }\n       }\n      } else {\n       $49 = $44;\n       label = 17;\n      }\n      if ((label|0) == 17) {\n       $50 = ($49|0)>(0);\n       if (!($50)) {\n        $$083 = $2;\n        return ($$083|0);\n       }\n      }\n      $51 = ((($2)) + 1028|0);\n      $52 = ((($4)) + 16|0);\n      $53 = ((($2)) + 1092|0);\n      $54 = ((($4)) + 20|0);\n      $$296 = 0;\n      while(1) {\n       (_oggpack_read($1,8)|0);\n       $66 = (_oggpack_read($1,8)|0);\n       $67 = (($51) + ($$296<<2)|0);\n       HEAP32[$67>>2] = $66;\n       $68 = HEAP32[$52>>2]|0;\n       $69 = ($66|0)>=($68|0);\n       $70 = ($66|0)<(0);\n       $or$cond87 = $70 | $69;\n       if ($or$cond87) {\n        break L1;\n       }\n       $71 = (_oggpack_read($1,8)|0);\n       $72 = (($53) + ($$296<<2)|0);\n       HEAP32[$72>>2] = $71;\n       $73 = HEAP32[$54>>2]|0;\n       $74 = ($71|0)>=($73|0);\n       $75 = ($71|0)<(0);\n       $or$cond88 = $75 | $74;\n       $64 = (($$296) + 1)|0;\n       if ($or$cond88) {\n        break L1;\n       }\n       $63 = HEAP32[$2>>2]|0;\n       $65 = ($64|0)<($63|0);\n       if ($65) {\n        $$296 = $64;\n       } else {\n        $$083 = $2;\n        break;\n       }\n      }\n      return ($$083|0);\n     }\n    }\n   }\n  }\n } while(0);\n if ((label|0) == 24) {\n  $76 = ($2|0)==(0|0);\n  if ($76) {\n   $$083 = 0;\n   return ($$083|0);\n  }\n }\n _free($2);\n $$083 = 0;\n return ($$083|0);\n}\nfunction _mapping0_free_info($0) {\n $0 = $0|0;\n var $1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if (!($1)) {\n  _free($0);\n }\n return;\n}\nfunction _mapping0_forward($0) {\n $0 = $0|0;\n var $$ = 0, $$0375436 = 0, $$0375436$us = 0, $$0379$lcssa = 0, $$0379404 = 0, $$0383430$us = 0, $$0390$lcssa = 0.0, $$0390435 = 0.0, $$0390435$us = 0.0, $$1376426 = 0, $$1380 = 0, $$1384420 = 0, $$1391 = 0.0, $$1391$us = 0.0, $$2377402 = 0, $$2381$lcssa = 0, $$2381410 = 0, $$2385403 = 0, $$2389419 = 0, $$3 = 0;\n var $$3378415 = 0, $$3382 = 0, $$3386409 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi449Z2D = 0, $$pre$phi451Z2D = 0, $$pre$phiZ2D = 0, $$pre447 = 0, $$pre448 = 0, $$pre450 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0;\n var $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;\n var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0;\n var $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;\n var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;\n var $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;\n var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;\n var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;\n var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;\n var $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;\n var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;\n var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;\n var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;\n var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;\n var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;\n var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;\n var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;\n var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;\n var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;\n var $428 = 0, $429 = 0, $43 = 0.0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0.0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;\n var $446 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0.0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0, $92 = 0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0.0;\n var $99 = 0.0, $not$ = 0, $storemerge = 0.0, $storemerge441 = 0.0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 64|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($2)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($4)) + 28|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ((($2)) + 104|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($0)) + 104|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ((($0)) + 36|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ((($4)) + 4|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = $14 << 2;\n $$alloca_mul = $15;\n $16 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $17 = (__vorbis_block_alloc($0,$15)|0);\n $18 = HEAP32[$13>>2]|0;\n $19 = $18 << 2;\n $20 = (__vorbis_block_alloc($0,$19)|0);\n $21 = HEAP32[$13>>2]|0;\n $22 = $21 << 2;\n $23 = (__vorbis_block_alloc($0,$22)|0);\n $24 = ((($10)) + 4|0);\n $25 = +HEAPF32[$24>>2];\n $26 = HEAP32[$13>>2]|0;\n $27 = $26 << 2;\n $$alloca_mul1 = $27;\n $28 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;\n $29 = ((($10)) + 8|0);\n $30 = HEAP32[$29>>2]|0;\n $31 = ((($0)) + 28|0);\n $32 = HEAP32[$31>>2]|0;\n $33 = (((($6)) + 544|0) + ($32<<2)|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = ((($8)) + 56|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = (($36) + (($30*52)|0)|0);\n $38 = ($32|0)!=(0);\n $39 = $38 ? 2 : 0;\n $40 = (($37) + (($39*52)|0)|0);\n $41 = ((($0)) + 40|0);\n HEAP32[$41>>2] = $32;\n $42 = ($26|0)>(0);\n L1: do {\n  if ($42) {\n   $43 = (+($12|0));\n   $44 = 4.0 / $43;\n   $45 = (HEAPF32[tempDoublePtr>>2]=$44,HEAP32[tempDoublePtr>>2]|0);\n   $46 = (($12|0) / 2)&-1;\n   $47 = $46 << 2;\n   $48 = $45 & 2147483647;\n   $49 = (+($48>>>0));\n   $50 = $49 * 7.1771142984289327E-7;\n   $51 = $50 + -764.6162109375;\n   $52 = $51;\n   $53 = $52 + 0.34499999999999997;\n   $54 = $53;\n   $55 = ((($8)) + 4|0);\n   $56 = ((($0)) + 24|0);\n   $57 = ((($0)) + 32|0);\n   $58 = $54 + -764.6162109375;\n   $59 = (($12) + -1)|0;\n   $60 = ($59|0)>(1);\n   $61 = $54 + -382.30810546875;\n   if ($60) {\n    $$0375436$us = 0;$$0390435$us = $25;\n   } else {\n    $$0375436 = 0;$$0390435 = $25;\n    while(1) {\n     $116 = HEAP32[$0>>2]|0;\n     $117 = (($116) + ($$0375436<<2)|0);\n     $118 = HEAP32[$117>>2]|0;\n     $119 = (__vorbis_block_alloc($0,$47)|0);\n     $120 = (($20) + ($$0375436<<2)|0);\n     HEAP32[$120>>2] = $119;\n     $121 = (__vorbis_block_alloc($0,$47)|0);\n     $122 = (($17) + ($$0375436<<2)|0);\n     HEAP32[$122>>2] = $121;\n     $123 = HEAP32[$56>>2]|0;\n     $124 = HEAP32[$31>>2]|0;\n     $125 = HEAP32[$57>>2]|0;\n     __vorbis_apply_window($118,$55,$6,$123,$124,$125);\n     $126 = HEAP32[$31>>2]|0;\n     $127 = (((($8)) + 12|0) + ($126<<2)|0);\n     $128 = HEAP32[$127>>2]|0;\n     $129 = HEAP32[$128>>2]|0;\n     $130 = HEAP32[$122>>2]|0;\n     _mdct_forward($129,$118,$130);\n     $131 = HEAP32[$31>>2]|0;\n     $132 = (((($8)) + 20|0) + (($131*12)|0)|0);\n     _drft_forward($132,$118);\n     $133 = HEAP32[$118>>2]|0;\n     $134 = $133 & 2147483647;\n     $135 = (+($134>>>0));\n     $136 = $135 * 7.1771142984289327E-7;\n     $137 = $58 + $136;\n     $138 = $137;\n     $139 = $138 + 0.34499999999999997;\n     $140 = $139;\n     HEAPF32[$118>>2] = $140;\n     $141 = (($28) + ($$0375436<<2)|0);\n     $142 = $140 > 0.0;\n     $storemerge = $142 ? 0.0 : $140;\n     HEAPF32[$141>>2] = $storemerge;\n     $143 = $storemerge > $$0390435;\n     $$1391 = $143 ? $storemerge : $$0390435;\n     $144 = (($$0375436) + 1)|0;\n     $145 = HEAP32[$13>>2]|0;\n     $146 = ($144|0)<($145|0);\n     if ($146) {\n      $$0375436 = $144;$$0390435 = $$1391;\n     } else {\n      $$0390$lcssa = $$1391;$$pre$phi449Z2D = $47;$$pre$phiZ2D = $46;\n      break L1;\n     }\n    }\n   }\n   while(1) {\n    $62 = HEAP32[$0>>2]|0;\n    $63 = (($62) + ($$0375436$us<<2)|0);\n    $64 = HEAP32[$63>>2]|0;\n    $65 = (__vorbis_block_alloc($0,$47)|0);\n    $66 = (($20) + ($$0375436$us<<2)|0);\n    HEAP32[$66>>2] = $65;\n    $67 = (__vorbis_block_alloc($0,$47)|0);\n    $68 = (($17) + ($$0375436$us<<2)|0);\n    HEAP32[$68>>2] = $67;\n    $69 = HEAP32[$56>>2]|0;\n    $70 = HEAP32[$31>>2]|0;\n    $71 = HEAP32[$57>>2]|0;\n    __vorbis_apply_window($64,$55,$6,$69,$70,$71);\n    $72 = HEAP32[$31>>2]|0;\n    $73 = (((($8)) + 12|0) + ($72<<2)|0);\n    $74 = HEAP32[$73>>2]|0;\n    $75 = HEAP32[$74>>2]|0;\n    $76 = HEAP32[$68>>2]|0;\n    _mdct_forward($75,$64,$76);\n    $77 = HEAP32[$31>>2]|0;\n    $78 = (((($8)) + 20|0) + (($77*12)|0)|0);\n    _drft_forward($78,$64);\n    $79 = HEAP32[$64>>2]|0;\n    $80 = $79 & 2147483647;\n    $81 = (+($80>>>0));\n    $82 = $81 * 7.1771142984289327E-7;\n    $83 = $58 + $82;\n    $84 = $83;\n    $85 = $84 + 0.34499999999999997;\n    $86 = $85;\n    HEAPF32[$64>>2] = $86;\n    $87 = (($28) + ($$0375436$us<<2)|0);\n    HEAPF32[$87>>2] = $86;\n    $$0383430$us = 1;$107 = $86;\n    while(1) {\n     $88 = (($64) + ($$0383430$us<<2)|0);\n     $89 = +HEAPF32[$88>>2];\n     $90 = $89 * $89;\n     $91 = (($$0383430$us) + 1)|0;\n     $92 = (($64) + ($91<<2)|0);\n     $93 = +HEAPF32[$92>>2];\n     $94 = $93 * $93;\n     $95 = $94 + $90;\n     $96 = (HEAPF32[tempDoublePtr>>2]=$95,HEAP32[tempDoublePtr>>2]|0);\n     $97 = $96 & 2147483647;\n     $98 = (+($97>>>0));\n     $99 = $98 * 3.5885571492144663E-7;\n     $100 = $61 + $99;\n     $101 = $100;\n     $102 = $101 + 0.34499999999999997;\n     $103 = $102;\n     $104 = $91 >> 1;\n     $105 = (($64) + ($104<<2)|0);\n     HEAPF32[$105>>2] = $103;\n     $106 = $103 > $107;\n     $108 = $106 ? $103 : $107;\n     $109 = (($$0383430$us) + 2)|0;\n     $110 = ($109|0)<($59|0);\n     if ($110) {\n      $$0383430$us = $109;$107 = $108;\n     } else {\n      break;\n     }\n    }\n    $111 = $108 > 0.0;\n    $storemerge441 = $111 ? 0.0 : $108;\n    HEAPF32[$87>>2] = $storemerge441;\n    $112 = $storemerge441 > $$0390435$us;\n    $$1391$us = $112 ? $storemerge441 : $$0390435$us;\n    $113 = (($$0375436$us) + 1)|0;\n    $114 = HEAP32[$13>>2]|0;\n    $115 = ($113|0)<($114|0);\n    if ($115) {\n     $$0375436$us = $113;$$0390435$us = $$1391$us;\n    } else {\n     $$0390$lcssa = $$1391$us;$$pre$phi449Z2D = $47;$$pre$phiZ2D = $46;\n     break;\n    }\n   }\n  } else {\n   $$pre447 = (($12|0) / 2)&-1;\n   $$pre448 = $$pre447 << 2;\n   $$0390$lcssa = $25;$$pre$phi449Z2D = $$pre448;$$pre$phiZ2D = $$pre447;\n  }\n } while(0);\n $147 = (__vorbis_block_alloc($0,$$pre$phi449Z2D)|0);\n $148 = (__vorbis_block_alloc($0,$$pre$phi449Z2D)|0);\n $149 = HEAP32[$13>>2]|0;\n $150 = ($149|0)>(0);\n L13: do {\n  if ($150) {\n   $151 = ($12|0)>(1);\n   $152 = ((($8)) + 48|0);\n   $$1376426 = 0;\n   while(1) {\n    $153 = (((($34)) + 4|0) + ($$1376426<<2)|0);\n    $154 = HEAP32[$153>>2]|0;\n    $155 = (($17) + ($$1376426<<2)|0);\n    $156 = HEAP32[$155>>2]|0;\n    $157 = HEAP32[$0>>2]|0;\n    $158 = (($157) + ($$1376426<<2)|0);\n    $159 = HEAP32[$158>>2]|0;\n    $160 = (($159) + ($$pre$phiZ2D<<2)|0);\n    HEAP32[$41>>2] = $32;\n    $161 = (__vorbis_block_alloc($0,60)|0);\n    $162 = (($23) + ($$1376426<<2)|0);\n    HEAP32[$162>>2] = $161;\n    dest=$161; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n    if ($151) {\n     $$1384420 = 0;\n     while(1) {\n      $163 = (($156) + ($$1384420<<2)|0);\n      $164 = HEAP32[$163>>2]|0;\n      $165 = $164 & 2147483647;\n      $166 = (+($165>>>0));\n      $167 = $166 * 7.1771142984289327E-7;\n      $168 = $167 + -764.6162109375;\n      $169 = $168;\n      $170 = $169 + 0.34499999999999997;\n      $171 = $170;\n      $172 = (($160) + ($$1384420<<2)|0);\n      HEAPF32[$172>>2] = $171;\n      $173 = (($$1384420) + 1)|0;\n      $174 = ($173|0)<($$pre$phiZ2D|0);\n      if ($174) {\n       $$1384420 = $173;\n      } else {\n       break;\n      }\n     }\n    }\n    __vp_noisemask($40,$160,$147);\n    $175 = (($28) + ($$1376426<<2)|0);\n    $176 = +HEAPF32[$175>>2];\n    __vp_tonemask($40,$159,$148,$$0390$lcssa,$176);\n    __vp_offset_and_mix($40,$147,$148,1,$159,$156,$160);\n    $177 = (((($34)) + 1028|0) + ($154<<2)|0);\n    $178 = HEAP32[$177>>2]|0;\n    $179 = (((($6)) + 800|0) + ($178<<2)|0);\n    $180 = HEAP32[$179>>2]|0;\n    $181 = ($180|0)==(1);\n    if (!($181)) {\n     $$3 = -1;\n     break;\n    }\n    $182 = HEAP32[$152>>2]|0;\n    $183 = (($182) + ($178<<2)|0);\n    $184 = HEAP32[$183>>2]|0;\n    $185 = (_floor1_fit($0,$184,$160,$159)|0);\n    $186 = HEAP32[$162>>2]|0;\n    $187 = ((($186)) + 28|0);\n    HEAP32[$187>>2] = $185;\n    $188 = (_vorbis_bitrate_managed($0)|0);\n    $189 = ($188|0)==(0);\n    if (!($189)) {\n     $190 = HEAP32[$162>>2]|0;\n     $191 = ((($190)) + 28|0);\n     $192 = HEAP32[$191>>2]|0;\n     $193 = ($192|0)==(0|0);\n     if (!($193)) {\n      __vp_offset_and_mix($40,$147,$148,2,$159,$156,$160);\n      $194 = HEAP32[$152>>2]|0;\n      $195 = HEAP32[$177>>2]|0;\n      $196 = (($194) + ($195<<2)|0);\n      $197 = HEAP32[$196>>2]|0;\n      $198 = (_floor1_fit($0,$197,$160,$159)|0);\n      $199 = HEAP32[$162>>2]|0;\n      $200 = ((($199)) + 56|0);\n      HEAP32[$200>>2] = $198;\n      __vp_offset_and_mix($40,$147,$148,0,$159,$156,$160);\n      $201 = HEAP32[$152>>2]|0;\n      $202 = HEAP32[$177>>2]|0;\n      $203 = (($201) + ($202<<2)|0);\n      $204 = HEAP32[$203>>2]|0;\n      $205 = (_floor1_fit($0,$204,$160,$159)|0);\n      $206 = HEAP32[$162>>2]|0;\n      HEAP32[$206>>2] = $205;\n      $207 = HEAP32[$152>>2]|0;\n      $208 = HEAP32[$177>>2]|0;\n      $209 = (($207) + ($208<<2)|0);\n      $210 = HEAP32[$209>>2]|0;\n      $211 = HEAP32[$162>>2]|0;\n      $212 = HEAP32[$211>>2]|0;\n      $213 = ((($211)) + 28|0);\n      $214 = HEAP32[$213>>2]|0;\n      $215 = (_floor1_interpolate_fit($0,$210,$212,$214,9362)|0);\n      $216 = HEAP32[$162>>2]|0;\n      $217 = ((($216)) + 4|0);\n      HEAP32[$217>>2] = $215;\n      $218 = HEAP32[$152>>2]|0;\n      $219 = HEAP32[$177>>2]|0;\n      $220 = (($218) + ($219<<2)|0);\n      $221 = HEAP32[$220>>2]|0;\n      $222 = HEAP32[$162>>2]|0;\n      $223 = HEAP32[$222>>2]|0;\n      $224 = ((($222)) + 28|0);\n      $225 = HEAP32[$224>>2]|0;\n      $226 = (_floor1_interpolate_fit($0,$221,$223,$225,18724)|0);\n      $227 = HEAP32[$162>>2]|0;\n      $228 = ((($227)) + 8|0);\n      HEAP32[$228>>2] = $226;\n      $229 = HEAP32[$152>>2]|0;\n      $230 = HEAP32[$177>>2]|0;\n      $231 = (($229) + ($230<<2)|0);\n      $232 = HEAP32[$231>>2]|0;\n      $233 = HEAP32[$162>>2]|0;\n      $234 = HEAP32[$233>>2]|0;\n      $235 = ((($233)) + 28|0);\n      $236 = HEAP32[$235>>2]|0;\n      $237 = (_floor1_interpolate_fit($0,$232,$234,$236,28086)|0);\n      $238 = HEAP32[$162>>2]|0;\n      $239 = ((($238)) + 12|0);\n      HEAP32[$239>>2] = $237;\n      $240 = HEAP32[$152>>2]|0;\n      $241 = HEAP32[$177>>2]|0;\n      $242 = (($240) + ($241<<2)|0);\n      $243 = HEAP32[$242>>2]|0;\n      $244 = HEAP32[$162>>2]|0;\n      $245 = HEAP32[$244>>2]|0;\n      $246 = ((($244)) + 28|0);\n      $247 = HEAP32[$246>>2]|0;\n      $248 = (_floor1_interpolate_fit($0,$243,$245,$247,37449)|0);\n      $249 = HEAP32[$162>>2]|0;\n      $250 = ((($249)) + 16|0);\n      HEAP32[$250>>2] = $248;\n      $251 = HEAP32[$152>>2]|0;\n      $252 = HEAP32[$177>>2]|0;\n      $253 = (($251) + ($252<<2)|0);\n      $254 = HEAP32[$253>>2]|0;\n      $255 = HEAP32[$162>>2]|0;\n      $256 = HEAP32[$255>>2]|0;\n      $257 = ((($255)) + 28|0);\n      $258 = HEAP32[$257>>2]|0;\n      $259 = (_floor1_interpolate_fit($0,$254,$256,$258,46811)|0);\n      $260 = HEAP32[$162>>2]|0;\n      $261 = ((($260)) + 20|0);\n      HEAP32[$261>>2] = $259;\n      $262 = HEAP32[$152>>2]|0;\n      $263 = HEAP32[$177>>2]|0;\n      $264 = (($262) + ($263<<2)|0);\n      $265 = HEAP32[$264>>2]|0;\n      $266 = HEAP32[$162>>2]|0;\n      $267 = HEAP32[$266>>2]|0;\n      $268 = ((($266)) + 28|0);\n      $269 = HEAP32[$268>>2]|0;\n      $270 = (_floor1_interpolate_fit($0,$265,$267,$269,56173)|0);\n      $271 = HEAP32[$162>>2]|0;\n      $272 = ((($271)) + 24|0);\n      HEAP32[$272>>2] = $270;\n      $273 = HEAP32[$152>>2]|0;\n      $274 = HEAP32[$177>>2]|0;\n      $275 = (($273) + ($274<<2)|0);\n      $276 = HEAP32[$275>>2]|0;\n      $277 = HEAP32[$162>>2]|0;\n      $278 = ((($277)) + 28|0);\n      $279 = HEAP32[$278>>2]|0;\n      $280 = ((($277)) + 56|0);\n      $281 = HEAP32[$280>>2]|0;\n      $282 = (_floor1_interpolate_fit($0,$276,$279,$281,9362)|0);\n      $283 = HEAP32[$162>>2]|0;\n      $284 = ((($283)) + 32|0);\n      HEAP32[$284>>2] = $282;\n      $285 = HEAP32[$152>>2]|0;\n      $286 = HEAP32[$177>>2]|0;\n      $287 = (($285) + ($286<<2)|0);\n      $288 = HEAP32[$287>>2]|0;\n      $289 = HEAP32[$162>>2]|0;\n      $290 = ((($289)) + 28|0);\n      $291 = HEAP32[$290>>2]|0;\n      $292 = ((($289)) + 56|0);\n      $293 = HEAP32[$292>>2]|0;\n      $294 = (_floor1_interpolate_fit($0,$288,$291,$293,18724)|0);\n      $295 = HEAP32[$162>>2]|0;\n      $296 = ((($295)) + 36|0);\n      HEAP32[$296>>2] = $294;\n      $297 = HEAP32[$152>>2]|0;\n      $298 = HEAP32[$177>>2]|0;\n      $299 = (($297) + ($298<<2)|0);\n      $300 = HEAP32[$299>>2]|0;\n      $301 = HEAP32[$162>>2]|0;\n      $302 = ((($301)) + 28|0);\n      $303 = HEAP32[$302>>2]|0;\n      $304 = ((($301)) + 56|0);\n      $305 = HEAP32[$304>>2]|0;\n      $306 = (_floor1_interpolate_fit($0,$300,$303,$305,28086)|0);\n      $307 = HEAP32[$162>>2]|0;\n      $308 = ((($307)) + 40|0);\n      HEAP32[$308>>2] = $306;\n      $309 = HEAP32[$152>>2]|0;\n      $310 = HEAP32[$177>>2]|0;\n      $311 = (($309) + ($310<<2)|0);\n      $312 = HEAP32[$311>>2]|0;\n      $313 = HEAP32[$162>>2]|0;\n      $314 = ((($313)) + 28|0);\n      $315 = HEAP32[$314>>2]|0;\n      $316 = ((($313)) + 56|0);\n      $317 = HEAP32[$316>>2]|0;\n      $318 = (_floor1_interpolate_fit($0,$312,$315,$317,37449)|0);\n      $319 = HEAP32[$162>>2]|0;\n      $320 = ((($319)) + 44|0);\n      HEAP32[$320>>2] = $318;\n      $321 = HEAP32[$152>>2]|0;\n      $322 = HEAP32[$177>>2]|0;\n      $323 = (($321) + ($322<<2)|0);\n      $324 = HEAP32[$323>>2]|0;\n      $325 = HEAP32[$162>>2]|0;\n      $326 = ((($325)) + 28|0);\n      $327 = HEAP32[$326>>2]|0;\n      $328 = ((($325)) + 56|0);\n      $329 = HEAP32[$328>>2]|0;\n      $330 = (_floor1_interpolate_fit($0,$324,$327,$329,46811)|0);\n      $331 = HEAP32[$162>>2]|0;\n      $332 = ((($331)) + 48|0);\n      HEAP32[$332>>2] = $330;\n      $333 = HEAP32[$152>>2]|0;\n      $334 = HEAP32[$177>>2]|0;\n      $335 = (($333) + ($334<<2)|0);\n      $336 = HEAP32[$335>>2]|0;\n      $337 = HEAP32[$162>>2]|0;\n      $338 = ((($337)) + 28|0);\n      $339 = HEAP32[$338>>2]|0;\n      $340 = ((($337)) + 56|0);\n      $341 = HEAP32[$340>>2]|0;\n      $342 = (_floor1_interpolate_fit($0,$336,$339,$341,56173)|0);\n      $343 = HEAP32[$162>>2]|0;\n      $344 = ((($343)) + 52|0);\n      HEAP32[$344>>2] = $342;\n     }\n    }\n    $345 = (($$1376426) + 1)|0;\n    $346 = HEAP32[$13>>2]|0;\n    $347 = ($345|0)<($346|0);\n    if ($347) {\n     $$1376426 = $345;\n    } else {\n     $$pre$phi451Z2D = $152;$349 = $346;\n     break L13;\n    }\n   }\n   STACKTOP = sp;return ($$3|0);\n  } else {\n   $$pre450 = ((($8)) + 48|0);\n   $$pre$phi451Z2D = $$pre450;$349 = $149;\n  }\n } while(0);\n HEAPF32[$24>>2] = $$0390$lcssa;\n $348 = $349 << 2;\n $$alloca_mul3 = $348;\n $350 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;\n $$alloca_mul5 = $348;\n $351 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;\n $352 = (_vorbis_bitrate_managed($0)|0);\n $353 = ($352|0)!=(0);\n $354 = $353 ? 0 : 7;\n $355 = ((($8)) + 44|0);\n $356 = ((($0)) + 24|0);\n $357 = ((($0)) + 32|0);\n $358 = ((($6)) + 2868|0);\n $359 = ((($8)) + 52|0);\n $$2389419 = $354;\n while(1) {\n  $360 = (((($10)) + 12|0) + ($$2389419<<2)|0);\n  $361 = HEAP32[$360>>2]|0;\n  _oggpack_write($361,0,1);\n  $362 = HEAP32[$355>>2]|0;\n  _oggpack_write($361,$32,$362);\n  $363 = HEAP32[$31>>2]|0;\n  $364 = ($363|0)==(0);\n  if (!($364)) {\n   $365 = HEAP32[$356>>2]|0;\n   _oggpack_write($361,$365,1);\n   $366 = HEAP32[$357>>2]|0;\n   _oggpack_write($361,$366,1);\n  }\n  $367 = HEAP32[$13>>2]|0;\n  $368 = ($367|0)>(0);\n  if ($368) {\n   $$2377402 = 0;\n   while(1) {\n    $369 = (((($34)) + 4|0) + ($$2377402<<2)|0);\n    $370 = HEAP32[$369>>2]|0;\n    $371 = (($20) + ($$2377402<<2)|0);\n    $372 = HEAP32[$371>>2]|0;\n    $373 = HEAP32[$$pre$phi451Z2D>>2]|0;\n    $374 = (((($34)) + 1028|0) + ($370<<2)|0);\n    $375 = HEAP32[$374>>2]|0;\n    $376 = (($373) + ($375<<2)|0);\n    $377 = HEAP32[$376>>2]|0;\n    $378 = (($23) + ($$2377402<<2)|0);\n    $379 = HEAP32[$378>>2]|0;\n    $380 = (($379) + ($$2389419<<2)|0);\n    $381 = HEAP32[$380>>2]|0;\n    $382 = (_floor1_encode($361,$0,$377,$381,$372)|0);\n    $383 = (($16) + ($$2377402<<2)|0);\n    HEAP32[$383>>2] = $382;\n    $384 = (($$2377402) + 1)|0;\n    $385 = HEAP32[$13>>2]|0;\n    $386 = ($384|0)<($385|0);\n    if ($386) {\n     $$2377402 = $384;\n    } else {\n     $$lcssa = $385;\n     break;\n    }\n   }\n  } else {\n   $$lcssa = $367;\n  }\n  $387 = HEAP32[$31>>2]|0;\n  $388 = ((((($6)) + 3240|0) + (($387*60)|0)|0) + ($$2389419<<2)|0);\n  $389 = HEAP32[$388>>2]|0;\n  __vp_couple_quantize_normalize($$2389419,$358,$40,$34,$17,$20,$16,$389,$$lcssa);\n  $390 = HEAP32[$34>>2]|0;\n  $391 = ($390|0)>(0);\n  if ($391) {\n   $$3378415 = 0;\n   while(1) {\n    $392 = (((($34)) + 1092|0) + ($$3378415<<2)|0);\n    $393 = HEAP32[$392>>2]|0;\n    $394 = HEAP32[$13>>2]|0;\n    $395 = ($394|0)>(0);\n    if ($395) {\n     $$0379404 = 0;$$2385403 = 0;$446 = $394;\n     while(1) {\n      $396 = (((($34)) + 4|0) + ($$2385403<<2)|0);\n      $397 = HEAP32[$396>>2]|0;\n      $398 = ($397|0)==($$3378415|0);\n      if ($398) {\n       $399 = (($351) + ($$0379404<<2)|0);\n       $400 = (($16) + ($$2385403<<2)|0);\n       $401 = HEAP32[$400>>2]|0;\n       $not$ = ($401|0)!=(0);\n       $$ = $not$&1;\n       HEAP32[$399>>2] = $$;\n       $402 = (($20) + ($$2385403<<2)|0);\n       $403 = HEAP32[$402>>2]|0;\n       $404 = (($$0379404) + 1)|0;\n       $405 = (($350) + ($$0379404<<2)|0);\n       HEAP32[$405>>2] = $403;\n       $$pre = HEAP32[$13>>2]|0;\n       $$1380 = $404;$408 = $$pre;\n      } else {\n       $$1380 = $$0379404;$408 = $446;\n      }\n      $406 = (($$2385403) + 1)|0;\n      $407 = ($406|0)<($408|0);\n      if ($407) {\n       $$0379404 = $$1380;$$2385403 = $406;$446 = $408;\n      } else {\n       $$0379$lcssa = $$1380;\n       break;\n      }\n     }\n    } else {\n     $$0379$lcssa = 0;\n    }\n    $409 = (((($6)) + 1312|0) + ($393<<2)|0);\n    $410 = HEAP32[$409>>2]|0;\n    $411 = (27948 + ($410<<2)|0);\n    $412 = HEAP32[$411>>2]|0;\n    $413 = ((($412)) + 20|0);\n    $414 = HEAP32[$413>>2]|0;\n    $415 = HEAP32[$359>>2]|0;\n    $416 = (($415) + ($393<<2)|0);\n    $417 = HEAP32[$416>>2]|0;\n    $418 = (FUNCTION_TABLE_iiiiii[$414 & 31]($0,$417,$350,$351,$$0379$lcssa)|0);\n    $419 = HEAP32[$13>>2]|0;\n    $420 = ($419|0)>(0);\n    if ($420) {\n     $$2381410 = 0;$$3386409 = 0;\n     while(1) {\n      $421 = (((($34)) + 4|0) + ($$3386409<<2)|0);\n      $422 = HEAP32[$421>>2]|0;\n      $423 = ($422|0)==($$3378415|0);\n      if ($423) {\n       $424 = (($350) + ($$2381410<<2)|0);\n       $425 = (($$2381410) + 1)|0;\n       $426 = (($20) + ($$3386409<<2)|0);\n       $427 = HEAP32[$426>>2]|0;\n       HEAP32[$424>>2] = $427;\n       $$3382 = $425;\n      } else {\n       $$3382 = $$2381410;\n      }\n      $428 = (($$3386409) + 1)|0;\n      $429 = ($428|0)<($419|0);\n      if ($429) {\n       $$2381410 = $$3382;$$3386409 = $428;\n      } else {\n       $$2381$lcssa = $$3382;\n       break;\n      }\n     }\n    } else {\n     $$2381$lcssa = 0;\n    }\n    $430 = HEAP32[$409>>2]|0;\n    $431 = (27948 + ($430<<2)|0);\n    $432 = HEAP32[$431>>2]|0;\n    $433 = ((($432)) + 24|0);\n    $434 = HEAP32[$433>>2]|0;\n    $435 = HEAP32[$359>>2]|0;\n    $436 = (($435) + ($393<<2)|0);\n    $437 = HEAP32[$436>>2]|0;\n    (FUNCTION_TABLE_iiiiiiiii[$434 & 31]($361,$0,$437,$350,$351,$$2381$lcssa,$418,$$3378415)|0);\n    $438 = (($$3378415) + 1)|0;\n    $439 = HEAP32[$34>>2]|0;\n    $440 = ($438|0)<($439|0);\n    if ($440) {\n     $$3378415 = $438;\n    } else {\n     break;\n    }\n   }\n  }\n  $441 = (($$2389419) + 1)|0;\n  $442 = (_vorbis_bitrate_managed($0)|0);\n  $443 = ($442|0)!=(0);\n  $444 = $443 ? 14 : 7;\n  $445 = ($$2389419|0)<($444|0);\n  if ($445) {\n   $$2389419 = $441;\n  } else {\n   $$3 = 0;\n   break;\n  }\n }\n STACKTOP = sp;return ($$3|0);\n}\nfunction _mapping0_inverse($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0189208 = 0, $$0191$lcssa = 0, $$0191207 = 0, $$0216 = 0, $$1190200$us = 0, $$1192 = 0, $$1213 = 0, $$2211 = 0, $$3204$us = 0, $$3204$us$in = 0, $$4198 = 0, $$5197 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$pre = 0, $$pre220 = 0, $$pre221 = 0, $$sink = 0;\n var $$sink1 = 0, $$sink2$us = 0.0, $$sink3$us = 0, $$sink4$us = 0.0, $$sink5$us = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;\n var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0, $13 = 0, $130 = 0;\n var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;\n var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;\n var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 64|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($3)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($5)) + 28|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($3)) + 104|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($0)) + 28|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (($7) + ($11<<2)|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ((($0)) + 36|0);\n HEAP32[$14>>2] = $13;\n $15 = ((($5)) + 4|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = $16 << 2;\n $$alloca_mul = $17;\n $18 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $$alloca_mul1 = $17;\n $19 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;\n $$alloca_mul3 = $17;\n $20 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;\n $$alloca_mul5 = $17;\n $21 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;\n $22 = ($16|0)>(0);\n if ($22) {\n  $23 = ((($1)) + 4|0);\n  $24 = ((($1)) + 1028|0);\n  $25 = ((($9)) + 48|0);\n  $26 = $13 << 1;\n  $27 = $26 & 2147483646;\n  $$0216 = 0;\n  while(1) {\n   $33 = (($23) + ($$0216<<2)|0);\n   $34 = HEAP32[$33>>2]|0;\n   $35 = (($24) + ($34<<2)|0);\n   $36 = HEAP32[$35>>2]|0;\n   $37 = (((($7)) + 800|0) + ($36<<2)|0);\n   $38 = HEAP32[$37>>2]|0;\n   $39 = (27940 + ($38<<2)|0);\n   $40 = HEAP32[$39>>2]|0;\n   $41 = ((($40)) + 20|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = HEAP32[$25>>2]|0;\n   $44 = (($43) + ($36<<2)|0);\n   $45 = HEAP32[$44>>2]|0;\n   $46 = (FUNCTION_TABLE_iii[$42 & 63]($0,$45)|0);\n   $47 = (($21) + ($$0216<<2)|0);\n   HEAP32[$47>>2] = $46;\n   $48 = ($46|0)!=(0|0);\n   $49 = (($20) + ($$0216<<2)|0);\n   $$sink = $48&1;\n   HEAP32[$49>>2] = $$sink;\n   $50 = HEAP32[$0>>2]|0;\n   $51 = (($50) + ($$0216<<2)|0);\n   $52 = HEAP32[$51>>2]|0;\n   _memset(($52|0),0,($27|0))|0;\n   $53 = (($$0216) + 1)|0;\n   $54 = HEAP32[$15>>2]|0;\n   $55 = ($53|0)<($54|0);\n   if ($55) {\n    $$0216 = $53;\n   } else {\n    $169 = $54;\n    break;\n   }\n  }\n } else {\n  $169 = $16;\n }\n $28 = ((($1)) + 1156|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = ($29|0)>(0);\n if ($30) {\n  $31 = ((($1)) + 1160|0);\n  $32 = ((($1)) + 2184|0);\n  $$1213 = 0;\n  while(1) {\n   $61 = (($31) + ($$1213<<2)|0);\n   $62 = HEAP32[$61>>2]|0;\n   $63 = (($20) + ($62<<2)|0);\n   $64 = HEAP32[$63>>2]|0;\n   $65 = ($64|0)==(0);\n   $66 = (($32) + ($$1213<<2)|0);\n   $67 = HEAP32[$66>>2]|0;\n   $68 = (($20) + ($67<<2)|0);\n   if ($65) {\n    $69 = HEAP32[$68>>2]|0;\n    $70 = ($69|0)==(0);\n    if (!($70)) {\n     label = 10;\n    }\n   } else {\n    label = 10;\n   }\n   if ((label|0) == 10) {\n    label = 0;\n    HEAP32[$63>>2] = 1;\n    HEAP32[$68>>2] = 1;\n   }\n   $71 = (($$1213) + 1)|0;\n   $72 = ($71|0)<($29|0);\n   if ($72) {\n    $$1213 = $71;\n   } else {\n    break;\n   }\n  }\n }\n $56 = HEAP32[$1>>2]|0;\n $57 = ($56|0)>(0);\n if ($57) {\n  $58 = ((($1)) + 1092|0);\n  $59 = ((($9)) + 52|0);\n  $60 = ((($1)) + 4|0);\n  $$2211 = 0;$73 = $169;\n  while(1) {\n   $74 = ($73|0)>(0);\n   if ($74) {\n    $$0189208 = 0;$$0191207 = 0;$170 = $73;\n    while(1) {\n     $75 = (($60) + ($$0189208<<2)|0);\n     $76 = HEAP32[$75>>2]|0;\n     $77 = ($76|0)==($$2211|0);\n     if ($77) {\n      $78 = (($20) + ($$0189208<<2)|0);\n      $79 = HEAP32[$78>>2]|0;\n      $80 = ($79|0)!=(0);\n      $81 = (($19) + ($$0191207<<2)|0);\n      $$sink1 = $80&1;\n      HEAP32[$81>>2] = $$sink1;\n      $82 = HEAP32[$0>>2]|0;\n      $83 = (($82) + ($$0189208<<2)|0);\n      $84 = HEAP32[$83>>2]|0;\n      $85 = (($$0191207) + 1)|0;\n      $86 = (($18) + ($$0191207<<2)|0);\n      HEAP32[$86>>2] = $84;\n      $$pre220 = HEAP32[$15>>2]|0;\n      $$1192 = $85;$89 = $$pre220;\n     } else {\n      $$1192 = $$0191207;$89 = $170;\n     }\n     $87 = (($$0189208) + 1)|0;\n     $88 = ($87|0)<($89|0);\n     if ($88) {\n      $$0189208 = $87;$$0191207 = $$1192;$170 = $89;\n     } else {\n      $$0191$lcssa = $$1192;\n      break;\n     }\n    }\n   } else {\n    $$0191$lcssa = 0;\n   }\n   $90 = (($58) + ($$2211<<2)|0);\n   $91 = HEAP32[$90>>2]|0;\n   $92 = (((($7)) + 1312|0) + ($91<<2)|0);\n   $93 = HEAP32[$92>>2]|0;\n   $94 = (27948 + ($93<<2)|0);\n   $95 = HEAP32[$94>>2]|0;\n   $96 = ((($95)) + 28|0);\n   $97 = HEAP32[$96>>2]|0;\n   $98 = HEAP32[$59>>2]|0;\n   $99 = (($98) + ($91<<2)|0);\n   $100 = HEAP32[$99>>2]|0;\n   (FUNCTION_TABLE_iiiiii[$97 & 31]($0,$100,$18,$19,$$0191$lcssa)|0);\n   $101 = (($$2211) + 1)|0;\n   $102 = HEAP32[$1>>2]|0;\n   $103 = ($101|0)<($102|0);\n   if (!($103)) {\n    break;\n   }\n   $$pre = HEAP32[$15>>2]|0;\n   $$2211 = $101;$73 = $$pre;\n  }\n  $$pre221 = HEAP32[$28>>2]|0;\n  $104 = $$pre221;\n } else {\n  $104 = $29;\n }\n $105 = ($104|0)>(0);\n if ($105) {\n  $106 = HEAP32[$0>>2]|0;\n  $107 = ((($1)) + 1160|0);\n  $108 = ((($1)) + 2184|0);\n  $109 = (($13|0) / 2)&-1;\n  $110 = ($13|0)>(1);\n  if ($110) {\n   $$3204$us$in = $104;\n   while(1) {\n    $$3204$us = (($$3204$us$in) + -1)|0;\n    $111 = (($107) + ($$3204$us<<2)|0);\n    $112 = HEAP32[$111>>2]|0;\n    $113 = (($106) + ($112<<2)|0);\n    $114 = HEAP32[$113>>2]|0;\n    $115 = (($108) + ($$3204$us<<2)|0);\n    $116 = HEAP32[$115>>2]|0;\n    $117 = (($106) + ($116<<2)|0);\n    $118 = HEAP32[$117>>2]|0;\n    $$1190200$us = 0;\n    while(1) {\n     $119 = (($114) + ($$1190200$us<<2)|0);\n     $120 = +HEAPF32[$119>>2];\n     $121 = (($118) + ($$1190200$us<<2)|0);\n     $122 = +HEAPF32[$121>>2];\n     $123 = $120 > 0.0;\n     $124 = $122 > 0.0;\n     if ($123) {\n      if ($124) {\n       $128 = $120 - $122;\n       $$sink2$us = $128;$$sink3$us = $121;\n      } else {\n       HEAPF32[$121>>2] = $120;\n       $127 = $122 + $120;\n       $$sink2$us = $127;$$sink3$us = $119;\n      }\n      HEAPF32[$$sink3$us>>2] = $$sink2$us;\n     } else {\n      if ($124) {\n       $126 = $122 + $120;\n       $$sink4$us = $126;$$sink5$us = $121;\n      } else {\n       HEAPF32[$121>>2] = $120;\n       $125 = $120 - $122;\n       $$sink4$us = $125;$$sink5$us = $119;\n      }\n      HEAPF32[$$sink5$us>>2] = $$sink4$us;\n     }\n     $129 = (($$1190200$us) + 1)|0;\n     $130 = ($129|0)<($109|0);\n     if ($130) {\n      $$1190200$us = $129;\n     } else {\n      break;\n     }\n    }\n    $131 = ($$3204$us$in|0)>(1);\n    if ($131) {\n     $$3204$us$in = $$3204$us;\n    } else {\n     break;\n    }\n   }\n  }\n }\n $132 = HEAP32[$15>>2]|0;\n $133 = ($132|0)>(0);\n if (!($133)) {\n  STACKTOP = sp;return 0;\n }\n $134 = ((($1)) + 4|0);\n $135 = ((($1)) + 1028|0);\n $136 = ((($9)) + 48|0);\n $$4198 = 0;\n while(1) {\n  $139 = HEAP32[$0>>2]|0;\n  $140 = (($139) + ($$4198<<2)|0);\n  $141 = HEAP32[$140>>2]|0;\n  $142 = (($134) + ($$4198<<2)|0);\n  $143 = HEAP32[$142>>2]|0;\n  $144 = (($135) + ($143<<2)|0);\n  $145 = HEAP32[$144>>2]|0;\n  $146 = (((($7)) + 800|0) + ($145<<2)|0);\n  $147 = HEAP32[$146>>2]|0;\n  $148 = (27940 + ($147<<2)|0);\n  $149 = HEAP32[$148>>2]|0;\n  $150 = ((($149)) + 24|0);\n  $151 = HEAP32[$150>>2]|0;\n  $152 = HEAP32[$136>>2]|0;\n  $153 = (($152) + ($145<<2)|0);\n  $154 = HEAP32[$153>>2]|0;\n  $155 = (($21) + ($$4198<<2)|0);\n  $156 = HEAP32[$155>>2]|0;\n  (FUNCTION_TABLE_iiiii[$151 & 31]($0,$154,$156,$141)|0);\n  $157 = (($$4198) + 1)|0;\n  $137 = HEAP32[$15>>2]|0;\n  $158 = ($157|0)<($137|0);\n  if ($158) {\n   $$4198 = $157;\n  } else {\n   break;\n  }\n }\n $138 = ($137|0)>(0);\n if (!($138)) {\n  STACKTOP = sp;return 0;\n }\n $$5197 = 0;\n while(1) {\n  $159 = HEAP32[$0>>2]|0;\n  $160 = (($159) + ($$5197<<2)|0);\n  $161 = HEAP32[$160>>2]|0;\n  $162 = HEAP32[$10>>2]|0;\n  $163 = (((($9)) + 12|0) + ($162<<2)|0);\n  $164 = HEAP32[$163>>2]|0;\n  $165 = HEAP32[$164>>2]|0;\n  _mdct_backward($165,$161,$161);\n  $166 = (($$5197) + 1)|0;\n  $167 = HEAP32[$15>>2]|0;\n  $168 = ($166|0)<($167|0);\n  if ($168) {\n   $$5197 = $166;\n  } else {\n   break;\n  }\n }\n STACKTOP = sp;return 0;\n}\nfunction _mdct_init($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$08696 = 0, $$08891 = 0, $$08993 = 0, $$092 = 0, $$1 = 0, $$18794 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0;\n var $23 = 0.0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0;\n var $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0;\n var $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;\n var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0.0, $92 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (($1|0) / 4)&-1;\n $3 = $2 << 2;\n $4 = (_malloc($3)|0);\n $5 = (($2) + ($1))|0;\n $6 = $5 << 2;\n $7 = (_malloc($6)|0);\n $8 = $1 >> 1;\n $9 = (+($1|0));\n $10 = $9;\n $11 = (+Math_log((+$10)));\n $12 = $11 * 1.4426950408889634;\n $13 = (+_rint($12));\n $14 = (~~(($13)));\n $15 = ((($0)) + 4|0);\n HEAP32[$15>>2] = $14;\n HEAP32[$0>>2] = $1;\n $16 = ((($0)) + 8|0);\n HEAP32[$16>>2] = $7;\n $17 = ((($0)) + 12|0);\n HEAP32[$17>>2] = $4;\n $18 = ($1|0)>(3);\n if (!($18)) {\n  $91 = 4.0 / $9;\n  $92 = ((($0)) + 16|0);\n  HEAPF32[$92>>2] = $91;\n  return;\n }\n $19 = (+($1|0));\n $20 = 3.1415926535897931 / $19;\n $21 = $1 << 1;\n $22 = (+($21|0));\n $23 = 3.1415926535897931 / $22;\n $$08696 = 0;\n while(1) {\n  $28 = $$08696 << 2;\n  $29 = (+($28|0));\n  $30 = $29 * $20;\n  $31 = (+Math_cos((+$30)));\n  $32 = $31;\n  $33 = $$08696 << 1;\n  $34 = (($7) + ($33<<2)|0);\n  HEAPF32[$34>>2] = $32;\n  $35 = (+Math_sin((+$30)));\n  $36 = $35;\n  $37 = -$36;\n  $38 = $33 | 1;\n  $39 = (($7) + ($38<<2)|0);\n  HEAPF32[$39>>2] = $37;\n  $40 = (+($38|0));\n  $41 = $40 * $23;\n  $42 = (+Math_cos((+$41)));\n  $43 = $42;\n  $44 = (($33) + ($8))|0;\n  $45 = (($7) + ($44<<2)|0);\n  HEAPF32[$45>>2] = $43;\n  $46 = (+Math_sin((+$41)));\n  $47 = $46;\n  $48 = (($44) + 1)|0;\n  $49 = (($7) + ($48<<2)|0);\n  HEAPF32[$49>>2] = $47;\n  $50 = (($$08696) + 1)|0;\n  $51 = ($50|0)<($2|0);\n  if ($51) {\n   $$08696 = $50;\n  } else {\n   break;\n  }\n }\n $24 = (($1|0) / 8)&-1;\n $25 = ($1|0)>(7);\n if (!($25)) {\n  $91 = 4.0 / $9;\n  $92 = ((($0)) + 16|0);\n  HEAPF32[$92>>2] = $91;\n  return;\n }\n $26 = (+($1|0));\n $27 = 3.1415926535897931 / $26;\n $$18794 = 0;\n while(1) {\n  $52 = $$18794 << 2;\n  $53 = $52 | 2;\n  $54 = (+($53|0));\n  $55 = $54 * $27;\n  $56 = (+Math_cos((+$55)));\n  $57 = $56 * 0.5;\n  $58 = $57;\n  $59 = $$18794 << 1;\n  $60 = (($59) + ($1))|0;\n  $61 = (($7) + ($60<<2)|0);\n  HEAPF32[$61>>2] = $58;\n  $62 = (+Math_sin((+$55)));\n  $63 = $62 * -0.5;\n  $64 = $63;\n  $65 = (($60) + 1)|0;\n  $66 = (($7) + ($65<<2)|0);\n  HEAPF32[$66>>2] = $64;\n  $67 = (($$18794) + 1)|0;\n  $68 = ($67|0)<($24|0);\n  if ($68) {\n   $$18794 = $67;\n  } else {\n   break;\n  }\n }\n $69 = (($14) + -1)|0;\n $70 = 1 << $69;\n $71 = (($70) + -1)|0;\n $72 = (($14) + -2)|0;\n $73 = 1 << $72;\n if ($25) {\n  $$08993 = 0;\n } else {\n  $91 = 4.0 / $9;\n  $92 = ((($0)) + 16|0);\n  HEAPF32[$92>>2] = $91;\n  return;\n }\n while(1) {\n  $$08891 = 0;$$092 = 0;$75 = $73;\n  while(1) {\n   $74 = $75 & $$08993;\n   $76 = ($74|0)==(0);\n   $77 = 1 << $$08891;\n   $78 = $76 ? 0 : $77;\n   $$1 = $78 | $$092;\n   $79 = (($$08891) + 1)|0;\n   $80 = $73 >> $79;\n   $81 = ($80|0)==(0);\n   if ($81) {\n    break;\n   } else {\n    $$08891 = $79;$$092 = $$1;$75 = $80;\n   }\n  }\n  $82 = $$1 ^ -1;\n  $83 = $71 & $82;\n  $84 = (($83) + -1)|0;\n  $85 = $$08993 << 1;\n  $86 = (($4) + ($85<<2)|0);\n  HEAP32[$86>>2] = $84;\n  $87 = $85 | 1;\n  $88 = (($4) + ($87<<2)|0);\n  HEAP32[$88>>2] = $$1;\n  $89 = (($$08993) + 1)|0;\n  $90 = ($89|0)<($24|0);\n  if ($90) {\n   $$08993 = $89;\n  } else {\n   break;\n  }\n }\n $91 = 4.0 / $9;\n $92 = ((($0)) + 16|0);\n HEAPF32[$92>>2] = $91;\n return;\n}\nfunction _mdct_clear($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 8|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if (!($4)) {\n  _free($3);\n }\n $5 = ((($0)) + 12|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if (!($7)) {\n  _free($6);\n }\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;\n return;\n}\nfunction _mdct_backward($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$0$i = 0, $$0187 = 0, $$0189 = 0, $$0192 = 0, $$0195 = 0, $$0197 = 0, $$097$i = 0, $$098$i = 0, $$099$i = 0, $$1 = 0, $$1188 = 0, $$1190 = 0, $$1193 = 0, $$1196 = 0, $$1198 = 0, $$2 = 0, $$2191 = 0, $$2194 = 0, $$idx = 0;\n var $$idx$val = 0, $$idx200$val = 0, $$idx201$val = 0, $$idx202 = 0, $$idx202$val = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0;\n var $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0;\n var $131 = 0.0, $132 = 0, $133 = 0.0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0.0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0;\n var $15 = 0.0, $150 = 0.0, $151 = 0.0, $152 = 0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0;\n var $168 = 0.0, $169 = 0, $17 = 0.0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0.0, $180 = 0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0;\n var $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0.0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0, $20 = 0.0, $200 = 0.0, $201 = 0, $202 = 0.0, $203 = 0.0;\n var $204 = 0.0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0, $215 = 0, $216 = 0.0, $217 = 0, $218 = 0.0, $219 = 0.0, $22 = 0.0, $220 = 0, $221 = 0.0;\n var $222 = 0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0.0, $23 = 0.0, $230 = 0.0, $231 = 0.0, $232 = 0.0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0, $239 = 0.0, $24 = 0.0;\n var $240 = 0.0, $241 = 0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0.0, $250 = 0.0, $251 = 0.0, $252 = 0.0, $253 = 0.0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;\n var $259 = 0, $26 = 0.0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0.0, $265 = 0, $266 = 0.0, $267 = 0, $268 = 0.0, $269 = 0, $27 = 0.0, $270 = 0.0, $271 = 0, $272 = 0, $273 = 0.0, $274 = 0, $275 = 0.0, $276 = 0;\n var $277 = 0.0, $278 = 0.0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0.0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;\n var $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0;\n var $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0;\n var $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0.0, $83 = 0.0;\n var $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$0>>2]|0;\n $4 = $3 >> 1;\n $5 = $3 >> 2;\n $6 = (($1) + ($4<<2)|0);\n $7 = ((($6)) + -28|0);\n $8 = (($2) + ($4<<2)|0);\n $9 = (($8) + ($5<<2)|0);\n $10 = ((($0)) + 8|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (($11) + ($5<<2)|0);\n $$0192 = $12;$$0195 = $9;$$0197 = $7;\n while(1) {\n  $13 = ((($$0195)) + -16|0);\n  $14 = ((($$0197)) + 8|0);\n  $15 = +HEAPF32[$14>>2];\n  $16 = ((($$0192)) + 12|0);\n  $17 = +HEAPF32[$16>>2];\n  $18 = $15 * $17;\n  $19 = -$18;\n  $20 = +HEAPF32[$$0197>>2];\n  $21 = ((($$0192)) + 8|0);\n  $22 = +HEAPF32[$21>>2];\n  $23 = $22 * $20;\n  $24 = $19 - $23;\n  HEAPF32[$13>>2] = $24;\n  $25 = +HEAPF32[$$0197>>2];\n  $26 = +HEAPF32[$16>>2];\n  $27 = $26 * $25;\n  $28 = +HEAPF32[$14>>2];\n  $29 = +HEAPF32[$21>>2];\n  $30 = $29 * $28;\n  $31 = $27 - $30;\n  $32 = ((($$0195)) + -12|0);\n  HEAPF32[$32>>2] = $31;\n  $33 = ((($$0197)) + 24|0);\n  $34 = +HEAPF32[$33>>2];\n  $35 = ((($$0192)) + 4|0);\n  $36 = +HEAPF32[$35>>2];\n  $37 = $34 * $36;\n  $38 = -$37;\n  $39 = ((($$0197)) + 16|0);\n  $40 = +HEAPF32[$39>>2];\n  $41 = +HEAPF32[$$0192>>2];\n  $42 = $41 * $40;\n  $43 = $38 - $42;\n  $44 = ((($$0195)) + -8|0);\n  HEAPF32[$44>>2] = $43;\n  $45 = +HEAPF32[$39>>2];\n  $46 = +HEAPF32[$35>>2];\n  $47 = $46 * $45;\n  $48 = +HEAPF32[$33>>2];\n  $49 = +HEAPF32[$$0192>>2];\n  $50 = $49 * $48;\n  $51 = $47 - $50;\n  $52 = ((($$0195)) + -4|0);\n  HEAPF32[$52>>2] = $51;\n  $53 = ((($$0197)) + -32|0);\n  $54 = ((($$0192)) + 16|0);\n  $55 = ($53>>>0)<($1>>>0);\n  if ($55) {\n   break;\n  } else {\n   $$0192 = $54;$$0195 = $13;$$0197 = $53;\n  }\n }\n $56 = ((($6)) + -32|0);\n $$1193 = $12;$$1196 = $9;$$1198 = $56;\n while(1) {\n  $57 = ((($$1193)) + -16|0);\n  $58 = ((($$1198)) + 16|0);\n  $59 = +HEAPF32[$58>>2];\n  $60 = ((($$1193)) + -4|0);\n  $61 = +HEAPF32[$60>>2];\n  $62 = $61 * $59;\n  $63 = ((($$1198)) + 24|0);\n  $64 = +HEAPF32[$63>>2];\n  $65 = ((($$1193)) + -8|0);\n  $66 = +HEAPF32[$65>>2];\n  $67 = $66 * $64;\n  $68 = $67 + $62;\n  HEAPF32[$$1196>>2] = $68;\n  $69 = +HEAPF32[$58>>2];\n  $70 = +HEAPF32[$65>>2];\n  $71 = $70 * $69;\n  $72 = +HEAPF32[$63>>2];\n  $73 = +HEAPF32[$60>>2];\n  $74 = $73 * $72;\n  $75 = $71 - $74;\n  $76 = ((($$1196)) + 4|0);\n  HEAPF32[$76>>2] = $75;\n  $77 = +HEAPF32[$$1198>>2];\n  $78 = ((($$1193)) + -12|0);\n  $79 = +HEAPF32[$78>>2];\n  $80 = $79 * $77;\n  $81 = ((($$1198)) + 8|0);\n  $82 = +HEAPF32[$81>>2];\n  $83 = +HEAPF32[$57>>2];\n  $84 = $83 * $82;\n  $85 = $84 + $80;\n  $86 = ((($$1196)) + 8|0);\n  HEAPF32[$86>>2] = $85;\n  $87 = +HEAPF32[$$1198>>2];\n  $88 = +HEAPF32[$57>>2];\n  $89 = $88 * $87;\n  $90 = +HEAPF32[$81>>2];\n  $91 = +HEAPF32[$78>>2];\n  $92 = $91 * $90;\n  $93 = $89 - $92;\n  $94 = ((($$1196)) + 12|0);\n  HEAPF32[$94>>2] = $93;\n  $95 = ((($$1198)) + -32|0);\n  $96 = ((($$1196)) + 16|0);\n  $97 = ($95>>>0)<($1>>>0);\n  if ($97) {\n   break;\n  } else {\n   $$1193 = $57;$$1196 = $96;$$1198 = $95;\n  }\n }\n $$idx = ((($0)) + 4|0);\n $$idx$val = HEAP32[$$idx>>2]|0;\n _mdct_butterflies($$idx$val,$11,$8,$4);\n $$idx200$val = HEAP32[$0>>2]|0;\n $$idx201$val = HEAP32[$10>>2]|0;\n $$idx202 = ((($0)) + 12|0);\n $$idx202$val = HEAP32[$$idx202>>2]|0;\n $98 = $$idx200$val >> 1;\n $99 = (($2) + ($98<<2)|0);\n $100 = (($$idx201$val) + ($$idx200$val<<2)|0);\n $$0$i = $$idx202$val;$$097$i = $2;$$098$i = $99;$$099$i = $100;\n while(1) {\n  $101 = HEAP32[$$0$i>>2]|0;\n  $102 = (($99) + ($101<<2)|0);\n  $103 = ((($$0$i)) + 4|0);\n  $104 = HEAP32[$103>>2]|0;\n  $105 = (($99) + ($104<<2)|0);\n  $106 = ((($102)) + 4|0);\n  $107 = +HEAPF32[$106>>2];\n  $108 = ((($105)) + 4|0);\n  $109 = +HEAPF32[$108>>2];\n  $110 = $107 - $109;\n  $111 = +HEAPF32[$102>>2];\n  $112 = +HEAPF32[$105>>2];\n  $113 = $112 + $111;\n  $114 = +HEAPF32[$$099$i>>2];\n  $115 = $113 * $114;\n  $116 = ((($$099$i)) + 4|0);\n  $117 = +HEAPF32[$116>>2];\n  $118 = $117 * $110;\n  $119 = $118 + $115;\n  $120 = $117 * $113;\n  $121 = $114 * $110;\n  $122 = $120 - $121;\n  $123 = ((($$098$i)) + -16|0);\n  $124 = $109 + $107;\n  $125 = $124 * 0.5;\n  $126 = $111 - $112;\n  $127 = $126 * 0.5;\n  $128 = $119 + $125;\n  HEAPF32[$$097$i>>2] = $128;\n  $129 = $125 - $119;\n  $130 = ((($$098$i)) + -8|0);\n  HEAPF32[$130>>2] = $129;\n  $131 = $122 + $127;\n  $132 = ((($$097$i)) + 4|0);\n  HEAPF32[$132>>2] = $131;\n  $133 = $122 - $127;\n  $134 = ((($$098$i)) + -4|0);\n  HEAPF32[$134>>2] = $133;\n  $135 = ((($$0$i)) + 8|0);\n  $136 = HEAP32[$135>>2]|0;\n  $137 = (($99) + ($136<<2)|0);\n  $138 = ((($$0$i)) + 12|0);\n  $139 = HEAP32[$138>>2]|0;\n  $140 = (($99) + ($139<<2)|0);\n  $141 = ((($137)) + 4|0);\n  $142 = +HEAPF32[$141>>2];\n  $143 = ((($140)) + 4|0);\n  $144 = +HEAPF32[$143>>2];\n  $145 = $142 - $144;\n  $146 = +HEAPF32[$137>>2];\n  $147 = +HEAPF32[$140>>2];\n  $148 = $147 + $146;\n  $149 = ((($$099$i)) + 8|0);\n  $150 = +HEAPF32[$149>>2];\n  $151 = $148 * $150;\n  $152 = ((($$099$i)) + 12|0);\n  $153 = +HEAPF32[$152>>2];\n  $154 = $153 * $145;\n  $155 = $154 + $151;\n  $156 = $153 * $148;\n  $157 = $150 * $145;\n  $158 = $156 - $157;\n  $159 = $144 + $142;\n  $160 = $159 * 0.5;\n  $161 = $146 - $147;\n  $162 = $161 * 0.5;\n  $163 = $155 + $160;\n  $164 = ((($$097$i)) + 8|0);\n  HEAPF32[$164>>2] = $163;\n  $165 = $160 - $155;\n  HEAPF32[$123>>2] = $165;\n  $166 = $158 + $162;\n  $167 = ((($$097$i)) + 12|0);\n  HEAPF32[$167>>2] = $166;\n  $168 = $158 - $162;\n  $169 = ((($$098$i)) + -12|0);\n  HEAPF32[$169>>2] = $168;\n  $170 = ((($$099$i)) + 16|0);\n  $171 = ((($$0$i)) + 16|0);\n  $172 = ((($$097$i)) + 16|0);\n  $173 = ($172>>>0)<($123>>>0);\n  if ($173) {\n   $$0$i = $171;$$097$i = $172;$$098$i = $123;$$099$i = $170;\n  } else {\n   break;\n  }\n }\n $174 = (($$idx201$val) + ($4<<2)|0);\n $$0 = $2;$$0187 = $9;$$0189 = $9;$$2194 = $174;\n while(1) {\n  $175 = ((($$0189)) + -16|0);\n  $176 = +HEAPF32[$$0>>2];\n  $177 = ((($$2194)) + 4|0);\n  $178 = +HEAPF32[$177>>2];\n  $179 = $178 * $176;\n  $180 = ((($$0)) + 4|0);\n  $181 = +HEAPF32[$180>>2];\n  $182 = +HEAPF32[$$2194>>2];\n  $183 = $182 * $181;\n  $184 = $179 - $183;\n  $185 = ((($$0189)) + -4|0);\n  HEAPF32[$185>>2] = $184;\n  $186 = +HEAPF32[$$0>>2];\n  $187 = +HEAPF32[$$2194>>2];\n  $188 = $187 * $186;\n  $189 = +HEAPF32[$180>>2];\n  $190 = +HEAPF32[$177>>2];\n  $191 = $190 * $189;\n  $192 = $188 + $191;\n  $193 = -$192;\n  HEAPF32[$$0187>>2] = $193;\n  $194 = ((($$0)) + 8|0);\n  $195 = +HEAPF32[$194>>2];\n  $196 = ((($$2194)) + 12|0);\n  $197 = +HEAPF32[$196>>2];\n  $198 = $197 * $195;\n  $199 = ((($$0)) + 12|0);\n  $200 = +HEAPF32[$199>>2];\n  $201 = ((($$2194)) + 8|0);\n  $202 = +HEAPF32[$201>>2];\n  $203 = $202 * $200;\n  $204 = $198 - $203;\n  $205 = ((($$0189)) + -8|0);\n  HEAPF32[$205>>2] = $204;\n  $206 = +HEAPF32[$194>>2];\n  $207 = +HEAPF32[$201>>2];\n  $208 = $207 * $206;\n  $209 = +HEAPF32[$199>>2];\n  $210 = +HEAPF32[$196>>2];\n  $211 = $210 * $209;\n  $212 = $208 + $211;\n  $213 = -$212;\n  $214 = ((($$0187)) + 4|0);\n  HEAPF32[$214>>2] = $213;\n  $215 = ((($$0)) + 16|0);\n  $216 = +HEAPF32[$215>>2];\n  $217 = ((($$2194)) + 20|0);\n  $218 = +HEAPF32[$217>>2];\n  $219 = $218 * $216;\n  $220 = ((($$0)) + 20|0);\n  $221 = +HEAPF32[$220>>2];\n  $222 = ((($$2194)) + 16|0);\n  $223 = +HEAPF32[$222>>2];\n  $224 = $223 * $221;\n  $225 = $219 - $224;\n  $226 = ((($$0189)) + -12|0);\n  HEAPF32[$226>>2] = $225;\n  $227 = +HEAPF32[$215>>2];\n  $228 = +HEAPF32[$222>>2];\n  $229 = $228 * $227;\n  $230 = +HEAPF32[$220>>2];\n  $231 = +HEAPF32[$217>>2];\n  $232 = $231 * $230;\n  $233 = $229 + $232;\n  $234 = -$233;\n  $235 = ((($$0187)) + 8|0);\n  HEAPF32[$235>>2] = $234;\n  $236 = ((($$0)) + 24|0);\n  $237 = +HEAPF32[$236>>2];\n  $238 = ((($$2194)) + 28|0);\n  $239 = +HEAPF32[$238>>2];\n  $240 = $239 * $237;\n  $241 = ((($$0)) + 28|0);\n  $242 = +HEAPF32[$241>>2];\n  $243 = ((($$2194)) + 24|0);\n  $244 = +HEAPF32[$243>>2];\n  $245 = $244 * $242;\n  $246 = $240 - $245;\n  HEAPF32[$175>>2] = $246;\n  $247 = +HEAPF32[$236>>2];\n  $248 = +HEAPF32[$243>>2];\n  $249 = $248 * $247;\n  $250 = +HEAPF32[$241>>2];\n  $251 = +HEAPF32[$238>>2];\n  $252 = $251 * $250;\n  $253 = $249 + $252;\n  $254 = -$253;\n  $255 = ((($$0187)) + 12|0);\n  HEAPF32[$255>>2] = $254;\n  $256 = ((($$0187)) + 16|0);\n  $257 = ((($$0)) + 32|0);\n  $258 = ((($$2194)) + 32|0);\n  $259 = ($257>>>0)<($175>>>0);\n  if ($259) {\n   $$0 = $257;$$0187 = $256;$$0189 = $175;$$2194 = $258;\n  } else {\n   break;\n  }\n }\n $260 = (($2) + ($5<<2)|0);\n $$1 = $9;$$1188 = $260;$$1190 = $260;\n while(1) {\n  $261 = ((($$1190)) + -16|0);\n  $262 = ((($$1)) + -16|0);\n  $263 = ((($$1)) + -4|0);\n  $264 = +HEAPF32[$263>>2];\n  $265 = ((($$1190)) + -4|0);\n  HEAPF32[$265>>2] = $264;\n  $266 = -$264;\n  HEAPF32[$$1188>>2] = $266;\n  $267 = ((($$1)) + -8|0);\n  $268 = +HEAPF32[$267>>2];\n  $269 = ((($$1190)) + -8|0);\n  HEAPF32[$269>>2] = $268;\n  $270 = -$268;\n  $271 = ((($$1188)) + 4|0);\n  HEAPF32[$271>>2] = $270;\n  $272 = ((($$1)) + -12|0);\n  $273 = +HEAPF32[$272>>2];\n  $274 = ((($$1190)) + -12|0);\n  HEAPF32[$274>>2] = $273;\n  $275 = -$273;\n  $276 = ((($$1188)) + 8|0);\n  HEAPF32[$276>>2] = $275;\n  $277 = +HEAPF32[$262>>2];\n  HEAPF32[$261>>2] = $277;\n  $278 = -$277;\n  $279 = ((($$1188)) + 12|0);\n  HEAPF32[$279>>2] = $278;\n  $280 = ((($$1188)) + 16|0);\n  $281 = ($280>>>0)<($262>>>0);\n  if ($281) {\n   $$1 = $262;$$1188 = $280;$$1190 = $261;\n  } else {\n   $$2 = $9;$$2191 = $9;\n   break;\n  }\n }\n while(1) {\n  $282 = ((($$2191)) + -16|0);\n  $283 = ((($$2)) + 12|0);\n  $284 = HEAP32[$283>>2]|0;\n  HEAP32[$282>>2] = $284;\n  $285 = ((($$2)) + 8|0);\n  $286 = HEAP32[$285>>2]|0;\n  $287 = ((($$2191)) + -12|0);\n  HEAP32[$287>>2] = $286;\n  $288 = ((($$2)) + 4|0);\n  $289 = HEAP32[$288>>2]|0;\n  $290 = ((($$2191)) + -8|0);\n  HEAP32[$290>>2] = $289;\n  $291 = HEAP32[$$2>>2]|0;\n  $292 = ((($$2191)) + -4|0);\n  HEAP32[$292>>2] = $291;\n  $293 = ((($$2)) + 16|0);\n  $294 = ($282>>>0)>($8>>>0);\n  if ($294) {\n   $$2 = $293;$$2191 = $282;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _mdct_butterflies($$0$1$val,$$0$2$val,$0,$1) {\n $$0$1$val = $$0$1$val|0;\n $$0$2$val = $$0$2$val|0;\n $0 = $0|0;\n $1 = $1|0;\n var $$0$i = 0, $$0$i33 = 0, $$03 = 0, $$0306 = 0, $$087$i = 0, $$088$i = 0, $$094$i = 0, $$095$i = 0, $$12 = 0, $$pn$i = 0, $$pn$i32 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0;\n var $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0;\n var $126 = 0.0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0;\n var $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0.0, $16 = 0.0, $160 = 0.0, $161 = 0.0;\n var $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0, $17 = 0.0, $170 = 0, $171 = 0.0, $172 = 0, $173 = 0.0, $174 = 0.0, $175 = 0, $176 = 0.0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0.0;\n var $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0.0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0;\n var $199 = 0.0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0.0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0, $206 = 0, $207 = 0.0, $208 = 0.0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0;\n var $216 = 0.0, $217 = 0, $218 = 0, $219 = 0, $22 = 0.0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0.0, $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0.0, $231 = 0, $232 = 0.0, $233 = 0.0;\n var $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0.0, $238 = 0, $239 = 0.0, $24 = 0.0, $240 = 0.0, $241 = 0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0.0, $250 = 0.0, $251 = 0.0;\n var $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0.0, $256 = 0, $257 = 0.0, $258 = 0.0, $259 = 0, $26 = 0.0, $260 = 0.0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0.0;\n var $270 = 0, $271 = 0.0, $272 = 0, $273 = 0.0, $274 = 0.0, $275 = 0, $276 = 0.0, $277 = 0, $278 = 0.0, $279 = 0.0, $28 = 0.0, $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0.0, $284 = 0.0, $285 = 0.0, $286 = 0.0, $287 = 0.0, $288 = 0;\n var $289 = 0.0, $29 = 0.0, $290 = 0, $291 = 0.0, $292 = 0.0, $293 = 0, $294 = 0.0, $295 = 0, $296 = 0.0, $297 = 0.0, $298 = 0.0, $299 = 0.0, $3 = 0, $30 = 0.0, $300 = 0, $301 = 0.0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0;\n var $306 = 0.0, $307 = 0, $308 = 0.0, $309 = 0.0, $31 = 0.0, $310 = 0.0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0.0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0.0, $322 = 0.0, $323 = 0;\n var $324 = 0.0, $325 = 0, $326 = 0.0, $327 = 0.0, $328 = 0.0, $329 = 0.0, $33 = 0.0, $330 = 0.0, $331 = 0.0, $332 = 0.0, $333 = 0.0, $334 = 0.0, $335 = 0, $336 = 0.0, $337 = 0.0, $338 = 0, $339 = 0.0, $34 = 0, $340 = 0, $341 = 0.0;\n var $342 = 0.0, $343 = 0.0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0.0, $349 = 0.0, $35 = 0.0, $350 = 0.0, $351 = 0.0, $352 = 0.0, $353 = 0.0, $354 = 0.0, $355 = 0.0, $356 = 0.0, $357 = 0.0, $358 = 0.0, $359 = 0.0, $36 = 0.0;\n var $360 = 0.0, $361 = 0.0, $362 = 0.0, $363 = 0.0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0.0, $368 = 0.0, $369 = 0.0, $37 = 0, $370 = 0.0, $371 = 0.0, $372 = 0.0, $373 = 0.0, $374 = 0.0, $375 = 0.0, $376 = 0.0, $377 = 0.0, $378 = 0.0;\n var $379 = 0.0, $38 = 0.0, $380 = 0.0, $381 = 0.0, $382 = 0.0, $383 = 0.0, $384 = 0.0, $385 = 0.0, $386 = 0.0, $387 = 0.0, $388 = 0.0, $389 = 0.0, $39 = 0, $390 = 0.0, $391 = 0.0, $392 = 0.0, $393 = 0.0, $394 = 0.0, $395 = 0.0, $396 = 0.0;\n var $397 = 0.0, $398 = 0.0, $399 = 0.0, $4 = 0, $40 = 0.0, $400 = 0.0, $401 = 0.0, $402 = 0.0, $403 = 0.0, $404 = 0.0, $405 = 0.0, $406 = 0.0, $407 = 0.0, $408 = 0.0, $409 = 0.0, $41 = 0.0, $410 = 0.0, $411 = 0.0, $412 = 0.0, $413 = 0.0;\n var $414 = 0.0, $415 = 0.0, $416 = 0.0, $417 = 0.0, $418 = 0.0, $419 = 0.0, $42 = 0.0, $420 = 0.0, $421 = 0.0, $422 = 0.0, $423 = 0.0, $424 = 0.0, $425 = 0.0, $426 = 0.0, $427 = 0.0, $428 = 0.0, $429 = 0.0, $43 = 0.0, $430 = 0.0, $431 = 0.0;\n var $432 = 0.0, $433 = 0.0, $434 = 0.0, $435 = 0.0, $436 = 0.0, $437 = 0.0, $438 = 0.0, $439 = 0.0, $44 = 0.0, $440 = 0.0, $441 = 0.0, $442 = 0.0, $443 = 0.0, $444 = 0.0, $445 = 0.0, $446 = 0.0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0;\n var $450 = 0.0, $451 = 0.0, $452 = 0.0, $453 = 0.0, $454 = 0.0, $455 = 0.0, $456 = 0.0, $457 = 0.0, $458 = 0.0, $459 = 0.0, $46 = 0.0, $460 = 0.0, $461 = 0.0, $462 = 0.0, $463 = 0.0, $464 = 0.0, $465 = 0.0, $466 = 0.0, $467 = 0.0, $468 = 0.0;\n var $469 = 0.0, $47 = 0.0, $470 = 0.0, $471 = 0.0, $472 = 0.0, $473 = 0.0, $474 = 0.0, $475 = 0.0, $476 = 0.0, $477 = 0.0, $478 = 0.0, $479 = 0.0, $48 = 0, $480 = 0.0, $481 = 0.0, $482 = 0.0, $483 = 0, $484 = 0, $49 = 0.0, $5 = 0;\n var $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0.0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0;\n var $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0, $86 = 0.0;\n var $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (($$0$1$val) + -6)|0;\n $3 = ($$0$1$val|0)>(6);\n if ($3) {\n  $4 = (($0) + ($1<<2)|0);\n  $5 = $1 >> 1;\n  $6 = (($0) + ($5<<2)|0);\n  $7 = ((($6)) + -32|0);\n  $$0$i = $$0$2$val;$$088$i = $7;$$pn$i = $4;\n  while(1) {\n   $$087$i = ((($$pn$i)) + -32|0);\n   $8 = ((($$pn$i)) + -8|0);\n   $9 = +HEAPF32[$8>>2];\n   $10 = ((($$088$i)) + 24|0);\n   $11 = +HEAPF32[$10>>2];\n   $12 = $9 - $11;\n   $13 = ((($$pn$i)) + -4|0);\n   $14 = +HEAPF32[$13>>2];\n   $15 = ((($$088$i)) + 28|0);\n   $16 = +HEAPF32[$15>>2];\n   $17 = $14 - $16;\n   $18 = $11 + $9;\n   HEAPF32[$8>>2] = $18;\n   $19 = +HEAPF32[$15>>2];\n   $20 = $19 + $14;\n   HEAPF32[$13>>2] = $20;\n   $21 = ((($$0$i)) + 4|0);\n   $22 = +HEAPF32[$21>>2];\n   $23 = $22 * $17;\n   $24 = +HEAPF32[$$0$i>>2];\n   $25 = $24 * $12;\n   $26 = $25 + $23;\n   HEAPF32[$10>>2] = $26;\n   $27 = +HEAPF32[$$0$i>>2];\n   $28 = $27 * $17;\n   $29 = +HEAPF32[$21>>2];\n   $30 = $29 * $12;\n   $31 = $28 - $30;\n   HEAPF32[$15>>2] = $31;\n   $32 = ((($$pn$i)) + -16|0);\n   $33 = +HEAPF32[$32>>2];\n   $34 = ((($$088$i)) + 16|0);\n   $35 = +HEAPF32[$34>>2];\n   $36 = $33 - $35;\n   $37 = ((($$pn$i)) + -12|0);\n   $38 = +HEAPF32[$37>>2];\n   $39 = ((($$088$i)) + 20|0);\n   $40 = +HEAPF32[$39>>2];\n   $41 = $38 - $40;\n   $42 = $35 + $33;\n   HEAPF32[$32>>2] = $42;\n   $43 = +HEAPF32[$39>>2];\n   $44 = $43 + $38;\n   HEAPF32[$37>>2] = $44;\n   $45 = ((($$0$i)) + 20|0);\n   $46 = +HEAPF32[$45>>2];\n   $47 = $46 * $41;\n   $48 = ((($$0$i)) + 16|0);\n   $49 = +HEAPF32[$48>>2];\n   $50 = $49 * $36;\n   $51 = $50 + $47;\n   HEAPF32[$34>>2] = $51;\n   $52 = +HEAPF32[$48>>2];\n   $53 = $52 * $41;\n   $54 = +HEAPF32[$45>>2];\n   $55 = $54 * $36;\n   $56 = $53 - $55;\n   HEAPF32[$39>>2] = $56;\n   $57 = ((($$pn$i)) + -24|0);\n   $58 = +HEAPF32[$57>>2];\n   $59 = ((($$088$i)) + 8|0);\n   $60 = +HEAPF32[$59>>2];\n   $61 = $58 - $60;\n   $62 = ((($$pn$i)) + -20|0);\n   $63 = +HEAPF32[$62>>2];\n   $64 = ((($$088$i)) + 12|0);\n   $65 = +HEAPF32[$64>>2];\n   $66 = $63 - $65;\n   $67 = $60 + $58;\n   HEAPF32[$57>>2] = $67;\n   $68 = +HEAPF32[$64>>2];\n   $69 = $68 + $63;\n   HEAPF32[$62>>2] = $69;\n   $70 = ((($$0$i)) + 36|0);\n   $71 = +HEAPF32[$70>>2];\n   $72 = $71 * $66;\n   $73 = ((($$0$i)) + 32|0);\n   $74 = +HEAPF32[$73>>2];\n   $75 = $74 * $61;\n   $76 = $75 + $72;\n   HEAPF32[$59>>2] = $76;\n   $77 = +HEAPF32[$73>>2];\n   $78 = $77 * $66;\n   $79 = +HEAPF32[$70>>2];\n   $80 = $79 * $61;\n   $81 = $78 - $80;\n   HEAPF32[$64>>2] = $81;\n   $82 = +HEAPF32[$$087$i>>2];\n   $83 = +HEAPF32[$$088$i>>2];\n   $84 = $82 - $83;\n   $85 = ((($$pn$i)) + -28|0);\n   $86 = +HEAPF32[$85>>2];\n   $87 = ((($$088$i)) + 4|0);\n   $88 = +HEAPF32[$87>>2];\n   $89 = $86 - $88;\n   $90 = $83 + $82;\n   HEAPF32[$$087$i>>2] = $90;\n   $91 = +HEAPF32[$87>>2];\n   $92 = $91 + $86;\n   HEAPF32[$85>>2] = $92;\n   $93 = ((($$0$i)) + 52|0);\n   $94 = +HEAPF32[$93>>2];\n   $95 = $94 * $89;\n   $96 = ((($$0$i)) + 48|0);\n   $97 = +HEAPF32[$96>>2];\n   $98 = $97 * $84;\n   $99 = $98 + $95;\n   HEAPF32[$$088$i>>2] = $99;\n   $100 = +HEAPF32[$96>>2];\n   $101 = $100 * $89;\n   $102 = +HEAPF32[$93>>2];\n   $103 = $102 * $84;\n   $104 = $101 - $103;\n   HEAPF32[$87>>2] = $104;\n   $105 = ((($$088$i)) + -32|0);\n   $106 = ((($$0$i)) + 64|0);\n   $107 = ($105>>>0)<($0>>>0);\n   if ($107) {\n    break;\n   } else {\n    $$0$i = $106;$$088$i = $105;$$pn$i = $$087$i;\n   }\n  }\n }\n $108 = ($2|0)>(1);\n if ($108) {\n  $$0306 = 1;\n  while(1) {\n   $109 = 1 << $$0306;\n   $110 = ($$0306|0)==(31);\n   if (!($110)) {\n    $111 = $1 >> $$0306;\n    $112 = 4 << $$0306;\n    $113 = $111 >> 1;\n    $$03 = 0;\n    while(1) {\n     $115 = Math_imul($$03, $111)|0;\n     $116 = (($0) + ($115<<2)|0);\n     $117 = (($116) + ($111<<2)|0);\n     $118 = (($116) + ($113<<2)|0);\n     $119 = ((($118)) + -32|0);\n     $$0$i33 = $$0$2$val;$$095$i = $119;$$pn$i32 = $117;\n     while(1) {\n      $$094$i = ((($$pn$i32)) + -32|0);\n      $120 = ((($$pn$i32)) + -8|0);\n      $121 = +HEAPF32[$120>>2];\n      $122 = ((($$095$i)) + 24|0);\n      $123 = +HEAPF32[$122>>2];\n      $124 = $121 - $123;\n      $125 = ((($$pn$i32)) + -4|0);\n      $126 = +HEAPF32[$125>>2];\n      $127 = ((($$095$i)) + 28|0);\n      $128 = +HEAPF32[$127>>2];\n      $129 = $126 - $128;\n      $130 = $123 + $121;\n      HEAPF32[$120>>2] = $130;\n      $131 = +HEAPF32[$127>>2];\n      $132 = $131 + $126;\n      HEAPF32[$125>>2] = $132;\n      $133 = ((($$0$i33)) + 4|0);\n      $134 = +HEAPF32[$133>>2];\n      $135 = $134 * $129;\n      $136 = +HEAPF32[$$0$i33>>2];\n      $137 = $136 * $124;\n      $138 = $137 + $135;\n      HEAPF32[$122>>2] = $138;\n      $139 = +HEAPF32[$$0$i33>>2];\n      $140 = $139 * $129;\n      $141 = +HEAPF32[$133>>2];\n      $142 = $141 * $124;\n      $143 = $140 - $142;\n      HEAPF32[$127>>2] = $143;\n      $144 = (($$0$i33) + ($112<<2)|0);\n      $145 = ((($$pn$i32)) + -16|0);\n      $146 = +HEAPF32[$145>>2];\n      $147 = ((($$095$i)) + 16|0);\n      $148 = +HEAPF32[$147>>2];\n      $149 = $146 - $148;\n      $150 = ((($$pn$i32)) + -12|0);\n      $151 = +HEAPF32[$150>>2];\n      $152 = ((($$095$i)) + 20|0);\n      $153 = +HEAPF32[$152>>2];\n      $154 = $151 - $153;\n      $155 = $148 + $146;\n      HEAPF32[$145>>2] = $155;\n      $156 = +HEAPF32[$152>>2];\n      $157 = $156 + $151;\n      HEAPF32[$150>>2] = $157;\n      $158 = ((($144)) + 4|0);\n      $159 = +HEAPF32[$158>>2];\n      $160 = $159 * $154;\n      $161 = +HEAPF32[$144>>2];\n      $162 = $161 * $149;\n      $163 = $162 + $160;\n      HEAPF32[$147>>2] = $163;\n      $164 = +HEAPF32[$144>>2];\n      $165 = $164 * $154;\n      $166 = +HEAPF32[$158>>2];\n      $167 = $166 * $149;\n      $168 = $165 - $167;\n      HEAPF32[$152>>2] = $168;\n      $169 = (($144) + ($112<<2)|0);\n      $170 = ((($$pn$i32)) + -24|0);\n      $171 = +HEAPF32[$170>>2];\n      $172 = ((($$095$i)) + 8|0);\n      $173 = +HEAPF32[$172>>2];\n      $174 = $171 - $173;\n      $175 = ((($$pn$i32)) + -20|0);\n      $176 = +HEAPF32[$175>>2];\n      $177 = ((($$095$i)) + 12|0);\n      $178 = +HEAPF32[$177>>2];\n      $179 = $176 - $178;\n      $180 = $173 + $171;\n      HEAPF32[$170>>2] = $180;\n      $181 = +HEAPF32[$177>>2];\n      $182 = $181 + $176;\n      HEAPF32[$175>>2] = $182;\n      $183 = ((($169)) + 4|0);\n      $184 = +HEAPF32[$183>>2];\n      $185 = $184 * $179;\n      $186 = +HEAPF32[$169>>2];\n      $187 = $186 * $174;\n      $188 = $187 + $185;\n      HEAPF32[$172>>2] = $188;\n      $189 = +HEAPF32[$169>>2];\n      $190 = $189 * $179;\n      $191 = +HEAPF32[$183>>2];\n      $192 = $191 * $174;\n      $193 = $190 - $192;\n      HEAPF32[$177>>2] = $193;\n      $194 = (($169) + ($112<<2)|0);\n      $195 = +HEAPF32[$$094$i>>2];\n      $196 = +HEAPF32[$$095$i>>2];\n      $197 = $195 - $196;\n      $198 = ((($$pn$i32)) + -28|0);\n      $199 = +HEAPF32[$198>>2];\n      $200 = ((($$095$i)) + 4|0);\n      $201 = +HEAPF32[$200>>2];\n      $202 = $199 - $201;\n      $203 = $196 + $195;\n      HEAPF32[$$094$i>>2] = $203;\n      $204 = +HEAPF32[$200>>2];\n      $205 = $204 + $199;\n      HEAPF32[$198>>2] = $205;\n      $206 = ((($194)) + 4|0);\n      $207 = +HEAPF32[$206>>2];\n      $208 = $207 * $202;\n      $209 = +HEAPF32[$194>>2];\n      $210 = $209 * $197;\n      $211 = $210 + $208;\n      HEAPF32[$$095$i>>2] = $211;\n      $212 = +HEAPF32[$194>>2];\n      $213 = $212 * $202;\n      $214 = +HEAPF32[$206>>2];\n      $215 = $214 * $197;\n      $216 = $213 - $215;\n      HEAPF32[$200>>2] = $216;\n      $217 = (($194) + ($112<<2)|0);\n      $218 = ((($$095$i)) + -32|0);\n      $219 = ($218>>>0)<($116>>>0);\n      if ($219) {\n       break;\n      } else {\n       $$0$i33 = $217;$$095$i = $218;$$pn$i32 = $$094$i;\n      }\n     }\n     $220 = (($$03) + 1)|0;\n     $221 = ($220|0)<($109|0);\n     if ($221) {\n      $$03 = $220;\n     } else {\n      break;\n     }\n    }\n   }\n   $222 = (($$0306) + 1)|0;\n   $exitcond = ($222|0)==($2|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$0306 = $222;\n   }\n  }\n }\n $114 = ($1|0)>(0);\n if ($114) {\n  $$12 = 0;\n } else {\n  return;\n }\n while(1) {\n  $223 = (($0) + ($$12<<2)|0);\n  $224 = ((($223)) + 120|0);\n  $225 = +HEAPF32[$224>>2];\n  $226 = ((($223)) + 56|0);\n  $227 = +HEAPF32[$226>>2];\n  $228 = $225 - $227;\n  $229 = ((($223)) + 124|0);\n  $230 = +HEAPF32[$229>>2];\n  $231 = ((($223)) + 60|0);\n  $232 = +HEAPF32[$231>>2];\n  $233 = $230 - $232;\n  $234 = $227 + $225;\n  HEAPF32[$224>>2] = $234;\n  $235 = $232 + $230;\n  HEAPF32[$229>>2] = $235;\n  HEAPF32[$226>>2] = $228;\n  HEAPF32[$231>>2] = $233;\n  $236 = ((($223)) + 112|0);\n  $237 = +HEAPF32[$236>>2];\n  $238 = ((($223)) + 48|0);\n  $239 = +HEAPF32[$238>>2];\n  $240 = $237 - $239;\n  $241 = ((($223)) + 116|0);\n  $242 = +HEAPF32[$241>>2];\n  $243 = ((($223)) + 52|0);\n  $244 = +HEAPF32[$243>>2];\n  $245 = $242 - $244;\n  $246 = $239 + $237;\n  HEAPF32[$236>>2] = $246;\n  $247 = $244 + $242;\n  HEAPF32[$241>>2] = $247;\n  $248 = $240 * 0.92387950420379638;\n  $249 = $245 * 0.38268342614173889;\n  $250 = $248 - $249;\n  HEAPF32[$238>>2] = $250;\n  $251 = $240 * 0.38268342614173889;\n  $252 = $245 * 0.92387950420379638;\n  $253 = $252 + $251;\n  HEAPF32[$243>>2] = $253;\n  $254 = ((($223)) + 104|0);\n  $255 = +HEAPF32[$254>>2];\n  $256 = ((($223)) + 40|0);\n  $257 = +HEAPF32[$256>>2];\n  $258 = $255 - $257;\n  $259 = ((($223)) + 108|0);\n  $260 = +HEAPF32[$259>>2];\n  $261 = ((($223)) + 44|0);\n  $262 = +HEAPF32[$261>>2];\n  $263 = $260 - $262;\n  $264 = $257 + $255;\n  HEAPF32[$254>>2] = $264;\n  $265 = $262 + $260;\n  HEAPF32[$259>>2] = $265;\n  $266 = $258 - $263;\n  $267 = $266 * 0.70710676908493042;\n  HEAPF32[$256>>2] = $267;\n  $268 = $263 + $258;\n  $269 = $268 * 0.70710676908493042;\n  HEAPF32[$261>>2] = $269;\n  $270 = ((($223)) + 96|0);\n  $271 = +HEAPF32[$270>>2];\n  $272 = ((($223)) + 32|0);\n  $273 = +HEAPF32[$272>>2];\n  $274 = $271 - $273;\n  $275 = ((($223)) + 100|0);\n  $276 = +HEAPF32[$275>>2];\n  $277 = ((($223)) + 36|0);\n  $278 = +HEAPF32[$277>>2];\n  $279 = $276 - $278;\n  $280 = $273 + $271;\n  HEAPF32[$270>>2] = $280;\n  $281 = $278 + $276;\n  HEAPF32[$275>>2] = $281;\n  $282 = $274 * 0.38268342614173889;\n  $283 = $279 * 0.92387950420379638;\n  $284 = $282 - $283;\n  HEAPF32[$272>>2] = $284;\n  $285 = $279 * 0.38268342614173889;\n  $286 = $274 * 0.92387950420379638;\n  $287 = $285 + $286;\n  HEAPF32[$277>>2] = $287;\n  $288 = ((($223)) + 88|0);\n  $289 = +HEAPF32[$288>>2];\n  $290 = ((($223)) + 24|0);\n  $291 = +HEAPF32[$290>>2];\n  $292 = $289 - $291;\n  $293 = ((($223)) + 28|0);\n  $294 = +HEAPF32[$293>>2];\n  $295 = ((($223)) + 92|0);\n  $296 = +HEAPF32[$295>>2];\n  $297 = $294 - $296;\n  $298 = $291 + $289;\n  HEAPF32[$288>>2] = $298;\n  $299 = $296 + $294;\n  HEAPF32[$295>>2] = $299;\n  HEAPF32[$293>>2] = $292;\n  $300 = ((($223)) + 16|0);\n  $301 = +HEAPF32[$300>>2];\n  $302 = ((($223)) + 80|0);\n  $303 = +HEAPF32[$302>>2];\n  $304 = $301 - $303;\n  $305 = ((($223)) + 20|0);\n  $306 = +HEAPF32[$305>>2];\n  $307 = ((($223)) + 84|0);\n  $308 = +HEAPF32[$307>>2];\n  $309 = $306 - $308;\n  $310 = $303 + $301;\n  HEAPF32[$302>>2] = $310;\n  $311 = $308 + $306;\n  HEAPF32[$307>>2] = $311;\n  $312 = $309 * 0.92387950420379638;\n  $313 = $304 * 0.38268342614173889;\n  $314 = $312 + $313;\n  $315 = $309 * 0.38268342614173889;\n  $316 = $304 * 0.92387950420379638;\n  $317 = $315 - $316;\n  $318 = ((($223)) + 8|0);\n  $319 = +HEAPF32[$318>>2];\n  $320 = ((($223)) + 72|0);\n  $321 = +HEAPF32[$320>>2];\n  $322 = $319 - $321;\n  $323 = ((($223)) + 12|0);\n  $324 = +HEAPF32[$323>>2];\n  $325 = ((($223)) + 76|0);\n  $326 = +HEAPF32[$325>>2];\n  $327 = $324 - $326;\n  $328 = $321 + $319;\n  HEAPF32[$320>>2] = $328;\n  $329 = $326 + $324;\n  HEAPF32[$325>>2] = $329;\n  $330 = $327 + $322;\n  $331 = $330 * 0.70710676908493042;\n  $332 = $327 - $322;\n  $333 = $332 * 0.70710676908493042;\n  $334 = +HEAPF32[$223>>2];\n  $335 = ((($223)) + 64|0);\n  $336 = +HEAPF32[$335>>2];\n  $337 = $334 - $336;\n  $338 = ((($223)) + 4|0);\n  $339 = +HEAPF32[$338>>2];\n  $340 = ((($223)) + 68|0);\n  $341 = +HEAPF32[$340>>2];\n  $342 = $339 - $341;\n  $343 = $336 + $334;\n  HEAPF32[$335>>2] = $343;\n  $344 = $341 + $339;\n  HEAPF32[$340>>2] = $344;\n  $345 = $342 * 0.38268342614173889;\n  $346 = $337 * 0.92387950420379638;\n  $347 = $345 + $346;\n  $348 = $342 * 0.92387950420379638;\n  $349 = $337 * 0.38268342614173889;\n  $350 = $348 - $349;\n  $351 = $350 - $287;\n  $352 = $347 - $284;\n  $353 = $347 + $284;\n  $354 = $350 + $287;\n  $355 = $352 + $351;\n  $356 = $351 - $352;\n  $357 = +HEAPF32[$261>>2];\n  $358 = $333 - $357;\n  $359 = +HEAPF32[$256>>2];\n  $360 = $359 - $331;\n  $361 = $359 + $331;\n  $362 = $357 + $333;\n  $363 = +HEAPF32[$238>>2];\n  $364 = $363 - $314;\n  $365 = +HEAPF32[$243>>2];\n  $366 = $365 - $317;\n  $367 = $363 + $314;\n  $368 = $365 + $317;\n  $369 = $364 - $366;\n  $370 = $366 + $364;\n  $371 = +HEAPF32[$226>>2];\n  $372 = $371 - $297;\n  $373 = +HEAPF32[$231>>2];\n  $374 = $373 - $292;\n  $375 = $371 + $297;\n  $376 = $373 + $292;\n  $377 = $372 + $358;\n  $378 = $372 - $358;\n  $379 = $369 + $355;\n  $380 = $379 * 0.70710676908493042;\n  $381 = $369 - $355;\n  $382 = $381 * 0.70710676908493042;\n  $383 = $380 + $377;\n  HEAPF32[$290>>2] = $383;\n  $384 = $377 - $380;\n  HEAPF32[$300>>2] = $384;\n  $385 = $370 - $356;\n  $386 = $385 * 0.70710676908493042;\n  $387 = $374 - $360;\n  $388 = $386 + $378;\n  HEAPF32[$223>>2] = $388;\n  $389 = $378 - $386;\n  HEAPF32[$318>>2] = $389;\n  $390 = $370 + $356;\n  $391 = $390 * 0.70710676908493042;\n  $392 = $374 + $360;\n  $393 = $387 + $382;\n  HEAPF32[$323>>2] = $393;\n  $394 = $387 - $382;\n  HEAPF32[$338>>2] = $394;\n  $395 = $392 + $391;\n  HEAPF32[$293>>2] = $395;\n  $396 = $392 - $391;\n  HEAPF32[$305>>2] = $396;\n  $397 = $375 + $361;\n  $398 = $375 - $361;\n  $399 = $367 + $353;\n  $400 = $367 - $353;\n  $401 = $397 + $399;\n  HEAPF32[$226>>2] = $401;\n  $402 = $397 - $399;\n  HEAPF32[$238>>2] = $402;\n  $403 = $368 - $354;\n  $404 = $376 - $362;\n  $405 = $398 + $403;\n  HEAPF32[$272>>2] = $405;\n  $406 = $398 - $403;\n  HEAPF32[$256>>2] = $406;\n  $407 = $368 + $354;\n  $408 = $376 + $362;\n  $409 = $404 + $400;\n  HEAPF32[$261>>2] = $409;\n  $410 = $404 - $400;\n  HEAPF32[$277>>2] = $410;\n  $411 = $408 + $407;\n  HEAPF32[$231>>2] = $411;\n  $412 = $408 - $407;\n  HEAPF32[$243>>2] = $412;\n  $413 = +HEAPF32[$275>>2];\n  $414 = $344 - $413;\n  $415 = +HEAPF32[$270>>2];\n  $416 = $343 - $415;\n  $417 = $415 + $343;\n  $418 = $413 + $344;\n  $419 = $416 + $414;\n  $420 = $414 - $416;\n  $421 = +HEAPF32[$325>>2];\n  $422 = +HEAPF32[$259>>2];\n  $423 = $421 - $422;\n  $424 = +HEAPF32[$254>>2];\n  $425 = +HEAPF32[$320>>2];\n  $426 = $424 - $425;\n  $427 = $425 + $424;\n  $428 = $422 + $421;\n  $429 = +HEAPF32[$236>>2];\n  $430 = +HEAPF32[$302>>2];\n  $431 = $429 - $430;\n  $432 = +HEAPF32[$241>>2];\n  $433 = +HEAPF32[$307>>2];\n  $434 = $432 - $433;\n  $435 = $430 + $429;\n  $436 = $433 + $432;\n  $437 = $431 - $434;\n  $438 = $434 + $431;\n  $439 = +HEAPF32[$224>>2];\n  $440 = +HEAPF32[$288>>2];\n  $441 = $439 - $440;\n  $442 = +HEAPF32[$229>>2];\n  $443 = +HEAPF32[$295>>2];\n  $444 = $442 - $443;\n  $445 = $440 + $439;\n  $446 = $443 + $442;\n  $447 = $441 + $423;\n  $448 = $441 - $423;\n  $449 = $437 + $419;\n  $450 = $449 * 0.70710676908493042;\n  $451 = $437 - $419;\n  $452 = $451 * 0.70710676908493042;\n  $453 = $450 + $447;\n  HEAPF32[$288>>2] = $453;\n  $454 = $447 - $450;\n  HEAPF32[$302>>2] = $454;\n  $455 = $438 - $420;\n  $456 = $455 * 0.70710676908493042;\n  $457 = $444 - $426;\n  $458 = $456 + $448;\n  HEAPF32[$335>>2] = $458;\n  $459 = $448 - $456;\n  HEAPF32[$320>>2] = $459;\n  $460 = $438 + $420;\n  $461 = $460 * 0.70710676908493042;\n  $462 = $444 + $426;\n  $463 = $457 + $452;\n  HEAPF32[$325>>2] = $463;\n  $464 = $457 - $452;\n  HEAPF32[$340>>2] = $464;\n  $465 = $462 + $461;\n  HEAPF32[$295>>2] = $465;\n  $466 = $462 - $461;\n  HEAPF32[$307>>2] = $466;\n  $467 = $445 + $427;\n  $468 = $445 - $427;\n  $469 = $435 + $417;\n  $470 = $435 - $417;\n  $471 = $467 + $469;\n  HEAPF32[$224>>2] = $471;\n  $472 = $467 - $469;\n  HEAPF32[$236>>2] = $472;\n  $473 = $436 - $418;\n  $474 = $446 - $428;\n  $475 = $468 + $473;\n  HEAPF32[$270>>2] = $475;\n  $476 = $468 - $473;\n  HEAPF32[$254>>2] = $476;\n  $477 = $436 + $418;\n  $478 = $446 + $428;\n  $479 = $474 + $470;\n  HEAPF32[$259>>2] = $479;\n  $480 = $474 - $470;\n  HEAPF32[$275>>2] = $480;\n  $481 = $478 + $477;\n  HEAPF32[$229>>2] = $481;\n  $482 = $478 - $477;\n  HEAPF32[$241>>2] = $482;\n  $483 = (($$12) + 32)|0;\n  $484 = ($483|0)<($1|0);\n  if ($484) {\n   $$12 = $483;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _mdct_forward($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i = 0, $$0$lcssa = 0, $$0134$lcssa = 0, $$0134173 = 0, $$0138172 = 0, $$0141$lcssa = 0, $$0141171 = 0, $$0145151 = 0, $$0174 = 0, $$097$i = 0, $$098$i = 0, $$099$i = 0, $$1$lcssa = 0, $$1135$lcssa = 0, $$1135164 = 0, $$1139$lcssa = 0, $$1139163 = 0, $$1142162 = 0, $$1165 = 0, $$2136157 = 0;\n var $$2140156 = 0, $$2143155 = 0, $$2158 = 0, $$3137153 = 0, $$3144152 = 0, $$3154 = 0, $$alloca_mul = 0, $$idx = 0, $$idx$val = 0, $$idx147$val = 0, $$idx148$val = 0, $$idx149 = 0, $$idx149$val = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0;\n var $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;\n var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $135 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0;\n var $142 = 0.0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0;\n var $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0.0, $17 = 0, $170 = 0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0, $177 = 0.0, $178 = 0.0;\n var $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0;\n var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0.0, $213 = 0.0, $214 = 0.0;\n var $215 = 0.0, $216 = 0.0, $217 = 0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0.0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0.0;\n var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0;\n var $81 = 0.0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;\n var $exitcond = 0, $scevgep = 0, $scevgep186 = 0, $scevgep187 = 0, $scevgep188 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$0>>2]|0;\n $4 = $3 >> 1;\n $5 = $3 >> 2;\n $6 = $3 >> 3;\n $7 = $3 << 2;\n $$alloca_mul = $7;\n $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $9 = (($8) + ($4<<2)|0);\n $10 = (($1) + ($4<<2)|0);\n $11 = (($10) + ($5<<2)|0);\n $12 = ((($0)) + 8|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (($13) + ($4<<2)|0);\n $15 = ($6|0)>(0);\n if ($15) {\n  $16 = ((($11)) + 4|0);\n  $17 = (($5) + ($4))|0;\n  $18 = (($17) + -4)|0;\n  $19 = (($6) + -1)|0;\n  $20 = $19 >>> 1;\n  $21 = $20 << 2;\n  $22 = (($18) - ($21))|0;\n  $23 = (($4) + -2)|0;\n  $24 = $20 << 1;\n  $25 = (($23) - ($24))|0;\n  $scevgep188 = (($13) + ($25<<2)|0);\n  $$0134173 = $14;$$0138172 = $16;$$0141171 = $11;$$0174 = 0;\n  while(1) {\n   $26 = ((($$0141171)) + -16|0);\n   $27 = ((($$0134173)) + -8|0);\n   $28 = ((($$0141171)) + -8|0);\n   $29 = +HEAPF32[$28>>2];\n   $30 = +HEAPF32[$$0138172>>2];\n   $31 = $30 + $29;\n   $32 = +HEAPF32[$26>>2];\n   $33 = ((($$0138172)) + 8|0);\n   $34 = +HEAPF32[$33>>2];\n   $35 = $34 + $32;\n   $36 = ((($$0134173)) + -4|0);\n   $37 = +HEAPF32[$36>>2];\n   $38 = $35 * $37;\n   $39 = +HEAPF32[$27>>2];\n   $40 = $39 * $31;\n   $41 = $40 + $38;\n   $42 = (($9) + ($$0174<<2)|0);\n   HEAPF32[$42>>2] = $41;\n   $43 = +HEAPF32[$27>>2];\n   $44 = $43 * $35;\n   $45 = +HEAPF32[$36>>2];\n   $46 = $45 * $31;\n   $47 = $44 - $46;\n   $48 = $$0174 | 1;\n   $49 = (($9) + ($48<<2)|0);\n   HEAPF32[$49>>2] = $47;\n   $50 = ((($$0138172)) + 16|0);\n   $51 = (($$0174) + 2)|0;\n   $52 = ($51|0)<($6|0);\n   if ($52) {\n    $$0134173 = $27;$$0138172 = $50;$$0141171 = $26;$$0174 = $51;\n   } else {\n    break;\n   }\n  }\n  $scevgep187 = (($1) + ($22<<2)|0);\n  $53 = (($24) + 2)|0;\n  $$0$lcssa = $53;$$0134$lcssa = $scevgep188;$$0141$lcssa = $scevgep187;\n } else {\n  $$0$lcssa = 0;$$0134$lcssa = $14;$$0141$lcssa = $11;\n }\n $54 = ((($1)) + 4|0);\n $55 = (($4) - ($6))|0;\n $56 = ($$0$lcssa|0)<($55|0);\n if ($56) {\n  $57 = (($4) + -1)|0;\n  $58 = (($57) - ($$0$lcssa))|0;\n  $59 = (($58) - ($6))|0;\n  $60 = $59 >>> 1;\n  $61 = $60 << 1;\n  $62 = (-2 - ($61))|0;\n  $63 = $60 << 2;\n  $64 = (($63) + 5)|0;\n  $65 = (($$0$lcssa) + ($61))|0;\n  $$1135164 = $$0134$lcssa;$$1139163 = $54;$$1142162 = $$0141$lcssa;$$1165 = $$0$lcssa;\n  while(1) {\n   $66 = ((($$1135164)) + -8|0);\n   $67 = ((($$1142162)) + -16|0);\n   $68 = ((($$1142162)) + -8|0);\n   $69 = +HEAPF32[$68>>2];\n   $70 = +HEAPF32[$$1139163>>2];\n   $71 = $69 - $70;\n   $72 = +HEAPF32[$67>>2];\n   $73 = ((($$1139163)) + 8|0);\n   $74 = +HEAPF32[$73>>2];\n   $75 = $72 - $74;\n   $76 = ((($$1135164)) + -4|0);\n   $77 = +HEAPF32[$76>>2];\n   $78 = $75 * $77;\n   $79 = +HEAPF32[$66>>2];\n   $80 = $79 * $71;\n   $81 = $80 + $78;\n   $82 = (($9) + ($$1165<<2)|0);\n   HEAPF32[$82>>2] = $81;\n   $83 = +HEAPF32[$66>>2];\n   $84 = $83 * $75;\n   $85 = +HEAPF32[$76>>2];\n   $86 = $85 * $71;\n   $87 = $84 - $86;\n   $88 = $$1165 | 1;\n   $89 = (($9) + ($88<<2)|0);\n   HEAPF32[$89>>2] = $87;\n   $90 = ((($$1139163)) + 16|0);\n   $91 = (($$1165) + 2)|0;\n   $92 = ($91|0)<($55|0);\n   if ($92) {\n    $$1135164 = $66;$$1139163 = $90;$$1142162 = $67;$$1165 = $91;\n   } else {\n    break;\n   }\n  }\n  $scevgep = (($$0134$lcssa) + ($62<<2)|0);\n  $scevgep186 = (($1) + ($64<<2)|0);\n  $93 = (($65) + 2)|0;\n  $$1$lcssa = $93;$$1135$lcssa = $scevgep;$$1139$lcssa = $scevgep186;\n } else {\n  $$1$lcssa = $$0$lcssa;$$1135$lcssa = $$0134$lcssa;$$1139$lcssa = $54;\n }\n $94 = ($$1$lcssa|0)<($4|0);\n if ($94) {\n  $95 = (($1) + ($3<<2)|0);\n  $$2136157 = $$1135$lcssa;$$2140156 = $$1139$lcssa;$$2143155 = $95;$$2158 = $$1$lcssa;\n  while(1) {\n   $96 = ((($$2136157)) + -8|0);\n   $97 = ((($$2143155)) + -16|0);\n   $98 = ((($$2143155)) + -8|0);\n   $99 = +HEAPF32[$98>>2];\n   $100 = -$99;\n   $101 = +HEAPF32[$$2140156>>2];\n   $102 = $100 - $101;\n   $103 = +HEAPF32[$97>>2];\n   $104 = -$103;\n   $105 = ((($$2140156)) + 8|0);\n   $106 = +HEAPF32[$105>>2];\n   $107 = $104 - $106;\n   $108 = ((($$2136157)) + -4|0);\n   $109 = +HEAPF32[$108>>2];\n   $110 = $107 * $109;\n   $111 = +HEAPF32[$96>>2];\n   $112 = $111 * $102;\n   $113 = $112 + $110;\n   $114 = (($9) + ($$2158<<2)|0);\n   HEAPF32[$114>>2] = $113;\n   $115 = +HEAPF32[$96>>2];\n   $116 = $115 * $107;\n   $117 = +HEAPF32[$108>>2];\n   $118 = $117 * $102;\n   $119 = $116 - $118;\n   $120 = $$2158 | 1;\n   $121 = (($9) + ($120<<2)|0);\n   HEAPF32[$121>>2] = $119;\n   $122 = ((($$2140156)) + 16|0);\n   $123 = (($$2158) + 2)|0;\n   $124 = ($123|0)<($4|0);\n   if ($124) {\n    $$2136157 = $96;$$2140156 = $122;$$2143155 = $97;$$2158 = $123;\n   } else {\n    break;\n   }\n  }\n }\n $$idx = ((($0)) + 4|0);\n $$idx$val = HEAP32[$$idx>>2]|0;\n _mdct_butterflies($$idx$val,$13,$9,$4);\n $$idx147$val = HEAP32[$0>>2]|0;\n $$idx148$val = HEAP32[$12>>2]|0;\n $$idx149 = ((($0)) + 12|0);\n $$idx149$val = HEAP32[$$idx149>>2]|0;\n $125 = $$idx147$val >> 1;\n $126 = (($8) + ($125<<2)|0);\n $127 = (($$idx148$val) + ($$idx147$val<<2)|0);\n $$0$i = $$idx149$val;$$097$i = $8;$$098$i = $126;$$099$i = $127;\n while(1) {\n  $128 = HEAP32[$$0$i>>2]|0;\n  $129 = (($126) + ($128<<2)|0);\n  $130 = ((($$0$i)) + 4|0);\n  $131 = HEAP32[$130>>2]|0;\n  $132 = (($126) + ($131<<2)|0);\n  $133 = ((($129)) + 4|0);\n  $134 = +HEAPF32[$133>>2];\n  $135 = ((($132)) + 4|0);\n  $136 = +HEAPF32[$135>>2];\n  $137 = $134 - $136;\n  $138 = +HEAPF32[$129>>2];\n  $139 = +HEAPF32[$132>>2];\n  $140 = $139 + $138;\n  $141 = +HEAPF32[$$099$i>>2];\n  $142 = $140 * $141;\n  $143 = ((($$099$i)) + 4|0);\n  $144 = +HEAPF32[$143>>2];\n  $145 = $144 * $137;\n  $146 = $145 + $142;\n  $147 = $144 * $140;\n  $148 = $141 * $137;\n  $149 = $147 - $148;\n  $150 = ((($$098$i)) + -16|0);\n  $151 = $136 + $134;\n  $152 = $151 * 0.5;\n  $153 = $138 - $139;\n  $154 = $153 * 0.5;\n  $155 = $146 + $152;\n  HEAPF32[$$097$i>>2] = $155;\n  $156 = $152 - $146;\n  $157 = ((($$098$i)) + -8|0);\n  HEAPF32[$157>>2] = $156;\n  $158 = $149 + $154;\n  $159 = ((($$097$i)) + 4|0);\n  HEAPF32[$159>>2] = $158;\n  $160 = $149 - $154;\n  $161 = ((($$098$i)) + -4|0);\n  HEAPF32[$161>>2] = $160;\n  $162 = ((($$0$i)) + 8|0);\n  $163 = HEAP32[$162>>2]|0;\n  $164 = (($126) + ($163<<2)|0);\n  $165 = ((($$0$i)) + 12|0);\n  $166 = HEAP32[$165>>2]|0;\n  $167 = (($126) + ($166<<2)|0);\n  $168 = ((($164)) + 4|0);\n  $169 = +HEAPF32[$168>>2];\n  $170 = ((($167)) + 4|0);\n  $171 = +HEAPF32[$170>>2];\n  $172 = $169 - $171;\n  $173 = +HEAPF32[$164>>2];\n  $174 = +HEAPF32[$167>>2];\n  $175 = $174 + $173;\n  $176 = ((($$099$i)) + 8|0);\n  $177 = +HEAPF32[$176>>2];\n  $178 = $175 * $177;\n  $179 = ((($$099$i)) + 12|0);\n  $180 = +HEAPF32[$179>>2];\n  $181 = $180 * $172;\n  $182 = $181 + $178;\n  $183 = $180 * $175;\n  $184 = $177 * $172;\n  $185 = $183 - $184;\n  $186 = $171 + $169;\n  $187 = $186 * 0.5;\n  $188 = $173 - $174;\n  $189 = $188 * 0.5;\n  $190 = $182 + $187;\n  $191 = ((($$097$i)) + 8|0);\n  HEAPF32[$191>>2] = $190;\n  $192 = $187 - $182;\n  HEAPF32[$150>>2] = $192;\n  $193 = $185 + $189;\n  $194 = ((($$097$i)) + 12|0);\n  HEAPF32[$194>>2] = $193;\n  $195 = $185 - $189;\n  $196 = ((($$098$i)) + -12|0);\n  HEAPF32[$196>>2] = $195;\n  $197 = ((($$099$i)) + 16|0);\n  $198 = ((($$0$i)) + 16|0);\n  $199 = ((($$097$i)) + 16|0);\n  $200 = ($199>>>0)<($150>>>0);\n  if ($200) {\n   $$0$i = $198;$$097$i = $199;$$098$i = $150;$$099$i = $197;\n  } else {\n   break;\n  }\n }\n $201 = ($5|0)>(0);\n if (!($201)) {\n  STACKTOP = sp;return;\n }\n $202 = (($2) + ($4<<2)|0);\n $203 = (($$idx148$val) + ($4<<2)|0);\n $204 = ((($0)) + 16|0);\n $$0145151 = $8;$$3137153 = $203;$$3144152 = $202;$$3154 = 0;\n while(1) {\n  $205 = ((($$3144152)) + -4|0);\n  $206 = +HEAPF32[$$0145151>>2];\n  $207 = +HEAPF32[$$3137153>>2];\n  $208 = $207 * $206;\n  $209 = ((($$0145151)) + 4|0);\n  $210 = +HEAPF32[$209>>2];\n  $211 = ((($$3137153)) + 4|0);\n  $212 = +HEAPF32[$211>>2];\n  $213 = $212 * $210;\n  $214 = $213 + $208;\n  $215 = +HEAPF32[$204>>2];\n  $216 = $214 * $215;\n  $217 = (($2) + ($$3154<<2)|0);\n  HEAPF32[$217>>2] = $216;\n  $218 = +HEAPF32[$$0145151>>2];\n  $219 = +HEAPF32[$211>>2];\n  $220 = $219 * $218;\n  $221 = +HEAPF32[$209>>2];\n  $222 = +HEAPF32[$$3137153>>2];\n  $223 = $222 * $221;\n  $224 = $220 - $223;\n  $225 = +HEAPF32[$204>>2];\n  $226 = $224 * $225;\n  HEAPF32[$205>>2] = $226;\n  $227 = ((($$0145151)) + 8|0);\n  $228 = ((($$3137153)) + 8|0);\n  $229 = (($$3154) + 1)|0;\n  $exitcond = ($229|0)==($5|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$0145151 = $227;$$3137153 = $228;$$3144152 = $205;$$3154 = $229;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction __vp_global_look($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 28|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($2)) + 2868|0);\n $4 = (_calloc(1,36)|0);\n $5 = ((($0)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ((($4)) + 4|0);\n HEAP32[$7>>2] = $6;\n HEAPF32[$4>>2] = -9999.0;\n $8 = ((($4)) + 8|0);\n HEAP32[$8>>2] = $3;\n return ($4|0);\n}\nfunction __vp_global_free($0) {\n $0 = $0|0;\n var $1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if (!($1)) {\n  _free($0);\n }\n return;\n}\nfunction __vi_psy_free($0) {\n $0 = $0|0;\n var $1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if (!($1)) {\n  _free($0);\n }\n return;\n}\nfunction __vp_psy_init($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0 = 0, $$0$ph = 0, $$0$ph$ph = 0, $$0195$ph$ph = 0, $$0200 = 0.0, $$0202230 = 0, $$0204229 = 0, $$0206237 = 0.0, $$1196238 = 0, $$1201 = 0.0, $$1203$lcssa = 0, $$1203219 = 0, $$1205$lcssa = 0, $$1205225 = 0, $$1231 = 0, $$2216 = 0, $$3198233 = 0, $$4214 = 0, $$inv = 0, $$phi$trans$insert = 0;\n var $$phi$trans$insert254 = 0, $$pre = 0, $$pre$phiZ2D = 0.0, $$pre253 = 0, $$pre255 = 0, $$pre256 = 0.0, $$sink = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0.0, $112 = 0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0, $119 = 0.0, $12 = 0.0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0;\n var $13 = 0.0, $130 = 0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0;\n var $148 = 0.0, $149 = 0.0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0.0, $16 = 0.0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0, $165 = 0.0;\n var $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;\n var $184 = 0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0;\n var $202 = 0.0, $203 = 0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0.0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0.0;\n var $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0, $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0.0, $23 = 0.0, $230 = 0.0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0.0, $238 = 0.0;\n var $239 = 0.0, $24 = 0.0, $240 = 0.0, $241 = 0.0, $242 = 0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0, $248 = 0.0, $249 = 0.0, $25 = 0.0, $250 = 0.0, $251 = 0.0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0.0, $256 = 0.0;\n var $257 = 0.0, $258 = 0, $259 = 0.0, $26 = 0.0, $260 = 0.0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0;\n var $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0.0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0;\n var $92 = 0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond249 = 0, $exitcond250 = 0, $exitcond251 = 0, $load_initial = 0, $or$cond = 0, $scevgep = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ((($0)) + 8|0);\n $6 = $5;\n $7 = $6;\n HEAP32[$7>>2] = 0;\n $8 = (($6) + 4)|0;\n $9 = $8;\n HEAP32[$9>>2] = 0;\n $10 = HEAP32[$2>>2]|0;\n $11 = ((($0)) + 36|0);\n HEAP32[$11>>2] = $10;\n $12 = (+($10|0));\n $13 = $12 * 8.0;\n $14 = $13;\n $15 = (+Math_log((+$14)));\n $16 = $15 * 1.4426950408889634;\n $17 = (+_rint($16));\n $18 = $17 + -1.0;\n $19 = (~~(($18)));\n $20 = ((($0)) + 32|0);\n HEAP32[$20>>2] = $19;\n $21 = (+($4|0));\n $22 = $21 * 0.25;\n $23 = $22;\n $24 = $23 * 0.5;\n $25 = (+($3|0));\n $26 = $24 / $25;\n $27 = (+Math_log((+$26)));\n $28 = $27 * 1.4426950216293335;\n $29 = $28 + -5.9657840728759766;\n $30 = (($19) + 1)|0;\n $31 = 1 << $30;\n $32 = (+($31|0));\n $33 = $32 * $29;\n $34 = (+($10|0));\n $35 = $33 - $34;\n $36 = (~~(($35)));\n $37 = ((($0)) + 28|0);\n HEAP32[$37>>2] = $36;\n $38 = (+($3|0));\n $39 = $38 + 0.25;\n $40 = $39 * $21;\n $41 = $40;\n $42 = $41 * 0.5;\n $43 = $42 / $25;\n $44 = (+Math_log((+$43)));\n $45 = $44 * 1.4426950216293335;\n $46 = $45 + -5.9657840728759766;\n $47 = $32 * $46;\n $48 = $47 + 0.5;\n $49 = (~~(($48)));\n $50 = (1 - ($36))|0;\n $51 = (($50) + ($49))|0;\n $52 = ((($0)) + 40|0);\n HEAP32[$52>>2] = $51;\n $53 = $3 << 2;\n $54 = (_malloc($53)|0);\n $55 = ((($0)) + 16|0);\n HEAP32[$55>>2] = $54;\n $56 = (_malloc($53)|0);\n $57 = ((($0)) + 20|0);\n HEAP32[$57>>2] = $56;\n $58 = (_malloc($53)|0);\n $59 = ((($0)) + 24|0);\n HEAP32[$59>>2] = $58;\n $60 = ((($0)) + 4|0);\n HEAP32[$60>>2] = $1;\n HEAP32[$0>>2] = $3;\n $61 = ((($0)) + 44|0);\n HEAP32[$61>>2] = $4;\n $62 = ((($0)) + 48|0);\n HEAPF32[$62>>2] = 1.0;\n $63 = ($4|0)<(26000);\n if ($63) {\n  $$sink = 0.0;\n  label = 4;\n } else {\n  $64 = ($4|0)<(38000);\n  if ($64) {\n   $$sink = 0.93999999761581421;\n   label = 4;\n  } else {\n   $65 = ($4|0)>(46000);\n   if ($65) {\n    $$sink = 1.2749999761581421;\n    label = 4;\n   }\n  }\n }\n if ((label|0) == 4) {\n  HEAPF32[$62>>2] = $$sink;\n }\n $66 = $25 * 2.0;\n $67 = (+($4|0));\n $$0$ph$ph = 0;$$0195$ph$ph = 0;\n L7: while(1) {\n  $68 = ($$0195$ph$ph|0)<($3|0);\n  $$0$ph = $$0$ph$ph;\n  while(1) {\n   $$0 = $$0$ph;\n   while(1) {\n    $69 = ($$0|0)<(87);\n    if (!($69)) {\n     break L7;\n    }\n    $73 = (($$0) + 1)|0;\n    $74 = (+($73|0));\n    $75 = $74 * 0.08664337545633316;\n    $76 = $75 + 2.7488713472395148;\n    $77 = (+Math_exp((+$76)));\n    $78 = $66 * $77;\n    $79 = $78 / $67;\n    $80 = (+_rint($79));\n    $81 = (~~(($80)));\n    $82 = ($81|0)>($$0195$ph$ph|0);\n    if ($82) {\n     break;\n    } else {\n     $$0 = $73;\n    }\n   }\n   if ($68) {\n    break;\n   } else {\n    $$0$ph = $73;\n   }\n  }\n  $83 = (3716 + ($$0<<2)|0);\n  $84 = +HEAPF32[$83>>2];\n  $85 = (3716 + ($73<<2)|0);\n  $86 = +HEAPF32[$85>>2];\n  $87 = $86 - $84;\n  $88 = (($81) - ($$0195$ph$ph))|0;\n  $89 = (+($88|0));\n  $90 = $87 / $89;\n  $$0206237 = $84;$$1196238 = $$0195$ph$ph;\n  while(1) {\n   $91 = $$0206237 + 100.0;\n   $92 = (($54) + ($$1196238<<2)|0);\n   HEAPF32[$92>>2] = $91;\n   $93 = $$0206237 + $90;\n   $94 = (($$1196238) + 1)|0;\n   $95 = ($94|0)<($81|0);\n   $96 = ($94|0)<($3|0);\n   $or$cond = $95 & $96;\n   if ($or$cond) {\n    $$0206237 = $93;$$1196238 = $94;\n   } else {\n    $$0$ph$ph = $73;$$0195$ph$ph = $94;\n    continue L7;\n   }\n  }\n }\n $70 = ($$0195$ph$ph|0)<($3|0);\n if ($70) {\n  $71 = $$0195$ph$ph << 2;\n  $72 = (($71) + -4)|0;\n  $scevgep = (($54) + ($72)|0);\n  $load_initial = HEAP32[$scevgep>>2]|0;\n  $$3198233 = $$0195$ph$ph;\n  while(1) {\n   $105 = (($54) + ($$3198233<<2)|0);\n   HEAP32[$105>>2] = $load_initial;\n   $106 = (($$3198233) + 1)|0;\n   $exitcond251 = ($106|0)==($3|0);\n   if ($exitcond251) {\n    break;\n   } else {\n    $$3198233 = $106;\n   }\n  }\n }\n $97 = ($3|0)>(0);\n if ($97) {\n  $98 = $3 << 1;\n  $99 = (($4|0) / ($98|0))&-1;\n  $100 = ((($1)) + 120|0);\n  $101 = HEAP32[$100>>2]|0;\n  $102 = ((($1)) + 124|0);\n  $103 = ((($1)) + 116|0);\n  $104 = ((($1)) + 112|0);\n  $$0202230 = -99;$$0204229 = 1;$$1231 = 0;\n  while(1) {\n   $112 = Math_imul($99, $$1231)|0;\n   $113 = (+($112|0));\n   $114 = $113 * 7.3999998858198524E-4;\n   $115 = $114;\n   $116 = (+Math_atan((+$115)));\n   $117 = $116 * 13.100000381469727;\n   $118 = Math_imul($112, $112)|0;\n   $119 = (+($118|0));\n   $120 = $119 * 1.8499999754340024E-8;\n   $121 = $120;\n   $122 = (+Math_atan((+$121)));\n   $123 = $122 * 2.2400000095367432;\n   $124 = $123 + $117;\n   $125 = $113 * 9.9999997473787516E-5;\n   $126 = $125;\n   $127 = $124 + $126;\n   $128 = $127;\n   $129 = (($101) + ($$0202230))|0;\n   $130 = ($129|0)<($$1231|0);\n   L28: do {\n    if ($130) {\n     $131 = +HEAPF32[$104>>2];\n     $132 = $128 - $131;\n     $133 = $132;\n     $$1203219 = $$0202230;\n     while(1) {\n      $134 = Math_imul($$1203219, $99)|0;\n      $135 = (+($134|0));\n      $136 = $135 * 7.3999998858198524E-4;\n      $137 = $136;\n      $138 = (+Math_atan((+$137)));\n      $139 = $138 * 13.100000381469727;\n      $140 = Math_imul($134, $134)|0;\n      $141 = (+($140|0));\n      $142 = $141 * 1.8499999754340024E-8;\n      $143 = $142;\n      $144 = (+Math_atan((+$143)));\n      $145 = $144 * 2.2400000095367432;\n      $146 = $135 * 9.9999997473787516E-5;\n      $147 = $146;\n      $148 = $139 + $147;\n      $149 = $148 + $145;\n      $150 = $149 < $133;\n      if (!($150)) {\n       $$1203$lcssa = $$1203219;\n       break L28;\n      }\n      $154 = (($$1203219) + 1)|0;\n      $155 = (($101) + ($154))|0;\n      $156 = ($155|0)<($$1231|0);\n      if ($156) {\n       $$1203219 = $154;\n      } else {\n       $$1203$lcssa = $154;\n       break;\n      }\n     }\n    } else {\n     $$1203$lcssa = $$0202230;\n    }\n   } while(0);\n   $151 = ($$0204229|0)>($3|0);\n   L34: do {\n    if ($151) {\n     $$1205$lcssa = $$0204229;\n    } else {\n     $152 = HEAP32[$102>>2]|0;\n     $153 = (($152) + ($$1231))|0;\n     $$1205225 = $$0204229;\n     while(1) {\n      $157 = ($$1205225|0)<($153|0);\n      if (!($157)) {\n       $158 = Math_imul($$1205225, $99)|0;\n       $159 = (+($158|0));\n       $160 = $159 * 7.3999998858198524E-4;\n       $161 = $160;\n       $162 = (+Math_atan((+$161)));\n       $163 = $162 * 13.100000381469727;\n       $164 = Math_imul($158, $158)|0;\n       $165 = (+($164|0));\n       $166 = $165 * 1.8499999754340024E-8;\n       $167 = $166;\n       $168 = (+Math_atan((+$167)));\n       $169 = $168 * 2.2400000095367432;\n       $170 = $159 * 9.9999997473787516E-5;\n       $171 = $170;\n       $172 = $163 + $171;\n       $173 = $172 + $169;\n       $174 = +HEAPF32[$103>>2];\n       $175 = $174 + $128;\n       $176 = $175;\n       $177 = $173 < $176;\n       if (!($177)) {\n        $$1205$lcssa = $$1205225;\n        break L34;\n       }\n      }\n      $178 = (($$1205225) + 1)|0;\n      $179 = ($$1205225|0)<($3|0);\n      if ($179) {\n       $$1205225 = $178;\n      } else {\n       $$1205$lcssa = $178;\n       break;\n      }\n     }\n    }\n   } while(0);\n   $180 = $$1203$lcssa << 16;\n   $181 = (($180) + -65537)|0;\n   $182 = (($181) + ($$1205$lcssa))|0;\n   $183 = (($58) + ($$1231<<2)|0);\n   HEAP32[$183>>2] = $182;\n   $184 = (($$1231) + 1)|0;\n   $exitcond250 = ($184|0)==($3|0);\n   if ($exitcond250) {\n    break;\n   } else {\n    $$0202230 = $$1203$lcssa;$$0204229 = $$1205$lcssa;$$1231 = $184;\n   }\n  }\n  if ($97) {\n   $107 = $67 * 0.5;\n   $108 = HEAP32[$20>>2]|0;\n   $109 = (($108) + 1)|0;\n   $110 = 1 << $109;\n   $111 = (+($110|0));\n   $$2216 = 0;\n   while(1) {\n    $185 = (+($$2216|0));\n    $186 = $185 + 0.25;\n    $187 = $186;\n    $188 = $107 * $187;\n    $189 = $188 / $25;\n    $190 = (+Math_log((+$189)));\n    $191 = $190 * 1.4426950216293335;\n    $192 = $191 + -5.9657840728759766;\n    $193 = $111 * $192;\n    $194 = $193 + 0.5;\n    $195 = (~~(($194)));\n    $196 = (($56) + ($$2216<<2)|0);\n    HEAP32[$196>>2] = $195;\n    $197 = (($$2216) + 1)|0;\n    $exitcond249 = ($197|0)==($3|0);\n    if ($exitcond249) {\n     $$pre$phiZ2D = $107;\n     break;\n    } else {\n     $$2216 = $197;\n    }\n   }\n  } else {\n   label = 19;\n  }\n } else {\n  label = 19;\n }\n if ((label|0) == 19) {\n  $$pre256 = $67 * 0.5;\n  $$pre$phiZ2D = $$pre256;\n }\n $198 = ((($1)) + 36|0);\n $199 = $$pre$phiZ2D / $25;\n $200 = $199;\n $201 = ((($1)) + 24|0);\n $202 = +HEAPF32[$201>>2];\n $203 = ((($1)) + 28|0);\n $204 = +HEAPF32[$203>>2];\n $205 = (_setup_tone_curves($198,$200,$3,$202,$204)|0);\n $206 = ((($0)) + 8|0);\n HEAP32[$206>>2] = $205;\n $207 = (_malloc(12)|0);\n $208 = ((($0)) + 12|0);\n HEAP32[$208>>2] = $207;\n $209 = (_malloc($53)|0);\n HEAP32[$207>>2] = $209;\n $210 = (_malloc($53)|0);\n $211 = ((($207)) + 4|0);\n HEAP32[$211>>2] = $210;\n $212 = (_malloc($53)|0);\n $213 = HEAP32[$208>>2]|0;\n $214 = ((($213)) + 8|0);\n HEAP32[$214>>2] = $212;\n if (!($97)) {\n  return;\n }\n $215 = HEAP32[$60>>2]|0;\n $216 = HEAP32[$208>>2]|0;\n $$pre = HEAP32[$216>>2]|0;\n $$phi$trans$insert = ((($216)) + 4|0);\n $$pre253 = HEAP32[$$phi$trans$insert>>2]|0;\n $$phi$trans$insert254 = ((($216)) + 8|0);\n $$pre255 = HEAP32[$$phi$trans$insert254>>2]|0;\n $$4214 = 0;\n while(1) {\n  $217 = (+($$4214|0));\n  $218 = $217 + 0.5;\n  $219 = $218 * $67;\n  $220 = $219 / $66;\n  $221 = (+Math_log((+$220)));\n  $222 = $221 * 2.885390043258667;\n  $223 = $222 + -11.931568145751953;\n  $224 = $223;\n  $225 = $224 < 0.0;\n  $$0200 = $225 ? 0.0 : $224;\n  $$inv = $$0200 >= 16.0;\n  $$1201 = $$inv ? 16.0 : $$0200;\n  $226 = (~~(($$1201)));\n  $227 = (+($226|0));\n  $228 = $$1201 - $227;\n  $229 = $228;\n  $230 = 1.0 - $229;\n  $231 = (($226) + 1)|0;\n  $232 = (((($215)) + 132|0) + ($226<<2)|0);\n  $233 = +HEAPF32[$232>>2];\n  $234 = $233;\n  $235 = $234 * $230;\n  $236 = (((($215)) + 132|0) + ($231<<2)|0);\n  $237 = +HEAPF32[$236>>2];\n  $238 = $237 * $228;\n  $239 = $238;\n  $240 = $239 + $235;\n  $241 = $240;\n  $242 = (($$pre) + ($$4214<<2)|0);\n  HEAPF32[$242>>2] = $241;\n  $243 = (((($215)) + 200|0) + ($226<<2)|0);\n  $244 = +HEAPF32[$243>>2];\n  $245 = $244;\n  $246 = $245 * $230;\n  $247 = (((($215)) + 200|0) + ($231<<2)|0);\n  $248 = +HEAPF32[$247>>2];\n  $249 = $248 * $228;\n  $250 = $249;\n  $251 = $250 + $246;\n  $252 = $251;\n  $253 = (($$pre253) + ($$4214<<2)|0);\n  HEAPF32[$253>>2] = $252;\n  $254 = (((($215)) + 268|0) + ($226<<2)|0);\n  $255 = +HEAPF32[$254>>2];\n  $256 = $255;\n  $257 = $256 * $230;\n  $258 = (((($215)) + 268|0) + ($231<<2)|0);\n  $259 = +HEAPF32[$258>>2];\n  $260 = $259 * $228;\n  $261 = $260;\n  $262 = $261 + $257;\n  $263 = $262;\n  $264 = (($$pre255) + ($$4214<<2)|0);\n  HEAPF32[$264>>2] = $263;\n  $265 = (($$4214) + 1)|0;\n  $exitcond = ($265|0)==($3|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$4214 = $265;\n  }\n }\n return;\n}\nfunction _setup_tone_curves($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = +$1;\n $2 = $2|0;\n $3 = +$3;\n $4 = +$4;\n var $$$$us$us$us = 0.0, $$$$us364 = 0.0, $$$0275 = 0, $$$0281 = 0, $$$us$us$us = 0.0, $$$us$us377 = 0.0, $$010$i = 0, $$010$i309 = 0, $$010$i312 = 0, $$0275 = 0, $$0279347 = 0, $$0281 = 0, $$0285336 = 0, $$0289357 = 0, $$0301353 = 0, $$0384 = 0, $$05$i = 0, $$05$i314 = 0, $$1$ = 0, $$10$lcssa = 0;\n var $$10352 = 0, $$1278 = 0, $$1278$$0279 = 0, $$1284 = 0, $$1284$$0285 = 0, $$1294 = 0, $$1297359 = 0, $$1297359$us$us$us = 0, $$1297359$us$us374 = 0, $$1297359$us360 = 0, $$1300 = 0.0, $$1300$1 = 0.0, $$1300$2 = 0.0, $$1300$3 = 0.0, $$1354 = 0, $$2$lcssa = 0, $$2287$lcssa = 0, $$2287333 = 0, $$2291365 = 0, $$2291365$us = 0;\n var $$2298339 = 0, $$2342 = 0, $$302 = 0, $$303 = 0, $$305 = 0, $$3288337 = 0, $$3292382 = 0, $$3348 = 0, $$4383 = 0, $$5331 = 0, $$6335 = 0, $$7346 = 0, $$8350 = 0, $$9$lcssa = 0.0, $$alloca_mul = 0, $$neg = 0.0, $$neg317 = 0.0, $$sink$sink = 0.0, $10 = 0, $100 = 0;\n var $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;\n var $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0, $13 = 0.0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0;\n var $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0;\n var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0.0;\n var $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0.0, $190 = 0, $191 = 0;\n var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0.0, $21 = 0;\n var $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;\n var $229 = 0.0, $23 = 0, $230 = 0, $231 = 0.0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0;\n var $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0.0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0.0, $264 = 0;\n var $265 = 0, $266 = 0, $267 = 0.0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0.0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0, $276 = 0, $277 = 0.0, $278 = 0, $279 = 0, $28 = 0, $280 = 0.0, $281 = 0, $282 = 0;\n var $283 = 0.0, $284 = 0, $285 = 0, $286 = 0.0, $287 = 0, $288 = 0, $289 = 0.0, $29 = 0, $290 = 0, $291 = 0, $292 = 0.0, $293 = 0, $294 = 0, $295 = 0.0, $296 = 0, $297 = 0, $298 = 0.0, $299 = 0, $30 = 0, $300 = 0;\n var $301 = 0.0, $302 = 0, $303 = 0, $304 = 0.0, $305 = 0, $306 = 0, $307 = 0.0, $308 = 0, $309 = 0, $31 = 0, $310 = 0.0, $311 = 0, $312 = 0, $313 = 0, $314 = 0.0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;\n var $32 = 0, $320 = 0.0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0.0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0;\n var $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0;\n var $60 = 0.0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0.0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0.0;\n var $97 = 0, $98 = 0, $99 = 0.0, $exitcond = 0, $exitcond$i = 0, $exitcond$i308 = 0, $exitcond$i310 = 0, $exitcond$i313 = 0, $exitcond$i315 = 0, $exitcond393 = 0, $exitcond394 = 0, $exitcond397 = 0, $exitcond398 = 0, $exitcond399 = 0, $exitcond400 = 0, $exitcond401 = 0, $exitcond403 = 0, $exitcond405 = 0, $exitcond406 = 0, $exitcond407 = 0;\n var $exitcond408 = 0, $exitcond409 = 0, $exitcond410 = 0, $exitcond411 = 0, $exitcond412 = 0, $exitcond413 = 0, $ispos = 0, $ispos$us$us$us = 0, $ispos$us$us375 = 0, $ispos$us361 = 0, $neg = 0, $neg$us$us$us = 0, $neg$us$us376 = 0, $neg$us362 = 0, $or$cond304 = 0, $or$cond304332 = 0, $or$cond306 = 0, $or$cond306341 = 0, $or$cond307 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32480|0);\n $5 = sp + 32256|0;\n $6 = sp + 1792|0;\n $7 = sp;\n $8 = $2 << 2;\n $$alloca_mul = $8;\n $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $10 = (_malloc(68)|0);\n _memset(($6|0),0,30464)|0;\n $11 = $3 > 0.0;\n $12 = $3 < 0.0;\n $$0384 = 0;\n while(1) {\n  $15 = $$0384 << 2;\n  $$0289357 = 0;\n  while(1) {\n   $16 = (($$0289357) + ($15))|0;\n   $17 = ($16|0)<(88);\n   if ($17) {\n    $18 = (3716 + ($16<<2)|0);\n    $19 = +HEAPF32[$18>>2];\n    $$1300 = $19;\n   } else {\n    $$1300 = -30.0;\n   }\n   $20 = (($16) + 1)|0;\n   $21 = ($20|0)<(88);\n   if ($21) {\n    $313 = (3716 + ($20<<2)|0);\n    $314 = +HEAPF32[$313>>2];\n    $315 = $$1300 > $314;\n    if ($315) {\n     $$1300$1 = $314;\n    } else {\n     $$1300$1 = $$1300;\n    }\n   } else {\n    $312 = $$1300 > -30.0;\n    if ($312) {\n     $$1300$1 = -30.0;\n    } else {\n     $$1300$1 = $$1300;\n    }\n   }\n   $316 = (($16) + 2)|0;\n   $317 = ($316|0)<(88);\n   if ($317) {\n    $319 = (3716 + ($316<<2)|0);\n    $320 = +HEAPF32[$319>>2];\n    $321 = $$1300$1 > $320;\n    if ($321) {\n     $$1300$2 = $320;\n    } else {\n     $$1300$2 = $$1300$1;\n    }\n   } else {\n    $318 = $$1300$1 > -30.0;\n    if ($318) {\n     $$1300$2 = -30.0;\n    } else {\n     $$1300$2 = $$1300$1;\n    }\n   }\n   $322 = (($16) + 3)|0;\n   $323 = ($322|0)<(88);\n   if ($323) {\n    $325 = (3716 + ($322<<2)|0);\n    $326 = +HEAPF32[$325>>2];\n    $327 = $$1300$2 > $326;\n    if ($327) {\n     $$1300$3 = $326;\n    } else {\n     $$1300$3 = $$1300$2;\n    }\n   } else {\n    $324 = $$1300$2 > -30.0;\n    if ($324) {\n     $$1300$3 = -30.0;\n    } else {\n     $$1300$3 = $$1300$2;\n    }\n   }\n   $328 = (($5) + ($$0289357<<2)|0);\n   HEAPF32[$328>>2] = $$1300$3;\n   $329 = (($$0289357) + 1)|0;\n   $exitcond403 = ($329|0)==(56);\n   if ($exitcond403) {\n    break;\n   } else {\n    $$0289357 = $329;\n   }\n  }\n  $22 = (((($6) + (($$0384*1792)|0)|0)) + 448|0);\n  $23 = (4068 + (($$0384*1344)|0)|0);\n  _memcpy(($22|0),($23|0),224)|0;\n  $24 = (((($6) + (($$0384*1792)|0)|0)) + 672|0);\n  $25 = (((4068 + (($$0384*1344)|0)|0)) + 224|0);\n  _memcpy(($24|0),($25|0),224)|0;\n  $26 = (((($6) + (($$0384*1792)|0)|0)) + 896|0);\n  $27 = (((4068 + (($$0384*1344)|0)|0)) + 448|0);\n  _memcpy(($26|0),($27|0),224)|0;\n  $28 = (((($6) + (($$0384*1792)|0)|0)) + 1120|0);\n  $29 = (((4068 + (($$0384*1344)|0)|0)) + 672|0);\n  _memcpy(($28|0),($29|0),224)|0;\n  $30 = (((($6) + (($$0384*1792)|0)|0)) + 1344|0);\n  $31 = (((4068 + (($$0384*1344)|0)|0)) + 896|0);\n  _memcpy(($30|0),($31|0),224)|0;\n  $32 = (((($6) + (($$0384*1792)|0)|0)) + 1568|0);\n  $33 = (((4068 + (($$0384*1344)|0)|0)) + 1120|0);\n  _memcpy(($32|0),($33|0),224)|0;\n  $34 = (($6) + (($$0384*1792)|0)|0);\n  _memcpy(($34|0),($23|0),224)|0;\n  $35 = (((($6) + (($$0384*1792)|0)|0)) + 224|0);\n  _memcpy(($35|0),($23|0),224)|0;\n  if ($11) {\n   $$2291365$us = 0;\n   while(1) {\n    if ($12) {\n     $$1297359$us$us$us = 0;\n     while(1) {\n      $47 = (16 - ($$1297359$us$us$us))|0;\n      $ispos$us$us$us = ($47|0)>(-1);\n      $neg$us$us$us = (0 - ($47))|0;\n      $48 = $ispos$us$us$us ? $47 : $neg$us$us$us;\n      $49 = (+($48|0));\n      $50 = $49 * $4;\n      $51 = $50 + $3;\n      $52 = $51 < 0.0;\n      $$$us$us$us = $52 ? 0.0 : $51;\n      $53 = $$$us$us$us > 0.0;\n      $$$$us$us$us = $53 ? 0.0 : $$$us$us$us;\n      $54 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365$us*224)|0)|0) + ($$1297359$us$us$us<<2)|0);\n      $55 = +HEAPF32[$54>>2];\n      $56 = $55 + $$$$us$us$us;\n      HEAPF32[$54>>2] = $56;\n      $57 = (($$1297359$us$us$us) + 1)|0;\n      $exitcond409 = ($57|0)==(56);\n      if ($exitcond409) {\n       break;\n      } else {\n       $$1297359$us$us$us = $57;\n      }\n     }\n    } else {\n     $$1297359$us$us374 = 0;\n     while(1) {\n      $36 = (16 - ($$1297359$us$us374))|0;\n      $ispos$us$us375 = ($36|0)>(-1);\n      $neg$us$us376 = (0 - ($36))|0;\n      $37 = $ispos$us$us375 ? $36 : $neg$us$us376;\n      $38 = (+($37|0));\n      $39 = $38 * $4;\n      $40 = $39 + $3;\n      $41 = $40 < 0.0;\n      $$$us$us377 = $41 ? 0.0 : $40;\n      $42 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365$us*224)|0)|0) + ($$1297359$us$us374<<2)|0);\n      $43 = +HEAPF32[$42>>2];\n      $44 = $43 + $$$us$us377;\n      HEAPF32[$42>>2] = $44;\n      $45 = (($$1297359$us$us374) + 1)|0;\n      $exitcond408 = ($45|0)==(56);\n      if ($exitcond408) {\n       break;\n      } else {\n       $$1297359$us$us374 = $45;\n      }\n     }\n    }\n    $46 = (($$2291365$us) + 1)|0;\n    $exitcond410 = ($46|0)==(8);\n    if ($exitcond410) {\n     break;\n    } else {\n     $$2291365$us = $46;\n    }\n   }\n  } else {\n   $$2291365 = 0;\n   while(1) {\n    if ($12) {\n     $$1297359$us360 = 0;\n     while(1) {\n      $61 = (16 - ($$1297359$us360))|0;\n      $ispos$us361 = ($61|0)>(-1);\n      $neg$us362 = (0 - ($61))|0;\n      $62 = $ispos$us361 ? $61 : $neg$us362;\n      $63 = (+($62|0));\n      $64 = $63 * $4;\n      $65 = $64 + $3;\n      $66 = $65 > 0.0;\n      $$$$us364 = $66 ? 0.0 : $65;\n      $67 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365*224)|0)|0) + ($$1297359$us360<<2)|0);\n      $68 = +HEAPF32[$67>>2];\n      $69 = $68 + $$$$us364;\n      HEAPF32[$67>>2] = $69;\n      $70 = (($$1297359$us360) + 1)|0;\n      $exitcond406 = ($70|0)==(56);\n      if ($exitcond406) {\n       break;\n      } else {\n       $$1297359$us360 = $70;\n      }\n     }\n    } else {\n     $$1297359 = 0;\n     while(1) {\n      $71 = (16 - ($$1297359))|0;\n      $ispos = ($71|0)>(-1);\n      $neg = (0 - ($71))|0;\n      $72 = $ispos ? $71 : $neg;\n      $73 = (+($72|0));\n      $74 = $73 * $4;\n      $75 = $74 + $3;\n      $76 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365*224)|0)|0) + ($$1297359<<2)|0);\n      $77 = +HEAPF32[$76>>2];\n      $78 = $77 + $75;\n      HEAPF32[$76>>2] = $78;\n      $79 = (($$1297359) + 1)|0;\n      $exitcond405 = ($79|0)==(56);\n      if ($exitcond405) {\n       break;\n      } else {\n       $$1297359 = $79;\n      }\n     }\n    }\n    $80 = (($$2291365) + 1)|0;\n    $exitcond407 = ($80|0)==(8);\n    if ($exitcond407) {\n     break;\n    } else {\n     $$2291365 = $80;\n    }\n   }\n  }\n  $58 = (($0) + ($$0384<<2)|0);\n  $59 = +HEAPF32[$58>>2];\n  $60 = $59;\n  $$3292382 = 0;\n  while(1) {\n   $81 = ($$3292382|0)>(2);\n   $82 = $81 ? $$3292382 : 2;\n   $83 = (+($82|0));\n   $$neg = $83 * -10.0;\n   $84 = $$neg + 70.0;\n   $85 = $84 + $60;\n   $86 = $85;\n   $$05$i = 0;\n   while(1) {\n    $87 = (((($6) + (($$0384*1792)|0)|0) + (($$3292382*224)|0)|0) + ($$05$i<<2)|0);\n    $88 = +HEAPF32[$87>>2];\n    $89 = $88 + $86;\n    HEAPF32[$87>>2] = $89;\n    $90 = (($$05$i) + 1)|0;\n    $exitcond$i = ($90|0)==(56);\n    if ($exitcond$i) {\n     break;\n    } else {\n     $$05$i = $90;\n    }\n   }\n   $91 = (($7) + (($$3292382*224)|0)|0);\n   _memcpy(($91|0),($5|0),224)|0;\n   $92 = (+($$3292382|0));\n   $$neg317 = $92 * -10.0;\n   $93 = $$neg317 + 70.0;\n   $$05$i314 = 0;\n   while(1) {\n    $94 = ((($7) + (($$3292382*224)|0)|0) + ($$05$i314<<2)|0);\n    $95 = +HEAPF32[$94>>2];\n    $96 = $93 + $95;\n    HEAPF32[$94>>2] = $96;\n    $97 = (($$05$i314) + 1)|0;\n    $exitcond$i315 = ($97|0)==(56);\n    if ($exitcond$i315) {\n     $$010$i312 = 0;\n     break;\n    } else {\n     $$05$i314 = $97;\n    }\n   }\n   while(1) {\n    $98 = (((($6) + (($$0384*1792)|0)|0) + (($$3292382*224)|0)|0) + ($$010$i312<<2)|0);\n    $99 = +HEAPF32[$98>>2];\n    $100 = ((($7) + (($$3292382*224)|0)|0) + ($$010$i312<<2)|0);\n    $101 = +HEAPF32[$100>>2];\n    $102 = $99 > $101;\n    if ($102) {\n     HEAPF32[$100>>2] = $99;\n    }\n    $103 = (($$010$i312) + 1)|0;\n    $exitcond$i313 = ($103|0)==(56);\n    if ($exitcond$i313) {\n     break;\n    } else {\n     $$010$i312 = $103;\n    }\n   }\n   $104 = (($$3292382) + 1)|0;\n   $exitcond411 = ($104|0)==(8);\n   if ($exitcond411) {\n    $$4383 = 1;\n    break;\n   } else {\n    $$3292382 = $104;\n   }\n  }\n  while(1) {\n   $105 = (($$4383) + -1)|0;\n   $$010$i309 = 0;\n   while(1) {\n    $106 = ((($7) + (($105*224)|0)|0) + ($$010$i309<<2)|0);\n    $107 = +HEAPF32[$106>>2];\n    $108 = ((($7) + (($$4383*224)|0)|0) + ($$010$i309<<2)|0);\n    $109 = +HEAPF32[$108>>2];\n    $110 = $107 < $109;\n    if ($110) {\n     HEAPF32[$108>>2] = $107;\n    }\n    $111 = (($$010$i309) + 1)|0;\n    $exitcond$i310 = ($111|0)==(56);\n    if ($exitcond$i310) {\n     $$010$i = 0;\n     break;\n    } else {\n     $$010$i309 = $111;\n    }\n   }\n   while(1) {\n    $112 = ((($7) + (($$4383*224)|0)|0) + ($$010$i<<2)|0);\n    $113 = +HEAPF32[$112>>2];\n    $114 = (((($6) + (($$0384*1792)|0)|0) + (($$4383*224)|0)|0) + ($$010$i<<2)|0);\n    $115 = +HEAPF32[$114>>2];\n    $116 = $113 < $115;\n    if ($116) {\n     HEAPF32[$114>>2] = $113;\n    }\n    $117 = (($$010$i) + 1)|0;\n    $exitcond$i308 = ($117|0)==(56);\n    if ($exitcond$i308) {\n     break;\n    } else {\n     $$010$i = $117;\n    }\n   }\n   $118 = (($$4383) + 1)|0;\n   $exitcond412 = ($118|0)==(8);\n   if ($exitcond412) {\n    break;\n   } else {\n    $$4383 = $118;\n   }\n  }\n  $119 = (($$0384) + 1)|0;\n  $exitcond413 = ($119|0)==(17);\n  if ($exitcond413) {\n   break;\n  } else {\n   $$0384 = $119;\n  }\n }\n $13 = $1;\n $14 = ($2|0)>(0);\n $$1354 = 0;\n while(1) {\n  $120 = (_malloc(32)|0);\n  $121 = (($10) + ($$1354<<2)|0);\n  HEAP32[$121>>2] = $120;\n  $122 = (+($$1354|0));\n  $123 = $122 * 0.5;\n  $124 = $122 * 0.34657350182533264;\n  $125 = $124 + 4.1351653545408453;\n  $126 = (+Math_exp((+$125)));\n  $127 = $126 / $13;\n  $128 = (+Math_floor((+$127)));\n  $129 = (~~(($128)));\n  $130 = (+($129|0));\n  $131 = $130 * $1;\n  $132 = $131 + 1.0;\n  $133 = $132;\n  $134 = (+Math_log((+$133)));\n  $135 = $134 * 2.885390043258667;\n  $136 = $135 + -11.931568145751953;\n  $137 = (+Math_ceil((+$136)));\n  $138 = (~~(($137)));\n  $139 = (($129) + 1)|0;\n  $140 = (+($139|0));\n  $141 = $140 * $1;\n  $142 = $141;\n  $143 = (+Math_log((+$142)));\n  $144 = $143 * 2.885390043258667;\n  $145 = $144 + -11.931568145751953;\n  $146 = (+Math_floor((+$145)));\n  $147 = (~~(($146)));\n  $148 = ($138|0)>($$1354|0);\n  $$1$ = $148 ? $$1354 : $138;\n  $149 = ($$1$|0)>(0);\n  $$1294 = $149 ? $$1$ : 0;\n  $150 = ($147|0)<(16);\n  $$302 = $150 ? $147 : 16;\n  $151 = ($$1294|0)>($$302|0);\n  $152 = (($$1354) + 1)|0;\n  $153 = ($152|0)<(17);\n  $154 = $123 + 3.9657840728759766;\n  $$0301353 = 0;$157 = $120;\n  while(1) {\n   $155 = (_malloc(232)|0);\n   $156 = (($157) + ($$0301353<<2)|0);\n   HEAP32[$156>>2] = $155;\n   if ($14) {\n    $$5331 = 0;\n    while(1) {\n     $158 = (($9) + ($$5331<<2)|0);\n     HEAPF32[$158>>2] = 999.0;\n     $159 = (($$5331) + 1)|0;\n     $exitcond = ($159|0)==($2|0);\n     if ($exitcond) {\n      break;\n     } else {\n      $$5331 = $159;\n     }\n    }\n   }\n   if (!($151)) {\n    $$2298339 = $$1294;\n    while(1) {\n     $160 = (+($$2298339|0));\n     $161 = $160 * 0.5;\n     $$0285336 = 0;$$6335 = 0;\n     while(1) {\n      $165 = (+($$6335|0));\n      $166 = $165 * 0.125;\n      $167 = $166 + $161;\n      $168 = $167 + 3.9032840728759766;\n      $169 = $168 * 0.69314700365066528;\n      $170 = (+Math_exp((+$169)));\n      $171 = $170 / $13;\n      $172 = (~~(($171)));\n      $173 = $167 + 4.0282840728759766;\n      $174 = $173 * 0.69314700365066528;\n      $175 = (+Math_exp((+$174)));\n      $176 = $175 / $13;\n      $177 = $176 + 1.0;\n      $178 = (~~(($177)));\n      $179 = ($172|0)>(0);\n      $$303 = $179 ? $172 : 0;\n      $180 = ($$303|0)>($2|0);\n      $$1284 = $180 ? $2 : $$303;\n      $181 = ($$1284|0)<($$0285336|0);\n      $$1284$$0285 = $181 ? $$1284 : $$0285336;\n      $182 = ($178|0)>(0);\n      $$0281 = $182 ? $178 : 0;\n      $183 = ($$0281|0)>($2|0);\n      $$$0281 = $183 ? $2 : $$0281;\n      $184 = ($$1284$$0285|0)<($$$0281|0);\n      $185 = ($$1284$$0285|0)<($2|0);\n      $or$cond304332 = $184 & $185;\n      if ($or$cond304332) {\n       $186 = (((($6) + (($$2298339*1792)|0)|0) + (($$0301353*224)|0)|0) + ($$6335<<2)|0);\n       $187 = +HEAPF32[$186>>2];\n       $$2287333 = $$1284$$0285;\n       while(1) {\n        $188 = (($9) + ($$2287333<<2)|0);\n        $189 = +HEAPF32[$188>>2];\n        $190 = $189 > $187;\n        if ($190) {\n         HEAPF32[$188>>2] = $187;\n        }\n        $191 = (($$2287333) + 1)|0;\n        $192 = ($191|0)<($$$0281|0);\n        $193 = ($191|0)<($2|0);\n        $or$cond304 = $192 & $193;\n        if ($or$cond304) {\n         $$2287333 = $191;\n        } else {\n         $$2287$lcssa = $191;\n         break;\n        }\n       }\n      } else {\n       $$2287$lcssa = $$1284$$0285;\n      }\n      $194 = (($$6335) + 1)|0;\n      $exitcond393 = ($194|0)==(56);\n      if ($exitcond393) {\n       break;\n      } else {\n       $$0285336 = $$2287$lcssa;$$6335 = $194;\n      }\n     }\n     $162 = ($$2287$lcssa|0)<($2|0);\n     if ($162) {\n      $163 = ((((($6) + (($$2298339*1792)|0)|0) + (($$0301353*224)|0)|0)) + 220|0);\n      $164 = +HEAPF32[$163>>2];\n      $$3288337 = $$2287$lcssa;\n      while(1) {\n       $195 = (($9) + ($$3288337<<2)|0);\n       $196 = +HEAPF32[$195>>2];\n       $197 = $196 > $164;\n       if ($197) {\n        HEAPF32[$195>>2] = $164;\n       }\n       $198 = (($$3288337) + 1)|0;\n       $exitcond394 = ($198|0)==($2|0);\n       if ($exitcond394) {\n        break;\n       } else {\n        $$3288337 = $198;\n       }\n      }\n     }\n     $199 = (($$2298339) + 1)|0;\n     $200 = ($$2298339|0)<($$302|0);\n     if ($200) {\n      $$2298339 = $199;\n     } else {\n      break;\n     }\n    }\n   }\n   if ($153) {\n    $$0279347 = 0;$$7346 = 0;\n    while(1) {\n     $207 = (+($$7346|0));\n     $208 = $207 * 0.125;\n     $209 = $208 + $123;\n     $210 = $209 + 3.9032840728759766;\n     $211 = $210 * 0.69314700365066528;\n     $212 = (+Math_exp((+$211)));\n     $213 = $212 / $13;\n     $214 = (~~(($213)));\n     $215 = $209 + 4.0282840728759766;\n     $216 = $215 * 0.69314700365066528;\n     $217 = (+Math_exp((+$216)));\n     $218 = $217 / $13;\n     $219 = $218 + 1.0;\n     $220 = (~~(($219)));\n     $221 = ($214|0)>(0);\n     $$305 = $221 ? $214 : 0;\n     $222 = ($$305|0)>($2|0);\n     $$1278 = $222 ? $2 : $$305;\n     $223 = ($$1278|0)<($$0279347|0);\n     $$1278$$0279 = $223 ? $$1278 : $$0279347;\n     $224 = ($220|0)>(0);\n     $$0275 = $224 ? $220 : 0;\n     $225 = ($$0275|0)>($2|0);\n     $$$0275 = $225 ? $2 : $$0275;\n     $226 = ($$1278$$0279|0)<($$$0275|0);\n     $227 = ($$1278$$0279|0)<($2|0);\n     $or$cond306341 = $226 & $227;\n     if ($or$cond306341) {\n      $228 = (((($6) + (($152*1792)|0)|0) + (($$0301353*224)|0)|0) + ($$7346<<2)|0);\n      $229 = +HEAPF32[$228>>2];\n      $$2342 = $$1278$$0279;\n      while(1) {\n       $230 = (($9) + ($$2342<<2)|0);\n       $231 = +HEAPF32[$230>>2];\n       $232 = $231 > $229;\n       if ($232) {\n        HEAPF32[$230>>2] = $229;\n       }\n       $233 = (($$2342) + 1)|0;\n       $234 = ($233|0)<($$$0275|0);\n       $235 = ($233|0)<($2|0);\n       $or$cond306 = $234 & $235;\n       if ($or$cond306) {\n        $$2342 = $233;\n       } else {\n        $$2$lcssa = $233;\n        break;\n       }\n      }\n     } else {\n      $$2$lcssa = $$1278$$0279;\n     }\n     $236 = (($$7346) + 1)|0;\n     $exitcond397 = ($236|0)==(56);\n     if ($exitcond397) {\n      break;\n     } else {\n      $$0279347 = $$2$lcssa;$$7346 = $236;\n     }\n    }\n    $204 = ($$2$lcssa|0)<($2|0);\n    if ($204) {\n     $205 = ((((($6) + (($152*1792)|0)|0) + (($$0301353*224)|0)|0)) + 220|0);\n     $206 = +HEAPF32[$205>>2];\n     $$3348 = $$2$lcssa;\n     while(1) {\n      $237 = (($9) + ($$3348<<2)|0);\n      $238 = +HEAPF32[$237>>2];\n      $239 = $238 > $206;\n      if ($239) {\n       HEAPF32[$237>>2] = $206;\n      }\n      $240 = (($$3348) + 1)|0;\n      $exitcond398 = ($240|0)==($2|0);\n      if ($exitcond398) {\n       break;\n      } else {\n       $$3348 = $240;\n      }\n     }\n    }\n   }\n   $201 = HEAP32[$121>>2]|0;\n   $202 = (($201) + ($$0301353<<2)|0);\n   $203 = HEAP32[$202>>2]|0;\n   $$8350 = 0;\n   while(1) {\n    $244 = (+($$8350|0));\n    $245 = $244 * 0.125;\n    $246 = $154 + $245;\n    $247 = $246 * 0.69314700365066528;\n    $248 = (+Math_exp((+$247)));\n    $249 = $248 / $13;\n    $250 = (~~(($249)));\n    $251 = ($250|0)>(-1);\n    $252 = ($250|0)<($2|0);\n    $or$cond307 = $251 & $252;\n    if ($or$cond307) {\n     $253 = (($9) + ($250<<2)|0);\n     $254 = +HEAPF32[$253>>2];\n     $$sink$sink = $254;\n    } else {\n     $$sink$sink = -999.0;\n    }\n    $255 = (($$8350) + 2)|0;\n    $256 = (($203) + ($255<<2)|0);\n    HEAPF32[$256>>2] = $$sink$sink;\n    $257 = (($$8350) + 1)|0;\n    $exitcond399 = ($257|0)==(56);\n    if ($exitcond399) {\n     break;\n    } else {\n     $$8350 = $257;\n    }\n   }\n   $241 = ((($203)) + 8|0);\n   $242 = +HEAPF32[$241>>2];\n   $243 = $242 > -200.0;\n   do {\n    if ($243) {\n     $$9$lcssa = 0.0;\n    } else {\n     $258 = ((($203)) + 12|0);\n     $259 = +HEAPF32[$258>>2];\n     $260 = $259 > -200.0;\n     if ($260) {\n      $$9$lcssa = 1.0;\n     } else {\n      $270 = ((($203)) + 16|0);\n      $271 = +HEAPF32[$270>>2];\n      $272 = $271 > -200.0;\n      if ($272) {\n       $$9$lcssa = 2.0;\n      } else {\n       $273 = ((($203)) + 20|0);\n       $274 = +HEAPF32[$273>>2];\n       $275 = $274 > -200.0;\n       if ($275) {\n        $$9$lcssa = 3.0;\n       } else {\n        $276 = ((($203)) + 24|0);\n        $277 = +HEAPF32[$276>>2];\n        $278 = $277 > -200.0;\n        if ($278) {\n         $$9$lcssa = 4.0;\n        } else {\n         $279 = ((($203)) + 28|0);\n         $280 = +HEAPF32[$279>>2];\n         $281 = $280 > -200.0;\n         if ($281) {\n          $$9$lcssa = 5.0;\n         } else {\n          $282 = ((($203)) + 32|0);\n          $283 = +HEAPF32[$282>>2];\n          $284 = $283 > -200.0;\n          if ($284) {\n           $$9$lcssa = 6.0;\n          } else {\n           $285 = ((($203)) + 36|0);\n           $286 = +HEAPF32[$285>>2];\n           $287 = $286 > -200.0;\n           if ($287) {\n            $$9$lcssa = 7.0;\n           } else {\n            $288 = ((($203)) + 40|0);\n            $289 = +HEAPF32[$288>>2];\n            $290 = $289 > -200.0;\n            if ($290) {\n             $$9$lcssa = 8.0;\n            } else {\n             $291 = ((($203)) + 44|0);\n             $292 = +HEAPF32[$291>>2];\n             $293 = $292 > -200.0;\n             if ($293) {\n              $$9$lcssa = 9.0;\n             } else {\n              $294 = ((($203)) + 48|0);\n              $295 = +HEAPF32[$294>>2];\n              $296 = $295 > -200.0;\n              if ($296) {\n               $$9$lcssa = 10.0;\n              } else {\n               $297 = ((($203)) + 52|0);\n               $298 = +HEAPF32[$297>>2];\n               $299 = $298 > -200.0;\n               if ($299) {\n                $$9$lcssa = 11.0;\n               } else {\n                $300 = ((($203)) + 56|0);\n                $301 = +HEAPF32[$300>>2];\n                $302 = $301 > -200.0;\n                if ($302) {\n                 $$9$lcssa = 12.0;\n                } else {\n                 $303 = ((($203)) + 60|0);\n                 $304 = +HEAPF32[$303>>2];\n                 $305 = $304 > -200.0;\n                 if ($305) {\n                  $$9$lcssa = 13.0;\n                 } else {\n                  $306 = ((($203)) + 64|0);\n                  $307 = +HEAPF32[$306>>2];\n                  $308 = $307 > -200.0;\n                  if ($308) {\n                   $$9$lcssa = 14.0;\n                   break;\n                  }\n                  $309 = ((($203)) + 68|0);\n                  $310 = +HEAPF32[$309>>2];\n                  $311 = $310 > -200.0;\n                  if ($311) {\n                   $$9$lcssa = 15.0;\n                   break;\n                  }\n                  $$9$lcssa = 16.0;\n                 }\n                }\n               }\n              }\n             }\n            }\n           }\n          }\n         }\n        }\n       }\n      }\n     }\n    }\n   } while(0);\n   HEAPF32[$203>>2] = $$9$lcssa;\n   $$10352 = 55;\n   while(1) {\n    $261 = (($$10352) + 2)|0;\n    $262 = (($203) + ($261<<2)|0);\n    $263 = +HEAPF32[$262>>2];\n    $264 = $263 > -200.0;\n    if ($264) {\n     $$10$lcssa = $$10352;\n     break;\n    }\n    $265 = (($$10352) + -1)|0;\n    $266 = ($265|0)>(17);\n    if ($266) {\n     $$10352 = $265;\n    } else {\n     $$10$lcssa = $265;\n     break;\n    }\n   }\n   $267 = (+($$10$lcssa|0));\n   $268 = ((($203)) + 4|0);\n   HEAPF32[$268>>2] = $267;\n   $269 = (($$0301353) + 1)|0;\n   $exitcond400 = ($269|0)==(8);\n   if ($exitcond400) {\n    break;\n   } else {\n    $$0301353 = $269;$157 = $201;\n   }\n  }\n  $exitcond401 = ($152|0)==(17);\n  if ($exitcond401) {\n   break;\n  } else {\n   $$1354 = $152;\n  }\n }\n STACKTOP = sp;return ($10|0);\n}\nfunction __vp_psy_clear($0) {\n $0 = $0|0;\n var $$02430 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 16|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if (!($4)) {\n  _free($3);\n }\n $5 = ((($0)) + 20|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if (!($7)) {\n  _free($6);\n }\n $8 = ((($0)) + 24|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0|0);\n if (!($10)) {\n  _free($9);\n }\n $11 = ((($0)) + 8|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ($12|0)==(0|0);\n if (!($13)) {\n  $$02430 = 0;$15 = $12;\n  while(1) {\n   $14 = (($15) + ($$02430<<2)|0);\n   $16 = HEAP32[$14>>2]|0;\n   $17 = HEAP32[$16>>2]|0;\n   _free($17);\n   $18 = HEAP32[$11>>2]|0;\n   $19 = (($18) + ($$02430<<2)|0);\n   $20 = HEAP32[$19>>2]|0;\n   $21 = ((($20)) + 4|0);\n   $22 = HEAP32[$21>>2]|0;\n   _free($22);\n   $23 = HEAP32[$11>>2]|0;\n   $24 = (($23) + ($$02430<<2)|0);\n   $25 = HEAP32[$24>>2]|0;\n   $26 = ((($25)) + 8|0);\n   $27 = HEAP32[$26>>2]|0;\n   _free($27);\n   $28 = HEAP32[$11>>2]|0;\n   $29 = (($28) + ($$02430<<2)|0);\n   $30 = HEAP32[$29>>2]|0;\n   $31 = ((($30)) + 12|0);\n   $32 = HEAP32[$31>>2]|0;\n   _free($32);\n   $33 = HEAP32[$11>>2]|0;\n   $34 = (($33) + ($$02430<<2)|0);\n   $35 = HEAP32[$34>>2]|0;\n   $36 = ((($35)) + 16|0);\n   $37 = HEAP32[$36>>2]|0;\n   _free($37);\n   $38 = HEAP32[$11>>2]|0;\n   $39 = (($38) + ($$02430<<2)|0);\n   $40 = HEAP32[$39>>2]|0;\n   $41 = ((($40)) + 20|0);\n   $42 = HEAP32[$41>>2]|0;\n   _free($42);\n   $43 = HEAP32[$11>>2]|0;\n   $44 = (($43) + ($$02430<<2)|0);\n   $45 = HEAP32[$44>>2]|0;\n   $46 = ((($45)) + 24|0);\n   $47 = HEAP32[$46>>2]|0;\n   _free($47);\n   $48 = HEAP32[$11>>2]|0;\n   $49 = (($48) + ($$02430<<2)|0);\n   $50 = HEAP32[$49>>2]|0;\n   $51 = ((($50)) + 28|0);\n   $52 = HEAP32[$51>>2]|0;\n   _free($52);\n   $53 = HEAP32[$11>>2]|0;\n   $54 = (($53) + ($$02430<<2)|0);\n   $55 = HEAP32[$54>>2]|0;\n   _free($55);\n   $56 = (($$02430) + 1)|0;\n   $exitcond = ($56|0)==(17);\n   if ($exitcond) {\n    break;\n   }\n   $$pre = HEAP32[$11>>2]|0;\n   $$02430 = $56;$15 = $$pre;\n  }\n  $57 = HEAP32[$11>>2]|0;\n  _free($57);\n }\n $58 = ((($0)) + 12|0);\n $59 = HEAP32[$58>>2]|0;\n $60 = ($59|0)==(0|0);\n if (!($60)) {\n  $61 = HEAP32[$59>>2]|0;\n  _free($61);\n  $62 = HEAP32[$58>>2]|0;\n  $63 = ((($62)) + 4|0);\n  $64 = HEAP32[$63>>2]|0;\n  _free($64);\n  $65 = HEAP32[$58>>2]|0;\n  $66 = ((($65)) + 8|0);\n  $67 = HEAP32[$66>>2]|0;\n  _free($67);\n  $68 = HEAP32[$58>>2]|0;\n  _free($68);\n }\n dest=$0; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n return;\n}\nfunction __vp_noisemask($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$$ = 0, $$052 = 0, $$149 = 0, $$248 = 0, $$alloca_mul = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0;\n var $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond56 = 0, $exitcond57 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$0>>2]|0;\n $4 = $3 << 2;\n $$alloca_mul = $4;\n $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $6 = ((($0)) + 24|0);\n $7 = HEAP32[$6>>2]|0;\n _bark_noise_hybridmp($3,$7,$1,$2,140.0,-1);\n $8 = ($3|0)>(0);\n if ($8) {\n  $$052 = 0;\n  while(1) {\n   $9 = (($1) + ($$052<<2)|0);\n   $10 = +HEAPF32[$9>>2];\n   $11 = (($2) + ($$052<<2)|0);\n   $12 = +HEAPF32[$11>>2];\n   $13 = $10 - $12;\n   $14 = (($5) + ($$052<<2)|0);\n   HEAPF32[$14>>2] = $13;\n   $15 = (($$052) + 1)|0;\n   $exitcond57 = ($15|0)==($3|0);\n   if ($exitcond57) {\n    break;\n   } else {\n    $$052 = $15;\n   }\n  }\n }\n $16 = HEAP32[$6>>2]|0;\n $17 = ((($0)) + 4|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ((($18)) + 128|0);\n $20 = HEAP32[$19>>2]|0;\n _bark_noise_hybridmp($3,$16,$5,$2,0.0,$20);\n if ($8) {\n  $$149 = 0;\n } else {\n  STACKTOP = sp;return;\n }\n while(1) {\n  $22 = (($1) + ($$149<<2)|0);\n  $23 = +HEAPF32[$22>>2];\n  $24 = (($5) + ($$149<<2)|0);\n  $25 = +HEAPF32[$24>>2];\n  $26 = $23 - $25;\n  HEAPF32[$24>>2] = $26;\n  $27 = (($$149) + 1)|0;\n  $exitcond56 = ($27|0)==($3|0);\n  if ($exitcond56) {\n   break;\n  } else {\n   $$149 = $27;\n  }\n }\n if (!($8)) {\n  STACKTOP = sp;return;\n }\n $21 = HEAP32[$17>>2]|0;\n $$248 = 0;\n while(1) {\n  $28 = (($2) + ($$248<<2)|0);\n  $29 = +HEAPF32[$28>>2];\n  $30 = $29;\n  $31 = $30 + 0.5;\n  $32 = (~~(($31)));\n  $33 = ($32|0)<(39);\n  $$ = $33 ? $32 : 39;\n  $34 = ($32|0)>(0);\n  $$$ = $34 ? $$ : 0;\n  $35 = (($5) + ($$248<<2)|0);\n  $36 = +HEAPF32[$35>>2];\n  $37 = (((($21)) + 336|0) + ($$$<<2)|0);\n  $38 = +HEAPF32[$37>>2];\n  $39 = $38 + $36;\n  HEAPF32[$28>>2] = $39;\n  $40 = (($$248) + 1)|0;\n  $exitcond = ($40|0)==($3|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$248 = $40;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _bark_noise_hybridmp($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = +$4;\n $5 = $5|0;\n var $$0 = 0.0, $$0336413 = 0.0, $$0338$lcssa = 0.0, $$0342$lcssa = 0.0, $$0346$lcssa = 0.0, $$0350 = 0.0, $$0353412 = 0, $$0360411 = 0.0, $$0361410 = 0.0, $$0362409 = 0.0, $$0363408 = 0.0, $$0364407 = 0.0, $$1 = 0.0, $$1337$lcssa = 0.0, $$1337400 = 0.0, $$1339$lcssa = 0.0, $$1343$lcssa = 0.0, $$1347$lcssa = 0.0, $$1351 = 0.0, $$1354$lcssa = 0;\n var $$1354399 = 0, $$2$lcssa = 0.0, $$2340$lcssa = 0.0, $$2344$lcssa = 0.0, $$2348$lcssa = 0.0, $$2352 = 0.0, $$2355$lcssa = 0, $$2355391 = 0, $$2392 = 0.0, $$3341$lcssa = 0.0, $$3345$lcssa = 0.0, $$3349$lcssa = 0.0, $$3356388 = 0, $$3389 = 0.0, $$4$lcssa = 0.0, $$4357$lcssa = 0, $$4357379 = 0, $$4380 = 0.0, $$5$lcssa = 0.0, $$5358$lcssa = 0;\n var $$5358372 = 0, $$5373 = 0.0, $$6359370 = 0, $$6371 = 0.0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$alloca_mul7 = 0, $$in = 0, $$pn = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0.0, $106 = 0, $107 = 0.0;\n var $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0.0, $120 = 0.0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0;\n var $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0.0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0;\n var $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0.0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0.0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0.0, $160 = 0, $161 = 0;\n var $162 = 0, $163 = 0.0, $164 = 0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0, $17 = 0.0, $170 = 0.0, $171 = 0, $172 = 0.0, $173 = 0.0, $174 = 0, $175 = 0.0, $176 = 0, $177 = 0.0, $178 = 0.0, $179 = 0, $18 = 0;\n var $180 = 0.0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0.0, $186 = 0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0;\n var $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0, $203 = 0.0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0.0, $215 = 0.0, $216 = 0;\n var $217 = 0.0, $218 = 0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0, $222 = 0.0, $223 = 0, $224 = 0.0, $225 = 0.0, $226 = 0, $227 = 0.0, $228 = 0, $229 = 0.0, $23 = 0.0, $230 = 0.0, $231 = 0, $232 = 0.0, $233 = 0, $234 = 0.0;\n var $235 = 0.0, $236 = 0.0, $237 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0.0, $240 = 0.0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0.0, $251 = 0, $252 = 0;\n var $253 = 0.0, $254 = 0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0, $26 = 0.0, $260 = 0.0, $261 = 0, $262 = 0, $263 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0;\n var $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0.0;\n var $55 = 0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0.0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0;\n var $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0.0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond435 = 0, $exitcond436 = 0, $exitcond437 = 0, $exitcond438 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = $0 << 2;\n $$alloca_mul = $6;\n $7 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $$alloca_mul1 = $6;\n $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;\n $$alloca_mul3 = $6;\n $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;\n $$alloca_mul5 = $6;\n $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;\n $$alloca_mul7 = $6;\n $11 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;\n $12 = +HEAPF32[$2>>2];\n $13 = $12 + $4;\n $14 = $13 < 1.0;\n $$0 = $14 ? 1.0 : $13;\n $15 = $$0 * $$0;\n $16 = $15 * 0.5;\n $17 = $16 * $$0;\n HEAPF32[$7>>2] = $16;\n HEAPF32[$8>>2] = $16;\n HEAPF32[$9>>2] = 0.0;\n HEAPF32[$10>>2] = $17;\n HEAPF32[$11>>2] = 0.0;\n $18 = ($0|0)>(1);\n if ($18) {\n  $$0336413 = 1.0;$$0353412 = 1;$$0360411 = 0.0;$$0361410 = $17;$$0362409 = 0.0;$$0363408 = $16;$$0364407 = $16;\n  while(1) {\n   $22 = (($2) + ($$0353412<<2)|0);\n   $23 = +HEAPF32[$22>>2];\n   $24 = $23 + $4;\n   $25 = $24 < 1.0;\n   $$1 = $25 ? 1.0 : $24;\n   $26 = $$1 * $$1;\n   $27 = $26 + $$0364407;\n   $28 = $26 * $$0336413;\n   $29 = $28 + $$0363408;\n   $30 = $28 * $$0336413;\n   $31 = $30 + $$0362409;\n   $32 = $26 * $$1;\n   $33 = $32 + $$0361410;\n   $34 = $28 * $$1;\n   $35 = $34 + $$0360411;\n   $36 = (($7) + ($$0353412<<2)|0);\n   HEAPF32[$36>>2] = $27;\n   $37 = (($8) + ($$0353412<<2)|0);\n   HEAPF32[$37>>2] = $29;\n   $38 = (($9) + ($$0353412<<2)|0);\n   HEAPF32[$38>>2] = $31;\n   $39 = (($10) + ($$0353412<<2)|0);\n   HEAPF32[$39>>2] = $33;\n   $40 = (($11) + ($$0353412<<2)|0);\n   HEAPF32[$40>>2] = $35;\n   $41 = (($$0353412) + 1)|0;\n   $42 = $$0336413 + 1.0;\n   $exitcond438 = ($41|0)==($0|0);\n   if ($exitcond438) {\n    break;\n   } else {\n    $$0336413 = $42;$$0353412 = $41;$$0360411 = $35;$$0361410 = $33;$$0362409 = $31;$$0363408 = $29;$$0364407 = $27;\n   }\n  }\n }\n $19 = HEAP32[$1>>2]|0;\n $20 = $19 >> 16;\n $21 = ($20|0)>(-1);\n if ($21) {\n  $$0338$lcssa = 1.0;$$0342$lcssa = 0.0;$$0346$lcssa = 0.0;$$1337$lcssa = 0.0;$$1354$lcssa = 0;$44 = $19;\n } else {\n  $$1337400 = 0.0;$$1354399 = 0;$47 = $19;$51 = $20;\n  while(1) {\n   $46 = $47 & 65535;\n   $48 = (($7) + ($46<<2)|0);\n   $49 = +HEAPF32[$48>>2];\n   $50 = (0 - ($51))|0;\n   $52 = (($7) + ($50<<2)|0);\n   $53 = +HEAPF32[$52>>2];\n   $54 = $53 + $49;\n   $55 = (($8) + ($46<<2)|0);\n   $56 = +HEAPF32[$55>>2];\n   $57 = (($8) + ($50<<2)|0);\n   $58 = +HEAPF32[$57>>2];\n   $59 = $56 - $58;\n   $60 = (($9) + ($46<<2)|0);\n   $61 = +HEAPF32[$60>>2];\n   $62 = (($9) + ($50<<2)|0);\n   $63 = +HEAPF32[$62>>2];\n   $64 = $63 + $61;\n   $65 = (($10) + ($46<<2)|0);\n   $66 = +HEAPF32[$65>>2];\n   $67 = (($10) + ($50<<2)|0);\n   $68 = +HEAPF32[$67>>2];\n   $69 = $68 + $66;\n   $70 = (($11) + ($46<<2)|0);\n   $71 = +HEAPF32[$70>>2];\n   $72 = (($11) + ($50<<2)|0);\n   $73 = +HEAPF32[$72>>2];\n   $74 = $71 - $73;\n   $75 = $69 * $64;\n   $76 = $74 * $59;\n   $77 = $75 - $76;\n   $78 = $74 * $54;\n   $79 = $69 * $59;\n   $80 = $78 - $79;\n   $81 = $64 * $54;\n   $82 = $59 * $59;\n   $83 = $81 - $82;\n   $84 = $80 * $$1337400;\n   $85 = $84 + $77;\n   $86 = $85 / $83;\n   $87 = $86 < 0.0;\n   $$0350 = $87 ? 0.0 : $86;\n   $88 = $$0350 - $4;\n   $89 = (($3) + ($$1354399<<2)|0);\n   HEAPF32[$89>>2] = $88;\n   $90 = (($$1354399) + 1)|0;\n   $91 = $$1337400 + 1.0;\n   $92 = (($1) + ($90<<2)|0);\n   $93 = HEAP32[$92>>2]|0;\n   $94 = $93 >> 16;\n   $95 = ($94|0)>(-1);\n   if ($95) {\n    $$0338$lcssa = $83;$$0342$lcssa = $80;$$0346$lcssa = $77;$$1337$lcssa = $91;$$1354$lcssa = $90;$44 = $93;\n    break;\n   } else {\n    $$1337400 = $91;$$1354399 = $90;$47 = $93;$51 = $94;\n   }\n  }\n }\n $43 = $44 & 65535;\n $45 = ($43|0)<($0|0);\n if ($45) {\n  $$2355391 = $$1354$lcssa;$$2392 = $$1337$lcssa;$$in = $44;$99 = $43;\n  while(1) {\n   $97 = $$in >> 16;\n   $98 = (($7) + ($99<<2)|0);\n   $100 = +HEAPF32[$98>>2];\n   $101 = (($7) + ($97<<2)|0);\n   $102 = +HEAPF32[$101>>2];\n   $103 = $100 - $102;\n   $104 = (($8) + ($99<<2)|0);\n   $105 = +HEAPF32[$104>>2];\n   $106 = (($8) + ($97<<2)|0);\n   $107 = +HEAPF32[$106>>2];\n   $108 = $105 - $107;\n   $109 = (($9) + ($99<<2)|0);\n   $110 = +HEAPF32[$109>>2];\n   $111 = (($9) + ($97<<2)|0);\n   $112 = +HEAPF32[$111>>2];\n   $113 = $110 - $112;\n   $114 = (($10) + ($99<<2)|0);\n   $115 = +HEAPF32[$114>>2];\n   $116 = (($10) + ($97<<2)|0);\n   $117 = +HEAPF32[$116>>2];\n   $118 = $115 - $117;\n   $119 = (($11) + ($99<<2)|0);\n   $120 = +HEAPF32[$119>>2];\n   $121 = (($11) + ($97<<2)|0);\n   $122 = +HEAPF32[$121>>2];\n   $123 = $120 - $122;\n   $124 = $118 * $113;\n   $125 = $123 * $108;\n   $126 = $124 - $125;\n   $127 = $123 * $103;\n   $128 = $118 * $108;\n   $129 = $127 - $128;\n   $130 = $113 * $103;\n   $131 = $108 * $108;\n   $132 = $130 - $131;\n   $133 = $129 * $$2392;\n   $134 = $133 + $126;\n   $135 = $134 / $132;\n   $136 = $135 < 0.0;\n   $$1351 = $136 ? 0.0 : $135;\n   $137 = $$1351 - $4;\n   $138 = (($3) + ($$2355391<<2)|0);\n   HEAPF32[$138>>2] = $137;\n   $139 = (($$2355391) + 1)|0;\n   $140 = $$2392 + 1.0;\n   $141 = (($1) + ($139<<2)|0);\n   $142 = HEAP32[$141>>2]|0;\n   $143 = $142 & 65535;\n   $144 = ($143|0)<($0|0);\n   if ($144) {\n    $$2355391 = $139;$$2392 = $140;$$in = $142;$99 = $143;\n   } else {\n    $$1339$lcssa = $132;$$1343$lcssa = $129;$$1347$lcssa = $126;$$2$lcssa = $140;$$2355$lcssa = $139;\n    break;\n   }\n  }\n } else {\n  $$1339$lcssa = $$0338$lcssa;$$1343$lcssa = $$0342$lcssa;$$1347$lcssa = $$0346$lcssa;$$2$lcssa = $$1337$lcssa;$$2355$lcssa = $$1354$lcssa;\n }\n $96 = ($$2355$lcssa|0)<($0|0);\n if ($96) {\n  $$3356388 = $$2355$lcssa;$$3389 = $$2$lcssa;\n  while(1) {\n   $145 = $$3389 * $$1343$lcssa;\n   $146 = $145 + $$1347$lcssa;\n   $147 = $146 / $$1339$lcssa;\n   $148 = $147 < 0.0;\n   $$2352 = $148 ? 0.0 : $147;\n   $149 = $$2352 - $4;\n   $150 = (($3) + ($$3356388<<2)|0);\n   HEAPF32[$150>>2] = $149;\n   $151 = (($$3356388) + 1)|0;\n   $152 = $$3389 + 1.0;\n   $exitcond437 = ($151|0)==($0|0);\n   if ($exitcond437) {\n    break;\n   } else {\n    $$3356388 = $151;$$3389 = $152;\n   }\n  }\n }\n $153 = ($5|0)<(1);\n if ($153) {\n  STACKTOP = sp;return;\n }\n $154 = $5 >>> 1;\n $155 = (($154) - ($5))|0;\n $156 = ($155|0)>(-1);\n if ($156) {\n  $$2340$lcssa = $$1339$lcssa;$$2344$lcssa = $$1343$lcssa;$$2348$lcssa = $$1347$lcssa;$$4$lcssa = 0.0;$$4357$lcssa = 0;\n } else {\n  $157 = (($5) - ($154))|0;\n  $$4357379 = 0;$$4380 = 0.0;$162 = $154;$165 = $155;\n  while(1) {\n   $161 = (($7) + ($162<<2)|0);\n   $163 = +HEAPF32[$161>>2];\n   $164 = (0 - ($165))|0;\n   $166 = (($7) + ($164<<2)|0);\n   $167 = +HEAPF32[$166>>2];\n   $168 = $167 + $163;\n   $169 = (($8) + ($162<<2)|0);\n   $170 = +HEAPF32[$169>>2];\n   $171 = (($8) + ($164<<2)|0);\n   $172 = +HEAPF32[$171>>2];\n   $173 = $170 - $172;\n   $174 = (($9) + ($162<<2)|0);\n   $175 = +HEAPF32[$174>>2];\n   $176 = (($9) + ($164<<2)|0);\n   $177 = +HEAPF32[$176>>2];\n   $178 = $177 + $175;\n   $179 = (($10) + ($162<<2)|0);\n   $180 = +HEAPF32[$179>>2];\n   $181 = (($10) + ($164<<2)|0);\n   $182 = +HEAPF32[$181>>2];\n   $183 = $182 + $180;\n   $184 = (($11) + ($162<<2)|0);\n   $185 = +HEAPF32[$184>>2];\n   $186 = (($11) + ($164<<2)|0);\n   $187 = +HEAPF32[$186>>2];\n   $188 = $185 - $187;\n   $189 = $183 * $178;\n   $190 = $188 * $173;\n   $191 = $189 - $190;\n   $192 = $188 * $168;\n   $193 = $183 * $173;\n   $194 = $192 - $193;\n   $195 = $178 * $168;\n   $196 = $173 * $173;\n   $197 = $195 - $196;\n   $198 = $194 * $$4380;\n   $199 = $198 + $191;\n   $200 = $199 / $197;\n   $201 = $200 - $4;\n   $202 = (($3) + ($$4357379<<2)|0);\n   $203 = +HEAPF32[$202>>2];\n   $204 = $201 < $203;\n   if ($204) {\n    HEAPF32[$202>>2] = $201;\n   }\n   $205 = (($$4357379) + 1)|0;\n   $206 = $$4380 + 1.0;\n   $207 = (($205) + ($154))|0;\n   $208 = (($207) - ($5))|0;\n   $exitcond436 = ($205|0)==($157|0);\n   if ($exitcond436) {\n    $$2340$lcssa = $197;$$2344$lcssa = $194;$$2348$lcssa = $191;$$4$lcssa = $206;$$4357$lcssa = $157;\n    break;\n   } else {\n    $$4357379 = $205;$$4380 = $206;$162 = $207;$165 = $208;\n   }\n  }\n }\n $158 = (($$4357$lcssa) + ($154))|0;\n $159 = ($158|0)<($0|0);\n if ($159) {\n  $160 = (($0) - ($154))|0;\n  $$5358372 = $$4357$lcssa;$$5373 = $$4$lcssa;$$pn = $158;\n  while(1) {\n   $210 = (($$pn) - ($5))|0;\n   $211 = (($7) + ($$pn<<2)|0);\n   $212 = +HEAPF32[$211>>2];\n   $213 = (($7) + ($210<<2)|0);\n   $214 = +HEAPF32[$213>>2];\n   $215 = $212 - $214;\n   $216 = (($8) + ($$pn<<2)|0);\n   $217 = +HEAPF32[$216>>2];\n   $218 = (($8) + ($210<<2)|0);\n   $219 = +HEAPF32[$218>>2];\n   $220 = $217 - $219;\n   $221 = (($9) + ($$pn<<2)|0);\n   $222 = +HEAPF32[$221>>2];\n   $223 = (($9) + ($210<<2)|0);\n   $224 = +HEAPF32[$223>>2];\n   $225 = $222 - $224;\n   $226 = (($10) + ($$pn<<2)|0);\n   $227 = +HEAPF32[$226>>2];\n   $228 = (($10) + ($210<<2)|0);\n   $229 = +HEAPF32[$228>>2];\n   $230 = $227 - $229;\n   $231 = (($11) + ($$pn<<2)|0);\n   $232 = +HEAPF32[$231>>2];\n   $233 = (($11) + ($210<<2)|0);\n   $234 = +HEAPF32[$233>>2];\n   $235 = $232 - $234;\n   $236 = $230 * $225;\n   $237 = $235 * $220;\n   $238 = $236 - $237;\n   $239 = $235 * $215;\n   $240 = $230 * $220;\n   $241 = $239 - $240;\n   $242 = $225 * $215;\n   $243 = $220 * $220;\n   $244 = $242 - $243;\n   $245 = $241 * $$5373;\n   $246 = $245 + $238;\n   $247 = $246 / $244;\n   $248 = $247 - $4;\n   $249 = (($3) + ($$5358372<<2)|0);\n   $250 = +HEAPF32[$249>>2];\n   $251 = $248 < $250;\n   if ($251) {\n    HEAPF32[$249>>2] = $248;\n   }\n   $252 = (($$5358372) + 1)|0;\n   $253 = $$5373 + 1.0;\n   $254 = (($252) + ($154))|0;\n   $exitcond435 = ($252|0)==($160|0);\n   if ($exitcond435) {\n    $$3341$lcssa = $244;$$3345$lcssa = $241;$$3349$lcssa = $238;$$5$lcssa = $253;$$5358$lcssa = $160;\n    break;\n   } else {\n    $$5358372 = $252;$$5373 = $253;$$pn = $254;\n   }\n  }\n } else {\n  $$3341$lcssa = $$2340$lcssa;$$3345$lcssa = $$2344$lcssa;$$3349$lcssa = $$2348$lcssa;$$5$lcssa = $$4$lcssa;$$5358$lcssa = $$4357$lcssa;\n }\n $209 = ($$5358$lcssa|0)<($0|0);\n if ($209) {\n  $$6359370 = $$5358$lcssa;$$6371 = $$5$lcssa;\n } else {\n  STACKTOP = sp;return;\n }\n while(1) {\n  $255 = $$6371 * $$3345$lcssa;\n  $256 = $255 + $$3349$lcssa;\n  $257 = $256 / $$3341$lcssa;\n  $258 = $257 - $4;\n  $259 = (($3) + ($$6359370<<2)|0);\n  $260 = +HEAPF32[$259>>2];\n  $261 = $258 < $260;\n  if ($261) {\n   HEAPF32[$259>>2] = $258;\n  }\n  $262 = (($$6359370) + 1)|0;\n  $263 = $$6371 + 1.0;\n  $exitcond = ($262|0)==($0|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$6359370 = $262;$$6371 = $263;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction __vp_tonemask($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = +$3;\n $4 = +$4;\n var $$$$i = 0, $$$i = 0, $$0 = 0.0, $$0$lcssa$i = 0, $$0$ph$i = 0.0, $$03455 = 0, $$04445$i$i = 0, $$046$i$i = 0, $$04954$i = 0, $$068$ph$i = 0.0, $$068$ph72$lcssa$i = 0.0, $$068$ph7283$i = 0.0, $$06992$i = 0, $$093$i = 0, $$1$i = 0, $$1$lcssa$i = 0, $$1$ph$i = 0, $$153 = 0, $$170$lcssa$i = 0, $$186$i51 = 0;\n var $$277$i = 0, $$alloca_mul = 0, $$in$i = 0, $$lcssa$i = 0.0, $$lcssa66 = 0, $$lcssa74$i = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert105$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phiZ2D = 0, $$pre106$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;\n var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;\n var $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0, $13 = 0.0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0;\n var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0.0, $156 = 0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0;\n var $17 = 0, $18 = 0, $19 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0;\n var $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0.0, $97 = 0, $98 = 0.0, $99 = 0, $exitcond = 0, $exitcond71 = 0, $exitcond72 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = HEAP32[$0>>2]|0;\n $6 = ((($0)) + 40|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = $7 << 2;\n $$alloca_mul = $8;\n $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $10 = ((($0)) + 4|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($11)) + 4|0);\n $13 = +HEAPF32[$12>>2];\n $14 = $13 + $4;\n $15 = ($7|0)>(0);\n if ($15) {\n  $$03455 = 0;\n  while(1) {\n   $16 = (($9) + ($$03455<<2)|0);\n   HEAPF32[$16>>2] = -9999.0;\n   $17 = (($$03455) + 1)|0;\n   $exitcond72 = ($17|0)==($7|0);\n   if ($exitcond72) {\n    break;\n   } else {\n    $$03455 = $17;\n   }\n  }\n }\n $18 = ((($11)) + 8|0);\n $19 = +HEAPF32[$18>>2];\n $20 = $14 < $19;\n $$0 = $20 ? $19 : $14;\n $21 = ($5|0)>(0);\n if ($21) {\n  $22 = ((($0)) + 16|0);\n  $23 = HEAP32[$22>>2]|0;\n  $$153 = 0;\n  while(1) {\n   $24 = (($23) + ($$153<<2)|0);\n   $25 = +HEAPF32[$24>>2];\n   $26 = $25 + $$0;\n   $27 = (($2) + ($$153<<2)|0);\n   HEAPF32[$27>>2] = $26;\n   $28 = (($$153) + 1)|0;\n   $exitcond71 = ($28|0)==($5|0);\n   if ($exitcond71) {\n    break;\n   } else {\n    $$153 = $28;\n   }\n  }\n  $29 = ((($0)) + 8|0);\n  $30 = HEAP32[$29>>2]|0;\n  $31 = ((($11)) + 496|0);\n  $32 = +HEAPF32[$31>>2];\n  $33 = $32 - $3;\n  if ($21) {\n   $34 = ((($0)) + 20|0);\n   $35 = HEAP32[$34>>2]|0;\n   $36 = ((($0)) + 32|0);\n   $37 = ((($0)) + 36|0);\n   $38 = ((($0)) + 28|0);\n   $$04954$i = 0;\n   while(1) {\n    $39 = (($1) + ($$04954$i<<2)|0);\n    $40 = +HEAPF32[$39>>2];\n    $41 = (($35) + ($$04954$i<<2)|0);\n    $42 = HEAP32[$41>>2]|0;\n    $$0$ph$i = $40;$$1$ph$i = $$04954$i;\n    L13: while(1) {\n     $$1$i = $$1$ph$i;\n     while(1) {\n      $43 = (($$1$i) + 1)|0;\n      $44 = ($43|0)<($5|0);\n      if (!($44)) {\n       $$lcssa66 = 0;\n       break L13;\n      }\n      $45 = (($35) + ($43<<2)|0);\n      $46 = HEAP32[$45>>2]|0;\n      $47 = ($46|0)==($42|0);\n      if (!($47)) {\n       $$lcssa66 = 1;\n       break L13;\n      }\n      $48 = (($1) + ($43<<2)|0);\n      $49 = +HEAPF32[$48>>2];\n      $50 = $49 > $$0$ph$i;\n      if ($50) {\n       $$0$ph$i = $49;$$1$ph$i = $43;\n       continue L13;\n      } else {\n       $$1$i = $43;\n      }\n     }\n    }\n    $51 = $$0$ph$i + 6.0;\n    $52 = (($2) + ($$1$i<<2)|0);\n    $53 = +HEAPF32[$52>>2];\n    $54 = $51 > $53;\n    if ($54) {\n     $55 = HEAP32[$36>>2]|0;\n     $56 = $42 >> $55;\n     $57 = ($56|0)<(16);\n     $$$i = $57 ? $56 : 16;\n     $58 = ($56|0)>(0);\n     $$$$i = $58 ? $$$i : 0;\n     $59 = (($30) + ($$$$i<<2)|0);\n     $60 = HEAP32[$59>>2]|0;\n     $61 = HEAP32[$37>>2]|0;\n     $62 = $33 + $$0$ph$i;\n     $63 = $62;\n     $64 = $63 + -30.0;\n     $65 = $64 * 0.10000000149011612;\n     $66 = (~~(($65)));\n     $67 = ($66|0)>(0);\n     $68 = $67 ? $66 : 0;\n     $69 = ($68|0)<(7);\n     $70 = $69 ? $68 : 7;\n     $71 = (($60) + ($70<<2)|0);\n     $72 = HEAP32[$71>>2]|0;\n     $73 = ((($72)) + 8|0);\n     $74 = ((($72)) + 4|0);\n     $75 = +HEAPF32[$74>>2];\n     $76 = (~~(($75)));\n     $77 = +HEAPF32[$72>>2];\n     $78 = (~~(($77)));\n     $79 = ($78|0)<($76|0);\n     if ($79) {\n      $80 = (($35) + ($$1$i<<2)|0);\n      $81 = HEAP32[$80>>2]|0;\n      $82 = HEAP32[$38>>2]|0;\n      $83 = (($81) - ($82))|0;\n      $84 = (+($83|0));\n      $85 = $61 >> 1;\n      $86 = (+($85|0));\n      $87 = $77 + -16.0;\n      $88 = (+($61|0));\n      $89 = $87 * $88;\n      $90 = $89 - $86;\n      $91 = $90 + $84;\n      $92 = (~~(($91)));\n      $$04445$i$i = $92;$$046$i$i = $78;\n      while(1) {\n       $93 = ($$04445$i$i|0)>(0);\n       if ($93) {\n        $94 = (($73) + ($$046$i$i<<2)|0);\n        $95 = +HEAPF32[$94>>2];\n        $96 = $95 + $$0$ph$i;\n        $97 = (($9) + ($$04445$i$i<<2)|0);\n        $98 = +HEAPF32[$97>>2];\n        $99 = $98 < $96;\n        if ($99) {\n         HEAPF32[$97>>2] = $96;\n        }\n       }\n       $100 = (($$04445$i$i) + ($61))|0;\n       $101 = ($100|0)<($7|0);\n       $102 = (($$046$i$i) + 1)|0;\n       $103 = ($102|0)<($76|0);\n       $or$cond$i$i = $103 & $101;\n       if ($or$cond$i$i) {\n        $$04445$i$i = $100;$$046$i$i = $102;\n       } else {\n        break;\n       }\n      }\n     }\n    }\n    if ($$lcssa66) {\n     $$04954$i = $43;\n    } else {\n     $$pre$phiZ2D = $37;\n     break;\n    }\n   }\n  } else {\n   label = 7;\n  }\n } else {\n  label = 7;\n }\n if ((label|0) == 7) {\n  $$pre = ((($0)) + 36|0);\n  $$pre$phiZ2D = $$pre;\n }\n $104 = HEAP32[$$pre$phiZ2D>>2]|0;\n _seed_chase($9,$104,$7);\n $105 = HEAP32[$0>>2]|0;\n $106 = ($105|0)>(1);\n L33: do {\n  if ($106) {\n   $107 = ((($0)) + 20|0);\n   $108 = ((($0)) + 28|0);\n   $109 = HEAP32[$107>>2]|0;\n   $110 = HEAP32[$109>>2]|0;\n   $111 = $104 >> 1;\n   $112 = (($110) - ($111))|0;\n   $113 = HEAP32[$108>>2]|0;\n   $114 = (($112) - ($113))|0;\n   $115 = HEAP32[$10>>2]|0;\n   $116 = ((($115)) + 32|0);\n   $$06992$i = $114;$$093$i = 0;$122 = 1;$125 = $110;\n   while(1) {\n    $119 = (($9) + ($$06992$i<<2)|0);\n    $120 = +HEAPF32[$119>>2];\n    $121 = (($109) + ($122<<2)|0);\n    $123 = HEAP32[$121>>2]|0;\n    $124 = (($123) + ($125))|0;\n    $126 = $124 >> 1;\n    $127 = (($126) - ($113))|0;\n    $128 = +HEAPF32[$116>>2];\n    $129 = $120 > $128;\n    $$068$ph$i = $129 ? $128 : $120;\n    $130 = ($$06992$i|0)<($127|0);\n    L37: do {\n     if ($130) {\n      $$068$ph7283$i = $$068$ph$i;$$in$i = $$06992$i;\n      while(1) {\n       $131 = (($$in$i) + 1)|0;\n       $132 = $$068$ph7283$i == -9999.0;\n       L40: do {\n        if ($132) {\n         $133 = (($9) + ($131<<2)|0);\n         $134 = +HEAPF32[$133>>2];\n         $$lcssa$i = $134;$$lcssa74$i = $131;\n        } else {\n         $136 = $131;\n         while(1) {\n          $135 = (($9) + ($136<<2)|0);\n          $137 = +HEAPF32[$135>>2];\n          $138 = $137 > -9999.0;\n          $139 = $137 < $$068$ph7283$i;\n          $or$cond$i = $138 & $139;\n          if ($or$cond$i) {\n           $$lcssa$i = $137;$$lcssa74$i = $136;\n           break L40;\n          }\n          $140 = (($136) + 1)|0;\n          $141 = ($136|0)<($127|0);\n          if ($141) {\n           $136 = $140;\n          } else {\n           $$068$ph72$lcssa$i = $$068$ph7283$i;$$170$lcssa$i = $136;\n           break L37;\n          }\n         }\n        }\n       } while(0);\n       $142 = ($$lcssa74$i|0)<($127|0);\n       if ($142) {\n        $$068$ph7283$i = $$lcssa$i;$$in$i = $$lcssa74$i;\n       } else {\n        $$068$ph72$lcssa$i = $$lcssa$i;$$170$lcssa$i = $$lcssa74$i;\n        break;\n       }\n      }\n     } else {\n      $$068$ph72$lcssa$i = $$068$ph$i;$$170$lcssa$i = $$06992$i;\n     }\n    } while(0);\n    $143 = (($$170$lcssa$i) + ($113))|0;\n    $144 = ($$093$i|0)>=($105|0);\n    $145 = ($125|0)>($143|0);\n    $or$cond = $144 | $145;\n    L47: do {\n     if ($or$cond) {\n      $$1$lcssa$i = $$093$i;\n     } else {\n      $$186$i51 = $$093$i;\n      while(1) {\n       $146 = (($2) + ($$186$i51<<2)|0);\n       $147 = +HEAPF32[$146>>2];\n       $148 = $147 < $$068$ph72$lcssa$i;\n       if ($148) {\n        HEAPF32[$146>>2] = $$068$ph72$lcssa$i;\n       }\n       $149 = (($$186$i51) + 1)|0;\n       $150 = ($149|0)<($105|0);\n       if (!($150)) {\n        $$1$lcssa$i = $149;\n        break L47;\n       }\n       $$phi$trans$insert105$i = (($109) + ($149<<2)|0);\n       $$pre106$i = HEAP32[$$phi$trans$insert105$i>>2]|0;\n       $151 = ($$pre106$i|0)>($143|0);\n       if ($151) {\n        $$1$lcssa$i = $149;\n        break;\n       } else {\n        $$186$i51 = $149;\n       }\n      }\n     }\n    } while(0);\n    $117 = (($$1$lcssa$i) + 1)|0;\n    $118 = ($117|0)<($105|0);\n    if (!($118)) {\n     $$0$lcssa$i = $$1$lcssa$i;\n     break L33;\n    }\n    $$phi$trans$insert$i = (($109) + ($$1$lcssa$i<<2)|0);\n    $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;\n    $$06992$i = $$170$lcssa$i;$$093$i = $$1$lcssa$i;$122 = $117;$125 = $$pre$i;\n   }\n  } else {\n   $$0$lcssa$i = 0;\n  }\n } while(0);\n $152 = HEAP32[$6>>2]|0;\n $153 = (($152) + -1)|0;\n $154 = (($9) + ($153<<2)|0);\n $155 = +HEAPF32[$154>>2];\n $156 = ($$0$lcssa$i|0)<($105|0);\n if ($156) {\n  $$277$i = $$0$lcssa$i;\n } else {\n  STACKTOP = sp;return;\n }\n while(1) {\n  $157 = (($2) + ($$277$i<<2)|0);\n  $158 = +HEAPF32[$157>>2];\n  $159 = $158 < $155;\n  if ($159) {\n   HEAPF32[$157>>2] = $155;\n  }\n  $160 = (($$277$i) + 1)|0;\n  $exitcond = ($160|0)==($105|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$277$i = $160;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _seed_chase($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$0 = 0, $$0 = 0, $$07892 = 0, $$08086 = 0, $$08291 = 0, $$17987 = 0, $$181$lcssa = 0, $$18185 = 0, $$183 = 0, $$3 = 0, $$3$in = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$sink1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;\n var $16 = 0, $17 = 0, $18 = 0.0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond97 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = $2 << 2;\n $$alloca_mul = $3;\n $4 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $$alloca_mul1 = $3;\n $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;\n $6 = ($2|0)>(0);\n if ($6) {\n  $$07892 = 0;$$08291 = 0;\n } else {\n  STACKTOP = sp;return;\n }\n while(1) {\n  $9 = ($$08291|0)<(2);\n  if ($9) {\n   $12 = (($4) + ($$08291<<2)|0);\n   HEAP32[$12>>2] = $$07892;\n   $13 = (($0) + ($$07892<<2)|0);\n   $14 = HEAP32[$13>>2]|0;\n   $15 = (($5) + ($$08291<<2)|0);\n   HEAP32[$15>>2] = $14;\n   $$3$in = $$08291;\n  } else {\n   $10 = (($0) + ($$07892<<2)|0);\n   $11 = +HEAPF32[$10>>2];\n   $$183 = $$08291;\n   while(1) {\n    $16 = (($$183) + -1)|0;\n    $17 = (($5) + ($16<<2)|0);\n    $18 = +HEAPF32[$17>>2];\n    $19 = $11 < $18;\n    if ($19) {\n     break;\n    }\n    $20 = (($4) + ($16<<2)|0);\n    $21 = HEAP32[$20>>2]|0;\n    $22 = (($21) + ($1))|0;\n    $23 = ($$07892|0)<($22|0);\n    $24 = ($$183|0)>(1);\n    $or$cond = $24 & $23;\n    if (!($or$cond)) {\n     break;\n    }\n    $25 = (($$183) + -2)|0;\n    $26 = (($5) + ($25<<2)|0);\n    $27 = +HEAPF32[$26>>2];\n    $28 = !($18 <= $27);\n    if ($28) {\n     break;\n    }\n    $29 = (($4) + ($25<<2)|0);\n    $30 = HEAP32[$29>>2]|0;\n    $31 = (($30) + ($1))|0;\n    $32 = ($$07892|0)<($31|0);\n    if ($32) {\n     $$183 = $16;\n    } else {\n     break;\n    }\n   }\n   $33 = (($4) + ($$183<<2)|0);\n   HEAP32[$33>>2] = $$07892;\n   $$sink1 = (($5) + ($$183<<2)|0);\n   HEAPF32[$$sink1>>2] = $11;\n   $$3$in = $$183;\n  }\n  $$3 = (($$3$in) + 1)|0;\n  $34 = (($$07892) + 1)|0;\n  $exitcond97 = ($34|0)==($2|0);\n  if ($exitcond97) {\n   break;\n  } else {\n   $$07892 = $34;$$08291 = $$3;\n  }\n }\n $7 = ($$3$in|0)>(-1);\n if (!($7)) {\n  STACKTOP = sp;return;\n }\n $8 = (($1) + 1)|0;\n $$08086 = 0;$$17987 = 0;\n while(1) {\n  $35 = ($$17987|0)<($$3$in|0);\n  if ($35) {\n   $36 = (($$17987) + 1)|0;\n   $37 = (($5) + ($36<<2)|0);\n   $38 = +HEAPF32[$37>>2];\n   $39 = (($5) + ($$17987<<2)|0);\n   $40 = +HEAPF32[$39>>2];\n   $41 = $38 > $40;\n   if ($41) {\n    $42 = (($4) + ($36<<2)|0);\n    $43 = HEAP32[$42>>2]|0;\n    $$0 = $43;\n   } else {\n    label = 16;\n   }\n  } else {\n   label = 16;\n  }\n  if ((label|0) == 16) {\n   label = 0;\n   $44 = (($4) + ($$17987<<2)|0);\n   $45 = HEAP32[$44>>2]|0;\n   $46 = (($8) + ($45))|0;\n   $$0 = $46;\n  }\n  $47 = ($$0|0)>($2|0);\n  $$$0 = $47 ? $2 : $$0;\n  $48 = ($$08086|0)<($$$0|0);\n  if ($48) {\n   $49 = (($5) + ($$17987<<2)|0);\n   $50 = HEAP32[$49>>2]|0;\n   $$18185 = $$08086;\n   while(1) {\n    $51 = (($0) + ($$18185<<2)|0);\n    HEAP32[$51>>2] = $50;\n    $52 = (($$18185) + 1)|0;\n    $53 = ($52|0)<($$$0|0);\n    if ($53) {\n     $$18185 = $52;\n    } else {\n     $$181$lcssa = $$$0;\n     break;\n    }\n   }\n  } else {\n   $$181$lcssa = $$08086;\n  }\n  $54 = (($$17987) + 1)|0;\n  $exitcond = ($54|0)==($$3|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$08086 = $$181$lcssa;$$17987 = $54;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction __vp_offset_and_mix($0,$1,$2,$3,$4,$5,$6) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n var $$$0 = 0.0, $$$0$us = 0.0, $$0 = 0.0, $$0$us = 0.0, $$05153 = 0, $$05153$us = 0, $$052$us = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0.0;\n var $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0;\n var $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $60 = 0, $61 = 0.0, $62 = 0.0;\n var $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond55 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $7 = HEAP32[$0>>2]|0;\n $8 = ((($0)) + 4|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = (((($9)) + 12|0) + ($3<<2)|0);\n $11 = +HEAPF32[$10>>2];\n $12 = ($7|0)>(0);\n if (!($12)) {\n  return;\n }\n $13 = ((($0)) + 48|0);\n $14 = +HEAPF32[$13>>2];\n $15 = ((($0)) + 12|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = (($16) + ($3<<2)|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ((($9)) + 108|0);\n $20 = ($3|0)==(1);\n $21 = $14;\n $22 = $21 * 0.0050000000000000001;\n $23 = $21 * 2.9999999999999997E-4;\n if ($20) {\n  $$05153$us = 0;\n } else {\n  $$05153 = 0;\n  while(1) {\n   $53 = (($1) + ($$05153<<2)|0);\n   $54 = +HEAPF32[$53>>2];\n   $55 = (($18) + ($$05153<<2)|0);\n   $56 = +HEAPF32[$55>>2];\n   $57 = $56 + $54;\n   $58 = +HEAPF32[$19>>2];\n   $59 = $57 > $58;\n   $$0 = $59 ? $58 : $57;\n   $60 = (($2) + ($$05153<<2)|0);\n   $61 = +HEAPF32[$60>>2];\n   $62 = $61 + $11;\n   $63 = $$0 < $62;\n   $$$0 = $63 ? $62 : $$0;\n   $64 = (($4) + ($$05153<<2)|0);\n   HEAPF32[$64>>2] = $$$0;\n   $65 = (($$05153) + 1)|0;\n   $exitcond55 = ($65|0)==($7|0);\n   if ($exitcond55) {\n    break;\n   } else {\n    $$05153 = $65;\n   }\n  }\n  return;\n }\n while(1) {\n  $24 = (($1) + ($$05153$us<<2)|0);\n  $25 = +HEAPF32[$24>>2];\n  $26 = (($18) + ($$05153$us<<2)|0);\n  $27 = +HEAPF32[$26>>2];\n  $28 = $27 + $25;\n  $29 = +HEAPF32[$19>>2];\n  $30 = $28 > $29;\n  $$0$us = $30 ? $29 : $28;\n  $31 = (($2) + ($$05153$us<<2)|0);\n  $32 = +HEAPF32[$31>>2];\n  $33 = $32 + $11;\n  $34 = $$0$us < $33;\n  $$$0$us = $34 ? $33 : $$0$us;\n  $35 = (($4) + ($$05153$us<<2)|0);\n  HEAPF32[$35>>2] = $$$0$us;\n  $36 = (($6) + ($$05153$us<<2)|0);\n  $37 = +HEAPF32[$36>>2];\n  $38 = $$0$us - $37;\n  $39 = $38 > -17.200000762939453;\n  $40 = $38 + 17.200000762939453;\n  $41 = $40;\n  if ($39) {\n   $45 = $22 * $41;\n   $46 = 1.0 - $45;\n   $47 = $46;\n   $48 = $47 < 0.0;\n   if ($48) {\n    $$052$us = 9.9999997473787516E-5;\n   } else {\n    $$052$us = $47;\n   }\n  } else {\n   $42 = $23 * $41;\n   $43 = 1.0 - $42;\n   $44 = $43;\n   $$052$us = $44;\n  }\n  $49 = (($5) + ($$05153$us<<2)|0);\n  $50 = +HEAPF32[$49>>2];\n  $51 = $50 * $$052$us;\n  HEAPF32[$49>>2] = $51;\n  $52 = (($$05153$us) + 1)|0;\n  $exitcond = ($52|0)==($7|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$05153$us = $52;\n  }\n }\n return;\n}\nfunction __vp_ampmax_decay($0,$1) {\n $0 = +$0;\n $1 = $1|0;\n var $$0 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($1)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($3)) + 28|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($1)) + 40|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = (($5) + ($7<<2)|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = (($9|0) / 2)&-1;\n $11 = (+($10|0));\n $12 = ((($3)) + 8|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (+($13|0));\n $15 = $11 / $14;\n $16 = ((($5)) + 2936|0);\n $17 = +HEAPF32[$16>>2];\n $18 = $15 * $17;\n $19 = $18 + $0;\n $20 = $19 < -9999.0;\n $$0 = $20 ? -9999.0 : $19;\n return (+$$0);\n}\nfunction __vp_couple_quantize_normalize($0,$1,$2,$3,$4,$5,$6,$7,$8) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n $8 = $8|0;\n var $$ = 0, $$020$i = 0, $$0409$in = 0.0, $$0409$in$in = 0, $$0410451 = 0, $$0411439 = 0, $$0415462 = 0, $$1412443 = 0, $$2413448 = 0, $$2465 = 0, $$3414456 = 0, $$3437 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul11 = 0, $$alloca_mul13 = 0, $$alloca_mul15 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$alloca_mul7 = 0;\n var $$alloca_mul9 = 0, $$idx$val = 0, $$idx427$val = 0, $$pre = 0, $$pre473 = 0, $$pre474 = 0, $$pre475 = 0, $$pre476 = 0, $$pre477 = 0, $$pre478 = 0, $$sink$i = 0, $$sink2 = 0, $$sink3 = 0, $$sink4 = 0.0, $$v = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0;\n var $104 = 0, $105 = 0.0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0;\n var $122 = 0.0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;\n var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;\n var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;\n var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0.0, $182 = 0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0.0, $192 = 0.0, $193 = 0, $194 = 0;\n var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;\n var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0.0, $221 = 0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0.0, $230 = 0;\n var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;\n var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond472 = 0, $exitcond472488 = 0, $fabsf = 0.0, $fabsf$i = 0.0, $fabsf419 = 0.0, $fabsf420 = 0.0, $fabsf421 = 0.0, $fabsf422 = 0.0, $ispos = 0, $ispos423 = 0, $ispos425 = 0, $neg = 0, $neg424 = 0, $neg426 = 0, $not$$i = 0, $stereo_threshholds_limited$stereo_threshholds = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $9 = HEAP32[$2>>2]|0;\n $10 = ((($2)) + 4|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($11)) + 500|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ($13|0)==(0);\n if ($14) {\n  $35 = 16;\n } else {\n  $15 = ((($11)) + 508|0);\n  $16 = HEAP32[$15>>2]|0;\n  $35 = $16;\n }\n $17 = HEAP32[$11>>2]|0;\n $18 = ((((($1)) + 132|0) + (($17*60)|0)|0) + ($0<<2)|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = (((($1)) + 252|0) + ($0<<2)|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = (8 + ($21<<3)|0);\n $23 = +HEAPF64[$22>>3];\n $24 = (((($1)) + 312|0) + ($0<<2)|0);\n $25 = HEAP32[$24>>2]|0;\n $26 = $8 << 2;\n $$alloca_mul = $26;\n $27 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $$alloca_mul1 = $26;\n $28 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;\n $$alloca_mul3 = $26;\n $29 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;\n $$alloca_mul5 = $26;\n $30 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;\n $$alloca_mul7 = $26;\n $31 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;\n $32 = ((($3)) + 1156|0);\n $33 = ($9|0)>(1000);\n $stereo_threshholds_limited$stereo_threshholds = $33 ? 80 : 8;\n $$0409$in$in = (($stereo_threshholds_limited$stereo_threshholds) + ($25<<3)|0);\n $$0409$in = +HEAPF64[$$0409$in$in>>3];\n $34 = Math_imul($26, $35)|0;\n $$alloca_mul9 = $34;\n $36 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul9)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul9)|0)+15)&-16)|0);;\n HEAP32[$27>>2] = $36;\n $$alloca_mul11 = $34;\n $37 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul11)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul11)|0)+15)&-16)|0);;\n HEAP32[$28>>2] = $37;\n $$alloca_mul13 = $34;\n $38 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul13)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul13)|0)+15)&-16)|0);;\n HEAP32[$29>>2] = $38;\n $$alloca_mul15 = $34;\n $39 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul15)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul15)|0)+15)&-16)|0);;\n HEAP32[$30>>2] = $39;\n $40 = ($8|0)>(1);\n if ($40) {\n  $41 = (($36) + ($35<<2)|0);\n  $42 = ((($27)) + 4|0);\n  HEAP32[$42>>2] = $41;\n  $43 = (($37) + ($35<<2)|0);\n  $44 = ((($28)) + 4|0);\n  HEAP32[$44>>2] = $43;\n  $45 = (($38) + ($35<<2)|0);\n  $46 = ((($29)) + 4|0);\n  HEAP32[$46>>2] = $45;\n  $47 = (($39) + ($35<<2)|0);\n  $48 = ((($30)) + 4|0);\n  HEAP32[$48>>2] = $47;\n  $exitcond472488 = ($8|0)==(2);\n  if (!($exitcond472488)) {\n   $52 = 2;\n   while(1) {\n    $$pre = HEAP32[$27>>2]|0;\n    $$pre473 = HEAP32[$28>>2]|0;\n    $$pre474 = HEAP32[$29>>2]|0;\n    $$pre475 = HEAP32[$30>>2]|0;\n    $51 = Math_imul($52, $35)|0;\n    $53 = (($$pre) + ($51<<2)|0);\n    $54 = (($27) + ($52<<2)|0);\n    HEAP32[$54>>2] = $53;\n    $55 = (($$pre473) + ($51<<2)|0);\n    $56 = (($28) + ($52<<2)|0);\n    HEAP32[$56>>2] = $55;\n    $57 = (($$pre474) + ($51<<2)|0);\n    $58 = (($29) + ($52<<2)|0);\n    HEAP32[$58>>2] = $57;\n    $59 = (($$pre475) + ($51<<2)|0);\n    $60 = (($30) + ($52<<2)|0);\n    HEAP32[$60>>2] = $59;\n    $61 = (($52) + 1)|0;\n    $exitcond472 = ($61|0)==($8|0);\n    if ($exitcond472) {\n     break;\n    } else {\n     $52 = $61;\n    }\n   }\n  }\n }\n $49 = HEAP32[$32>>2]|0;\n $50 = ($9|0)>(0);\n if ($50) {\n  $62 = ($8|0)>(0);\n  $$pre476 = HEAP32[$30>>2]|0;\n  $$2465 = 0;\n  while(1) {\n   $65 = (($9) - ($$2465))|0;\n   $66 = ($35|0)>($65|0);\n   $$ = $66 ? $65 : $35;\n   _memcpy(($31|0),($6|0),($26|0))|0;\n   _memset(($$pre476|0),0,($34|0))|0;\n   if ($62) {\n    $67 = ($$|0)>(0);\n    $68 = (($19) - ($$2465))|0;\n    $$0410451 = 0;\n    while(1) {\n     $74 = (($5) + ($$0410451<<2)|0);\n     $75 = HEAP32[$74>>2]|0;\n     $76 = (($75) + ($$2465<<2)|0);\n     $77 = (($31) + ($$0410451<<2)|0);\n     $78 = HEAP32[$77>>2]|0;\n     $79 = ($78|0)==(0);\n     if ($79) {\n      if ($67) {\n       $82 = (($29) + ($$0410451<<2)|0);\n       $83 = HEAP32[$82>>2]|0;\n       $84 = (($27) + ($$0410451<<2)|0);\n       $85 = HEAP32[$84>>2]|0;\n       $86 = (($28) + ($$0410451<<2)|0);\n       $87 = HEAP32[$86>>2]|0;\n       $88 = (($30) + ($$0410451<<2)|0);\n       $89 = HEAP32[$88>>2]|0;\n       $$2413448 = 0;\n       while(1) {\n        $136 = (($83) + ($$2413448<<2)|0);\n        HEAPF32[$136>>2] = 1.000000013351432E-10;\n        $137 = (($85) + ($$2413448<<2)|0);\n        HEAPF32[$137>>2] = 0.0;\n        $138 = (($87) + ($$2413448<<2)|0);\n        HEAPF32[$138>>2] = 0.0;\n        $139 = (($89) + ($$2413448<<2)|0);\n        HEAP32[$139>>2] = 0;\n        $140 = (($76) + ($$2413448<<2)|0);\n        HEAP32[$140>>2] = 0;\n        $141 = (($$2413448) + 1)|0;\n        $142 = ($141|0)<($$|0);\n        if ($142) {\n         $$2413448 = $141;\n        } else {\n         break;\n        }\n       }\n      }\n     } else {\n      $80 = (($29) + ($$0410451<<2)|0);\n      $81 = HEAP32[$80>>2]|0;\n      if ($67) {\n       $$0411439 = 0;\n       while(1) {\n        $90 = (($76) + ($$0411439<<2)|0);\n        $91 = HEAP32[$90>>2]|0;\n        $92 = (26916 + ($91<<2)|0);\n        $93 = HEAP32[$92>>2]|0;\n        $94 = (($81) + ($$0411439<<2)|0);\n        HEAP32[$94>>2] = $93;\n        $95 = (($$0411439) + 1)|0;\n        $96 = ($95|0)<($$|0);\n        if ($96) {\n         $$0411439 = $95;\n        } else {\n         break;\n        }\n       }\n       $97 = (($4) + ($$0410451<<2)|0);\n       $98 = HEAP32[$97>>2]|0;\n       $99 = (($98) + ($$2465<<2)|0);\n       $100 = (($30) + ($$0410451<<2)|0);\n       $101 = HEAP32[$100>>2]|0;\n       if ($67) {\n        $$020$i = 0;\n        while(1) {\n         $102 = ($$020$i|0)>=($68|0);\n         $$v = $102 ? $$0409$in : $23;\n         $103 = $$v;\n         $104 = (($99) + ($$020$i<<2)|0);\n         $105 = +HEAPF32[$104>>2];\n         $fabsf$i = (+Math_abs((+$105)));\n         $106 = (($81) + ($$020$i<<2)|0);\n         $107 = +HEAPF32[$106>>2];\n         $108 = $fabsf$i / $107;\n         $109 = (($101) + ($$020$i<<2)|0);\n         $not$$i = !($108 < $103);\n         $$sink$i = $not$$i&1;\n         HEAP32[$109>>2] = $$sink$i;\n         $110 = (($$020$i) + 1)|0;\n         $exitcond$i = ($110|0)==($$|0);\n         if ($exitcond$i) {\n          break;\n         } else {\n          $$020$i = $110;\n         }\n        }\n        $115 = (($27) + ($$0410451<<2)|0);\n        $116 = HEAP32[$115>>2]|0;\n        $117 = (($28) + ($$0410451<<2)|0);\n        $118 = HEAP32[$117>>2]|0;\n        if ($67) {\n         $$1412443 = 0;\n         while(1) {\n          $119 = (($$1412443) + ($$2465))|0;\n          $120 = (($98) + ($119<<2)|0);\n          $121 = +HEAPF32[$120>>2];\n          $122 = $121 * $121;\n          $123 = (($116) + ($$1412443<<2)|0);\n          HEAPF32[$123>>2] = $122;\n          $124 = (($118) + ($$1412443<<2)|0);\n          HEAPF32[$124>>2] = $122;\n          $125 = +HEAPF32[$120>>2];\n          $126 = $125 < 0.0;\n          if ($126) {\n           $127 = +HEAPF32[$123>>2];\n           $128 = -$127;\n           HEAPF32[$123>>2] = $128;\n          }\n          $129 = (($81) + ($$1412443<<2)|0);\n          $130 = +HEAPF32[$129>>2];\n          $131 = $130 * $130;\n          HEAPF32[$129>>2] = $131;\n          $132 = (($$1412443) + 1)|0;\n          $133 = ($132|0)<($$|0);\n          if ($133) {\n           $$1412443 = $132;\n          } else {\n           $134 = $116;$135 = $118;\n           break;\n          }\n         }\n        } else {\n         $134 = $116;$135 = $118;\n        }\n       } else {\n        label = 20;\n       }\n      } else {\n       label = 20;\n      }\n      if ((label|0) == 20) {\n       label = 0;\n       $111 = (($27) + ($$0410451<<2)|0);\n       $112 = HEAP32[$111>>2]|0;\n       $113 = (($28) + ($$0410451<<2)|0);\n       $114 = HEAP32[$113>>2]|0;\n       $134 = $112;$135 = $114;\n      }\n      $$idx$val = HEAP32[$10>>2]|0;\n      (+_noise_normalize($$idx$val,$19,$134,$135,$81,0,$$2465,$$,$76));\n     }\n     $143 = (($$0410451) + 1)|0;\n     $exitcond = ($143|0)==($8|0);\n     if ($exitcond) {\n      break;\n     } else {\n      $$0410451 = $143;\n     }\n    }\n   }\n   $69 = HEAP32[$32>>2]|0;\n   $70 = ($69|0)>(0);\n   if ($70) {\n    $71 = ($$|0)>(0);\n    $72 = (($7) - ($$2465))|0;\n    $73 = (($19) - ($$2465))|0;\n    $$0415462 = 0;$254 = $69;\n    while(1) {\n     $144 = (((($3)) + 1160|0) + ($$0415462<<2)|0);\n     $145 = HEAP32[$144>>2]|0;\n     $146 = (((($3)) + 2184|0) + ($$0415462<<2)|0);\n     $147 = HEAP32[$146>>2]|0;\n     $148 = (($5) + ($145<<2)|0);\n     $149 = HEAP32[$148>>2]|0;\n     $150 = (($149) + ($$2465<<2)|0);\n     $151 = (($5) + ($147<<2)|0);\n     $152 = HEAP32[$151>>2]|0;\n     $153 = (($152) + ($$2465<<2)|0);\n     $154 = (($27) + ($145<<2)|0);\n     $155 = HEAP32[$154>>2]|0;\n     $156 = (($27) + ($147<<2)|0);\n     $157 = HEAP32[$156>>2]|0;\n     $158 = (($28) + ($145<<2)|0);\n     $159 = HEAP32[$158>>2]|0;\n     $160 = (($28) + ($147<<2)|0);\n     $161 = HEAP32[$160>>2]|0;\n     $162 = (($29) + ($145<<2)|0);\n     $163 = HEAP32[$162>>2]|0;\n     $164 = (($29) + ($147<<2)|0);\n     $165 = HEAP32[$164>>2]|0;\n     $166 = (($30) + ($145<<2)|0);\n     $167 = HEAP32[$166>>2]|0;\n     $168 = (($30) + ($147<<2)|0);\n     $169 = HEAP32[$168>>2]|0;\n     $170 = (($31) + ($145<<2)|0);\n     $171 = HEAP32[$170>>2]|0;\n     $172 = ($171|0)==(0);\n     $173 = (($31) + ($147<<2)|0);\n     if ($172) {\n      $174 = HEAP32[$173>>2]|0;\n      $175 = ($174|0)==(0);\n      if ($175) {\n       $234 = $254;\n      } else {\n       label = 30;\n      }\n     } else {\n      label = 30;\n     }\n     if ((label|0) == 30) {\n      label = 0;\n      HEAP32[$173>>2] = 1;\n      HEAP32[$170>>2] = 1;\n      if ($71) {\n       $$3414456 = 0;\n       while(1) {\n        $176 = ($$3414456|0)<($72|0);\n        do {\n         if ($176) {\n          $177 = (($167) + ($$3414456<<2)|0);\n          $178 = HEAP32[$177>>2]|0;\n          $179 = ($178|0)==(0);\n          $180 = (($157) + ($$3414456<<2)|0);\n          $181 = +HEAPF32[$180>>2];\n          $182 = (($155) + ($$3414456<<2)|0);\n          $183 = +HEAPF32[$182>>2];\n          $184 = (($169) + ($$3414456<<2)|0);\n          if ($179) {\n           $185 = HEAP32[$184>>2]|0;\n           $186 = ($185|0)==(0);\n           if ($186) {\n            $216 = ($$3414456|0)<($73|0);\n            $217 = $183 + $181;\n            if ($216) {\n             HEAPF32[$182>>2] = $217;\n             $fabsf420 = (+Math_abs((+$217)));\n             $218 = (($159) + ($$3414456<<2)|0);\n             HEAPF32[$218>>2] = $fabsf420;\n            } else {\n             $219 = $217 < 0.0;\n             $fabsf = (+Math_abs((+$183)));\n             $fabsf419 = (+Math_abs((+$181)));\n             $220 = $fabsf419 + $fabsf;\n             $221 = (($159) + ($$3414456<<2)|0);\n             HEAPF32[$221>>2] = $220;\n             $222 = -$220;\n             $$sink4 = $219 ? $222 : $220;\n             HEAPF32[$182>>2] = $$sink4;\n            }\n            $223 = (($161) + ($$3414456<<2)|0);\n            HEAPF32[$223>>2] = 0.0;\n            HEAPF32[$180>>2] = 0.0;\n            HEAP32[$184>>2] = 1;\n            $224 = (($153) + ($$3414456<<2)|0);\n            HEAP32[$224>>2] = 0;\n            break;\n           }\n          }\n          $fabsf421 = (+Math_abs((+$183)));\n          $fabsf422 = (+Math_abs((+$181)));\n          $187 = $fabsf422 + $fabsf421;\n          HEAPF32[$182>>2] = $187;\n          $188 = (($159) + ($$3414456<<2)|0);\n          $189 = +HEAPF32[$188>>2];\n          $190 = (($161) + ($$3414456<<2)|0);\n          $191 = +HEAPF32[$190>>2];\n          $192 = $191 + $189;\n          HEAPF32[$188>>2] = $192;\n          HEAP32[$184>>2] = 1;\n          HEAP32[$177>>2] = 1;\n          $193 = (($150) + ($$3414456<<2)|0);\n          $194 = HEAP32[$193>>2]|0;\n          $195 = (($153) + ($$3414456<<2)|0);\n          $196 = HEAP32[$195>>2]|0;\n          $ispos = ($194|0)>(-1);\n          $neg = (0 - ($194))|0;\n          $197 = $ispos ? $194 : $neg;\n          $ispos423 = ($196|0)>(-1);\n          $neg424 = (0 - ($196))|0;\n          $198 = $ispos423 ? $196 : $neg424;\n          $199 = ($197|0)>($198|0);\n          if ($199) {\n           $200 = ($194|0)>(0);\n           $201 = (($194) - ($196))|0;\n           $202 = (($196) - ($194))|0;\n           $203 = $200 ? $201 : $202;\n           $$sink2 = $203;$$sink3 = $195;\n          } else {\n           $204 = ($196|0)>(0);\n           $205 = (($194) - ($196))|0;\n           $206 = (($196) - ($194))|0;\n           $207 = $204 ? $205 : $206;\n           HEAP32[$195>>2] = $207;\n           $$sink2 = $196;$$sink3 = $193;\n          }\n          HEAP32[$$sink3>>2] = $$sink2;\n          $208 = HEAP32[$195>>2]|0;\n          $209 = HEAP32[$193>>2]|0;\n          $ispos425 = ($209|0)>(-1);\n          $neg426 = (0 - ($209))|0;\n          $210 = $ispos425 ? $209 : $neg426;\n          $211 = $210 << 1;\n          $212 = ($208|0)<($211|0);\n          if (!($212)) {\n           $213 = (0 - ($208))|0;\n           HEAP32[$195>>2] = $213;\n           $214 = HEAP32[$193>>2]|0;\n           $215 = (0 - ($214))|0;\n           HEAP32[$193>>2] = $215;\n          }\n         }\n        } while(0);\n        $225 = (($163) + ($$3414456<<2)|0);\n        $226 = +HEAPF32[$225>>2];\n        $227 = (($165) + ($$3414456<<2)|0);\n        $228 = +HEAPF32[$227>>2];\n        $229 = $228 + $226;\n        HEAPF32[$227>>2] = $229;\n        HEAPF32[$225>>2] = $229;\n        $230 = (($$3414456) + 1)|0;\n        $231 = ($230|0)<($$|0);\n        if ($231) {\n         $$3414456 = $230;\n        } else {\n         break;\n        }\n       }\n      }\n      $$idx427$val = HEAP32[$10>>2]|0;\n      (+_noise_normalize($$idx427$val,$19,$155,$159,$163,$167,$$2465,$$,$150));\n      $$pre477 = HEAP32[$32>>2]|0;\n      $234 = $$pre477;\n     }\n     $232 = (($$0415462) + 1)|0;\n     $233 = ($232|0)<($234|0);\n     if ($233) {\n      $$0415462 = $232;$254 = $234;\n     } else {\n      $253 = $234;\n      break;\n     }\n    }\n   } else {\n    $253 = $69;\n   }\n   $235 = (($$2465) + ($35))|0;\n   $236 = ($9|0)>($235|0);\n   if ($236) {\n    $$2465 = $235;\n   } else {\n    $63 = $253;\n    break;\n   }\n  }\n } else {\n  $63 = $49;\n }\n $64 = ($63|0)>(0);\n if ($64) {\n  $$3437 = 0;$252 = $63;\n } else {\n  STACKTOP = sp;return;\n }\n while(1) {\n  $237 = (((($3)) + 1160|0) + ($$3437<<2)|0);\n  $238 = HEAP32[$237>>2]|0;\n  $239 = (($6) + ($238<<2)|0);\n  $240 = HEAP32[$239>>2]|0;\n  $241 = ($240|0)==(0);\n  $242 = (((($3)) + 2184|0) + ($$3437<<2)|0);\n  if ($241) {\n   $243 = HEAP32[$242>>2]|0;\n   $244 = (($6) + ($243<<2)|0);\n   $245 = HEAP32[$244>>2]|0;\n   $246 = ($245|0)==(0);\n   if ($246) {\n    $251 = $252;\n   } else {\n    label = 49;\n   }\n  } else {\n   label = 49;\n  }\n  if ((label|0) == 49) {\n   label = 0;\n   HEAP32[$239>>2] = 1;\n   $247 = HEAP32[$242>>2]|0;\n   $248 = (($6) + ($247<<2)|0);\n   HEAP32[$248>>2] = 1;\n   $$pre478 = HEAP32[$32>>2]|0;\n   $251 = $$pre478;\n  }\n  $249 = (($$3437) + 1)|0;\n  $250 = ($249|0)<($251|0);\n  if ($250) {\n   $$3437 = $249;$252 = $251;\n  } else {\n   break;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _noise_normalize($$0$1$val,$0,$1,$2,$3,$4,$5,$6,$7) {\n $$0$1$val = $$0$1$val|0;\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$ = 0, $$0$lcssa = 0.0, $$0106$lcssa = 0, $$010610 = 0, $$010610$us = 0, $$0109$lcssa = 0, $$01093 = 0, $$01093$us = 0, $$06 = 0.0, $$06$us = 0.0, $$11074 = 0, $$11074$us = 0, $$2 = 0.0, $$2$us = 0.0, $$21081 = 0, $$2111 = 0, $$2111$us = 0, $$32 = 0.0, $$4 = 0.0, $$5 = 0.0;\n var $$alloca_mul = 0, $$sink = 0, $$sink$in = 0.0, $$sink$in$us = 0.0, $$sink$us = 0, $$sink1 = 0, $$sink1$us = 0, $$sink2 = 0, $$sink2$in = 0.0, $$sink2$in$us = 0.0, $$sink2$us = 0, $$sink20 = 0, $$sink3 = 0, $$sink3$us = 0, $$sink4 = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0;\n var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0, $116 = 0.0, $117 = 0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0, $13 = 0;\n var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0;\n var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0.0;\n var $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $70 = 0.0, $71 = 0, $72 = 0.0, $73 = 0.0;\n var $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0;\n var $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0.0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond18 = 0, $exitcond19 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $8 = $6 << 2;\n $$alloca_mul = $8;\n $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $10 = ((($$0$1$val)) + 500|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ($11|0)==(0);\n if ($12) {\n  $16 = $6;\n } else {\n  $13 = ((($$0$1$val)) + 504|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = (($14) - ($5))|0;\n  $16 = $15;\n }\n $17 = ($16|0)>($6|0);\n $$ = $17 ? $6 : $16;\n $18 = ($$|0)>(0);\n L4: do {\n  if ($18) {\n   $19 = ($4|0)==(0|0);\n   if ($19) {\n    $$010610$us = 0;\n    while(1) {\n     $20 = (($2) + ($$010610$us<<2)|0);\n     $21 = +HEAPF32[$20>>2];\n     $22 = (($3) + ($$010610$us<<2)|0);\n     $23 = +HEAPF32[$22>>2];\n     $24 = $21 / $23;\n     $25 = (($1) + ($$010610$us<<2)|0);\n     $26 = +HEAPF32[$25>>2];\n     $27 = $26 < 0.0;\n     $28 = $24;\n     $29 = (+Math_sqrt((+$28)));\n     $30 = (+_rint($29));\n     $31 = -$30;\n     $$sink$in$us = $27 ? $31 : $30;\n     $$sink$us = (~~(($$sink$in$us)));\n     $$sink1$us = (($7) + ($$010610$us<<2)|0);\n     HEAP32[$$sink1$us>>2] = $$sink$us;\n     $32 = (($$010610$us) + 1)|0;\n     $33 = ($32|0)<($$|0);\n     if ($33) {\n      $$010610$us = $32;\n     } else {\n      $$0106$lcssa = $$;\n      break L4;\n     }\n    }\n   } else {\n    $$010610 = 0;\n   }\n   while(1) {\n    $61 = (($4) + ($$010610<<2)|0);\n    $62 = HEAP32[$61>>2]|0;\n    $63 = ($62|0)==(0);\n    if ($63) {\n     $64 = (($2) + ($$010610<<2)|0);\n     $65 = +HEAPF32[$64>>2];\n     $66 = (($3) + ($$010610<<2)|0);\n     $67 = +HEAPF32[$66>>2];\n     $68 = $65 / $67;\n     $69 = (($1) + ($$010610<<2)|0);\n     $70 = +HEAPF32[$69>>2];\n     $71 = $70 < 0.0;\n     $72 = $68;\n     $73 = (+Math_sqrt((+$72)));\n     $74 = (+_rint($73));\n     $75 = -$74;\n     $$sink$in = $71 ? $75 : $74;\n     $$sink = (~~(($$sink$in)));\n     $$sink1 = (($7) + ($$010610<<2)|0);\n     HEAP32[$$sink1>>2] = $$sink;\n    }\n    $76 = (($$010610) + 1)|0;\n    $77 = ($76|0)<($$|0);\n    if ($77) {\n     $$010610 = $76;\n    } else {\n     $$0106$lcssa = $$;\n     break;\n    }\n   }\n  } else {\n   $$0106$lcssa = 0;\n  }\n } while(0);\n $34 = ($$0106$lcssa|0)<($6|0);\n if (!($34)) {\n  $$5 = 0.0;\n  STACKTOP = sp;return (+$$5);\n }\n $35 = ($4|0)==(0|0);\n $36 = (($0) - ($5))|0;\n if ($35) {\n  $$01093 = 0;$$06 = 0.0;$$11074 = $$0106$lcssa;\n  while(1) {\n   $78 = (($2) + ($$11074<<2)|0);\n   $79 = +HEAPF32[$78>>2];\n   $80 = (($3) + ($$11074<<2)|0);\n   $81 = +HEAPF32[$80>>2];\n   $82 = $79 / $81;\n   $83 = $82 < 0.25;\n   if ($83) {\n    $84 = $82 + $$06;\n    $85 = (($$01093) + 1)|0;\n    $86 = (($9) + ($$01093<<2)|0);\n    HEAP32[$86>>2] = $78;\n    $$2 = $84;$$2111 = $85;\n   } else {\n    $87 = (($1) + ($$11074<<2)|0);\n    $88 = +HEAPF32[$87>>2];\n    $89 = $88 < 0.0;\n    $90 = $82;\n    $91 = (+Math_sqrt((+$90)));\n    $92 = (+_rint($91));\n    $93 = -$92;\n    $$sink2$in = $89 ? $93 : $92;\n    $$sink2 = (~~(($$sink2$in)));\n    $$sink3 = (($7) + ($$11074<<2)|0);\n    HEAP32[$$sink3>>2] = $$sink2;\n    $94 = Math_imul($$sink2, $$sink2)|0;\n    $95 = (+($94|0));\n    $96 = $95 * $81;\n    HEAPF32[$78>>2] = $96;\n    $$2 = $$06;$$2111 = $$01093;\n   }\n   $97 = (($$11074) + 1)|0;\n   $exitcond18 = ($97|0)==($6|0);\n   if ($exitcond18) {\n    $$0$lcssa = $$2;$$0109$lcssa = $$2111;\n    break;\n   } else {\n    $$01093 = $$2111;$$06 = $$2;$$11074 = $97;\n   }\n  }\n } else {\n  $$01093$us = 0;$$06$us = 0.0;$$11074$us = $$0106$lcssa;\n  while(1) {\n   $37 = (($4) + ($$11074$us<<2)|0);\n   $38 = HEAP32[$37>>2]|0;\n   $39 = ($38|0)==(0);\n   do {\n    if ($39) {\n     $40 = (($2) + ($$11074$us<<2)|0);\n     $41 = +HEAPF32[$40>>2];\n     $42 = (($3) + ($$11074$us<<2)|0);\n     $43 = +HEAPF32[$42>>2];\n     $44 = $41 / $43;\n     $45 = !($44 < 0.25);\n     $46 = ($$11074$us|0)<($36|0);\n     $or$cond = $45 | $46;\n     if ($or$cond) {\n      $50 = (($1) + ($$11074$us<<2)|0);\n      $51 = +HEAPF32[$50>>2];\n      $52 = $51 < 0.0;\n      $53 = $44;\n      $54 = (+Math_sqrt((+$53)));\n      $55 = (+_rint($54));\n      $56 = -$55;\n      $$sink2$in$us = $52 ? $56 : $55;\n      $$sink2$us = (~~(($$sink2$in$us)));\n      $$sink3$us = (($7) + ($$11074$us<<2)|0);\n      HEAP32[$$sink3$us>>2] = $$sink2$us;\n      $57 = Math_imul($$sink2$us, $$sink2$us)|0;\n      $58 = (+($57|0));\n      $59 = $58 * $43;\n      HEAPF32[$40>>2] = $59;\n      $$2$us = $$06$us;$$2111$us = $$01093$us;\n      break;\n     } else {\n      $47 = $44 + $$06$us;\n      $48 = (($$01093$us) + 1)|0;\n      $49 = (($9) + ($$01093$us<<2)|0);\n      HEAP32[$49>>2] = $40;\n      $$2$us = $47;$$2111$us = $48;\n      break;\n     }\n    } else {\n     $$2$us = $$06$us;$$2111$us = $$01093$us;\n    }\n   } while(0);\n   $60 = (($$11074$us) + 1)|0;\n   $exitcond19 = ($60|0)==($6|0);\n   if ($exitcond19) {\n    $$0$lcssa = $$2$us;$$0109$lcssa = $$2111$us;\n    break;\n   } else {\n    $$01093$us = $$2111$us;$$06$us = $$2$us;$$11074$us = $60;\n   }\n  }\n }\n $98 = ($$0109$lcssa|0)==(0);\n if ($98) {\n  $$5 = $$0$lcssa;\n  STACKTOP = sp;return (+$$5);\n }\n _qsort($9,$$0109$lcssa,4,29);\n $99 = ($$0109$lcssa|0)>(0);\n if (!($99)) {\n  $$5 = $$0$lcssa;\n  STACKTOP = sp;return (+$$5);\n }\n $100 = $2;\n $101 = ((($$0$1$val)) + 512|0);\n $102 = +HEAPF64[$101>>3];\n $$21081 = 0;$$32 = $$0$lcssa;\n while(1) {\n  $103 = (($9) + ($$21081<<2)|0);\n  $104 = HEAP32[$103>>2]|0;\n  $105 = $104;\n  $106 = (($105) - ($100))|0;\n  $107 = $106 >> 2;\n  $108 = $$32;\n  $109 = !($108 >= $102);\n  if ($109) {\n   $$4 = $$32;$$sink20 = 0;$$sink4 = 0.0;\n  } else {\n   $110 = (($1) + ($107<<2)|0);\n   $111 = HEAP32[$110>>2]|0;\n   $112 = $111 & -2147483648;\n   $113 = $112 | 1065353216;\n   $114 = (HEAP32[tempDoublePtr>>2]=$113,+HEAPF32[tempDoublePtr>>2]);\n   $115 = (~~(($114)));\n   $116 = $$32 + -1.0;\n   $117 = (($3) + ($107<<2)|0);\n   $118 = +HEAPF32[$117>>2];\n   $$4 = $116;$$sink20 = $115;$$sink4 = $118;\n  }\n  $119 = (($7) + ($107<<2)|0);\n  HEAP32[$119>>2] = $$sink20;\n  HEAPF32[$104>>2] = $$sink4;\n  $120 = (($$21081) + 1)|0;\n  $exitcond = ($120|0)==($$0109$lcssa|0);\n  if ($exitcond) {\n   $$5 = $$4;\n   break;\n  } else {\n   $$21081 = $120;$$32 = $$4;\n  }\n }\n STACKTOP = sp;return (+$$5);\n}\nfunction _apsort($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$0>>2]|0;\n $3 = +HEAPF32[$2>>2];\n $4 = HEAP32[$1>>2]|0;\n $5 = +HEAPF32[$4>>2];\n $6 = $3 < $5;\n $7 = $6&1;\n $8 = $3 > $5;\n $9 = $8&1;\n $10 = (($7) - ($9))|0;\n return ($10|0);\n}\nfunction _res0_unpack($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$lcssa$i = 0, $$0117 = 0, $$067$i = 0, $$08$i = 0, $$087116 = 0, $$088 = 0, $$089125 = 0, $$093$lcssa132 = 0, $$093124 = 0, $$095 = 0, $$1121 = 0, $$196 = 0, $$2118 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_calloc(1,2840)|0);\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = (_oggpack_read($1,24)|0);\n HEAP32[$2>>2] = $5;\n $6 = (_oggpack_read($1,24)|0);\n $7 = ((($2)) + 4|0);\n HEAP32[$7>>2] = $6;\n $8 = (_oggpack_read($1,24)|0);\n $9 = (($8) + 1)|0;\n $10 = ((($2)) + 8|0);\n HEAP32[$10>>2] = $9;\n $11 = (_oggpack_read($1,6)|0);\n $12 = (($11) + 1)|0;\n $13 = ((($2)) + 12|0);\n HEAP32[$13>>2] = $12;\n $14 = (_oggpack_read($1,8)|0);\n $15 = ((($2)) + 20|0);\n HEAP32[$15>>2] = $14;\n $16 = ($14|0)<(0);\n L1: do {\n  if ($16) {\n   label = 25;\n  } else {\n   $17 = ($11|0)>(-1);\n   if ($17) {\n    $18 = ((($2)) + 24|0);\n    $$089125 = 0;$$093124 = 0;\n    while(1) {\n     $22 = (_oggpack_read($1,3)|0);\n     $23 = (_oggpack_read($1,1)|0);\n     $24 = ($23|0)<(0);\n     if ($24) {\n      label = 25;\n      break L1;\n     }\n     $25 = ($23|0)==(0);\n     if ($25) {\n      $$196 = $22;\n     } else {\n      $26 = (_oggpack_read($1,5)|0);\n      $27 = ($26|0)<(0);\n      $28 = $26 << 3;\n      $29 = $27 ? 0 : $28;\n      $$095 = $29 | $22;\n      $30 = $26 >> 31;\n      $31 = $30 & 2;\n      $cond = ($31|0)==(0);\n      if ($cond) {\n       $$196 = $$095;\n      } else {\n       label = 25;\n       break L1;\n      }\n     }\n     $32 = (($18) + ($$089125<<2)|0);\n     HEAP32[$32>>2] = $$196;\n     $33 = ($$196|0)==(0);\n     if ($33) {\n      $$0$lcssa$i = 0;\n     } else {\n      $$067$i = $$196;$$08$i = 0;\n      while(1) {\n       $34 = $$067$i & 1;\n       $35 = (($34) + ($$08$i))|0;\n       $36 = $$067$i >>> 1;\n       $37 = ($36|0)==(0);\n       if ($37) {\n        $$0$lcssa$i = $35;\n        break;\n       } else {\n        $$067$i = $36;$$08$i = $35;\n       }\n      }\n     }\n     $19 = (($$0$lcssa$i) + ($$093124))|0;\n     $38 = (($$089125) + 1)|0;\n     $39 = HEAP32[$13>>2]|0;\n     $40 = ($38|0)<($39|0);\n     if ($40) {\n      $$089125 = $38;$$093124 = $19;\n     } else {\n      break;\n     }\n    }\n    $20 = ($19|0)>(0);\n    if ($20) {\n     $21 = ((($2)) + 280|0);\n     $$1121 = 0;\n     while(1) {\n      $41 = (_oggpack_read($1,8)|0);\n      $42 = ($41|0)<(0);\n      if ($42) {\n       break L1;\n      }\n      $43 = (($21) + ($$1121<<2)|0);\n      HEAP32[$43>>2] = $41;\n      $44 = (($$1121) + 1)|0;\n      $45 = ($44|0)<($19|0);\n      if ($45) {\n       $$1121 = $44;\n      } else {\n       $$093$lcssa132 = $19;$74 = $20;\n       break;\n      }\n     }\n    } else {\n     $$093$lcssa132 = $19;$74 = 0;\n    }\n   } else {\n    $$093$lcssa132 = 0;$74 = 0;\n   }\n   $46 = HEAP32[$15>>2]|0;\n   $47 = ((($4)) + 24|0);\n   $48 = HEAP32[$47>>2]|0;\n   $49 = ($46|0)<($48|0);\n   if ($49) {\n    if ($74) {\n     $50 = ((($2)) + 280|0);\n     $$2118 = 0;\n     while(1) {\n      $53 = (($50) + ($$2118<<2)|0);\n      $54 = HEAP32[$53>>2]|0;\n      $55 = ($54|0)<($48|0);\n      if (!($55)) {\n       break L1;\n      }\n      $56 = (((($4)) + 1824|0) + ($54<<2)|0);\n      $57 = HEAP32[$56>>2]|0;\n      $58 = ((($57)) + 12|0);\n      $59 = HEAP32[$58>>2]|0;\n      $60 = ($59|0)==(0);\n      $51 = (($$2118) + 1)|0;\n      if ($60) {\n       break L1;\n      }\n      $52 = ($51|0)<($$093$lcssa132|0);\n      if ($52) {\n       $$2118 = $51;\n      } else {\n       break;\n      }\n     }\n    }\n    $61 = (((($4)) + 1824|0) + ($46<<2)|0);\n    $62 = HEAP32[$61>>2]|0;\n    $63 = ((($62)) + 4|0);\n    $64 = HEAP32[$63>>2]|0;\n    $65 = HEAP32[$62>>2]|0;\n    $66 = ($65|0)<(1);\n    if (!($66)) {\n     $67 = HEAP32[$13>>2]|0;\n     $$0117 = 1;$$087116 = $65;\n     while(1) {\n      $70 = Math_imul($67, $$0117)|0;\n      $71 = ($70|0)>($64|0);\n      if ($71) {\n       break L1;\n      }\n      $68 = (($$087116) + -1)|0;\n      $69 = ($$087116|0)>(1);\n      if ($69) {\n       $$0117 = $70;$$087116 = $68;\n      } else {\n       break;\n      }\n     }\n     $72 = ((($2)) + 16|0);\n     HEAP32[$72>>2] = $70;\n     $$088 = $2;\n     return ($$088|0);\n    }\n   }\n  }\n } while(0);\n if ((label|0) == 25) {\n  $73 = ($2|0)==(0|0);\n  if ($73) {\n   $$088 = 0;\n   return ($$088|0);\n  }\n }\n _free($2);\n $$088 = 0;\n return ($$088|0);\n}\nfunction _res0_look($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$098 = 0, $$0101122 = 0, $$0124 = 0, $$094107$us = 0, $$095106$us = 0, $$096118 = 0, $$098$lcssa = 0, $$098123 = 0, $$1102117 = 0, $$1112 = 0, $$197105$us = 0, $$2100 = 0, $$2103 = 0, $$2108 = 0, $$2108$us = 0, $$3 = 0, $$cast = 0, $$lcssa = 0, $$pn = 0, $10 = 0;\n var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;\n var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond134 = 0, $exitcond135 = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_calloc(1,44)|0);\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($4)) + 28|0);\n $6 = HEAP32[$5>>2]|0;\n HEAP32[$2>>2] = $1;\n $7 = ((($1)) + 12|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($2)) + 4|0);\n HEAP32[$9>>2] = $8;\n $10 = ((($6)) + 2848|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($2)) + 12|0);\n HEAP32[$12>>2] = $11;\n $$cast = $11;\n $13 = ((($1)) + 20|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (($$cast) + (($14*56)|0)|0);\n $16 = ((($2)) + 16|0);\n HEAP32[$16>>2] = $15;\n $17 = HEAP32[$15>>2]|0;\n $18 = (_calloc($8,4)|0);\n $19 = ((($2)) + 20|0);\n HEAP32[$19>>2] = $18;\n $20 = ($8|0)>(0);\n if ($20) {\n  $21 = ((($1)) + 24|0);\n  $22 = ((($1)) + 280|0);\n  $$0101122 = 0;$$0124 = 0;$$098123 = 0;\n  while(1) {\n   $23 = (($21) + ($$0124<<2)|0);\n   $24 = HEAP32[$23>>2]|0;\n   $25 = (_ov_ilog($24)|0);\n   $26 = ($25|0)==(0);\n   if ($26) {\n    $$2100 = $$098123;$$3 = $$0101122;\n   } else {\n    $27 = ($25|0)>($$098123|0);\n    $$$098 = $27 ? $25 : $$098123;\n    $28 = (_calloc($25,4)|0);\n    $29 = (($18) + ($$0124<<2)|0);\n    HEAP32[$29>>2] = $28;\n    $30 = ($25|0)>(0);\n    if ($30) {\n     $31 = HEAP32[$23>>2]|0;\n     $32 = (($18) + ($$0124<<2)|0);\n     $$096118 = 0;$$1102117 = $$0101122;\n     while(1) {\n      $33 = 1 << $$096118;\n      $34 = $31 & $33;\n      $35 = ($34|0)==(0);\n      if ($35) {\n       $$2103 = $$1102117;\n      } else {\n       $36 = HEAP32[$10>>2]|0;\n       $37 = (($$1102117) + 1)|0;\n       $38 = (($22) + ($$1102117<<2)|0);\n       $39 = HEAP32[$38>>2]|0;\n       $40 = (($36) + (($39*56)|0)|0);\n       $41 = HEAP32[$32>>2]|0;\n       $42 = (($41) + ($$096118<<2)|0);\n       HEAP32[$42>>2] = $40;\n       $$2103 = $37;\n      }\n      $43 = (($$096118) + 1)|0;\n      $exitcond135 = ($43|0)==($25|0);\n      if ($exitcond135) {\n       $$2100 = $$$098;$$3 = $$2103;\n       break;\n      } else {\n       $$096118 = $43;$$1102117 = $$2103;\n      }\n     }\n    } else {\n     $$2100 = $$$098;$$3 = $$0101122;\n    }\n   }\n   $44 = (($$0124) + 1)|0;\n   $45 = ($44|0)<($8|0);\n   if ($45) {\n    $$0101122 = $$3;$$0124 = $44;$$098123 = $$2100;\n   } else {\n    $$098$lcssa = $$2100;\n    break;\n   }\n  }\n } else {\n  $$098$lcssa = 0;\n }\n $46 = ((($2)) + 24|0);\n HEAP32[$46>>2] = 1;\n $47 = ($17|0)>(0);\n if ($47) {\n  $$1112 = 0;$49 = 1;\n  while(1) {\n   $48 = Math_imul($49, $8)|0;\n   $50 = (($$1112) + 1)|0;\n   $exitcond134 = ($50|0)==($17|0);\n   if ($exitcond134) {\n    break;\n   } else {\n    $$1112 = $50;$49 = $48;\n   }\n  }\n  HEAP32[$46>>2] = $48;\n  $phitmp = $48 << 2;\n  $$lcssa = $phitmp;$54 = $48;\n } else {\n  $$lcssa = 4;$54 = 1;\n }\n $51 = ((($2)) + 8|0);\n HEAP32[$51>>2] = $$098$lcssa;\n $52 = (_malloc($$lcssa)|0);\n $53 = ((($2)) + 28|0);\n HEAP32[$53>>2] = $52;\n $55 = ($54|0)>(0);\n if (!($55)) {\n  return ($2|0);\n }\n $56 = $17 << 2;\n if ($47) {\n  $$2108$us = 0;\n } else {\n  $$2108 = 0;\n  while(1) {\n   $66 = (_malloc($56)|0);\n   $67 = (($52) + ($$2108<<2)|0);\n   HEAP32[$67>>2] = $66;\n   $68 = (($$2108) + 1)|0;\n   $69 = ($68|0)<($54|0);\n   if ($69) {\n    $$2108 = $68;\n   } else {\n    break;\n   }\n  }\n  return ($2|0);\n }\n while(1) {\n  $57 = (_malloc($56)|0);\n  $58 = (($52) + ($$2108$us<<2)|0);\n  HEAP32[$58>>2] = $57;\n  $$095106$us = $$2108$us;$$197105$us = 0;$$pn = $54;\n  while(1) {\n   $$094107$us = (($$pn|0) / ($8|0))&-1;\n   $59 = (($$095106$us|0) / ($$094107$us|0))&-1;\n   $60 = Math_imul($59, $$094107$us)|0;\n   $61 = (($$095106$us) - ($60))|0;\n   $62 = (($57) + ($$197105$us<<2)|0);\n   HEAP32[$62>>2] = $59;\n   $63 = (($$197105$us) + 1)|0;\n   $exitcond = ($63|0)==($17|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$095106$us = $61;$$197105$us = $63;$$pn = $$094107$us;\n   }\n  }\n  $64 = (($$2108$us) + 1)|0;\n  $65 = ($64|0)<($54|0);\n  if ($65) {\n   $$2108$us = $64;\n  } else {\n   break;\n  }\n }\n return ($2|0);\n}\nfunction _res0_free_info($0) {\n $0 = $0|0;\n var $1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if (!($1)) {\n  _free($0);\n }\n return;\n}\nfunction _res0_free_look($0) {\n $0 = $0|0;\n var $$020 = 0, $$119 = 0, $$lcssa = 0, $$lcssa18 = 0, $$pre = 0, $$pre26 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)>(0);\n $5 = ((($0)) + 20|0);\n $6 = HEAP32[$5>>2]|0;\n if ($4) {\n  $$020 = 0;$26 = $3;$8 = $6;\n  while(1) {\n   $7 = (($8) + ($$020<<2)|0);\n   $9 = HEAP32[$7>>2]|0;\n   $10 = ($9|0)==(0|0);\n   if ($10) {\n    $13 = $26;$27 = $8;\n   } else {\n    _free($9);\n    $$pre = HEAP32[$2>>2]|0;\n    $$pre26 = HEAP32[$5>>2]|0;\n    $13 = $$pre;$27 = $$pre26;\n   }\n   $11 = (($$020) + 1)|0;\n   $12 = ($11|0)<($13|0);\n   if ($12) {\n    $$020 = $11;$26 = $13;$8 = $27;\n   } else {\n    $$lcssa18 = $27;\n    break;\n   }\n  }\n } else {\n  $$lcssa18 = $6;\n }\n _free($$lcssa18);\n $14 = ((($0)) + 24|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ($15|0)>(0);\n $17 = ((($0)) + 28|0);\n $18 = HEAP32[$17>>2]|0;\n if ($16) {\n  $$119 = 0;$20 = $18;\n  while(1) {\n   $19 = (($20) + ($$119<<2)|0);\n   $21 = HEAP32[$19>>2]|0;\n   _free($21);\n   $22 = (($$119) + 1)|0;\n   $23 = HEAP32[$14>>2]|0;\n   $24 = ($22|0)<($23|0);\n   $25 = HEAP32[$17>>2]|0;\n   if ($24) {\n    $$119 = $22;$20 = $25;\n   } else {\n    $$lcssa = $25;\n    break;\n   }\n  }\n } else {\n  $$lcssa = $18;\n }\n _free($$lcssa);\n _free($0);\n return;\n}\nfunction _res0_inverse($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$01719 = 0, $$020 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($4|0)>(0);\n if ($5) {\n  $$01719 = 0;$$020 = 0;\n } else {\n  return 0;\n }\n while(1) {\n  $6 = (($3) + ($$01719<<2)|0);\n  $7 = HEAP32[$6>>2]|0;\n  $8 = ($7|0)==(0);\n  if ($8) {\n   $$1 = $$020;\n  } else {\n   $9 = (($2) + ($$020<<2)|0);\n   $10 = (($$020) + 1)|0;\n   $11 = (($2) + ($$01719<<2)|0);\n   $12 = HEAP32[$11>>2]|0;\n   HEAP32[$9>>2] = $12;\n   $$1 = $10;\n  }\n  $13 = (($$01719) + 1)|0;\n  $exitcond = ($13|0)==($4|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$01719 = $13;$$020 = $$1;\n  }\n }\n $14 = ($$1|0)==(0);\n if ($14) {\n  return 0;\n }\n __01inverse($0,$1,$2,$$1,30);\n return 0;\n}\nfunction __01inverse($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0, $$012032 = 0, $$012522$us = 0, $$012624 = 0, $$012730 = 0, $$027 = 0, $$1$lcssa = 0, $$112118 = 0, $$123$us = 0, $$219$us = 0, $$alloca_mul = 0, $$not = 0, $$not35 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;\n var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $brmerge = 0, $exitcond = 0, $or$cond$us = 0, $or$cond21 = 0, $umax = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = HEAP32[$1>>2]|0;\n $6 = ((($5)) + 8|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($1)) + 16|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = HEAP32[$9>>2]|0;\n $11 = ((($0)) + 36|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = $12 >> 1;\n $14 = ((($5)) + 4|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ($15|0)<($13|0);\n $$ = $16 ? $15 : $13;\n $17 = HEAP32[$5>>2]|0;\n $18 = (($$) - ($17))|0;\n $19 = ($18|0)>(0);\n if (!($19)) {\n  STACKTOP = sp;return;\n }\n $20 = (($18|0) / ($7|0))&-1;\n $21 = $3 << 2;\n $$alloca_mul = $21;\n $22 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $23 = ($3|0)>(0);\n if ($23) {\n  $24 = (($10) + -1)|0;\n  $25 = (($24) + ($20))|0;\n  $26 = (($25|0) / ($10|0))&-1;\n  $27 = $26 << 2;\n  $$012032 = 0;\n  while(1) {\n   $38 = (__vorbis_block_alloc($0,$27)|0);\n   $39 = (($22) + ($$012032<<2)|0);\n   HEAP32[$39>>2] = $38;\n   $40 = (($$012032) + 1)|0;\n   $exitcond = ($40|0)==($3|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$012032 = $40;\n   }\n  }\n }\n $28 = ((($1)) + 8|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = ($29|0)>(0);\n if (!($30)) {\n  STACKTOP = sp;return;\n }\n $31 = ($20|0)>(0);\n $32 = ((($0)) + 4|0);\n $33 = ((($5)) + 16|0);\n $34 = ((($1)) + 28|0);\n $35 = ($10|0)>(0);\n $36 = ((($1)) + 20|0);\n $37 = (0 - ($10))|0;\n $$not35 = ($3|0)<(1);\n $$012730 = 0;$95 = $29;\n L12: while(1) {\n  if ($31) {\n   $41 = 1 << $$012730;\n   $$not = ($$012730|0)!=(0);\n   $brmerge = $$not | $$not35;\n   $$012624 = 0;$$027 = 0;\n   while(1) {\n    if (!($brmerge)) {\n     $$112118 = 0;\n     while(1) {\n      $78 = HEAP32[$8>>2]|0;\n      $79 = (_vorbis_book_decode($78,$32)|0);\n      $80 = ($79|0)==(-1);\n      if ($80) {\n       label = 26;\n       break L12;\n      }\n      $81 = HEAP32[$33>>2]|0;\n      $82 = ($79|0)<($81|0);\n      if (!($82)) {\n       label = 26;\n       break L12;\n      }\n      $83 = HEAP32[$34>>2]|0;\n      $84 = (($83) + ($79<<2)|0);\n      $85 = HEAP32[$84>>2]|0;\n      $86 = (($22) + ($$112118<<2)|0);\n      $87 = HEAP32[$86>>2]|0;\n      $88 = (($87) + ($$012624<<2)|0);\n      HEAP32[$88>>2] = $85;\n      $89 = ($85|0)==(0);\n      $76 = (($$112118) + 1)|0;\n      if ($89) {\n       label = 26;\n       break L12;\n      }\n      $77 = ($76|0)<($3|0);\n      if ($77) {\n       $$112118 = $76;\n      } else {\n       break;\n      }\n     }\n    }\n    $42 = ($$027|0)<($20|0);\n    $or$cond21 = $35 & $42;\n    do {\n     if ($or$cond21) {\n      if ($23) {\n       $$012522$us = 0;$$123$us = $$027;\n      } else {\n       $43 = (($$027) - ($20))|0;\n       $44 = ($43>>>0)<($37>>>0);\n       $umax = $44 ? $37 : $43;\n       $45 = (($$027) - ($umax))|0;\n       $$1$lcssa = $45;\n       break;\n      }\n      while(1) {\n       $46 = Math_imul($$123$us, $7)|0;\n       $$219$us = 0;\n       while(1) {\n        $47 = HEAP32[$5>>2]|0;\n        $48 = (($47) + ($46))|0;\n        $49 = (($22) + ($$219$us<<2)|0);\n        $50 = HEAP32[$49>>2]|0;\n        $51 = (($50) + ($$012624<<2)|0);\n        $52 = HEAP32[$51>>2]|0;\n        $53 = (($52) + ($$012522$us<<2)|0);\n        $54 = HEAP32[$53>>2]|0;\n        $55 = (((($5)) + 24|0) + ($54<<2)|0);\n        $56 = HEAP32[$55>>2]|0;\n        $57 = $56 & $41;\n        $58 = ($57|0)==(0);\n        if (!($58)) {\n         $59 = HEAP32[$36>>2]|0;\n         $60 = (($59) + ($54<<2)|0);\n         $61 = HEAP32[$60>>2]|0;\n         $62 = (($61) + ($$012730<<2)|0);\n         $63 = HEAP32[$62>>2]|0;\n         $64 = ($63|0)==(0|0);\n         if (!($64)) {\n          $65 = (($2) + ($$219$us<<2)|0);\n          $66 = HEAP32[$65>>2]|0;\n          $67 = (($66) + ($48<<2)|0);\n          $68 = (FUNCTION_TABLE_iiiii[$4 & 31]($63,$67,$32,$7)|0);\n          $69 = ($68|0)==(-1);\n          if ($69) {\n           label = 26;\n           break L12;\n          }\n         }\n        }\n        $70 = (($$219$us) + 1)|0;\n        $71 = ($70|0)<($3|0);\n        if ($71) {\n         $$219$us = $70;\n        } else {\n         break;\n        }\n       }\n       $72 = (($$012522$us) + 1)|0;\n       $73 = (($$123$us) + 1)|0;\n       $74 = ($72|0)<($10|0);\n       $75 = ($73|0)<($20|0);\n       $or$cond$us = $74 & $75;\n       if ($or$cond$us) {\n        $$012522$us = $72;$$123$us = $73;\n       } else {\n        $$1$lcssa = $73;\n        break;\n       }\n      }\n     } else {\n      $$1$lcssa = $$027;\n     }\n    } while(0);\n    $90 = (($$012624) + 1)|0;\n    $91 = ($$1$lcssa|0)<($20|0);\n    if ($91) {\n     $$012624 = $90;$$027 = $$1$lcssa;\n    } else {\n     break;\n    }\n   }\n   $$pre = HEAP32[$28>>2]|0;\n   $94 = $$pre;\n  } else {\n   $94 = $95;\n  }\n  $92 = (($$012730) + 1)|0;\n  $93 = ($92|0)<($94|0);\n  if ($93) {\n   $$012730 = $92;$95 = $94;\n  } else {\n   label = 26;\n   break;\n  }\n }\n if ((label|0) == 26) {\n  STACKTOP = sp;return;\n }\n}\nfunction _res0_pack($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$lcssa$i = 0, $$03638 = 0, $$039 = 0, $$067$i = 0, $$08$i = 0, $$137 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$0>>2]|0;\n _oggpack_write($1,$2,24);\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n _oggpack_write($1,$4,24);\n $5 = ((($0)) + 8|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = (($6) + -1)|0;\n _oggpack_write($1,$7,24);\n $8 = ((($0)) + 12|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = (($9) + -1)|0;\n _oggpack_write($1,$10,6);\n $11 = ((($0)) + 20|0);\n $12 = HEAP32[$11>>2]|0;\n _oggpack_write($1,$12,8);\n $13 = HEAP32[$8>>2]|0;\n $14 = ($13|0)>(0);\n if (!($14)) {\n  return;\n }\n $15 = ((($0)) + 24|0);\n $$03638 = 0;$$039 = 0;\n while(1) {\n  $19 = (($15) + ($$03638<<2)|0);\n  $20 = HEAP32[$19>>2]|0;\n  $21 = (_ov_ilog($20)|0);\n  $22 = ($21|0)>(3);\n  $23 = HEAP32[$19>>2]|0;\n  if ($22) {\n   _oggpack_write($1,$23,3);\n   _oggpack_write($1,1,1);\n   $24 = HEAP32[$19>>2]|0;\n   $25 = $24 >> 3;\n   _oggpack_write($1,$25,5);\n  } else {\n   _oggpack_write($1,$23,4);\n  }\n  $26 = HEAP32[$19>>2]|0;\n  $27 = ($26|0)==(0);\n  if ($27) {\n   $$0$lcssa$i = 0;\n  } else {\n   $$067$i = $26;$$08$i = 0;\n   while(1) {\n    $28 = $$067$i & 1;\n    $29 = (($28) + ($$08$i))|0;\n    $30 = $$067$i >>> 1;\n    $31 = ($30|0)==(0);\n    if ($31) {\n     $$0$lcssa$i = $29;\n     break;\n    } else {\n     $$067$i = $30;$$08$i = $29;\n    }\n   }\n  }\n  $16 = (($$0$lcssa$i) + ($$039))|0;\n  $32 = (($$03638) + 1)|0;\n  $33 = HEAP32[$8>>2]|0;\n  $34 = ($32|0)<($33|0);\n  if ($34) {\n   $$03638 = $32;$$039 = $16;\n  } else {\n   break;\n  }\n }\n $17 = ($16|0)>(0);\n if (!($17)) {\n  return;\n }\n $18 = ((($0)) + 280|0);\n $$137 = 0;\n while(1) {\n  $35 = (($18) + ($$137<<2)|0);\n  $36 = HEAP32[$35>>2]|0;\n  _oggpack_write($1,$36,8);\n  $37 = (($$137) + 1)|0;\n  $exitcond = ($37|0)==($16|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$137 = $37;\n  }\n }\n return;\n}\nfunction _res1_class($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$$094$us$i$us = 0, $$0103$us$i$us = 0, $$01722 = 0, $$018 = 0, $$023 = 0, $$094102$us$i$us = 0, $$095142$i = 0, $$097112$i = 0, $$097112$us$i = 0, $$097112$us$i$us = 0, $$097112$us115$i = 0, $$098101$us$i$us = 0, $$1 = 0, $$196136$i = 0, $$199$lcssa$us$i$ph$us = 0, $$199$lcssa$us120$i = 0, $$199105$us$i$us = 0, $$199105$us118$i = 0, $10 = 0, $11 = 0;\n var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;\n var $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;\n var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;\n var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond147$i = 0, $exitcond148$i$us = 0, $exitcond149$i = 0, $exitcond149$i$us = 0, $exitcond150$i = 0, $exitcond151$i = 0, $ispos$us$i$us = 0, $neg$us$i$us = 0, $or$cond$us$i$us = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($4|0)>(0);\n if ($5) {\n  $$01722 = 0;$$023 = 0;\n } else {\n  $$018 = 0;\n  return ($$018|0);\n }\n while(1) {\n  $6 = (($3) + ($$01722<<2)|0);\n  $7 = HEAP32[$6>>2]|0;\n  $8 = ($7|0)==(0);\n  if ($8) {\n   $$1 = $$023;\n  } else {\n   $9 = (($2) + ($$023<<2)|0);\n   $10 = (($$023) + 1)|0;\n   $11 = (($2) + ($$01722<<2)|0);\n   $12 = HEAP32[$11>>2]|0;\n   HEAP32[$9>>2] = $12;\n   $$1 = $10;\n  }\n  $13 = (($$01722) + 1)|0;\n  $exitcond = ($13|0)==($4|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$01722 = $13;$$023 = $$1;\n  }\n }\n $14 = ($$1|0)==(0);\n if ($14) {\n  $$018 = 0;\n  return ($$018|0);\n }\n $15 = HEAP32[$1>>2]|0;\n $16 = ((($15)) + 8|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ((($15)) + 12|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ((($15)) + 4|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = HEAP32[$15>>2]|0;\n $23 = (($21) - ($22))|0;\n $24 = (($23|0) / ($17|0))&-1;\n $25 = $$1 << 2;\n $26 = (__vorbis_block_alloc($0,$25)|0);\n $27 = (+($17|0));\n $28 = 100.0 / $27;\n $29 = $28;\n $30 = ($$1|0)>(0);\n if ($30) {\n  $31 = $24 << 2;\n  $$095142$i = 0;\n  while(1) {\n   $36 = (__vorbis_block_alloc($0,$31)|0);\n   $37 = (($26) + ($$095142$i<<2)|0);\n   HEAP32[$37>>2] = $36;\n   _memset(($36|0),0,($31|0))|0;\n   $38 = (($$095142$i) + 1)|0;\n   $exitcond151$i = ($38|0)==($$1|0);\n   if ($exitcond151$i) {\n    break;\n   } else {\n    $$095142$i = $38;\n   }\n  }\n }\n $32 = ($24|0)>(0);\n if ($32) {\n  $33 = ($17|0)>(0);\n  $34 = (($19) + -1)|0;\n  $35 = ($19|0)>(1);\n  $$196136$i = 0;\n  while(1) {\n   $39 = Math_imul($$196136$i, $17)|0;\n   $40 = HEAP32[$15>>2]|0;\n   $41 = (($40) + ($39))|0;\n   L21: do {\n    if ($30) {\n     if (!($33)) {\n      if ($35) {\n       $$097112$us115$i = 0;\n      } else {\n       $$097112$i = 0;\n       while(1) {\n        $83 = (($26) + ($$097112$i<<2)|0);\n        $84 = HEAP32[$83>>2]|0;\n        $85 = (($84) + ($$196136$i<<2)|0);\n        HEAP32[$85>>2] = 0;\n        $86 = (($$097112$i) + 1)|0;\n        $exitcond$i = ($86|0)==($$1|0);\n        if ($exitcond$i) {\n         break L21;\n        } else {\n         $$097112$i = $86;\n        }\n       }\n      }\n      while(1) {\n       $$199105$us118$i = 0;\n       while(1) {\n        $71 = (((($15)) + 2328|0) + ($$199105$us118$i<<2)|0);\n        $72 = HEAP32[$71>>2]|0;\n        $73 = ($72|0)<(0);\n        if (!($73)) {\n         $74 = (((($15)) + 2584|0) + ($$199105$us118$i<<2)|0);\n         $75 = HEAP32[$74>>2]|0;\n         $76 = ($75|0)==(0);\n         if (!($76)) {\n          $$199$lcssa$us120$i = $$199105$us118$i;\n          break;\n         }\n        }\n        $81 = (($$199105$us118$i) + 1)|0;\n        $82 = ($81|0)<($34|0);\n        if ($82) {\n         $$199105$us118$i = $81;\n        } else {\n         $$199$lcssa$us120$i = $81;\n         break;\n        }\n       }\n       $77 = (($26) + ($$097112$us115$i<<2)|0);\n       $78 = HEAP32[$77>>2]|0;\n       $79 = (($78) + ($$196136$i<<2)|0);\n       HEAP32[$79>>2] = $$199$lcssa$us120$i;\n       $80 = (($$097112$us115$i) + 1)|0;\n       $exitcond147$i = ($80|0)==($$1|0);\n       if ($exitcond147$i) {\n        break L21;\n       } else {\n        $$097112$us115$i = $80;\n       }\n      }\n     }\n     if ($35) {\n      $$097112$us$i$us = 0;\n     } else {\n      $$097112$us$i = 0;\n      while(1) {\n       $67 = (($26) + ($$097112$us$i<<2)|0);\n       $68 = HEAP32[$67>>2]|0;\n       $69 = (($68) + ($$196136$i<<2)|0);\n       HEAP32[$69>>2] = 0;\n       $70 = (($$097112$us$i) + 1)|0;\n       $exitcond149$i = ($70|0)==($$1|0);\n       if ($exitcond149$i) {\n        break L21;\n       } else {\n        $$097112$us$i = $70;\n       }\n      }\n     }\n     while(1) {\n      $42 = (($2) + ($$097112$us$i$us<<2)|0);\n      $43 = HEAP32[$42>>2]|0;\n      $$0103$us$i$us = 0;$$094102$us$i$us = 0;$$098101$us$i$us = 0;\n      while(1) {\n       $44 = (($41) + ($$098101$us$i$us))|0;\n       $45 = (($43) + ($44<<2)|0);\n       $46 = HEAP32[$45>>2]|0;\n       $ispos$us$i$us = ($46|0)>(-1);\n       $neg$us$i$us = (0 - ($46))|0;\n       $47 = $ispos$us$i$us ? $46 : $neg$us$i$us;\n       $48 = ($47|0)>($$094102$us$i$us|0);\n       $$$094$us$i$us = $48 ? $47 : $$094102$us$i$us;\n       $49 = (($47) + ($$0103$us$i$us))|0;\n       $50 = (($$098101$us$i$us) + 1)|0;\n       $exitcond148$i$us = ($50|0)==($17|0);\n       if ($exitcond148$i$us) {\n        break;\n       } else {\n        $$0103$us$i$us = $49;$$094102$us$i$us = $$$094$us$i$us;$$098101$us$i$us = $50;\n       }\n      }\n      $51 = (+($49|0));\n      $52 = $51 * $29;\n      $53 = (~~(($52)));\n      $$199105$us$i$us = 0;\n      while(1) {\n       $54 = (((($15)) + 2328|0) + ($$199105$us$i$us<<2)|0);\n       $55 = HEAP32[$54>>2]|0;\n       $56 = ($$$094$us$i$us|0)>($55|0);\n       if (!($56)) {\n        $57 = (((($15)) + 2584|0) + ($$199105$us$i$us<<2)|0);\n        $58 = HEAP32[$57>>2]|0;\n        $59 = ($58|0)<(0);\n        $60 = ($53|0)<($58|0);\n        $or$cond$us$i$us = $59 | $60;\n        if ($or$cond$us$i$us) {\n         $$199$lcssa$us$i$ph$us = $$199105$us$i$us;\n         break;\n        }\n       }\n       $61 = (($$199105$us$i$us) + 1)|0;\n       $62 = ($61|0)<($34|0);\n       if ($62) {\n        $$199105$us$i$us = $61;\n       } else {\n        $$199$lcssa$us$i$ph$us = $61;\n        break;\n       }\n      }\n      $63 = (($26) + ($$097112$us$i$us<<2)|0);\n      $64 = HEAP32[$63>>2]|0;\n      $65 = (($64) + ($$196136$i<<2)|0);\n      HEAP32[$65>>2] = $$199$lcssa$us$i$ph$us;\n      $66 = (($$097112$us$i$us) + 1)|0;\n      $exitcond149$i$us = ($66|0)==($$1|0);\n      if ($exitcond149$i$us) {\n       break;\n      } else {\n       $$097112$us$i$us = $66;\n      }\n     }\n    }\n   } while(0);\n   $87 = (($$196136$i) + 1)|0;\n   $exitcond150$i = ($87|0)==($24|0);\n   if ($exitcond150$i) {\n    break;\n   } else {\n    $$196136$i = $87;\n   }\n  }\n }\n $88 = ((($1)) + 40|0);\n $89 = HEAP32[$88>>2]|0;\n $90 = (($89) + 1)|0;\n HEAP32[$88>>2] = $90;\n $$018 = $26;\n return ($$018|0);\n}\nfunction _res1_forward($0,$1,$2,$3,$4,$5,$6,$7) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$02022 = 0, $$023 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $8 = ($5|0)>(0);\n if ($8) {\n  $$02022 = 0;$$023 = 0;\n } else {\n  return 0;\n }\n while(1) {\n  $9 = (($4) + ($$02022<<2)|0);\n  $10 = HEAP32[$9>>2]|0;\n  $11 = ($10|0)==(0);\n  if ($11) {\n   $$1 = $$023;\n  } else {\n   $12 = (($3) + ($$023<<2)|0);\n   $13 = (($$023) + 1)|0;\n   $14 = (($3) + ($$02022<<2)|0);\n   $15 = HEAP32[$14>>2]|0;\n   HEAP32[$12>>2] = $15;\n   $$1 = $13;\n  }\n  $16 = (($$02022) + 1)|0;\n  $exitcond = ($16|0)==($5|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$02022 = $16;$$023 = $$1;\n  }\n }\n $17 = ($$1|0)==(0);\n if ($17) {\n  return 0;\n }\n __01forward($0,$2,$3,$$1,$6);\n return 0;\n}\nfunction _res1_inverse($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$01719 = 0, $$020 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($4|0)>(0);\n if ($5) {\n  $$01719 = 0;$$020 = 0;\n } else {\n  return 0;\n }\n while(1) {\n  $6 = (($3) + ($$01719<<2)|0);\n  $7 = HEAP32[$6>>2]|0;\n  $8 = ($7|0)==(0);\n  if ($8) {\n   $$1 = $$020;\n  } else {\n   $9 = (($2) + ($$020<<2)|0);\n   $10 = (($$020) + 1)|0;\n   $11 = (($2) + ($$01719<<2)|0);\n   $12 = HEAP32[$11>>2]|0;\n   HEAP32[$9>>2] = $12;\n   $$1 = $10;\n  }\n  $13 = (($$01719) + 1)|0;\n  $exitcond = ($13|0)==($4|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$01719 = $13;$$020 = $$1;\n  }\n }\n $14 = ($$1|0)==(0);\n if ($14) {\n  return 0;\n }\n __01inverse($0,$1,$2,$$1,31);\n return 0;\n}\nfunction __01forward($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$$i$i = 0, $$010813 = 0, $$010813$us = 0, $$011012$us = 0, $$011211$us = 0, $$011427 = 0, $$0128151$us$i$i = 0, $$0129174$i$i = 0, $$0130160$i$i = 0, $$0130160$us$i$i = 0, $$0133150$us$i$i = 0, $$0135173$i$i = 0, $$0137172$i$i = 0, $$0149$i$i = 0, $$023$lcssa$i = 0, $$02332$i = 0, $$025 = 0, $$033$i = 0, $$1$lcssa = 0, $$110915 = 0;\n var $$111120 = 0, $$1113$us = 0, $$1134153$i$i = 0, $$1134153$us$i$i = 0, $$1136168$i$i = 0, $$1138167$i$i = 0, $$1169$i$i = 0, $$121 = 0, $$141$i$i = 0, $$2132$i$i = 0, $$2132$us$i$i = 0, $$2139$i$i = 0, $$2161$i$i = 0, $$2161$us$i$i = 0, $$3140$lcssa$i$i = 0, $$3140159$i$i = 0, $$3140159$us$i$i = 0, $$3148$i$i = 0, $$5$i$i = 0, $$5$us$i$i = 0;\n var $$6$i$i = 0, $$lcssa$i$i = 0, $$lcssa$us$i$i = 0, $$lcssa147$i$i = 0, $$lcssa147$us$i$i = 0, $$not = 0, $$not30 = 0, $$pre = 0, $$pre$i = 0, $$pre45 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;\n var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;\n var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;\n var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;\n var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;\n var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;\n var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;\n var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;\n var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond187$i$i = 0, $exitcond188$i$i = 0;\n var $exitcond189$i$i = 0, $exitcond42 = 0, $exitcond43 = 0, $exitcond44 = 0, $exitcond44$i = 0, $exitcond45$i = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond$us$i$i = 0, $or$cond177$i$i = 0, $or$cond19 = 0, $scevgep$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1088|0);\n $5 = sp + 1056|0;\n $6 = sp + 1024|0;\n $7 = sp + 512|0;\n $8 = sp;\n $9 = HEAP32[$1>>2]|0;\n $10 = ((($9)) + 8|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($9)) + 12|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ((($1)) + 16|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = HEAP32[$15>>2]|0;\n $17 = ((($9)) + 4|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = HEAP32[$9>>2]|0;\n $20 = (($18) - ($19))|0;\n $21 = (($20|0) / ($11|0))&-1;\n _memset(($7|0),0,512)|0;\n _memset(($8|0),0,512)|0;\n $22 = ((($1)) + 8|0);\n $23 = HEAP32[$22>>2]|0;\n $24 = ($23|0)>(0);\n if (!($24)) {\n  STACKTOP = sp;return;\n }\n $25 = ($21|0)>(0);\n $26 = ($16|0)>(1);\n $27 = ((($1)) + 36|0);\n $28 = ($16|0)>(0);\n $29 = ($3|0)>(0);\n $30 = ((($1)) + 20|0);\n $31 = ((($1)) + 32|0);\n $$not30 = ($3|0)<(1);\n $$011427 = 0;$228 = $23;\n while(1) {\n  if ($25) {\n   $32 = ($$011427|0)==(0);\n   $33 = 1 << $$011427;\n   $$not = $32 ^ 1;\n   $brmerge = $$not30 | $$not;\n   $$025 = 0;\n   while(1) {\n    L10: do {\n     if (!($brmerge)) {\n      if ($26) {\n       $$010813$us = 0;\n      } else {\n       $$010813 = 0;\n       while(1) {\n        $55 = (($4) + ($$010813<<2)|0);\n        $56 = HEAP32[$55>>2]|0;\n        $57 = (($56) + ($$025<<2)|0);\n        $58 = HEAP32[$57>>2]|0;\n        $59 = HEAP32[$14>>2]|0;\n        $60 = ((($59)) + 4|0);\n        $61 = HEAP32[$60>>2]|0;\n        $62 = ($58|0)<($61|0);\n        if ($62) {\n         $63 = (_vorbis_book_encode($59,$58,$0)|0);\n         $64 = HEAP32[$27>>2]|0;\n         $65 = (($64) + ($63))|0;\n         HEAP32[$27>>2] = $65;\n        }\n        $66 = (($$010813) + 1)|0;\n        $exitcond = ($66|0)==($3|0);\n        if ($exitcond) {\n         break L10;\n        } else {\n         $$010813 = $66;\n        }\n       }\n      }\n      while(1) {\n       $35 = (($4) + ($$010813$us<<2)|0);\n       $36 = HEAP32[$35>>2]|0;\n       $37 = (($36) + ($$025<<2)|0);\n       $38 = HEAP32[$37>>2]|0;\n       $$011012$us = 1;$$011211$us = $38;\n       while(1) {\n        $44 = Math_imul($$011211$us, $13)|0;\n        $45 = (($$011012$us) + ($$025))|0;\n        $46 = ($45|0)<($21|0);\n        if ($46) {\n         $47 = (($36) + ($45<<2)|0);\n         $48 = HEAP32[$47>>2]|0;\n         $49 = (($48) + ($44))|0;\n         $$1113$us = $49;\n        } else {\n         $$1113$us = $44;\n        }\n        $50 = (($$011012$us) + 1)|0;\n        $exitcond42 = ($50|0)==($16|0);\n        if ($exitcond42) {\n         break;\n        } else {\n         $$011012$us = $50;$$011211$us = $$1113$us;\n        }\n       }\n       $39 = HEAP32[$14>>2]|0;\n       $51 = ((($39)) + 4|0);\n       $52 = HEAP32[$51>>2]|0;\n       $53 = ($$1113$us|0)<($52|0);\n       if ($53) {\n        $40 = (_vorbis_book_encode($39,$$1113$us,$0)|0);\n        $41 = HEAP32[$27>>2]|0;\n        $42 = (($41) + ($40))|0;\n        HEAP32[$27>>2] = $42;\n       }\n       $43 = (($$010813$us) + 1)|0;\n       $exitcond43 = ($43|0)==($3|0);\n       if ($exitcond43) {\n        break;\n       } else {\n        $$010813$us = $43;\n       }\n      }\n     }\n    } while(0);\n    $54 = ($$025|0)<($21|0);\n    $or$cond19 = $28 & $54;\n    if ($or$cond19) {\n     $$111120 = 0;$$121 = $$025;\n     while(1) {\n      $67 = Math_imul($$121, $11)|0;\n      $68 = HEAP32[$9>>2]|0;\n      $69 = (($68) + ($67))|0;\n      if ($29) {\n       $$110915 = 0;\n       while(1) {\n        $70 = (($4) + ($$110915<<2)|0);\n        $71 = HEAP32[$70>>2]|0;\n        $72 = (($71) + ($$121<<2)|0);\n        $73 = HEAP32[$72>>2]|0;\n        $74 = (($8) + ($73<<2)|0);\n        if ($32) {\n         $75 = HEAP32[$74>>2]|0;\n         $76 = (($75) + ($11))|0;\n         HEAP32[$74>>2] = $76;\n        }\n        $77 = (((($9)) + 24|0) + ($73<<2)|0);\n        $78 = HEAP32[$77>>2]|0;\n        $79 = $78 & $33;\n        $80 = ($79|0)==(0);\n        if (!($80)) {\n         $81 = HEAP32[$30>>2]|0;\n         $82 = (($81) + ($73<<2)|0);\n         $83 = HEAP32[$82>>2]|0;\n         $84 = (($83) + ($$011427<<2)|0);\n         $85 = HEAP32[$84>>2]|0;\n         $86 = ($85|0)==(0|0);\n         if (!($86)) {\n          $87 = (($2) + ($$110915<<2)|0);\n          $88 = HEAP32[$87>>2]|0;\n          $89 = (($88) + ($69<<2)|0);\n          $90 = HEAP32[$85>>2]|0;\n          $91 = (($11|0) / ($90|0))&-1;\n          $92 = ($91|0)>(0);\n          if ($92) {\n           $93 = ((($85)) + 48|0);\n           $94 = ((($85)) + 52|0);\n           $95 = ((($85)) + 44|0);\n           $96 = ((($85)) + 12|0);\n           $97 = ((($85)) + 4|0);\n           $$02332$i = 0;$$033$i = 0;$104 = $90;\n           while(1) {\n            $98 = Math_imul($$033$i, $90)|0;\n            $scevgep$i = (($89) + ($98<<2)|0);\n            $99 = HEAP32[$93>>2]|0;\n            $100 = HEAP32[$94>>2]|0;\n            $101 = HEAP32[$95>>2]|0;\n            $102 = $101 >> 1;\n            ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP32[$5+16>>2]=0|0;HEAP32[$5+20>>2]=0|0;HEAP32[$5+24>>2]=0|0;HEAP32[$5+28>>2]=0|0;\n            $103 = ($100|0)==(1);\n            $105 = ($104|0)>(0);\n            do {\n             if ($103) {\n              if (!($105)) {\n               $$2139$i$i = 0;\n               break;\n              }\n              $109 = (($101) + -1)|0;\n              $110 = $104 << 2;\n              _memcpy(($5|0),($scevgep$i|0),($110|0))|0;\n              $$1136168$i$i = $104;$$1138167$i$i = 0;$$1169$i$i = 0;\n              while(1) {\n               $132 = (($$1136168$i$i) + -1)|0;\n               $133 = (($scevgep$i) + ($132<<2)|0);\n               $134 = HEAP32[$133>>2]|0;\n               $135 = (($134) - ($99))|0;\n               $136 = ($135|0)<($102|0);\n               if ($136) {\n                $137 = (($102) - ($135))|0;\n                $138 = $137 << 1;\n                $139 = (($138) + -1)|0;\n                $143 = $139;\n               } else {\n                $140 = (($135) - ($102))|0;\n                $141 = $140 << 1;\n                $143 = $141;\n               }\n               $142 = Math_imul($$1138167$i$i, $101)|0;\n               $144 = ($143|0)<(0);\n               $145 = ($143|0)>=($101|0);\n               $146 = $145 ? $109 : $143;\n               $$141$i$i = $144 ? 0 : $146;\n               $147 = (($$141$i$i) + ($142))|0;\n               $148 = (($$1169$i$i) + 1)|0;\n               $exitcond188$i$i = ($148|0)==($104|0);\n               if ($exitcond188$i$i) {\n                $$2139$i$i = $147;\n                break;\n               } else {\n                $$1136168$i$i = $132;$$1138167$i$i = $147;$$1169$i$i = $148;\n               }\n              }\n             } else {\n              if (!($105)) {\n               $$2139$i$i = 0;\n               break;\n              }\n              $106 = $100 >> 1;\n              $107 = (($106) - ($99))|0;\n              $108 = (($101) + -1)|0;\n              $$0129174$i$i = 0;$$0135173$i$i = $104;$$0137172$i$i = 0;\n              while(1) {\n               $111 = (($$0135173$i$i) + -1)|0;\n               $112 = (($scevgep$i) + ($111<<2)|0);\n               $113 = HEAP32[$112>>2]|0;\n               $114 = (($107) + ($113))|0;\n               $115 = (($114|0) / ($100|0))&-1;\n               $116 = ($115|0)<($102|0);\n               if ($116) {\n                $117 = (($102) - ($115))|0;\n                $118 = $117 << 1;\n                $119 = (($118) + -1)|0;\n                $123 = $119;\n               } else {\n                $120 = (($115) - ($102))|0;\n                $121 = $120 << 1;\n                $123 = $121;\n               }\n               $122 = Math_imul($$0137172$i$i, $101)|0;\n               $124 = ($123|0)<(0);\n               $125 = ($123|0)>=($101|0);\n               $126 = $125 ? $108 : $123;\n               $$$i$i = $124 ? 0 : $126;\n               $127 = (($$$i$i) + ($122))|0;\n               $128 = Math_imul($115, $100)|0;\n               $129 = (($128) + ($99))|0;\n               $130 = (($5) + ($111<<2)|0);\n               HEAP32[$130>>2] = $129;\n               $131 = (($$0129174$i$i) + 1)|0;\n               $exitcond189$i$i = ($131|0)==($104|0);\n               if ($exitcond189$i$i) {\n                $$2139$i$i = $127;\n                break;\n               } else {\n                $$0129174$i$i = $131;$$0135173$i$i = $111;$$0137172$i$i = $127;\n               }\n              }\n             }\n            } while(0);\n            $149 = HEAP32[$96>>2]|0;\n            $150 = ((($149)) + 8|0);\n            $151 = HEAP32[$150>>2]|0;\n            $152 = (($151) + ($$2139$i$i)|0);\n            $153 = HEAP8[$152>>0]|0;\n            $154 = ($153<<24>>24)<(1);\n            if ($154) {\n             ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;HEAP32[$6+16>>2]=0|0;HEAP32[$6+20>>2]=0|0;HEAP32[$6+24>>2]=0|0;HEAP32[$6+28>>2]=0|0;\n             $155 = (($101) + -1)|0;\n             $156 = Math_imul($155, $100)|0;\n             $157 = (($156) + ($99))|0;\n             $158 = HEAP32[$97>>2]|0;\n             $159 = ($158|0)>(0);\n             L66: do {\n              if ($159) {\n               if ($105) {\n                $$0130160$us$i$i = -1;$$2161$us$i$i = 0;$$3140159$us$i$i = $$2139$i$i;\n               } else {\n                $$0130160$i$i = -1;$$2161$i$i = 0;$$3140159$i$i = $$2139$i$i;\n                while(1) {\n                 $185 = (($151) + ($$2161$i$i)|0);\n                 $186 = HEAP8[$185>>0]|0;\n                 $187 = ($186<<24>>24)>(0);\n                 do {\n                  if ($187) {\n                   $188 = ($$0130160$i$i|0)==(-1);\n                   $189 = ($$0130160$i$i|0)>(0);\n                   $or$cond$i$i = $188 | $189;\n                   if (!($or$cond$i$i)) {\n                    $$2132$i$i = $$0130160$i$i;$$5$i$i = $$3140159$i$i;\n                    break;\n                   }\n                   ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[$6+20>>2]|0;HEAP32[$5+24>>2]=HEAP32[$6+24>>2]|0;HEAP32[$5+28>>2]=HEAP32[$6+28>>2]|0;\n                   $$2132$i$i = 0;$$5$i$i = $$2161$i$i;\n                  } else {\n                   $$2132$i$i = $$0130160$i$i;$$5$i$i = $$3140159$i$i;\n                  }\n                 } while(0);\n                 $190 = HEAP32[$6>>2]|0;\n                 $191 = ($190|0)<($157|0);\n                 if ($191) {\n                  $$lcssa$i$i = $190;$$lcssa147$i$i = $6;\n                 } else {\n                  $$1134153$i$i = 0;$193 = $6;\n                  while(1) {\n                   $192 = (($$1134153$i$i) + 1)|0;\n                   HEAP32[$193>>2] = 0;\n                   $194 = (($6) + ($192<<2)|0);\n                   $195 = HEAP32[$194>>2]|0;\n                   $196 = ($195|0)<($157|0);\n                   if ($196) {\n                    $$lcssa$i$i = $195;$$lcssa147$i$i = $194;\n                    break;\n                   } else {\n                    $$1134153$i$i = $192;$193 = $194;\n                   }\n                  }\n                 }\n                 $197 = ($$lcssa$i$i|0)>(-1);\n                 $198 = (($$lcssa$i$i) + ($100))|0;\n                 if ($197) {\n                  HEAP32[$$lcssa147$i$i>>2] = $198;\n                  $200 = $198;\n                 } else {\n                  $200 = $$lcssa$i$i;\n                 }\n                 $199 = (0 - ($200))|0;\n                 HEAP32[$$lcssa147$i$i>>2] = $199;\n                 $201 = (($$2161$i$i) + 1)|0;\n                 $exitcond$i = ($201|0)==($158|0);\n                 if ($exitcond$i) {\n                  $$3140$lcssa$i$i = $$5$i$i;\n                  break L66;\n                 } else {\n                  $$0130160$i$i = $$2132$i$i;$$2161$i$i = $201;$$3140159$i$i = $$5$i$i;\n                 }\n                }\n               }\n               while(1) {\n                $160 = (($151) + ($$2161$us$i$i)|0);\n                $161 = HEAP8[$160>>0]|0;\n                $162 = ($161<<24>>24)>(0);\n                do {\n                 if ($162) {\n                  $$0128151$us$i$i = 0;$$0133150$us$i$i = 0;\n                  while(1) {\n                   $175 = (($6) + ($$0133150$us$i$i<<2)|0);\n                   $176 = HEAP32[$175>>2]|0;\n                   $177 = (($scevgep$i) + ($$0133150$us$i$i<<2)|0);\n                   $178 = HEAP32[$177>>2]|0;\n                   $179 = (($176) - ($178))|0;\n                   $180 = Math_imul($179, $179)|0;\n                   $181 = (($180) + ($$0128151$us$i$i))|0;\n                   $182 = (($$0133150$us$i$i) + 1)|0;\n                   $exitcond187$i$i = ($182|0)==($104|0);\n                   if ($exitcond187$i$i) {\n                    break;\n                   } else {\n                    $$0128151$us$i$i = $181;$$0133150$us$i$i = $182;\n                   }\n                  }\n                  $183 = ($$0130160$us$i$i|0)==(-1);\n                  $184 = ($181|0)<($$0130160$us$i$i|0);\n                  $or$cond$us$i$i = $183 | $184;\n                  if (!($or$cond$us$i$i)) {\n                   $$2132$us$i$i = $$0130160$us$i$i;$$5$us$i$i = $$3140159$us$i$i;\n                   break;\n                  }\n                  ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[$6+20>>2]|0;HEAP32[$5+24>>2]=HEAP32[$6+24>>2]|0;HEAP32[$5+28>>2]=HEAP32[$6+28>>2]|0;\n                  $$2132$us$i$i = $181;$$5$us$i$i = $$2161$us$i$i;\n                 } else {\n                  $$2132$us$i$i = $$0130160$us$i$i;$$5$us$i$i = $$3140159$us$i$i;\n                 }\n                } while(0);\n                $163 = HEAP32[$6>>2]|0;\n                $164 = ($163|0)<($157|0);\n                if ($164) {\n                 $$lcssa$us$i$i = $163;$$lcssa147$us$i$i = $6;\n                } else {\n                 $$1134153$us$i$i = 0;$166 = $6;\n                 while(1) {\n                  $165 = (($$1134153$us$i$i) + 1)|0;\n                  HEAP32[$166>>2] = 0;\n                  $167 = (($6) + ($165<<2)|0);\n                  $168 = HEAP32[$167>>2]|0;\n                  $169 = ($168|0)<($157|0);\n                  if ($169) {\n                   $$lcssa$us$i$i = $168;$$lcssa147$us$i$i = $167;\n                   break;\n                  } else {\n                   $$1134153$us$i$i = $165;$166 = $167;\n                  }\n                 }\n                }\n                $170 = ($$lcssa$us$i$i|0)>(-1);\n                $171 = (($$lcssa$us$i$i) + ($100))|0;\n                if ($170) {\n                 HEAP32[$$lcssa147$us$i$i>>2] = $171;\n                 $173 = $171;\n                } else {\n                 $173 = $$lcssa$us$i$i;\n                }\n                $172 = (0 - ($173))|0;\n                HEAP32[$$lcssa147$us$i$i>>2] = $172;\n                $174 = (($$2161$us$i$i) + 1)|0;\n                $exitcond44$i = ($174|0)==($158|0);\n                if ($exitcond44$i) {\n                 $$3140$lcssa$i$i = $$5$us$i$i;\n                 break;\n                } else {\n                 $$0130160$us$i$i = $$2132$us$i$i;$$2161$us$i$i = $174;$$3140159$us$i$i = $$5$us$i$i;\n                }\n               }\n              } else {\n               $$3140$lcssa$i$i = $$2139$i$i;\n              }\n             } while(0);\n             $$6$i$i = $$3140$lcssa$i$i;\n            } else {\n             $$6$i$i = $$2139$i$i;\n            }\n            $202 = ($$6$i$i|0)>(-1);\n            $or$cond177$i$i = $105 & $202;\n            if ($or$cond177$i$i) {\n             $$0149$i$i = $scevgep$i;$$3148$i$i = 0;\n             while(1) {\n              $203 = (($5) + ($$3148$i$i<<2)|0);\n              $204 = HEAP32[$203>>2]|0;\n              $205 = ((($$0149$i$i)) + 4|0);\n              $206 = HEAP32[$$0149$i$i>>2]|0;\n              $207 = (($206) - ($204))|0;\n              HEAP32[$$0149$i$i>>2] = $207;\n              $208 = (($$3148$i$i) + 1)|0;\n              $exitcond$i$i = ($208|0)==($104|0);\n              if ($exitcond$i$i) {\n               break;\n              } else {\n               $$0149$i$i = $205;$$3148$i$i = $208;\n              }\n             }\n            }\n            $209 = (_vorbis_book_encode($85,$$6$i$i,$0)|0);\n            $210 = (($209) + ($$02332$i))|0;\n            $211 = (($$033$i) + 1)|0;\n            $exitcond45$i = ($211|0)==($91|0);\n            if ($exitcond45$i) {\n             break;\n            }\n            $$pre$i = HEAP32[$85>>2]|0;\n            $$02332$i = $210;$$033$i = $211;$104 = $$pre$i;\n           }\n           $$pre = HEAP32[$70>>2]|0;\n           $$023$lcssa$i = $210;$215 = $$pre;\n          } else {\n           $$023$lcssa$i = 0;$215 = $71;\n          }\n          $212 = HEAP32[$31>>2]|0;\n          $213 = (($212) + ($$023$lcssa$i))|0;\n          HEAP32[$31>>2] = $213;\n          $214 = (($215) + ($$121<<2)|0);\n          $216 = HEAP32[$214>>2]|0;\n          $217 = (($7) + ($216<<2)|0);\n          $218 = HEAP32[$217>>2]|0;\n          $219 = (($218) + ($$023$lcssa$i))|0;\n          HEAP32[$217>>2] = $219;\n         }\n        }\n        $220 = (($$110915) + 1)|0;\n        $exitcond44 = ($220|0)==($3|0);\n        if ($exitcond44) {\n         break;\n        } else {\n         $$110915 = $220;\n        }\n       }\n      }\n      $221 = (($$111120) + 1)|0;\n      $222 = (($$121) + 1)|0;\n      $223 = ($221|0)<($16|0);\n      $224 = ($222|0)<($21|0);\n      $or$cond = $223 & $224;\n      if ($or$cond) {\n       $$111120 = $221;$$121 = $222;\n      } else {\n       $$1$lcssa = $222;\n       break;\n      }\n     }\n    } else {\n     $$1$lcssa = $$025;\n    }\n    $34 = ($$1$lcssa|0)<($21|0);\n    if ($34) {\n     $$025 = $$1$lcssa;\n    } else {\n     break;\n    }\n   }\n   $$pre45 = HEAP32[$22>>2]|0;\n   $227 = $$pre45;\n  } else {\n   $227 = $228;\n  }\n  $225 = (($$011427) + 1)|0;\n  $226 = ($225|0)<($227|0);\n  if ($226) {\n   $$011427 = $225;$228 = $227;\n  } else {\n   break;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _res2_class($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$$077$us$us$i$us = 0, $$$077$us113$i = 0, $$$1$us$us$i$us = 0, $$0$ = 0, $$01419 = 0, $$015 = 0, $$020 = 0, $$07792$us$us$i$us = 0, $$07792$us108$i = 0, $$079105$i$us = 0, $$079105$us$i = 0, $$079105$us$i$us = 0, $$08091$us$us$i$us = 0, $$08091$us109$i = 0, $$08288$us$us$i$us = 0, $$083104$us$i = 0, $$083104$us$i$us = 0, $$093$us$us$i$us = 0, $$181$lcssa$i$ph$us = 0, $$181$lcssa$us$i = 0;\n var $$181$lcssa$us$i$us = 0, $$18198$i$us = 0, $$18198$us$i = 0, $$18198$us$i$us = 0, $$18490$us$us$i$us = 0, $$18490$us110$i = 0, $$189$us$us$i$us = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $exitcond = 0, $exitcond$i$us = 0, $exitcond131$i = 0, $exitcond131$i$us = 0, $exitcond132$i$us = 0, $ispos$us$us$i$us = 0, $ispos$us111$i = 0, $ispos85$us$us$i$us = 0, $neg$us$us$i$us = 0, $neg$us112$i = 0, $neg86$us$us$i$us = 0;\n var $not$ = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($4|0)>(0);\n if ($5) {\n  $$01419 = 0;$$020 = 0;\n } else {\n  $$015 = 0;\n  return ($$015|0);\n }\n while(1) {\n  $6 = (($3) + ($$01419<<2)|0);\n  $7 = HEAP32[$6>>2]|0;\n  $not$ = ($7|0)!=(0);\n  $8 = $not$&1;\n  $$0$ = (($8) + ($$020))|0;\n  $9 = (($$01419) + 1)|0;\n  $exitcond = ($9|0)==($4|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$01419 = $9;$$020 = $$0$;\n  }\n }\n $10 = ($$0$|0)==(0);\n if ($10) {\n  $$015 = 0;\n  return ($$015|0);\n }\n $11 = HEAP32[$1>>2]|0;\n $12 = ((($11)) + 8|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ((($11)) + 12|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ((($11)) + 4|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = HEAP32[$11>>2]|0;\n $19 = (($17) - ($18))|0;\n $20 = (($19|0) / ($13|0))&-1;\n $21 = (__vorbis_block_alloc($0,4)|0);\n $22 = $20 << 2;\n $23 = (__vorbis_block_alloc($0,$22)|0);\n HEAP32[$21>>2] = $23;\n _memset(($23|0),0,($22|0))|0;\n $24 = ($20|0)>(0);\n L9: do {\n  if ($24) {\n   $25 = ($13|0)>(0);\n   $26 = (($15) + -1)|0;\n   $27 = ($15|0)>(1);\n   $28 = HEAP32[$21>>2]|0;\n   if (!($25)) {\n    if ($27) {\n     $$079105$i$us = 0;\n    } else {\n     _memset(($28|0),0,($22|0))|0;\n     break;\n    }\n    while(1) {\n     $$18198$i$us = 0;\n     while(1) {\n      $29 = (((($11)) + 2328|0) + ($$18198$i$us<<2)|0);\n      $30 = HEAP32[$29>>2]|0;\n      $31 = ($30|0)<(0);\n      if (!($31)) {\n       $32 = (((($11)) + 2584|0) + ($$18198$i$us<<2)|0);\n       $33 = HEAP32[$32>>2]|0;\n       $34 = ($33|0)<(0);\n       if (!($34)) {\n        $$181$lcssa$i$ph$us = $$18198$i$us;\n        break;\n       }\n      }\n      $35 = (($$18198$i$us) + 1)|0;\n      $36 = ($35|0)<($26|0);\n      if ($36) {\n       $$18198$i$us = $35;\n      } else {\n       $$181$lcssa$i$ph$us = $35;\n       break;\n      }\n     }\n     $37 = (($28) + ($$079105$i$us<<2)|0);\n     HEAP32[$37>>2] = $$181$lcssa$i$ph$us;\n     $38 = (($$079105$i$us) + 1)|0;\n     $exitcond132$i$us = ($38|0)==($20|0);\n     if ($exitcond132$i$us) {\n      break L9;\n     } else {\n      $$079105$i$us = $38;\n     }\n    }\n   }\n   $39 = ($4|0)>(1);\n   $40 = HEAP32[$11>>2]|0;\n   $41 = (($40|0) / ($4|0))&-1;\n   $$pre$i = HEAP32[$2>>2]|0;\n   if ($39) {\n    $$079105$us$i$us = 0;$$083104$us$i$us = $41;\n   } else {\n    $$079105$us$i = 0;$$083104$us$i = $41;\n    while(1) {\n     $$07792$us108$i = 0;$$08091$us109$i = 0;$$18490$us110$i = $$083104$us$i;\n     while(1) {\n      $76 = (($$pre$i) + ($$18490$us110$i<<2)|0);\n      $77 = HEAP32[$76>>2]|0;\n      $ispos$us111$i = ($77|0)>(-1);\n      $neg$us112$i = (0 - ($77))|0;\n      $78 = $ispos$us111$i ? $77 : $neg$us112$i;\n      $79 = ($78|0)>($$07792$us108$i|0);\n      $$$077$us113$i = $79 ? $78 : $$07792$us108$i;\n      $80 = (($$18490$us110$i) + 1)|0;\n      $81 = (($$08091$us109$i) + ($4))|0;\n      $82 = ($81|0)<($13|0);\n      if ($82) {\n       $$07792$us108$i = $$$077$us113$i;$$08091$us109$i = $81;$$18490$us110$i = $80;\n      } else {\n       break;\n      }\n     }\n     L30: do {\n      if ($27) {\n       $$18198$us$i = 0;\n       while(1) {\n        $66 = (((($11)) + 2328|0) + ($$18198$us$i<<2)|0);\n        $67 = HEAP32[$66>>2]|0;\n        $68 = ($$$077$us113$i|0)>($67|0);\n        if (!($68)) {\n         $69 = (((($11)) + 2584|0) + ($$18198$us$i<<2)|0);\n         $70 = HEAP32[$69>>2]|0;\n         $71 = ($70|0)<(0);\n         if (!($71)) {\n          $$181$lcssa$us$i = $$18198$us$i;\n          break L30;\n         }\n        }\n        $74 = (($$18198$us$i) + 1)|0;\n        $75 = ($74|0)<($26|0);\n        if ($75) {\n         $$18198$us$i = $74;\n        } else {\n         $$181$lcssa$us$i = $74;\n         break;\n        }\n       }\n      } else {\n       $$181$lcssa$us$i = 0;\n      }\n     } while(0);\n     $72 = (($28) + ($$079105$us$i<<2)|0);\n     HEAP32[$72>>2] = $$181$lcssa$us$i;\n     $73 = (($$079105$us$i) + 1)|0;\n     $exitcond131$i = ($73|0)==($20|0);\n     if ($exitcond131$i) {\n      break L9;\n     } else {\n      $$079105$us$i = $73;$$083104$us$i = $80;\n     }\n    }\n   }\n   while(1) {\n    $$07792$us$us$i$us = 0;$$08091$us$us$i$us = 0;$$093$us$us$i$us = 0;$$18490$us$us$i$us = $$083104$us$i$us;\n    while(1) {\n     $42 = (($$pre$i) + ($$18490$us$us$i$us<<2)|0);\n     $43 = HEAP32[$42>>2]|0;\n     $ispos$us$us$i$us = ($43|0)>(-1);\n     $neg$us$us$i$us = (0 - ($43))|0;\n     $44 = $ispos$us$us$i$us ? $43 : $neg$us$us$i$us;\n     $$08288$us$us$i$us = 1;$$189$us$us$i$us = $$093$us$us$i$us;\n     while(1) {\n      $45 = (($2) + ($$08288$us$us$i$us<<2)|0);\n      $46 = HEAP32[$45>>2]|0;\n      $47 = (($46) + ($$18490$us$us$i$us<<2)|0);\n      $48 = HEAP32[$47>>2]|0;\n      $ispos85$us$us$i$us = ($48|0)>(-1);\n      $neg86$us$us$i$us = (0 - ($48))|0;\n      $49 = $ispos85$us$us$i$us ? $48 : $neg86$us$us$i$us;\n      $50 = ($49|0)>($$189$us$us$i$us|0);\n      $$$1$us$us$i$us = $50 ? $49 : $$189$us$us$i$us;\n      $51 = (($$08288$us$us$i$us) + 1)|0;\n      $exitcond$i$us = ($51|0)==($4|0);\n      if ($exitcond$i$us) {\n       break;\n      } else {\n       $$08288$us$us$i$us = $51;$$189$us$us$i$us = $$$1$us$us$i$us;\n      }\n     }\n     $52 = ($44|0)>($$07792$us$us$i$us|0);\n     $$$077$us$us$i$us = $52 ? $44 : $$07792$us$us$i$us;\n     $53 = (($$18490$us$us$i$us) + 1)|0;\n     $54 = (($$08091$us$us$i$us) + ($4))|0;\n     $55 = ($54|0)<($13|0);\n     if ($55) {\n      $$07792$us$us$i$us = $$$077$us$us$i$us;$$08091$us$us$i$us = $54;$$093$us$us$i$us = $$$1$us$us$i$us;$$18490$us$us$i$us = $53;\n     } else {\n      break;\n     }\n    }\n    L45: do {\n     if ($27) {\n      $$18198$us$i$us = 0;\n      while(1) {\n       $56 = (((($11)) + 2328|0) + ($$18198$us$i$us<<2)|0);\n       $57 = HEAP32[$56>>2]|0;\n       $58 = ($$$077$us$us$i$us|0)>($57|0);\n       if (!($58)) {\n        $59 = (((($11)) + 2584|0) + ($$18198$us$i$us<<2)|0);\n        $60 = HEAP32[$59>>2]|0;\n        $61 = ($$$1$us$us$i$us|0)>($60|0);\n        if (!($61)) {\n         $$181$lcssa$us$i$us = $$18198$us$i$us;\n         break L45;\n        }\n       }\n       $62 = (($$18198$us$i$us) + 1)|0;\n       $63 = ($62|0)<($26|0);\n       if ($63) {\n        $$18198$us$i$us = $62;\n       } else {\n        $$181$lcssa$us$i$us = $62;\n        break;\n       }\n      }\n     } else {\n      $$181$lcssa$us$i$us = 0;\n     }\n    } while(0);\n    $64 = (($28) + ($$079105$us$i$us<<2)|0);\n    HEAP32[$64>>2] = $$181$lcssa$us$i$us;\n    $65 = (($$079105$us$i$us) + 1)|0;\n    $exitcond131$i$us = ($65|0)==($20|0);\n    if ($exitcond131$i$us) {\n     break;\n    } else {\n     $$079105$us$i$us = $65;$$083104$us$i$us = $53;\n    }\n   }\n  }\n } while(0);\n $83 = ((($1)) + 40|0);\n $84 = HEAP32[$83>>2]|0;\n $85 = (($84) + 1)|0;\n HEAP32[$83>>2] = $85;\n $$015 = $21;\n return ($$015|0);\n}\nfunction _res2_forward($0,$1,$2,$3,$4,$5,$6,$7) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$037$ = 0, $$037$$us = 0, $$037$lcssa = 0, $$03744 = 0, $$03744$us = 0, $$03843 = 0, $$03843$us = 0, $$03942$us = 0, $$04041$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond49 = 0, $not$ = 0, $not$$us = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $8 = sp;\n $9 = ((($1)) + 36|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = (($10|0) / 2)&-1;\n $12 = $5 << 2;\n $13 = Math_imul($12, $11)|0;\n $14 = (__vorbis_block_alloc($1,$13)|0);\n HEAP32[$8>>2] = $14;\n $15 = ($5|0)>(0);\n if (!($15)) {\n  STACKTOP = sp;return 0;\n }\n $16 = ($10|0)>(1);\n if ($16) {\n  $$03744$us = 0;$$03843$us = 0;\n  while(1) {\n   $17 = (($3) + ($$03843$us<<2)|0);\n   $18 = HEAP32[$17>>2]|0;\n   $19 = (($4) + ($$03843$us<<2)|0);\n   $20 = HEAP32[$19>>2]|0;\n   $not$$us = ($20|0)!=(0);\n   $21 = $not$$us&1;\n   $$03942$us = $$03843$us;$$04041$us = 0;\n   while(1) {\n    $22 = (($18) + ($$04041$us<<2)|0);\n    $23 = HEAP32[$22>>2]|0;\n    $24 = (($14) + ($$03942$us<<2)|0);\n    HEAP32[$24>>2] = $23;\n    $25 = (($$04041$us) + 1)|0;\n    $26 = (($$03942$us) + ($5))|0;\n    $27 = ($25|0)<($11|0);\n    if ($27) {\n     $$03942$us = $26;$$04041$us = $25;\n    } else {\n     break;\n    }\n   }\n   $$037$$us = (($21) + ($$03744$us))|0;\n   $28 = (($$03843$us) + 1)|0;\n   $exitcond = ($28|0)==($5|0);\n   if ($exitcond) {\n    $$037$lcssa = $$037$$us;\n    break;\n   } else {\n    $$03744$us = $$037$$us;$$03843$us = $28;\n   }\n  }\n } else {\n  $$03744 = 0;$$03843 = 0;\n  while(1) {\n   $29 = (($4) + ($$03843<<2)|0);\n   $30 = HEAP32[$29>>2]|0;\n   $not$ = ($30|0)!=(0);\n   $31 = $not$&1;\n   $$037$ = (($31) + ($$03744))|0;\n   $32 = (($$03843) + 1)|0;\n   $exitcond49 = ($32|0)==($5|0);\n   if ($exitcond49) {\n    $$037$lcssa = $$037$;\n    break;\n   } else {\n    $$03744 = $$037$;$$03843 = $32;\n   }\n  }\n }\n $33 = ($$037$lcssa|0)==(0);\n if ($33) {\n  STACKTOP = sp;return 0;\n }\n __01forward($0,$2,$8,1,$6);\n STACKTOP = sp;return 0;\n}\nfunction _res2_inverse($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0, $$0104$lcssa = 0, $$0104130 = 0, $$0109122 = 0, $$0109122$us = 0, $$0110124 = 0, $$0110124$us = 0, $$0111127 = 0, $$1105125 = 0, $$1105125$us = 0, $$2$lcssa = 0, $$2$lcssa$us = 0, $$2123 = 0, $$2123$us = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;\n var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$us = 0;\n var $or$cond121 = 0, $or$cond121$us = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = HEAP32[$1>>2]|0;\n $6 = ((($5)) + 8|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($1)) + 16|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = HEAP32[$9>>2]|0;\n $11 = ((($0)) + 36|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = Math_imul($12, $4)|0;\n $14 = $13 >> 1;\n $15 = ((($5)) + 4|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ($16|0)<($14|0);\n $$ = $17 ? $16 : $14;\n $18 = HEAP32[$5>>2]|0;\n $19 = (($$) - ($18))|0;\n $20 = ($19|0)>(0);\n if (!($20)) {\n  return 0;\n }\n $21 = (($19|0) / ($7|0))&-1;\n $22 = (($10) + -1)|0;\n $23 = (($22) + ($21))|0;\n $24 = (($23|0) / ($10|0))&-1;\n $25 = $24 << 2;\n $26 = (__vorbis_block_alloc($0,$25)|0);\n $27 = ($4|0)>(0);\n L4: do {\n  if ($27) {\n   $$0104130 = 0;\n   while(1) {\n    $28 = (($3) + ($$0104130<<2)|0);\n    $29 = HEAP32[$28>>2]|0;\n    $30 = ($29|0)==(0);\n    if (!($30)) {\n     $$0104$lcssa = $$0104130;\n     break L4;\n    }\n    $31 = (($$0104130) + 1)|0;\n    $32 = ($31|0)<($4|0);\n    if ($32) {\n     $$0104130 = $31;\n    } else {\n     $$0104$lcssa = $31;\n     break;\n    }\n   }\n  } else {\n   $$0104$lcssa = 0;\n  }\n } while(0);\n $33 = ($$0104$lcssa|0)==($4|0);\n if ($33) {\n  return 0;\n }\n $34 = ((($1)) + 8|0);\n $35 = HEAP32[$34>>2]|0;\n $36 = ($35|0)>(0);\n if (!($36)) {\n  return 0;\n }\n $37 = ($21|0)>(0);\n $38 = ((($0)) + 4|0);\n $39 = ((($5)) + 16|0);\n $40 = ((($1)) + 28|0);\n $41 = ($10|0)>(0);\n $42 = ((($1)) + 20|0);\n $$0111127 = 0;\n L15: while(1) {\n  L17: do {\n   if ($37) {\n    $43 = ($$0111127|0)==(0);\n    $44 = 1 << $$0111127;\n    if ($43) {\n     $$0110124$us = 0;$$1105125$us = 0;\n    } else {\n     $$0110124 = 0;$$1105125 = 0;\n     while(1) {\n      $79 = ($$1105125|0)<($21|0);\n      $or$cond121 = $41 & $79;\n      if ($or$cond121) {\n       $80 = (($26) + ($$0110124<<2)|0);\n       $$0109122 = 0;$$2123 = $$1105125;\n       while(1) {\n        $81 = HEAP32[$80>>2]|0;\n        $82 = (($81) + ($$0109122<<2)|0);\n        $83 = HEAP32[$82>>2]|0;\n        $84 = (((($5)) + 24|0) + ($83<<2)|0);\n        $85 = HEAP32[$84>>2]|0;\n        $86 = $85 & $44;\n        $87 = ($86|0)==(0);\n        if (!($87)) {\n         $88 = HEAP32[$42>>2]|0;\n         $89 = (($88) + ($83<<2)|0);\n         $90 = HEAP32[$89>>2]|0;\n         $91 = (($90) + ($$0111127<<2)|0);\n         $92 = HEAP32[$91>>2]|0;\n         $93 = ($92|0)==(0|0);\n         if (!($93)) {\n          $94 = Math_imul($$2123, $7)|0;\n          $95 = HEAP32[$5>>2]|0;\n          $96 = (($95) + ($94))|0;\n          $97 = (_vorbis_book_decodevv_add($92,$2,$96,$4,$38,$7)|0);\n          $98 = ($97|0)==(-1);\n          if ($98) {\n           label = 28;\n           break L15;\n          }\n         }\n        }\n        $99 = (($$0109122) + 1)|0;\n        $100 = (($$2123) + 1)|0;\n        $101 = ($99|0)<($10|0);\n        $102 = ($100|0)<($21|0);\n        $or$cond = $101 & $102;\n        if ($or$cond) {\n         $$0109122 = $99;$$2123 = $100;\n        } else {\n         $$2$lcssa = $100;\n         break;\n        }\n       }\n      } else {\n       $$2$lcssa = $$1105125;\n      }\n      $103 = (($$0110124) + 1)|0;\n      $104 = ($$2$lcssa|0)<($21|0);\n      if ($104) {\n       $$0110124 = $103;$$1105125 = $$2$lcssa;\n      } else {\n       break L17;\n      }\n     }\n    }\n    while(1) {\n     $45 = HEAP32[$8>>2]|0;\n     $46 = (_vorbis_book_decode($45,$38)|0);\n     $47 = ($46|0)==(-1);\n     if ($47) {\n      label = 28;\n      break L15;\n     }\n     $48 = HEAP32[$39>>2]|0;\n     $49 = ($46|0)<($48|0);\n     if (!($49)) {\n      label = 28;\n      break L15;\n     }\n     $50 = HEAP32[$40>>2]|0;\n     $51 = (($50) + ($46<<2)|0);\n     $52 = HEAP32[$51>>2]|0;\n     $53 = (($26) + ($$0110124$us<<2)|0);\n     HEAP32[$53>>2] = $52;\n     $54 = ($52|0)==(0|0);\n     if ($54) {\n      label = 28;\n      break L15;\n     }\n     $78 = ($$1105125$us|0)<($21|0);\n     $or$cond121$us = $41 & $78;\n     L36: do {\n      if ($or$cond121$us) {\n       $$0109122$us = 0;$$2123$us = $$1105125$us;$58 = $52;\n       while(1) {\n        $57 = (($58) + ($$0109122$us<<2)|0);\n        $59 = HEAP32[$57>>2]|0;\n        $60 = (((($5)) + 24|0) + ($59<<2)|0);\n        $61 = HEAP32[$60>>2]|0;\n        $62 = $61 & $44;\n        $63 = ($62|0)==(0);\n        if (!($63)) {\n         $64 = HEAP32[$42>>2]|0;\n         $65 = (($64) + ($59<<2)|0);\n         $66 = HEAP32[$65>>2]|0;\n         $67 = HEAP32[$66>>2]|0;\n         $68 = ($67|0)==(0|0);\n         if (!($68)) {\n          $69 = Math_imul($$2123$us, $7)|0;\n          $70 = HEAP32[$5>>2]|0;\n          $71 = (($70) + ($69))|0;\n          $72 = (_vorbis_book_decodevv_add($67,$2,$71,$4,$38,$7)|0);\n          $73 = ($72|0)==(-1);\n          if ($73) {\n           label = 28;\n           break L15;\n          }\n         }\n        }\n        $74 = (($$0109122$us) + 1)|0;\n        $75 = (($$2123$us) + 1)|0;\n        $76 = ($74|0)<($10|0);\n        $77 = ($75|0)<($21|0);\n        $or$cond$us = $76 & $77;\n        if (!($or$cond$us)) {\n         $$2$lcssa$us = $75;\n         break L36;\n        }\n        $$pre = HEAP32[$53>>2]|0;\n        $$0109122$us = $74;$$2123$us = $75;$58 = $$pre;\n       }\n      } else {\n       $$2$lcssa$us = $$1105125$us;\n      }\n     } while(0);\n     $55 = (($$0110124$us) + 1)|0;\n     $56 = ($$2$lcssa$us|0)<($21|0);\n     if ($56) {\n      $$0110124$us = $55;$$1105125$us = $$2$lcssa$us;\n     } else {\n      break;\n     }\n    }\n   }\n  } while(0);\n  $105 = (($$0111127) + 1)|0;\n  $106 = HEAP32[$34>>2]|0;\n  $107 = ($105|0)<($106|0);\n  if ($107) {\n   $$0111127 = $105;\n  } else {\n   label = 28;\n   break;\n  }\n }\n if ((label|0) == 28) {\n  return 0;\n }\n return (0)|0;\n}\nfunction _ov_ilog($0) {\n $0 = $0|0;\n var $$0$lcssa = 0, $$056 = 0, $$07 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0);\n if ($1) {\n  $$0$lcssa = 0;\n } else {\n  $$056 = $0;$$07 = 0;\n  while(1) {\n   $2 = $$056 >>> 1;\n   $3 = (($$07) + 1)|0;\n   $4 = ($2|0)==(0);\n   if ($4) {\n    $$0$lcssa = $3;\n    break;\n   } else {\n    $$056 = $2;$$07 = $3;\n   }\n  }\n }\n return ($$0$lcssa|0);\n}\nfunction __make_words($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$086 = 0, $$0$lcssa = 0, $$0$lcssa$us = 0, $$0108 = 0, $$0108$us = 0, $$080118 = 0, $$083123 = 0, $$086122 = 0, $$091113$lcssa = 0, $$091113145 = 0, $$184112 = 0, $$192 = 0, $$192$in117 = 0, $$192$in117$phi = 0, $$192116 = 0, $$192119 = 0, $$285111 = 0, $$285111$us = 0, $$293107 = 0, $$293107$us = 0;\n var $$389$ph = 0, $$4 = 0, $$490110$us = 0, $$5$us = 0, $$6$us = 0, $$lcssa142 = 0, $$phi$trans$insert = 0, $$pre = 0, $$sink2$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;\n var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;\n var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $exitcond = 0, $exitcond133 = 0, $or$cond = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);\n $3 = sp;\n $4 = ($2|0)!=(0);\n $5 = $4 ? $2 : $1;\n $6 = $5 << 2;\n $7 = (_malloc($6)|0);\n _memset(($3|0),0,132)|0;\n $8 = ($1|0)>(0);\n do {\n  if ($8) {\n   $9 = ((($3)) + 4|0);\n   $10 = ($2|0)==(0);\n   $11 = $10&1;\n   $$083123 = 0;$$086122 = 0;\n   L3: while(1) {\n    $12 = (($0) + ($$083123)|0);\n    $13 = HEAP8[$12>>0]|0;\n    $14 = $13 << 24 >> 24;\n    $15 = ($13<<24>>24)>(0);\n    L5: do {\n     if ($15) {\n      $16 = (($3) + ($14<<2)|0);\n      $17 = HEAP32[$16>>2]|0;\n      $18 = ($13<<24>>24)>(31);\n      $19 = $17 >>> $14;\n      $20 = ($19|0)==(0);\n      $or$cond = $18 | $20;\n      if (!($or$cond)) {\n       label = 15;\n       break L3;\n      }\n      $21 = (($$086122) + 1)|0;\n      $22 = (($7) + ($$086122<<2)|0);\n      HEAP32[$22>>2] = $17;\n      $23 = (($3) + ($14<<2)|0);\n      $24 = $17 & 1;\n      $25 = ($24|0)==(0);\n      L8: do {\n       if ($25) {\n        $$091113145 = $14;$35 = $17;$36 = $23;\n        while(1) {\n         $34 = (($35) + 1)|0;\n         HEAP32[$36>>2] = $34;\n         $37 = (($$091113145) + -1)|0;\n         $38 = ($$091113145|0)>(1);\n         if (!($38)) {\n          break L8;\n         }\n         $$phi$trans$insert = (($3) + ($37<<2)|0);\n         $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n         $39 = (($3) + ($37<<2)|0);\n         $40 = $$pre & 1;\n         $41 = ($40|0)==(0);\n         if ($41) {\n          $$091113145 = $37;$35 = $$pre;$36 = $39;\n         } else {\n          $$091113$lcssa = $37;$$lcssa142 = $39;\n          label = 7;\n          break;\n         }\n        }\n       } else {\n        $$091113$lcssa = $14;$$lcssa142 = $23;\n        label = 7;\n       }\n      } while(0);\n      do {\n       if ((label|0) == 7) {\n        label = 0;\n        $27 = ($$091113$lcssa|0)==(1);\n        if ($27) {\n         $28 = HEAP32[$9>>2]|0;\n         $29 = (($28) + 1)|0;\n         HEAP32[$9>>2] = $29;\n         break;\n        } else {\n         $30 = (($$091113$lcssa) + -1)|0;\n         $31 = (($3) + ($30<<2)|0);\n         $32 = HEAP32[$31>>2]|0;\n         $33 = $32 << 1;\n         HEAP32[$$lcssa142>>2] = $33;\n         break;\n        }\n       }\n      } while(0);\n      $$192116 = (($14) + 1)|0;\n      $26 = ($$192116|0)<(33);\n      if ($26) {\n       $$080118 = $17;$$192$in117 = $14;$$192119 = $$192116;\n       while(1) {\n        $42 = (($3) + ($$192119<<2)|0);\n        $43 = HEAP32[$42>>2]|0;\n        $44 = $43 >>> 1;\n        $45 = ($44|0)==($$080118|0);\n        if (!($45)) {\n         $$389$ph = $21;\n         break L5;\n        }\n        $46 = (($3) + ($$192$in117<<2)|0);\n        $47 = HEAP32[$46>>2]|0;\n        $48 = $47 << 1;\n        HEAP32[$42>>2] = $48;\n        $$192 = (($$192119) + 1)|0;\n        $49 = ($$192|0)<(33);\n        if ($49) {\n         $$192$in117$phi = $$192119;$$080118 = $43;$$192119 = $$192;$$192$in117 = $$192$in117$phi;\n        } else {\n         $$389$ph = $21;\n         break;\n        }\n       }\n      } else {\n       $$389$ph = $21;\n      }\n     } else {\n      $$$086 = (($$086122) + ($11))|0;\n      $$389$ph = $$$086;\n     }\n    } while(0);\n    $50 = (($$083123) + 1)|0;\n    $51 = ($50|0)<($1|0);\n    if ($51) {\n     $$083123 = $50;$$086122 = $$389$ph;\n    } else {\n     label = 17;\n     break;\n    }\n   }\n   if ((label|0) == 15) {\n    _free($7);\n    $$4 = 0;\n    STACKTOP = sp;return ($$4|0);\n   }\n   else if ((label|0) == 17) {\n    $52 = ($$389$ph|0)==(1);\n    if (!($52)) {\n     $$184112 = 1;\n     label = 28;\n     break;\n    }\n    $53 = ((($3)) + 8|0);\n    $54 = HEAP32[$53>>2]|0;\n    $55 = ($54|0)==(2);\n    if ($55) {\n     break;\n    } else {\n     $$184112 = 1;\n     label = 28;\n     break;\n    }\n   }\n  } else {\n   $$184112 = 1;\n   label = 28;\n  }\n } while(0);\n L28: do {\n  if ((label|0) == 28) {\n   while(1) {\n    label = 0;\n    $72 = (($3) + ($$184112<<2)|0);\n    $73 = HEAP32[$72>>2]|0;\n    $74 = (32 - ($$184112))|0;\n    $75 = -1 >>> $74;\n    $76 = $73 & $75;\n    $77 = ($76|0)==(0);\n    $70 = (($$184112) + 1)|0;\n    if (!($77)) {\n     break;\n    }\n    $71 = ($70|0)<(33);\n    if ($71) {\n     $$184112 = $70;\n     label = 28;\n    } else {\n     break L28;\n    }\n   }\n   _free($7);\n   $$4 = 0;\n   STACKTOP = sp;return ($$4|0);\n  }\n } while(0);\n if (!($8)) {\n  $$4 = $7;\n  STACKTOP = sp;return ($$4|0);\n }\n if ($4) {\n  $$285111$us = 0;$$490110$us = 0;\n } else {\n  $$285111 = 0;\n  while(1) {\n   $78 = (($0) + ($$285111)|0);\n   $79 = HEAP8[$78>>0]|0;\n   $80 = ($79<<24>>24)>(0);\n   $81 = (($7) + ($$285111<<2)|0);\n   if ($80) {\n    $82 = HEAP32[$81>>2]|0;\n    $83 = $79 << 24 >> 24;\n    $$0108 = 0;$$293107 = 0;\n    while(1) {\n     $84 = $$0108 << 1;\n     $85 = $82 >>> $$293107;\n     $86 = $85 & 1;\n     $87 = $86 | $84;\n     $88 = (($$293107) + 1)|0;\n     $89 = ($88|0)<($83|0);\n     if ($89) {\n      $$0108 = $87;$$293107 = $88;\n     } else {\n      $$0$lcssa = $87;\n      break;\n     }\n    }\n   } else {\n    $$0$lcssa = 0;\n   }\n   $90 = (($$285111) + 1)|0;\n   HEAP32[$81>>2] = $$0$lcssa;\n   $exitcond133 = ($90|0)==($1|0);\n   if ($exitcond133) {\n    $$4 = $7;\n    break;\n   } else {\n    $$285111 = $90;\n   }\n  }\n  STACKTOP = sp;return ($$4|0);\n }\n while(1) {\n  $56 = (($0) + ($$285111$us)|0);\n  $57 = HEAP8[$56>>0]|0;\n  $58 = ($57<<24>>24)>(0);\n  if ($58) {\n   $69 = (($7) + ($$490110$us<<2)|0);\n   $63 = HEAP32[$69>>2]|0;\n   $68 = $57 << 24 >> 24;\n   $$0108$us = 0;$$293107$us = 0;\n   while(1) {\n    $61 = $$0108$us << 1;\n    $62 = $63 >>> $$293107$us;\n    $64 = $62 & 1;\n    $65 = $64 | $61;\n    $66 = (($$293107$us) + 1)|0;\n    $67 = ($66|0)<($68|0);\n    if ($67) {\n     $$0108$us = $65;$$293107$us = $66;\n    } else {\n     $$0$lcssa$us = $65;\n     break;\n    }\n   }\n  } else {\n   $$0$lcssa$us = 0;\n  }\n  $59 = ($57<<24>>24)==(0);\n  if ($59) {\n   $$6$us = $$490110$us;\n  } else {\n   $$5$us = (($$490110$us) + 1)|0;\n   $$sink2$us = (($7) + ($$490110$us<<2)|0);\n   HEAP32[$$sink2$us>>2] = $$0$lcssa$us;\n   $$6$us = $$5$us;\n  }\n  $60 = (($$285111$us) + 1)|0;\n  $exitcond = ($60|0)==($1|0);\n  if ($exitcond) {\n   $$4 = $7;\n   break;\n  } else {\n   $$285111$us = $60;$$490110$us = $$6$us;\n  }\n }\n STACKTOP = sp;return ($$4|0);\n}\nfunction __book_maptype1_quantvals($0) {\n $0 = $0|0;\n var $$02533$us = 0, $$02632$us = 0, $$02731$us = 0, $$028$us = 0, $$sink$us = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0;\n var $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $or$cond$us = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 4|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = HEAP32[$0>>2]|0;\n $4 = ($3|0)>(0);\n if (!($4)) {\n  while(1) {\n  }\n }\n $5 = (+($2|0));\n $6 = $5;\n $7 = (+($3|0));\n $8 = 1.0 / $7;\n $9 = $8;\n $10 = (+Math_pow((+$6),(+$9)));\n $11 = (+Math_floor((+$10)));\n $12 = (~~(($11)));\n $$028$us = $12;\n while(1) {\n  $13 = (($$028$us) + 1)|0;\n  $$02533$us = 0;$$02632$us = 1;$$02731$us = 1;\n  while(1) {\n   $14 = Math_imul($$02731$us, $$028$us)|0;\n   $15 = Math_imul($$02632$us, $13)|0;\n   $16 = (($$02533$us) + 1)|0;\n   $17 = ($16|0)<($3|0);\n   if ($17) {\n    $$02533$us = $16;$$02632$us = $15;$$02731$us = $14;\n   } else {\n    break;\n   }\n  }\n  $18 = ($14|0)<=($2|0);\n  $19 = ($15|0)>($2|0);\n  $or$cond$us = $18 & $19;\n  $20 = ($14|0)>($2|0);\n  $$sink$us = $20 ? -1 : 1;\n  $21 = (($$sink$us) + ($$028$us))|0;\n  if ($or$cond$us) {\n   break;\n  } else {\n   $$028$us = $21;\n  }\n }\n return ($$028$us|0);\n}\nfunction __book_unquantize($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$i = 0.0, $$$i117 = 0.0, $$0105 = 0, $$0106124 = 0, $$0106124$us = 0, $$0106124$us$us = 0, $$0106124$us125 = 0, $$0107123 = 0.0, $$0107123$us = 0.0, $$0109138 = 0, $$0111122 = 0, $$0111122$us = 0, $$0111122$us$us = 0, $$0111122$us127 = 0, $$0113133 = 0, $$0146 = 0.0, $$0146$us = 0.0, $$02533$us$i = 0, $$02632$us$i = 0, $$02731$us$i = 0;\n var $$028$us$i = 0, $$1110161 = 0, $$1112145 = 0, $$1112145$us = 0, $$1112145$us$us = 0, $$1112145$us150 = 0, $$1114 = 0, $$2156 = 0, $$3 = 0, $$off = 0, $$pn$us$us = 0, $$pn$us154 = 0, $$pn116$us$us = 0, $$pn116$us131 = 0, $$pre176 = 0, $$sink$us$i = 0, $$sink2 = 0, $$sink2$us = 0, $$sink2$us$us = 0, $$sink2$us132 = 0;\n var $$sink6 = 0, $$sink6$us = 0, $$sink6$us$us = 0, $$sink6$us155 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0;\n var $114 = 0.0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0;\n var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0.0, $15 = 0.0;\n var $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0, $168 = 0;\n var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0.0, $186 = 0.0;\n var $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0.0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0;\n var $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0.0;\n var $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0.0, $80 = 0.0, $81 = 0.0;\n var $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0, $exitcond = 0;\n var $fabsf = 0.0, $fabsf$us = 0.0, $fabsf$us$us = 0.0, $fabsf$us151 = 0.0, $fabsf115 = 0.0, $fabsf115$us = 0.0, $fabsf115$us$us = 0.0, $fabsf115$us128 = 0.0, $or$cond$us$i = 0, $switch = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 12|0);\n $4 = HEAP32[$3>>2]|0;\n $$off = (($4) + -1)|0;\n $switch = ($$off>>>0)<(2);\n if (!($switch)) {\n  $$0105 = 0;\n  return ($$0105|0);\n }\n $5 = ((($0)) + 16|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 2097151;\n $8 = (+($7|0));\n $9 = $6 >>> 21;\n $10 = $9 & 1023;\n $11 = ($6|0)<(0);\n $12 = -$8;\n $$$i = $11 ? $12 : $8;\n $13 = (($10) + -788)|0;\n $14 = (+_ldexp($$$i,$13));\n $15 = $14;\n $16 = ((($0)) + 20|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = $17 & 2097151;\n $19 = (+($18|0));\n $20 = $17 >>> 21;\n $21 = $20 & 1023;\n $22 = ($17|0)<(0);\n $23 = -$19;\n $$$i117 = $22 ? $23 : $19;\n $24 = (($21) + -788)|0;\n $25 = (+_ldexp($$$i117,$24));\n $26 = $25;\n $27 = HEAP32[$0>>2]|0;\n $28 = Math_imul($27, $1)|0;\n $29 = (_calloc($28,4)|0);\n switch ($4|0) {\n case 1:  {\n  $40 = ((($0)) + 4|0);\n  $41 = HEAP32[$40>>2]|0;\n  $42 = ($27|0)>(0);\n  if (!($42)) {\n   while(1) {\n   }\n  }\n  $43 = (+($41|0));\n  $44 = $43;\n  $45 = (+($27|0));\n  $46 = 1.0 / $45;\n  $47 = $46;\n  $48 = (+Math_pow((+$44),(+$47)));\n  $49 = (+Math_floor((+$48)));\n  $50 = (~~(($49)));\n  $$028$us$i = $50;\n  while(1) {\n   $51 = (($$028$us$i) + 1)|0;\n   $$02533$us$i = 0;$$02632$us$i = 1;$$02731$us$i = 1;\n   while(1) {\n    $52 = Math_imul($$02731$us$i, $$028$us$i)|0;\n    $53 = Math_imul($$02632$us$i, $51)|0;\n    $54 = (($$02533$us$i) + 1)|0;\n    $exitcond = ($54|0)==($27|0);\n    if ($exitcond) {\n     break;\n    } else {\n     $$02533$us$i = $54;$$02632$us$i = $53;$$02731$us$i = $52;\n    }\n   }\n   $55 = ($52|0)<=($41|0);\n   $56 = ($53|0)>($41|0);\n   $or$cond$us$i = $56 & $55;\n   $57 = ($52|0)>($41|0);\n   $$sink$us$i = $57 ? -1 : 1;\n   $58 = (($$sink$us$i) + ($$028$us$i))|0;\n   if ($or$cond$us$i) {\n    break;\n   } else {\n    $$028$us$i = $58;\n   }\n  }\n  $59 = ($41|0)>(0);\n  if (!($59)) {\n   $$0105 = $29;\n   return ($$0105|0);\n  }\n  $60 = ($2|0)==(0|0);\n  $61 = ((($0)) + 8|0);\n  $62 = ((($0)) + 32|0);\n  $63 = $26;\n  $64 = $15;\n  $65 = ((($0)) + 28|0);\n  $$0109138 = 0;$$0113133 = 0;\n  while(1) {\n   if ($60) {\n    $103 = HEAP32[$62>>2]|0;\n    $104 = HEAP32[$65>>2]|0;\n    $105 = ($104|0)==(0);\n    $$pn116$us131 = Math_imul($$0113133, $27)|0;\n    if ($105) {\n     $$0106124$us125 = 1;$$0111122$us127 = 0;\n     while(1) {\n      $106 = (($$0109138|0) / ($$0106124$us125|0))&-1;\n      $107 = (($106|0) % ($$028$us$i|0))&-1;\n      $108 = (($103) + ($107<<2)|0);\n      $109 = HEAP32[$108>>2]|0;\n      $110 = (+($109|0));\n      $fabsf115$us128 = (+Math_abs((+$110)));\n      $111 = $fabsf115$us128;\n      $112 = $111 * $63;\n      $113 = $64 + $112;\n      $114 = $113;\n      $$sink2$us132 = (($$pn116$us131) + ($$0111122$us127))|0;\n      $115 = (($29) + ($$sink2$us132<<2)|0);\n      HEAPF32[$115>>2] = $114;\n      $116 = Math_imul($$0106124$us125, $$028$us$i)|0;\n      $117 = (($$0111122$us127) + 1)|0;\n      $118 = ($117|0)<($27|0);\n      if ($118) {\n       $$0106124$us125 = $116;$$0111122$us127 = $117;\n      } else {\n       label = 21;\n       break;\n      }\n     }\n    } else {\n     $$0106124 = 1;$$0107123 = 0.0;$$0111122 = 0;\n     while(1) {\n      $119 = (($$0109138|0) / ($$0106124|0))&-1;\n      $120 = (($119|0) % ($$028$us$i|0))&-1;\n      $121 = (($103) + ($120<<2)|0);\n      $122 = HEAP32[$121>>2]|0;\n      $123 = (+($122|0));\n      $fabsf115 = (+Math_abs((+$123)));\n      $124 = $fabsf115;\n      $125 = $124 * $63;\n      $126 = $$0107123;\n      $127 = $126 + $64;\n      $128 = $127 + $125;\n      $129 = $128;\n      $$sink2 = (($$pn116$us131) + ($$0111122))|0;\n      $130 = (($29) + ($$sink2<<2)|0);\n      HEAPF32[$130>>2] = $129;\n      $131 = Math_imul($$0106124, $$028$us$i)|0;\n      $132 = (($$0111122) + 1)|0;\n      $133 = ($132|0)<($27|0);\n      if ($133) {\n       $$0106124 = $131;$$0107123 = $129;$$0111122 = $132;\n      } else {\n       label = 21;\n       break;\n      }\n     }\n    }\n   } else {\n    $66 = HEAP32[$61>>2]|0;\n    $67 = (($66) + ($$0109138)|0);\n    $68 = HEAP8[$67>>0]|0;\n    $69 = ($68<<24>>24)==(0);\n    if ($69) {\n     $$1114 = $$0113133;\n    } else {\n     $70 = HEAP32[$62>>2]|0;\n     $71 = HEAP32[$65>>2]|0;\n     $72 = ($71|0)==(0);\n     $73 = (($2) + ($$0113133<<2)|0);\n     $74 = HEAP32[$73>>2]|0;\n     $$pn116$us$us = Math_imul($74, $27)|0;\n     if ($72) {\n      $$0106124$us$us = 1;$$0111122$us$us = 0;\n      while(1) {\n       $75 = (($$0109138|0) / ($$0106124$us$us|0))&-1;\n       $76 = (($75|0) % ($$028$us$i|0))&-1;\n       $77 = (($70) + ($76<<2)|0);\n       $78 = HEAP32[$77>>2]|0;\n       $79 = (+($78|0));\n       $fabsf115$us$us = (+Math_abs((+$79)));\n       $80 = $fabsf115$us$us;\n       $81 = $80 * $63;\n       $82 = $64 + $81;\n       $83 = $82;\n       $$sink2$us$us = (($$pn116$us$us) + ($$0111122$us$us))|0;\n       $84 = (($29) + ($$sink2$us$us<<2)|0);\n       HEAPF32[$84>>2] = $83;\n       $85 = Math_imul($$0106124$us$us, $$028$us$i)|0;\n       $86 = (($$0111122$us$us) + 1)|0;\n       $87 = ($86|0)<($27|0);\n       if ($87) {\n        $$0106124$us$us = $85;$$0111122$us$us = $86;\n       } else {\n        label = 21;\n        break;\n       }\n      }\n     } else {\n      $$0106124$us = 1;$$0107123$us = 0.0;$$0111122$us = 0;\n      while(1) {\n       $88 = (($$0109138|0) / ($$0106124$us|0))&-1;\n       $89 = (($88|0) % ($$028$us$i|0))&-1;\n       $90 = (($70) + ($89<<2)|0);\n       $91 = HEAP32[$90>>2]|0;\n       $92 = (+($91|0));\n       $fabsf115$us = (+Math_abs((+$92)));\n       $93 = $fabsf115$us;\n       $94 = $93 * $63;\n       $95 = $$0107123$us;\n       $96 = $95 + $64;\n       $97 = $96 + $94;\n       $98 = $97;\n       $$sink2$us = (($$pn116$us$us) + ($$0111122$us))|0;\n       $99 = (($29) + ($$sink2$us<<2)|0);\n       HEAPF32[$99>>2] = $98;\n       $100 = Math_imul($$0106124$us, $$028$us$i)|0;\n       $101 = (($$0111122$us) + 1)|0;\n       $102 = ($101|0)<($27|0);\n       if ($102) {\n        $$0106124$us = $100;$$0107123$us = $98;$$0111122$us = $101;\n       } else {\n        label = 21;\n        break;\n       }\n      }\n     }\n    }\n   }\n   if ((label|0) == 21) {\n    label = 0;\n    $134 = (($$0113133) + 1)|0;\n    $$1114 = $134;\n   }\n   $135 = (($$0109138) + 1)|0;\n   $136 = ($135|0)<($41|0);\n   if ($136) {\n    $$0109138 = $135;$$0113133 = $$1114;\n   } else {\n    $$0105 = $29;\n    break;\n   }\n  }\n  return ($$0105|0);\n  break;\n }\n case 2:  {\n  $30 = ((($0)) + 4|0);\n  $31 = HEAP32[$30>>2]|0;\n  $32 = ($31|0)>(0);\n  if (!($32)) {\n   $$0105 = $29;\n   return ($$0105|0);\n  }\n  $33 = ($2|0)!=(0|0);\n  $34 = ((($0)) + 8|0);\n  $35 = ((($0)) + 32|0);\n  $36 = $26;\n  $37 = $15;\n  $38 = ((($0)) + 28|0);\n  $39 = ($27|0)>(0);\n  $$1110161 = 0;$$2156 = 0;\n  while(1) {\n   if ($33) {\n    $137 = HEAP32[$34>>2]|0;\n    $138 = (($137) + ($$1110161)|0);\n    $139 = HEAP8[$138>>0]|0;\n    $140 = ($139<<24>>24)==(0);\n    if ($140) {\n     $$3 = $$2156;\n    } else {\n     label = 25;\n    }\n   } else {\n    label = 25;\n   }\n   if ((label|0) == 25) {\n    label = 0;\n    if ($39) {\n     $141 = HEAP32[$35>>2]|0;\n     $142 = HEAP32[$38>>2]|0;\n     $143 = ($142|0)==(0);\n     if ($33) {\n      $144 = (($2) + ($$2156<<2)|0);\n      $$pre176 = HEAP32[$144>>2]|0;\n      $145 = Math_imul($27, $$1110161)|0;\n      $$pn$us$us = Math_imul($$pre176, $27)|0;\n      if ($143) {\n       $$1112145$us$us = 0;\n       while(1) {\n        $146 = (($145) + ($$1112145$us$us))|0;\n        $147 = (($141) + ($146<<2)|0);\n        $148 = HEAP32[$147>>2]|0;\n        $149 = (+($148|0));\n        $fabsf$us$us = (+Math_abs((+$149)));\n        $150 = $fabsf$us$us;\n        $151 = $150 * $36;\n        $152 = $37 + $151;\n        $153 = $152;\n        $$sink6$us$us = (($$pn$us$us) + ($$1112145$us$us))|0;\n        $154 = (($29) + ($$sink6$us$us<<2)|0);\n        HEAPF32[$154>>2] = $153;\n        $155 = (($$1112145$us$us) + 1)|0;\n        $156 = ($155|0)<($27|0);\n        if ($156) {\n         $$1112145$us$us = $155;\n        } else {\n         break;\n        }\n       }\n      } else {\n       $$0146$us = 0.0;$$1112145$us = 0;\n       while(1) {\n        $157 = (($145) + ($$1112145$us))|0;\n        $158 = (($141) + ($157<<2)|0);\n        $159 = HEAP32[$158>>2]|0;\n        $160 = (+($159|0));\n        $fabsf$us = (+Math_abs((+$160)));\n        $161 = $fabsf$us;\n        $162 = $161 * $36;\n        $163 = $$0146$us;\n        $164 = $163 + $37;\n        $165 = $164 + $162;\n        $166 = $165;\n        $$sink6$us = (($$pn$us$us) + ($$1112145$us))|0;\n        $167 = (($29) + ($$sink6$us<<2)|0);\n        HEAPF32[$167>>2] = $166;\n        $168 = (($$1112145$us) + 1)|0;\n        $169 = ($168|0)<($27|0);\n        if ($169) {\n         $$0146$us = $166;$$1112145$us = $168;\n        } else {\n         break;\n        }\n       }\n      }\n     } else {\n      $170 = Math_imul($27, $$1110161)|0;\n      $$pn$us154 = Math_imul($$2156, $27)|0;\n      if ($143) {\n       $$1112145$us150 = 0;\n       while(1) {\n        $171 = (($170) + ($$1112145$us150))|0;\n        $172 = (($141) + ($171<<2)|0);\n        $173 = HEAP32[$172>>2]|0;\n        $174 = (+($173|0));\n        $fabsf$us151 = (+Math_abs((+$174)));\n        $175 = $fabsf$us151;\n        $176 = $175 * $36;\n        $177 = $37 + $176;\n        $178 = $177;\n        $$sink6$us155 = (($$pn$us154) + ($$1112145$us150))|0;\n        $179 = (($29) + ($$sink6$us155<<2)|0);\n        HEAPF32[$179>>2] = $178;\n        $180 = (($$1112145$us150) + 1)|0;\n        $181 = ($180|0)<($27|0);\n        if ($181) {\n         $$1112145$us150 = $180;\n        } else {\n         break;\n        }\n       }\n      } else {\n       $$0146 = 0.0;$$1112145 = 0;\n       while(1) {\n        $182 = (($170) + ($$1112145))|0;\n        $183 = (($141) + ($182<<2)|0);\n        $184 = HEAP32[$183>>2]|0;\n        $185 = (+($184|0));\n        $fabsf = (+Math_abs((+$185)));\n        $186 = $fabsf;\n        $187 = $186 * $36;\n        $188 = $$0146;\n        $189 = $188 + $37;\n        $190 = $189 + $187;\n        $191 = $190;\n        $$sink6 = (($$pn$us154) + ($$1112145))|0;\n        $192 = (($29) + ($$sink6<<2)|0);\n        HEAPF32[$192>>2] = $191;\n        $193 = (($$1112145) + 1)|0;\n        $194 = ($193|0)<($27|0);\n        if ($194) {\n         $$0146 = $191;$$1112145 = $193;\n        } else {\n         break;\n        }\n       }\n      }\n     }\n    }\n    $195 = (($$2156) + 1)|0;\n    $$3 = $195;\n   }\n   $196 = (($$1110161) + 1)|0;\n   $197 = ($196|0)<($31|0);\n   if ($197) {\n    $$1110161 = $196;$$2156 = $$3;\n   } else {\n    $$0105 = $29;\n    break;\n   }\n  }\n  return ($$0105|0);\n  break;\n }\n default: {\n  $$0105 = $29;\n  return ($$0105|0);\n }\n }\n return (0)|0;\n}\nfunction _vorbis_staticbook_destroy($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 36|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 32|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if (!($6)) {\n  _free($5);\n }\n $7 = ((($0)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)==(0|0);\n if (!($9)) {\n  _free($8);\n }\n _free($0);\n return;\n}\nfunction _vorbis_book_clear($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 16|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0|0);\n if (!($3)) {\n  _free($2);\n }\n $4 = ((($0)) + 20|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if (!($6)) {\n  _free($5);\n }\n $7 = ((($0)) + 24|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)==(0|0);\n if (!($9)) {\n  _free($8);\n }\n $10 = ((($0)) + 28|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ($11|0)==(0|0);\n if (!($12)) {\n  _free($11);\n }\n $13 = ((($0)) + 32|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = ($14|0)==(0|0);\n if (!($15)) {\n  _free($14);\n }\n dest=$0; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n return;\n}\nfunction _vorbis_book_init_encode($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$i = 0.0, $$$i19 = 0.0, $$02533$us$i = 0, $$02632$us$i = 0, $$02731$us$i = 0, $$028$us$i = 0, $$sink$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0.0;\n var $22 = 0.0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0.0, $41 = 0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $or$cond$us$i = 0, $rintf = 0.0, $rintf18 = 0.0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 16|0);\n dest=$2; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n $3 = ((($0)) + 12|0);\n HEAP32[$3>>2] = $1;\n $4 = ((($1)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($0)) + 4|0);\n HEAP32[$6>>2] = $5;\n $7 = ((($0)) + 8|0);\n HEAP32[$7>>2] = $5;\n $8 = HEAP32[$1>>2]|0;\n HEAP32[$0>>2] = $8;\n $9 = ((($1)) + 8|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = (__make_words($10,$5,0)|0);\n $12 = ((($0)) + 20|0);\n HEAP32[$12>>2] = $11;\n $13 = HEAP32[$4>>2]|0;\n $14 = HEAP32[$1>>2]|0;\n $15 = ($14|0)>(0);\n if (!($15)) {\n  while(1) {\n  }\n }\n $16 = (+($13|0));\n $17 = $16;\n $18 = (+($14|0));\n $19 = 1.0 / $18;\n $20 = $19;\n $21 = (+Math_pow((+$17),(+$20)));\n $22 = (+Math_floor((+$21)));\n $23 = (~~(($22)));\n $$028$us$i = $23;\n while(1) {\n  $24 = (($$028$us$i) + 1)|0;\n  $$02533$us$i = 0;$$02632$us$i = 1;$$02731$us$i = 1;\n  while(1) {\n   $25 = Math_imul($$02731$us$i, $$028$us$i)|0;\n   $26 = Math_imul($$02632$us$i, $24)|0;\n   $27 = (($$02533$us$i) + 1)|0;\n   $exitcond = ($27|0)==($14|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$02533$us$i = $27;$$02632$us$i = $26;$$02731$us$i = $25;\n   }\n  }\n  $28 = ($25|0)<=($13|0);\n  $29 = ($26|0)>($13|0);\n  $or$cond$us$i = $29 & $28;\n  $30 = ($25|0)>($13|0);\n  $$sink$us$i = $30 ? -1 : 1;\n  $31 = (($$sink$us$i) + ($$028$us$i))|0;\n  if ($or$cond$us$i) {\n   break;\n  } else {\n   $$028$us$i = $31;\n  }\n }\n $32 = ((($0)) + 44|0);\n HEAP32[$32>>2] = $$028$us$i;\n $33 = ((($1)) + 16|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = $34 & 2097151;\n $36 = (+($35|0));\n $37 = $34 >>> 21;\n $38 = $37 & 1023;\n $39 = ($34|0)<(0);\n $40 = -$36;\n $$$i = $39 ? $40 : $36;\n $41 = (($38) + -788)|0;\n $42 = (+_ldexp($$$i,$41));\n $43 = $42;\n $rintf = (+_rintf($43));\n $44 = (~~(($rintf)));\n $45 = ((($0)) + 48|0);\n HEAP32[$45>>2] = $44;\n $46 = ((($1)) + 20|0);\n $47 = HEAP32[$46>>2]|0;\n $48 = $47 & 2097151;\n $49 = (+($48|0));\n $50 = $47 >>> 21;\n $51 = $50 & 1023;\n $52 = ($47|0)<(0);\n $53 = -$49;\n $$$i19 = $52 ? $53 : $49;\n $54 = (($51) + -788)|0;\n $55 = (+_ldexp($$$i19,$54));\n $56 = $55;\n $rintf18 = (+_rintf($56));\n $57 = (~~(($rintf18)));\n $58 = ((($0)) + 52|0);\n HEAP32[$58>>2] = $57;\n return 0;\n}\nfunction _vorbis_book_init_decode($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$0192 = 0, $$$1186 = 0, $$0$lcssa$i = 0, $$0181 = 0, $$0183 = 0, $$0184208 = 0, $$0185207 = 0, $$0188235 = 0, $$0191209 = 0, $$0192234 = 0, $$056$i = 0, $$07$i = 0, $$1$lcssa = 0, $$1186 = 0, $$1189231 = 0, $$1204 = 0, $$2 = 0, $$2187 = 0, $$2190228 = 0;\n var $$2194$lcssa = 0, $$2194219 = 0, $$3195 = 0, $$3225 = 0, $$4196$lcssa248 = 0, $$4196213 = 0, $$4220 = 0, $$5197 = 0, $$5214 = 0, $$6211 = 0, $$7206 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$pre = 0, $$pre245 = 0, $$pre247 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;\n var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;\n var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;\n var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;\n var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;\n var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;\n var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;\n var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond242 = 0, $exitcond243 = 0, $exitcond244 = 0, $phitmp = 0, $storemerge198 = 0;\n var dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n dest=$0; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n $2 = ((($1)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)>(0);\n if ($4) {\n  $5 = ((($1)) + 8|0);\n  $6 = HEAP32[$5>>2]|0;\n  $$0188235 = 0;$$0192234 = 0;\n  while(1) {\n   $7 = (($6) + ($$0188235)|0);\n   $8 = HEAP8[$7>>0]|0;\n   $9 = ($8<<24>>24)>(0);\n   $10 = $9&1;\n   $$$0192 = (($10) + ($$0192234))|0;\n   $11 = (($$0188235) + 1)|0;\n   $12 = ($11|0)<($3|0);\n   if ($12) {\n    $$0188235 = $11;$$0192234 = $$$0192;\n   } else {\n    $15 = $$$0192;\n    break;\n   }\n  }\n } else {\n  $15 = 0;\n }\n $13 = ((($0)) + 4|0);\n HEAP32[$13>>2] = $3;\n $14 = ((($0)) + 8|0);\n HEAP32[$14>>2] = $15;\n $16 = HEAP32[$1>>2]|0;\n HEAP32[$0>>2] = $16;\n $17 = ($15|0)>(0);\n if (!($17)) {\n  $$0183 = 0;\n  STACKTOP = sp;return ($$0183|0);\n }\n $18 = ((($1)) + 8|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = (__make_words($19,$3,$15)|0);\n $21 = $15 << 2;\n $$alloca_mul = $21;\n $22 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $23 = ($20|0)==(0|0);\n if ($23) {\n  $202 = ((($0)) + 16|0);\n  $203 = HEAP32[$202>>2]|0;\n  $204 = ($203|0)==(0|0);\n  if (!($204)) {\n   _free($203);\n  }\n  $205 = ((($0)) + 20|0);\n  $206 = HEAP32[$205>>2]|0;\n  $207 = ($206|0)==(0|0);\n  if (!($207)) {\n   _free($206);\n  }\n  $208 = ((($0)) + 24|0);\n  $209 = HEAP32[$208>>2]|0;\n  $210 = ($209|0)==(0|0);\n  if (!($210)) {\n   _free($209);\n  }\n  $211 = ((($0)) + 28|0);\n  $212 = HEAP32[$211>>2]|0;\n  $213 = ($212|0)==(0|0);\n  if (!($213)) {\n   _free($212);\n  }\n  $214 = ((($0)) + 32|0);\n  $215 = HEAP32[$214>>2]|0;\n  $216 = ($215|0)==(0|0);\n  if (!($216)) {\n   _free($215);\n  }\n  dest=$0; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n  $$0183 = -1;\n  STACKTOP = sp;return ($$0183|0);\n } else {\n  $$1189231 = 0;\n }\n while(1) {\n  $24 = (($20) + ($$1189231<<2)|0);\n  $25 = HEAP32[$24>>2]|0;\n  $26 = (_llvm_bswap_i32(($25|0))|0);\n  $27 = $26 >>> 4;\n  $28 = $27 & 252645135;\n  $29 = $26 << 4;\n  $30 = $29 & -252645136;\n  $31 = $28 | $30;\n  $32 = $31 >>> 2;\n  $33 = $32 & 858993459;\n  $34 = $31 << 2;\n  $35 = $34 & -858993460;\n  $36 = $33 | $35;\n  $37 = $36 >>> 1;\n  $38 = $37 & 1431655765;\n  $39 = $36 << 1;\n  $40 = $39 & -1431655766;\n  $41 = $38 | $40;\n  HEAP32[$24>>2] = $41;\n  $42 = (($22) + ($$1189231<<2)|0);\n  HEAP32[$42>>2] = $24;\n  $43 = (($$1189231) + 1)|0;\n  $exitcond244 = ($43|0)==($15|0);\n  if ($exitcond244) {\n   break;\n  } else {\n   $$1189231 = $43;\n  }\n }\n _qsort($22,$15,4,32);\n $$alloca_mul1 = $21;\n $44 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;\n $45 = (_malloc($21)|0);\n $46 = ((($0)) + 20|0);\n HEAP32[$46>>2] = $45;\n $47 = $20;\n $$2190228 = 0;\n while(1) {\n  $48 = (($22) + ($$2190228<<2)|0);\n  $49 = HEAP32[$48>>2]|0;\n  $50 = (($49) - ($47))|0;\n  $51 = $50 >> 2;\n  $52 = (($44) + ($51<<2)|0);\n  HEAP32[$52>>2] = $$2190228;\n  $53 = (($$2190228) + 1)|0;\n  $exitcond243 = ($53|0)==($15|0);\n  if ($exitcond243) {\n   $$3225 = 0;\n   break;\n  } else {\n   $$2190228 = $53;\n  }\n }\n while(1) {\n  $54 = (($20) + ($$3225<<2)|0);\n  $55 = HEAP32[$54>>2]|0;\n  $56 = (($44) + ($$3225<<2)|0);\n  $57 = HEAP32[$56>>2]|0;\n  $58 = (($45) + ($57<<2)|0);\n  HEAP32[$58>>2] = $55;\n  $59 = (($$3225) + 1)|0;\n  $exitcond242 = ($59|0)==($15|0);\n  if ($exitcond242) {\n   break;\n  } else {\n   $$3225 = $59;\n  }\n }\n _free($20);\n $60 = (__book_unquantize($1,$15,$44)|0);\n $61 = ((($0)) + 16|0);\n HEAP32[$61>>2] = $60;\n $62 = (_malloc($21)|0);\n $63 = ((($0)) + 24|0);\n HEAP32[$63>>2] = $62;\n $64 = HEAP32[$2>>2]|0;\n $65 = ($64|0)>(0);\n if ($65) {\n  $$pre = HEAP32[$18>>2]|0;\n  $$2194219 = 0;$$4220 = 0;\n  while(1) {\n   $66 = (($$pre) + ($$4220)|0);\n   $67 = HEAP8[$66>>0]|0;\n   $68 = ($67<<24>>24)>(0);\n   if ($68) {\n    $69 = (($44) + ($$2194219<<2)|0);\n    $70 = (($$2194219) + 1)|0;\n    $71 = HEAP32[$69>>2]|0;\n    $72 = (($62) + ($71<<2)|0);\n    HEAP32[$72>>2] = $$4220;\n    $$3195 = $70;\n   } else {\n    $$3195 = $$2194219;\n   }\n   $73 = (($$4220) + 1)|0;\n   $74 = ($73|0)<($64|0);\n   if ($74) {\n    $$2194219 = $$3195;$$4220 = $73;\n   } else {\n    $$2194$lcssa = $$3195;\n    break;\n   }\n  }\n } else {\n  $$2194$lcssa = 0;\n }\n $75 = (_malloc($$2194$lcssa)|0);\n $76 = ((($0)) + 28|0);\n HEAP32[$76>>2] = $75;\n $77 = ((($0)) + 40|0);\n HEAP32[$77>>2] = 0;\n if ($65) {\n  $$pre245 = HEAP32[$18>>2]|0;\n  $$4196213 = 0;$$5214 = 0;$217 = 0;$79 = $$pre245;\n  while(1) {\n   $78 = (($79) + ($$5214)|0);\n   $80 = HEAP8[$78>>0]|0;\n   $81 = ($80<<24>>24)>(0);\n   if ($81) {\n    $82 = HEAP32[$76>>2]|0;\n    $83 = (($$4196213) + 1)|0;\n    $84 = (($44) + ($$4196213<<2)|0);\n    $85 = HEAP32[$84>>2]|0;\n    $86 = (($82) + ($85)|0);\n    HEAP8[$86>>0] = $80;\n    $87 = HEAP32[$18>>2]|0;\n    $88 = (($87) + ($$5214)|0);\n    $89 = HEAP8[$88>>0]|0;\n    $90 = $89 << 24 >> 24;\n    $91 = HEAP32[$77>>2]|0;\n    $92 = ($90|0)>($91|0);\n    if ($92) {\n     HEAP32[$77>>2] = $90;\n     $$5197 = $83;$218 = $87;$97 = $90;\n    } else {\n     $$5197 = $83;$218 = $87;$97 = $91;\n    }\n   } else {\n    $$5197 = $$4196213;$218 = $79;$97 = $217;\n   }\n   $93 = (($$5214) + 1)|0;\n   $94 = HEAP32[$2>>2]|0;\n   $95 = ($93|0)<($94|0);\n   if ($95) {\n    $$4196213 = $$5197;$$5214 = $93;$217 = $97;$79 = $218;\n   } else {\n    break;\n   }\n  }\n  $96 = ($$5197|0)==(1);\n  if ($96) {\n   $98 = ($97|0)==(1);\n   if ($98) {\n    $99 = ((($0)) + 36|0);\n    HEAP32[$99>>2] = 1;\n    $100 = (_calloc(2,4)|0);\n    $101 = ((($0)) + 32|0);\n    HEAP32[$101>>2] = $100;\n    $102 = ((($100)) + 4|0);\n    HEAP32[$102>>2] = 1;\n    HEAP32[$100>>2] = 1;\n    $$0183 = 0;\n    STACKTOP = sp;return ($$0183|0);\n   } else {\n    $$4196$lcssa248 = 1;\n   }\n  } else {\n   $$4196$lcssa248 = $$5197;\n  }\n } else {\n  $$4196$lcssa248 = 0;\n }\n $103 = HEAP32[$14>>2]|0;\n $104 = ($103|0)==(0);\n if ($104) {\n  $$0$lcssa$i = -4;\n } else {\n  $$056$i = $103;$$07$i = 0;\n  while(1) {\n   $105 = $$056$i >>> 1;\n   $106 = (($$07$i) + 1)|0;\n   $107 = ($105|0)==(0);\n   if ($107) {\n    break;\n   } else {\n    $$056$i = $105;$$07$i = $106;\n   }\n  }\n  $phitmp = (($$07$i) + -3)|0;\n  $$0$lcssa$i = $phitmp;\n }\n $108 = ((($0)) + 36|0);\n $109 = ($$0$lcssa$i|0)>(5);\n $$ = $109 ? $$0$lcssa$i : 5;\n $110 = ($$|0)<(8);\n $storemerge198 = $110 ? $$ : 8;\n HEAP32[$108>>2] = $storemerge198;\n $111 = 1 << $storemerge198;\n $112 = (_calloc($111,4)|0);\n $113 = ((($0)) + 32|0);\n HEAP32[$113>>2] = $112;\n $114 = ($$4196$lcssa248|0)>(0);\n if ($114) {\n  $$6211 = 0;$119 = $storemerge198;\n  while(1) {\n   $115 = HEAP32[$76>>2]|0;\n   $116 = (($115) + ($$6211)|0);\n   $117 = HEAP8[$116>>0]|0;\n   $118 = $117 << 24 >> 24;\n   $120 = ($119|0)<($118|0);\n   if ($120) {\n    $219 = $119;\n   } else {\n    $121 = HEAP32[$46>>2]|0;\n    $122 = (($121) + ($$6211<<2)|0);\n    $123 = HEAP32[$122>>2]|0;\n    $124 = (_llvm_bswap_i32(($123|0))|0);\n    $125 = $124 >>> 4;\n    $126 = $125 & 252645135;\n    $127 = $124 << 4;\n    $128 = $127 & -252645136;\n    $129 = $126 | $128;\n    $130 = $129 >>> 2;\n    $131 = $130 & 858993459;\n    $132 = $129 << 2;\n    $133 = $132 & -858993460;\n    $134 = $131 | $133;\n    $135 = $134 >>> 1;\n    $136 = $135 & 1431655765;\n    $137 = $134 << 1;\n    $138 = $137 & -1431655766;\n    $139 = $136 | $138;\n    $140 = (($119) - ($118))|0;\n    $141 = ($140|0)==(31);\n    if ($141) {\n     $219 = $119;\n    } else {\n     $142 = (($$6211) + 1)|0;\n     $$0191209 = 0;$144 = $118;\n     while(1) {\n      $143 = $$0191209 << $144;\n      $145 = $139 | $143;\n      $146 = (($112) + ($145<<2)|0);\n      HEAP32[$146>>2] = $142;\n      $147 = (($$0191209) + 1)|0;\n      $148 = HEAP32[$108>>2]|0;\n      $149 = HEAP8[$116>>0]|0;\n      $150 = $149 << 24 >> 24;\n      $151 = (($148) - ($150))|0;\n      $152 = 1 << $151;\n      $153 = ($147|0)<($152|0);\n      if ($153) {\n       $$0191209 = $147;$144 = $150;\n      } else {\n       $219 = $148;\n       break;\n      }\n     }\n    }\n   }\n   $154 = (($$6211) + 1)|0;\n   $exitcond = ($154|0)==($$4196$lcssa248|0);\n   if ($exitcond) {\n    $156 = $219;\n    break;\n   } else {\n    $$6211 = $154;$119 = $219;\n   }\n  }\n } else {\n  $156 = $storemerge198;\n }\n $155 = (31 - ($156))|0;\n $157 = -2 << $155;\n $$0184208 = 0;$$0185207 = 0;$$7206 = 0;$159 = $156;\n while(1) {\n  $158 = (32 - ($159))|0;\n  $160 = $$7206 << $158;\n  $161 = (_llvm_bswap_i32(($160|0))|0);\n  $162 = $161 >>> 4;\n  $163 = $162 & 252645135;\n  $164 = $161 << 4;\n  $165 = $164 & -252645136;\n  $166 = $163 | $165;\n  $167 = $166 >>> 2;\n  $168 = $167 & 858993459;\n  $169 = $166 << 2;\n  $170 = $169 & -858993460;\n  $171 = $168 | $170;\n  $172 = $171 >>> 1;\n  $173 = $172 & 1431655765;\n  $174 = $171 << 1;\n  $175 = $174 & -1431655766;\n  $176 = $173 | $175;\n  $177 = (($112) + ($176<<2)|0);\n  $178 = HEAP32[$177>>2]|0;\n  $179 = ($178|0)==(0);\n  if ($179) {\n   $$1186 = $$0185207;\n   while(1) {\n    $180 = (($$1186) + 1)|0;\n    $181 = ($180|0)<($$4196$lcssa248|0);\n    if (!($181)) {\n     break;\n    }\n    $182 = HEAP32[$46>>2]|0;\n    $183 = (($182) + ($180<<2)|0);\n    $184 = HEAP32[$183>>2]|0;\n    $185 = ($184>>>0)>($160>>>0);\n    if ($185) {\n     break;\n    } else {\n     $$1186 = $180;\n    }\n   }\n   $186 = ($$4196$lcssa248|0)>($$0184208|0);\n   L78: do {\n    if ($186) {\n     $187 = HEAP32[$46>>2]|0;\n     $$1204 = $$0184208;\n     while(1) {\n      $188 = (($187) + ($$1204<<2)|0);\n      $189 = HEAP32[$188>>2]|0;\n      $190 = $189 & $157;\n      $191 = ($160>>>0)<($190>>>0);\n      if ($191) {\n       $$1$lcssa = $$1204;\n       break L78;\n      }\n      $192 = (($$1204) + 1)|0;\n      $193 = ($$4196$lcssa248|0)>($192|0);\n      if ($193) {\n       $$1204 = $192;\n      } else {\n       $$1$lcssa = $192;\n       break;\n      }\n     }\n    } else {\n     $$1$lcssa = $$0184208;\n    }\n   } while(0);\n   $194 = (($$4196$lcssa248) - ($$1$lcssa))|0;\n   $195 = ($$1186>>>0)<(32767);\n   $$$1186 = $195 ? $$1186 : 32767;\n   $196 = ($194>>>0)<(32767);\n   $$0181 = $196 ? $194 : 32767;\n   $197 = $$$1186 << 15;\n   $198 = $197 | $$0181;\n   $199 = $198 | -2147483648;\n   HEAP32[$177>>2] = $199;\n   $$2 = $$1$lcssa;$$2187 = $$1186;\n  } else {\n   $$2 = $$0184208;$$2187 = $$0185207;\n  }\n  $200 = (($$7206) + 1)|0;\n  $201 = ($200|0)<($111|0);\n  if (!($201)) {\n   $$0183 = 0;\n   break;\n  }\n  $$pre247 = HEAP32[$108>>2]|0;\n  $$0184208 = $$2;$$0185207 = $$2187;$$7206 = $200;$159 = $$pre247;\n }\n STACKTOP = sp;return ($$0183|0);\n}\nfunction _sort32a($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$0>>2]|0;\n $3 = HEAP32[$2>>2]|0;\n $4 = HEAP32[$1>>2]|0;\n $5 = HEAP32[$4>>2]|0;\n $6 = ($3>>>0)>($5>>>0);\n $7 = $6&1;\n $8 = ($3>>>0)<($5>>>0);\n $9 = $8&1;\n $10 = (($7) - ($9))|0;\n return ($10|0);\n}\nfunction _drft_forward($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0110118$i = 0, $$0111117$i = 0, $$0112$$i = 0, $$0112116$i = 0, $$0113115$i = 0, $$0114$i = 0, $$2$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond120$i = 0, $or$cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$0>>2]|0;\n $3 = ($2|0)==(1);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (($5) + ($2<<2)|0);\n $7 = ((($0)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($8)) + 4|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ($10|0)>(0);\n if (!($11)) {\n  return;\n }\n $12 = (($10) + 1)|0;\n $$0110118$i = 0;$$0111117$i = $2;$$0112116$i = 1;$$0113115$i = $2;\n while(1) {\n  $13 = (($12) - ($$0110118$i))|0;\n  $14 = (($8) + ($13<<2)|0);\n  $15 = HEAP32[$14>>2]|0;\n  $16 = (($$0111117$i|0) / ($15|0))&-1;\n  $17 = (($2|0) / ($$0111117$i|0))&-1;\n  $18 = Math_imul($17, $16)|0;\n  $19 = (($15) + -1)|0;\n  $20 = Math_imul($17, $19)|0;\n  $21 = (($$0113115$i) - ($20))|0;\n  $22 = (1 - ($$0112116$i))|0;\n  L9: do {\n   switch ($15|0) {\n   case 4:  {\n    $23 = (($21) + ($17))|0;\n    $24 = (($23) + ($17))|0;\n    $25 = ($22|0)==(0);\n    $26 = (($6) + ($21<<2)|0);\n    $27 = ((($26)) + -4|0);\n    $28 = (($6) + ($23<<2)|0);\n    $29 = ((($28)) + -4|0);\n    $30 = (($6) + ($24<<2)|0);\n    $31 = ((($30)) + -4|0);\n    if ($25) {\n     _dradf4($17,$16,$1,$5,$27,$29,$31);\n     $$2$i = 0;\n     break L9;\n    } else {\n     _dradf4($17,$16,$5,$1,$27,$29,$31);\n     $$2$i = $22;\n     break L9;\n    }\n    break;\n   }\n   case 2:  {\n    $32 = ($22|0)==(0);\n    $33 = (($6) + ($21<<2)|0);\n    $34 = ((($33)) + -4|0);\n    if ($32) {\n     _dradf2($17,$16,$1,$5,$34);\n     $$2$i = 0;\n     break L9;\n    } else {\n     _dradf2($17,$16,$5,$1,$34);\n     $$2$i = $22;\n     break L9;\n    }\n    break;\n   }\n   default: {\n    $35 = ($17|0)==(1);\n    $$0112$$i = $35 ? $$0112116$i : $22;\n    $36 = ($$0112$$i|0)==(0);\n    $37 = (($6) + ($21<<2)|0);\n    $38 = ((($37)) + -4|0);\n    if ($36) {\n     _dradfg($17,$15,$16,$18,$1,$1,$1,$5,$5,$38);\n     $$2$i = 1;\n     break L9;\n    } else {\n     _dradfg($17,$15,$16,$18,$5,$5,$5,$1,$1,$38);\n     $$2$i = 0;\n     break L9;\n    }\n   }\n   }\n  } while(0);\n  $39 = (($$0110118$i) + 1)|0;\n  $exitcond120$i = ($39|0)==($10|0);\n  if ($exitcond120$i) {\n   break;\n  } else {\n   $$0110118$i = $39;$$0111117$i = $16;$$0112116$i = $$2$i;$$0113115$i = $21;\n  }\n }\n $40 = ($$2$i|0)!=(1);\n $41 = ($2|0)>(0);\n $or$cond$i = $41 & $40;\n if ($or$cond$i) {\n  $$0114$i = 0;\n } else {\n  return;\n }\n while(1) {\n  $42 = (($5) + ($$0114$i<<2)|0);\n  $43 = HEAP32[$42>>2]|0;\n  $44 = (($1) + ($$0114$i<<2)|0);\n  HEAP32[$44>>2] = $43;\n  $45 = (($$0114$i) + 1)|0;\n  $exitcond$i = ($45|0)==($2|0);\n  if ($exitcond$i) {\n   break;\n  } else {\n   $$0114$i = $45;\n  }\n }\n return;\n}\nfunction _dradf4($0,$1,$2,$3,$4,$5,$6) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n var $$0269300 = 0, $$0270299 = 0, $$0273298 = 0, $$0276297 = 0, $$0277296 = 0, $$0280287 = 0, $$0281282 = 0, $$0290 = 0, $$1271292 = 0, $$1274289 = 0, $$1278288 = 0, $$1293 = 0, $$2272285 = 0, $$2275284 = 0, $$2279283 = 0, $$2286 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0;\n var $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0;\n var $121 = 0.0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0.0, $133 = 0, $134 = 0, $135 = 0, $136 = 0.0, $137 = 0, $138 = 0, $139 = 0;\n var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0.0, $151 = 0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0;\n var $158 = 0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0.0, $164 = 0.0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0.0, $174 = 0.0, $175 = 0;\n var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $19 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0;\n var $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0.0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0;\n var $72 = 0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond304 = 0, $exitcond305 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $7 = Math_imul($1, $0)|0;\n $8 = $7 << 1;\n $9 = ($1|0)>(0);\n if ($9) {\n  $10 = ($7*3)|0;\n  $11 = $0 << 2;\n  $12 = (($11) + -1)|0;\n  $13 = $0 << 1;\n  $$0269300 = 0;$$0270299 = $7;$$0273298 = $10;$$0276297 = 0;$$0277296 = $8;\n  while(1) {\n   $14 = (($2) + ($$0270299<<2)|0);\n   $15 = +HEAPF32[$14>>2];\n   $16 = (($2) + ($$0273298<<2)|0);\n   $17 = +HEAPF32[$16>>2];\n   $18 = $17 + $15;\n   $19 = (($2) + ($$0276297<<2)|0);\n   $20 = +HEAPF32[$19>>2];\n   $21 = (($2) + ($$0277296<<2)|0);\n   $22 = +HEAPF32[$21>>2];\n   $23 = $22 + $20;\n   $24 = $23 + $18;\n   $25 = $$0276297 << 2;\n   $26 = (($3) + ($25<<2)|0);\n   HEAPF32[$26>>2] = $24;\n   $27 = $23 - $18;\n   $28 = (($12) + ($25))|0;\n   $29 = (($3) + ($28<<2)|0);\n   HEAPF32[$29>>2] = $27;\n   $30 = +HEAPF32[$19>>2];\n   $31 = +HEAPF32[$21>>2];\n   $32 = $30 - $31;\n   $33 = (($25) + ($13))|0;\n   $34 = (($33) + -1)|0;\n   $35 = (($3) + ($34<<2)|0);\n   HEAPF32[$35>>2] = $32;\n   $36 = +HEAPF32[$16>>2];\n   $37 = +HEAPF32[$14>>2];\n   $38 = $36 - $37;\n   $39 = (($3) + ($33<<2)|0);\n   HEAPF32[$39>>2] = $38;\n   $40 = (($$0270299) + ($0))|0;\n   $41 = (($$0273298) + ($0))|0;\n   $42 = (($$0276297) + ($0))|0;\n   $43 = (($$0277296) + ($0))|0;\n   $44 = (($$0269300) + 1)|0;\n   $exitcond305 = ($44|0)==($1|0);\n   if ($exitcond305) {\n    break;\n   } else {\n    $$0269300 = $44;$$0270299 = $40;$$0273298 = $41;$$0276297 = $42;$$0277296 = $43;\n   }\n  }\n }\n $45 = ($0|0)<(2);\n if ($45) {\n  return;\n }\n $46 = ($0|0)==(2);\n if (!($46)) {\n  if ($9) {\n   $47 = $0 << 1;\n   $$1271292 = 0;$$1293 = 0;\n   while(1) {\n    $48 = $$1271292 << 2;\n    $49 = (($48) + ($47))|0;\n    $$0280287 = $49;$$0290 = 2;$$1274289 = $$1271292;$$1278288 = $48;\n    while(1) {\n     $50 = (($$1274289) + 2)|0;\n     $51 = (($$1278288) + 2)|0;\n     $52 = (($$0280287) + -2)|0;\n     $53 = (($50) + ($7))|0;\n     $54 = (($$0290) + -2)|0;\n     $55 = (($4) + ($54<<2)|0);\n     $56 = +HEAPF32[$55>>2];\n     $57 = (($53) + -1)|0;\n     $58 = (($2) + ($57<<2)|0);\n     $59 = +HEAPF32[$58>>2];\n     $60 = $59 * $56;\n     $61 = (($$0290) + -1)|0;\n     $62 = (($4) + ($61<<2)|0);\n     $63 = +HEAPF32[$62>>2];\n     $64 = (($2) + ($53<<2)|0);\n     $65 = +HEAPF32[$64>>2];\n     $66 = $65 * $63;\n     $67 = $66 + $60;\n     $68 = $65 * $56;\n     $69 = $63 * $59;\n     $70 = $68 - $69;\n     $71 = (($53) + ($7))|0;\n     $72 = (($5) + ($54<<2)|0);\n     $73 = +HEAPF32[$72>>2];\n     $74 = (($71) + -1)|0;\n     $75 = (($2) + ($74<<2)|0);\n     $76 = +HEAPF32[$75>>2];\n     $77 = $76 * $73;\n     $78 = (($5) + ($61<<2)|0);\n     $79 = +HEAPF32[$78>>2];\n     $80 = (($2) + ($71<<2)|0);\n     $81 = +HEAPF32[$80>>2];\n     $82 = $81 * $79;\n     $83 = $82 + $77;\n     $84 = $81 * $73;\n     $85 = $79 * $76;\n     $86 = $84 - $85;\n     $87 = (($71) + ($7))|0;\n     $88 = (($6) + ($54<<2)|0);\n     $89 = +HEAPF32[$88>>2];\n     $90 = (($87) + -1)|0;\n     $91 = (($2) + ($90<<2)|0);\n     $92 = +HEAPF32[$91>>2];\n     $93 = $92 * $89;\n     $94 = (($6) + ($61<<2)|0);\n     $95 = +HEAPF32[$94>>2];\n     $96 = (($2) + ($87<<2)|0);\n     $97 = +HEAPF32[$96>>2];\n     $98 = $97 * $95;\n     $99 = $98 + $93;\n     $100 = $97 * $89;\n     $101 = $95 * $92;\n     $102 = $100 - $101;\n     $103 = $99 + $67;\n     $104 = $99 - $67;\n     $105 = $102 + $70;\n     $106 = $70 - $102;\n     $107 = (($2) + ($50<<2)|0);\n     $108 = +HEAPF32[$107>>2];\n     $109 = $108 + $86;\n     $110 = $108 - $86;\n     $111 = (($$1274289) + 1)|0;\n     $112 = (($2) + ($111<<2)|0);\n     $113 = +HEAPF32[$112>>2];\n     $114 = $113 + $83;\n     $115 = $113 - $83;\n     $116 = $103 + $114;\n     $117 = $$1278288 | 1;\n     $118 = (($3) + ($117<<2)|0);\n     HEAPF32[$118>>2] = $116;\n     $119 = $105 + $109;\n     $120 = (($3) + ($51<<2)|0);\n     HEAPF32[$120>>2] = $119;\n     $121 = $115 - $106;\n     $122 = (($$0280287) + -3)|0;\n     $123 = (($3) + ($122<<2)|0);\n     HEAPF32[$123>>2] = $121;\n     $124 = $104 - $110;\n     $125 = (($3) + ($52<<2)|0);\n     HEAPF32[$125>>2] = $124;\n     $126 = $106 + $115;\n     $127 = (($51) + ($47))|0;\n     $128 = (($127) + -1)|0;\n     $129 = (($3) + ($128<<2)|0);\n     HEAPF32[$129>>2] = $126;\n     $130 = $104 + $110;\n     $131 = (($3) + ($127<<2)|0);\n     HEAPF32[$131>>2] = $130;\n     $132 = $114 - $103;\n     $133 = (($52) + ($47))|0;\n     $134 = (($133) + -1)|0;\n     $135 = (($3) + ($134<<2)|0);\n     HEAPF32[$135>>2] = $132;\n     $136 = $105 - $109;\n     $137 = (($3) + ($133<<2)|0);\n     HEAPF32[$137>>2] = $136;\n     $138 = (($$0290) + 2)|0;\n     $139 = ($138|0)<($0|0);\n     if ($139) {\n      $$0280287 = $52;$$0290 = $138;$$1274289 = $50;$$1278288 = $51;\n     } else {\n      break;\n     }\n    }\n    $140 = (($$1271292) + ($0))|0;\n    $141 = (($$1293) + 1)|0;\n    $exitcond304 = ($141|0)==($1|0);\n    if ($exitcond304) {\n     break;\n    } else {\n     $$1271292 = $140;$$1293 = $141;\n    }\n   }\n  }\n  $142 = $0 & 1;\n  $143 = ($142|0)==(0);\n  if (!($143)) {\n   return;\n  }\n }\n $144 = (($0) + -1)|0;\n $145 = (($144) + ($7))|0;\n $146 = $0 << 2;\n $147 = $0 << 1;\n if (!($9)) {\n  return;\n }\n $148 = (($145) + ($8))|0;\n $$0281282 = $0;$$2272285 = $145;$$2275284 = $148;$$2279283 = $0;$$2286 = 0;\n while(1) {\n  $149 = (($2) + ($$2272285<<2)|0);\n  $150 = +HEAPF32[$149>>2];\n  $151 = (($2) + ($$2275284<<2)|0);\n  $152 = +HEAPF32[$151>>2];\n  $153 = $152 + $150;\n  $154 = $153 * -0.70710676908493042;\n  $155 = $150 - $152;\n  $156 = $155 * 0.70710676908493042;\n  $157 = (($$0281282) + -1)|0;\n  $158 = (($2) + ($157<<2)|0);\n  $159 = +HEAPF32[$158>>2];\n  $160 = $156 + $159;\n  $161 = (($$2279283) + -1)|0;\n  $162 = (($3) + ($161<<2)|0);\n  HEAPF32[$162>>2] = $160;\n  $163 = +HEAPF32[$158>>2];\n  $164 = $163 - $156;\n  $165 = (($$2279283) + ($147))|0;\n  $166 = (($165) + -1)|0;\n  $167 = (($3) + ($166<<2)|0);\n  HEAPF32[$167>>2] = $164;\n  $168 = (($$2272285) + ($7))|0;\n  $169 = (($2) + ($168<<2)|0);\n  $170 = +HEAPF32[$169>>2];\n  $171 = $154 - $170;\n  $172 = (($3) + ($$2279283<<2)|0);\n  HEAPF32[$172>>2] = $171;\n  $173 = +HEAPF32[$169>>2];\n  $174 = $173 + $154;\n  $175 = (($3) + ($165<<2)|0);\n  HEAPF32[$175>>2] = $174;\n  $176 = (($$2272285) + ($0))|0;\n  $177 = (($$2275284) + ($0))|0;\n  $178 = (($$2279283) + ($146))|0;\n  $179 = (($$0281282) + ($0))|0;\n  $180 = (($$2286) + 1)|0;\n  $exitcond = ($180|0)==($1|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$0281282 = $179;$$2272285 = $176;$$2275284 = $177;$$2279283 = $178;$$2286 = $180;\n  }\n }\n return;\n}\nfunction _dradf2($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0123142$us = 0, $$0124141$us = 0, $$0125140$us = 0, $$0126152 = 0, $$0128151 = 0, $$0131139$us = 0, $$0132150 = 0, $$0143$us = 0, $$1127147$us = 0, $$1129146$us = 0, $$1133145$us = 0, $$1138 = 0, $$2130136 = 0, $$2134135 = 0, $$2137 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0;\n var $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0;\n var $35 = 0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0, $40 = 0, $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0;\n var $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;\n var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $exitcond = 0, $exitcond157 = 0, $exitcond159 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $5 = Math_imul($1, $0)|0;\n $6 = $0 << 1;\n $7 = ($1|0)>(0);\n if ($7) {\n  $8 = (($6) + -1)|0;\n  $$0126152 = $5;$$0128151 = 0;$$0132150 = 0;\n  while(1) {\n   $9 = (($2) + ($$0128151<<2)|0);\n   $10 = +HEAPF32[$9>>2];\n   $11 = (($2) + ($$0126152<<2)|0);\n   $12 = +HEAPF32[$11>>2];\n   $13 = $12 + $10;\n   $14 = $$0128151 << 1;\n   $15 = (($3) + ($14<<2)|0);\n   HEAPF32[$15>>2] = $13;\n   $16 = +HEAPF32[$9>>2];\n   $17 = +HEAPF32[$11>>2];\n   $18 = $16 - $17;\n   $19 = (($8) + ($14))|0;\n   $20 = (($3) + ($19<<2)|0);\n   HEAPF32[$20>>2] = $18;\n   $21 = (($$0128151) + ($0))|0;\n   $22 = (($$0126152) + ($0))|0;\n   $23 = (($$0132150) + 1)|0;\n   $exitcond159 = ($23|0)==($1|0);\n   if ($exitcond159) {\n    break;\n   } else {\n    $$0126152 = $22;$$0128151 = $21;$$0132150 = $23;\n   }\n  }\n }\n $24 = ($0|0)<(2);\n if ($24) {\n  return;\n }\n $25 = ($0|0)==(2);\n if (!($25)) {\n  if ($7) {\n   $$1127147$us = $5;$$1129146$us = 0;$$1133145$us = 0;\n   while(1) {\n    $26 = $$1129146$us << 1;\n    $27 = (($26) + ($6))|0;\n    $$0123142$us = $$1129146$us;$$0124141$us = $27;$$0125140$us = $$1127147$us;$$0131139$us = 2;$$0143$us = $26;\n    while(1) {\n     $28 = (($$0125140$us) + 2)|0;\n     $29 = (($$0124141$us) + -2)|0;\n     $30 = (($$0123142$us) + 2)|0;\n     $31 = (($$0143$us) + 2)|0;\n     $32 = (($$0131139$us) + -2)|0;\n     $33 = (($4) + ($32<<2)|0);\n     $34 = +HEAPF32[$33>>2];\n     $35 = (($$0125140$us) + 1)|0;\n     $36 = (($2) + ($35<<2)|0);\n     $37 = +HEAPF32[$36>>2];\n     $38 = $37 * $34;\n     $39 = (($$0131139$us) + -1)|0;\n     $40 = (($4) + ($39<<2)|0);\n     $41 = +HEAPF32[$40>>2];\n     $42 = (($2) + ($28<<2)|0);\n     $43 = +HEAPF32[$42>>2];\n     $44 = $43 * $41;\n     $45 = $44 + $38;\n     $46 = $43 * $34;\n     $47 = $41 * $37;\n     $48 = $46 - $47;\n     $49 = (($2) + ($30<<2)|0);\n     $50 = +HEAPF32[$49>>2];\n     $51 = $48 + $50;\n     $52 = (($3) + ($31<<2)|0);\n     HEAPF32[$52>>2] = $51;\n     $53 = +HEAPF32[$49>>2];\n     $54 = $48 - $53;\n     $55 = (($3) + ($29<<2)|0);\n     HEAPF32[$55>>2] = $54;\n     $56 = (($$0123142$us) + 1)|0;\n     $57 = (($2) + ($56<<2)|0);\n     $58 = +HEAPF32[$57>>2];\n     $59 = $58 + $45;\n     $60 = $$0143$us | 1;\n     $61 = (($3) + ($60<<2)|0);\n     HEAPF32[$61>>2] = $59;\n     $62 = +HEAPF32[$57>>2];\n     $63 = $62 - $45;\n     $64 = (($$0124141$us) + -3)|0;\n     $65 = (($3) + ($64<<2)|0);\n     HEAPF32[$65>>2] = $63;\n     $66 = (($$0131139$us) + 2)|0;\n     $67 = ($66|0)<($0|0);\n     if ($67) {\n      $$0123142$us = $30;$$0124141$us = $29;$$0125140$us = $28;$$0131139$us = $66;$$0143$us = $31;\n     } else {\n      break;\n     }\n    }\n    $68 = (($$1129146$us) + ($0))|0;\n    $69 = (($$1127147$us) + ($0))|0;\n    $70 = (($$1133145$us) + 1)|0;\n    $exitcond157 = ($70|0)==($1|0);\n    if ($exitcond157) {\n     break;\n    } else {\n     $$1127147$us = $69;$$1129146$us = $68;$$1133145$us = $70;\n    }\n   }\n  }\n  $71 = (($0|0) % 2)&-1;\n  $72 = ($71|0)==(1);\n  if ($72) {\n   return;\n  }\n }\n $73 = (($0) + -1)|0;\n if (!($7)) {\n  return;\n }\n $74 = (($5) + ($73))|0;\n $$1138 = $73;$$2130136 = $0;$$2134135 = 0;$$2137 = $74;\n while(1) {\n  $75 = (($2) + ($$2137<<2)|0);\n  $76 = +HEAPF32[$75>>2];\n  $77 = -$76;\n  $78 = (($3) + ($$2130136<<2)|0);\n  HEAPF32[$78>>2] = $77;\n  $79 = (($2) + ($$1138<<2)|0);\n  $80 = HEAP32[$79>>2]|0;\n  $81 = (($$2130136) + -1)|0;\n  $82 = (($3) + ($81<<2)|0);\n  HEAP32[$82>>2] = $80;\n  $83 = (($$2130136) + ($6))|0;\n  $84 = (($$2137) + ($0))|0;\n  $85 = (($$1138) + ($0))|0;\n  $86 = (($$2134135) + 1)|0;\n  $exitcond = ($86|0)==($1|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$1138 = $85;$$2130136 = $83;$$2134135 = $86;$$2137 = $84;\n  }\n }\n return;\n}\nfunction _dradfg($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n $8 = $8|0;\n $9 = $9|0;\n var $$0612876$us = 0, $$0614911$us = 0, $$0622906$us = 0, $$0633828 = 0, $$0634914 = 0, $$0639887 = 0, $$0641910$us = 0, $$0652905$us = 0, $$0662820$us = 0.0, $$0663825 = 0.0, $$0664819$us = 0.0, $$0665824 = 0.0, $$0666875$us = 0, $$0675852$us = 0, $$0684812$us = 0, $$0687811$us = 0, $$0690804 = 0, $$0695847$us = 0, $$0702846$us = 0, $$0877$us = 0;\n var $$10632735$us = 0, $$10651774$us = 0, $$10744 = 0, $$11762 = 0, $$12743 = 0, $$1613896$us = 0, $$1615888 = 0, $$1623882$us = 0, $$1635843 = 0, $$1640902 = 0, $$1642886 = 0, $$1653881$us = 0, $$1667890$us = 0, $$1676867$us = 0, $$1685755$us = 0, $$1688753$us = 0, $$1691810$us = 0, $$1696863$us = 0, $$1703862$us = 0, $$1897$us = 0;\n var $$2616903 = 0, $$2624891$us = 0, $$2636806 = 0, $$2643901 = 0, $$2654895$us = 0, $$2668853$us = 0, $$2677831$us = 0, $$2686734$us = 0, $$2689733$us = 0, $$2692767$us = 0, $$2697803 = 0, $$2704802 = 0, $$2854$us = 0, $$3617860 = 0, $$3625848$us = 0, $$3637813$us = 0, $$3644859 = 0, $$3655858 = 0, $$3669868$us = 0, $$3678805 = 0;\n var $$3693751$us = 0, $$3698809$us = 0, $$3705817$us = 0, $$3864$us = 0, $$4618873 = 0, $$4626869$us = 0, $$4638794$us = 0, $$4645872 = 0, $$4656871 = 0, $$4670832$us = 0, $$4679818$us = 0, $$4694732$us = 0, $$4699766$us = 0, $$4706765$us = 0, $$4787$us = 0, $$5619839$us = 0, $$5627833$us = 0, $$5646838$us = 0, $$5657837$us = 0, $$5671786$us = 0;\n var $$5680785$us = 0, $$5700749$us = 0, $$5707759 = 0, $$5784$us = 0, $$6620821$us = 0, $$6628792$us = 0, $$6647827 = 0, $$6658826 = 0, $$6672773$us = 0, $$6681772$us = 0, $$6701731$us = 0, $$6708740 = 0, $$6746$us = 0, $$7621799$us = 0, $$7629781$us = 0, $$7648798$us = 0, $$7659793$us = 0, $$7673761 = 0, $$7682760 = 0, $$7736$us = 0;\n var $$8630768$us = 0, $$8649791$us = 0, $$8660790$us = 0, $$8674742 = 0, $$8683741 = 0, $$8775$us = 0, $$9631757$us = 0, $$9650780$us = 0, $$9661779$us = 0, $$9763 = 0, $$not = 0, $$not976 = 0, $$not977 = 0, $$not978 = 0, $$not980 = 0, $$not981 = 0, $$not986 = 0, $$not991 = 0, $$not992 = 0, $$pn = 0;\n var $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0.0, $117 = 0;\n var $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0;\n var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0.0;\n var $154 = 0, $155 = 0.0, $156 = 0.0, $157 = 0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;\n var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0.0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0;\n var $190 = 0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0.0, $203 = 0, $204 = 0.0, $205 = 0.0, $206 = 0, $207 = 0, $208 = 0;\n var $209 = 0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0, $225 = 0, $226 = 0.0;\n var $227 = 0.0, $228 = 0, $229 = 0, $23 = 0, $230 = 0.0, $231 = 0.0, $232 = 0, $233 = 0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0.0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0.0;\n var $245 = 0, $246 = 0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0, $255 = 0.0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;\n var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;\n var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;\n var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0, $313 = 0, $314 = 0, $315 = 0.0, $316 = 0.0, $317 = 0;\n var $318 = 0, $319 = 0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0, $329 = 0.0, $33 = 0, $330 = 0.0, $331 = 0, $332 = 0.0, $333 = 0.0, $334 = 0.0, $335 = 0;\n var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;\n var $354 = 0, $355 = 0.0, $356 = 0, $357 = 0, $358 = 0.0, $359 = 0.0, $36 = 0, $360 = 0, $361 = 0, $362 = 0.0, $363 = 0.0, $364 = 0.0, $365 = 0, $366 = 0, $367 = 0, $368 = 0.0, $369 = 0, $37 = 0, $370 = 0.0, $371 = 0.0;\n var $372 = 0, $373 = 0.0, $374 = 0.0, $375 = 0.0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0;\n var $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0.0;\n var $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $brmerge979 = 0, $brmerge982 = 0, $brmerge985$demorgan = 0, $brmerge987 = 0;\n var $brmerge993 = 0, $cosf = 0.0, $exitcond = 0, $exitcond933 = 0, $exitcond935 = 0, $exitcond936 = 0, $exitcond937 = 0, $exitcond938 = 0, $exitcond940 = 0, $exitcond941 = 0, $exitcond943 = 0, $exitcond945 = 0, $exitcond947 = 0, $exitcond948 = 0, $exitcond950 = 0, $exitcond951 = 0, $exitcond952 = 0, $exitcond953 = 0, $exitcond954 = 0, $exitcond956 = 0;\n var $exitcond957 = 0, $exitcond958 = 0, $exitcond960 = 0, $exitcond961 = 0, $exitcond963 = 0, $exitcond964 = 0, $exitcond965 = 0, $exitcond966 = 0, $exitcond967 = 0, $exitcond968 = 0, $exitcond970 = 0, $or$cond = 0, $or$cond988 = 0, $or$cond989 = 0, $or$cond990 = 0, $sinf = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $10 = (+($1|0));\n $11 = 6.2831854820251465 / $10;\n $cosf = (+Math_cos((+$11)));\n $sinf = (+Math_sin((+$11)));\n $12 = (($1) + 1)|0;\n $13 = $12 >> 1;\n $14 = (($0) + -1)|0;\n $15 = $14 >> 1;\n $16 = Math_imul($2, $0)|0;\n $17 = Math_imul($1, $0)|0;\n $18 = ($0|0)==(1);\n do {\n  if (!($18)) {\n   $19 = ($3|0)>(0);\n   if ($19) {\n    $$0634914 = 0;\n    while(1) {\n     $30 = (($6) + ($$0634914<<2)|0);\n     $31 = HEAP32[$30>>2]|0;\n     $32 = (($8) + ($$0634914<<2)|0);\n     HEAP32[$32>>2] = $31;\n     $33 = (($$0634914) + 1)|0;\n     $exitcond970 = ($33|0)==($3|0);\n     if ($exitcond970) {\n      break;\n     } else {\n      $$0634914 = $33;\n     }\n    }\n   }\n   $21 = ($1|0)>(1);\n   $22 = ($2|0)>(0);\n   $or$cond = $21 & $22;\n   if ($or$cond) {\n    $$0614911$us = 1;$$0641910$us = 0;\n    while(1) {\n     $23 = (($$0641910$us) + ($16))|0;\n     $$0622906$us = 0;$$0652905$us = $23;\n     while(1) {\n      $24 = (($5) + ($$0652905$us<<2)|0);\n      $25 = HEAP32[$24>>2]|0;\n      $26 = (($7) + ($$0652905$us<<2)|0);\n      HEAP32[$26>>2] = $25;\n      $27 = (($$0652905$us) + ($0))|0;\n      $28 = (($$0622906$us) + 1)|0;\n      $exitcond967 = ($28|0)==($2|0);\n      if ($exitcond967) {\n       break;\n      } else {\n       $$0622906$us = $28;$$0652905$us = $27;\n      }\n     }\n     $29 = (($$0614911$us) + 1)|0;\n     $exitcond968 = ($29|0)==($1|0);\n     if ($exitcond968) {\n      break;\n     } else {\n      $$0614911$us = $29;$$0641910$us = $23;\n     }\n    }\n   }\n   $34 = (0 - ($0))|0;\n   $35 = ($15|0)>($2|0);\n   if ($35) {\n    if ($21) {\n     $36 = ($2|0)>(0);\n     $37 = ($0|0)>(2);\n     $$0639887 = $34;$$1615888 = 1;$$1642886 = 0;\n     while(1) {\n      $38 = (($$1642886) + ($16))|0;\n      $39 = (($$0639887) + ($0))|0;\n      if ($36) {\n       $40 = (($39) + -1)|0;\n       if ($37) {\n        $41 = (($38) - ($0))|0;\n        $$1623882$us = 0;$$1653881$us = $41;\n        while(1) {\n         $42 = (($$1653881$us) + ($0))|0;\n         $$0612876$us = 2;$$0666875$us = $42;$$0877$us = $40;\n         while(1) {\n          $43 = (($$0877$us) + 2)|0;\n          $44 = (($$0666875$us) + 2)|0;\n          $45 = (($$0877$us) + 1)|0;\n          $46 = (($9) + ($45<<2)|0);\n          $47 = +HEAPF32[$46>>2];\n          $48 = (($$0666875$us) + 1)|0;\n          $49 = (($5) + ($48<<2)|0);\n          $50 = +HEAPF32[$49>>2];\n          $51 = $50 * $47;\n          $52 = (($9) + ($43<<2)|0);\n          $53 = +HEAPF32[$52>>2];\n          $54 = (($5) + ($44<<2)|0);\n          $55 = +HEAPF32[$54>>2];\n          $56 = $55 * $53;\n          $57 = $56 + $51;\n          $58 = (($7) + ($48<<2)|0);\n          HEAPF32[$58>>2] = $57;\n          $59 = +HEAPF32[$46>>2];\n          $60 = +HEAPF32[$54>>2];\n          $61 = $60 * $59;\n          $62 = +HEAPF32[$52>>2];\n          $63 = +HEAPF32[$49>>2];\n          $64 = $63 * $62;\n          $65 = $61 - $64;\n          $66 = (($7) + ($44<<2)|0);\n          HEAPF32[$66>>2] = $65;\n          $67 = (($$0612876$us) + 2)|0;\n          $68 = ($67|0)<($0|0);\n          if ($68) {\n           $$0612876$us = $67;$$0666875$us = $44;$$0877$us = $43;\n          } else {\n           break;\n          }\n         }\n         $69 = (($$1623882$us) + 1)|0;\n         $exitcond963 = ($69|0)==($2|0);\n         if ($exitcond963) {\n          break;\n         } else {\n          $$1623882$us = $69;$$1653881$us = $42;\n         }\n        }\n       }\n      }\n      $70 = (($$1615888) + 1)|0;\n      $exitcond964 = ($70|0)==($1|0);\n      if ($exitcond964) {\n       break;\n      } else {\n       $$0639887 = $39;$$1615888 = $70;$$1642886 = $38;\n      }\n     }\n    }\n   } else {\n    if ($21) {\n     $$not = ($0|0)<(3);\n     $$not976 = ($2|0)<(1);\n     $brmerge = $$not | $$not976;\n     $$1640902 = $34;$$2616903 = 1;$$2643901 = 0;\n     while(1) {\n      $71 = (($$1640902) + ($0))|0;\n      $72 = (($$2643901) + ($16))|0;\n      if (!($brmerge)) {\n       $73 = (($71) + -1)|0;\n       $$1613896$us = 2;$$1897$us = $73;$$2654895$us = $72;\n       while(1) {\n        $74 = (($$1897$us) + 2)|0;\n        $75 = (($$2654895$us) + 2)|0;\n        $76 = (($$1897$us) + 1)|0;\n        $77 = (($9) + ($76<<2)|0);\n        $78 = (($9) + ($74<<2)|0);\n        $$1667890$us = $75;$$2624891$us = 0;\n        while(1) {\n         $79 = +HEAPF32[$77>>2];\n         $80 = (($$1667890$us) + -1)|0;\n         $81 = (($5) + ($80<<2)|0);\n         $82 = +HEAPF32[$81>>2];\n         $83 = $82 * $79;\n         $84 = +HEAPF32[$78>>2];\n         $85 = (($5) + ($$1667890$us<<2)|0);\n         $86 = +HEAPF32[$85>>2];\n         $87 = $86 * $84;\n         $88 = $87 + $83;\n         $89 = (($7) + ($80<<2)|0);\n         HEAPF32[$89>>2] = $88;\n         $90 = +HEAPF32[$77>>2];\n         $91 = +HEAPF32[$85>>2];\n         $92 = $91 * $90;\n         $93 = +HEAPF32[$78>>2];\n         $94 = +HEAPF32[$81>>2];\n         $95 = $94 * $93;\n         $96 = $92 - $95;\n         $97 = (($7) + ($$1667890$us<<2)|0);\n         HEAPF32[$97>>2] = $96;\n         $98 = (($$1667890$us) + ($0))|0;\n         $99 = (($$2624891$us) + 1)|0;\n         $exitcond965 = ($99|0)==($2|0);\n         if ($exitcond965) {\n          break;\n         } else {\n          $$1667890$us = $98;$$2624891$us = $99;\n         }\n        }\n        $100 = (($$1613896$us) + 2)|0;\n        $101 = ($100|0)<($0|0);\n        if ($101) {\n         $$1613896$us = $100;$$1897$us = $74;$$2654895$us = $75;\n        } else {\n         break;\n        }\n       }\n      }\n      $102 = (($$2616903) + 1)|0;\n      $exitcond966 = ($102|0)==($1|0);\n      if ($exitcond966) {\n       break;\n      } else {\n       $$1640902 = $71;$$2616903 = $102;$$2643901 = $72;\n      }\n     }\n    }\n   }\n   $103 = Math_imul($16, $1)|0;\n   $104 = ($15|0)<($2|0);\n   $105 = ($13|0)>(1);\n   if ($104) {\n    if (!($105)) {\n     break;\n    }\n    $$not977 = ($0|0)<(3);\n    $$not978 = ($2|0)<(1);\n    $brmerge979 = $$not977 | $$not978;\n    $$3617860 = 1;$$3644859 = 0;$$3655858 = $103;\n    while(1) {\n     $106 = (($$3644859) + ($16))|0;\n     $107 = (($$3655858) - ($16))|0;\n     if (!($brmerge979)) {\n      $$0675852$us = $107;$$2668853$us = $106;$$2854$us = 2;\n      while(1) {\n       $108 = (($$2668853$us) + 2)|0;\n       $109 = (($$0675852$us) + 2)|0;\n       $110 = (($108) - ($0))|0;\n       $111 = (($109) - ($0))|0;\n       $$0695847$us = $111;$$0702846$us = $110;$$3625848$us = 0;\n       while(1) {\n        $112 = (($$0702846$us) + ($0))|0;\n        $113 = (($$0695847$us) + ($0))|0;\n        $114 = (($112) + -1)|0;\n        $115 = (($7) + ($114<<2)|0);\n        $116 = +HEAPF32[$115>>2];\n        $117 = (($113) + -1)|0;\n        $118 = (($7) + ($117<<2)|0);\n        $119 = +HEAPF32[$118>>2];\n        $120 = $119 + $116;\n        $121 = (($5) + ($114<<2)|0);\n        HEAPF32[$121>>2] = $120;\n        $122 = (($7) + ($112<<2)|0);\n        $123 = +HEAPF32[$122>>2];\n        $124 = (($7) + ($113<<2)|0);\n        $125 = +HEAPF32[$124>>2];\n        $126 = $123 - $125;\n        $127 = (($5) + ($117<<2)|0);\n        HEAPF32[$127>>2] = $126;\n        $128 = +HEAPF32[$122>>2];\n        $129 = +HEAPF32[$124>>2];\n        $130 = $129 + $128;\n        $131 = (($5) + ($112<<2)|0);\n        HEAPF32[$131>>2] = $130;\n        $132 = +HEAPF32[$118>>2];\n        $133 = +HEAPF32[$115>>2];\n        $134 = $132 - $133;\n        $135 = (($5) + ($113<<2)|0);\n        HEAPF32[$135>>2] = $134;\n        $136 = (($$3625848$us) + 1)|0;\n        $exitcond957 = ($136|0)==($2|0);\n        if ($exitcond957) {\n         break;\n        } else {\n         $$0695847$us = $113;$$0702846$us = $112;$$3625848$us = $136;\n        }\n       }\n       $137 = (($$2854$us) + 2)|0;\n       $138 = ($137|0)<($0|0);\n       if ($138) {\n        $$0675852$us = $109;$$2668853$us = $108;$$2854$us = $137;\n       } else {\n        break;\n       }\n      }\n     }\n     $139 = (($$3617860) + 1)|0;\n     $exitcond958 = ($139|0)==($13|0);\n     if ($exitcond958) {\n      break;\n     } else {\n      $$3617860 = $139;$$3644859 = $106;$$3655858 = $107;\n     }\n    }\n   } else {\n    if (!($105)) {\n     break;\n    }\n    $$not980 = ($2|0)<(1);\n    $$not981 = ($0|0)<(3);\n    $brmerge982 = $$not980 | $$not981;\n    $$4618873 = 1;$$4645872 = 0;$$4656871 = $103;\n    while(1) {\n     $140 = (($$4645872) + ($16))|0;\n     $141 = (($$4656871) - ($16))|0;\n     if (!($brmerge982)) {\n      $$1676867$us = $141;$$3669868$us = $140;$$4626869$us = 0;\n      while(1) {\n       $$1696863$us = $$1676867$us;$$1703862$us = $$3669868$us;$$3864$us = 2;\n       while(1) {\n        $142 = (($$1703862$us) + 2)|0;\n        $143 = (($$1696863$us) + 2)|0;\n        $144 = (($$1703862$us) + 1)|0;\n        $145 = (($7) + ($144<<2)|0);\n        $146 = +HEAPF32[$145>>2];\n        $147 = (($$1696863$us) + 1)|0;\n        $148 = (($7) + ($147<<2)|0);\n        $149 = +HEAPF32[$148>>2];\n        $150 = $149 + $146;\n        $151 = (($5) + ($144<<2)|0);\n        HEAPF32[$151>>2] = $150;\n        $152 = (($7) + ($142<<2)|0);\n        $153 = +HEAPF32[$152>>2];\n        $154 = (($7) + ($143<<2)|0);\n        $155 = +HEAPF32[$154>>2];\n        $156 = $153 - $155;\n        $157 = (($5) + ($147<<2)|0);\n        HEAPF32[$157>>2] = $156;\n        $158 = +HEAPF32[$152>>2];\n        $159 = +HEAPF32[$154>>2];\n        $160 = $159 + $158;\n        $161 = (($5) + ($142<<2)|0);\n        HEAPF32[$161>>2] = $160;\n        $162 = +HEAPF32[$148>>2];\n        $163 = +HEAPF32[$145>>2];\n        $164 = $162 - $163;\n        $165 = (($5) + ($143<<2)|0);\n        HEAPF32[$165>>2] = $164;\n        $166 = (($$3864$us) + 2)|0;\n        $167 = ($166|0)<($0|0);\n        if ($167) {\n         $$1696863$us = $143;$$1703862$us = $142;$$3864$us = $166;\n        } else {\n         break;\n        }\n       }\n       $168 = (($$3669868$us) + ($0))|0;\n       $169 = (($$1676867$us) + ($0))|0;\n       $170 = (($$4626869$us) + 1)|0;\n       $exitcond960 = ($170|0)==($2|0);\n       if ($exitcond960) {\n        break;\n       } else {\n        $$1676867$us = $169;$$3669868$us = $168;$$4626869$us = $170;\n       }\n      }\n     }\n     $171 = (($$4618873) + 1)|0;\n     $exitcond961 = ($171|0)==($13|0);\n     if ($exitcond961) {\n      break;\n     } else {\n      $$4618873 = $171;$$4645872 = $140;$$4656871 = $141;\n     }\n    }\n   }\n  }\n } while(0);\n $20 = ($3|0)>(0);\n if ($20) {\n  $$1635843 = 0;\n  while(1) {\n   $172 = (($8) + ($$1635843<<2)|0);\n   $173 = HEAP32[$172>>2]|0;\n   $174 = (($6) + ($$1635843<<2)|0);\n   HEAP32[$174>>2] = $173;\n   $175 = (($$1635843) + 1)|0;\n   $exitcond956 = ($175|0)==($3|0);\n   if ($exitcond956) {\n    break;\n   } else {\n    $$1635843 = $175;\n   }\n  }\n }\n $176 = Math_imul($3, $1)|0;\n $177 = ($13|0)>(1);\n do {\n  if ($177) {\n   $178 = ($2|0)>(0);\n   if ($178) {\n    $$5619839$us = 1;$$5646838$us = 0;$$5657837$us = $176;\n    while(1) {\n     $179 = (($$5646838$us) + ($16))|0;\n     $180 = (($$5657837$us) - ($16))|0;\n     $181 = (($179) - ($0))|0;\n     $182 = (($180) - ($0))|0;\n     $$2677831$us = $182;$$4670832$us = $181;$$5627833$us = 0;\n     while(1) {\n      $183 = (($$4670832$us) + ($0))|0;\n      $184 = (($$2677831$us) + ($0))|0;\n      $185 = (($7) + ($183<<2)|0);\n      $186 = +HEAPF32[$185>>2];\n      $187 = (($7) + ($184<<2)|0);\n      $188 = +HEAPF32[$187>>2];\n      $189 = $188 + $186;\n      $190 = (($5) + ($183<<2)|0);\n      HEAPF32[$190>>2] = $189;\n      $191 = +HEAPF32[$187>>2];\n      $192 = +HEAPF32[$185>>2];\n      $193 = $191 - $192;\n      $194 = (($5) + ($184<<2)|0);\n      HEAPF32[$194>>2] = $193;\n      $195 = (($$5627833$us) + 1)|0;\n      $exitcond953 = ($195|0)==($2|0);\n      if ($exitcond953) {\n       break;\n      } else {\n       $$2677831$us = $184;$$4670832$us = $183;$$5627833$us = $195;\n      }\n     }\n     $196 = (($$5619839$us) + 1)|0;\n     $exitcond954 = ($196|0)==($13|0);\n     if ($exitcond954) {\n      break;\n     } else {\n      $$5619839$us = $196;$$5646838$us = $179;$$5657837$us = $180;\n     }\n    }\n    if (!($177)) {\n     break;\n    }\n   }\n   $$pn = (($1) + -1)|0;\n   $197 = Math_imul($$pn, $3)|0;\n   $198 = ($13|0)==(2);\n   $$not986 = $20 ^ 1;\n   $brmerge987 = $198 | $$not986;\n   $$0633828 = 1;$$0663825 = 1.0;$$0665824 = 0.0;$$6647827 = 0;$$6658826 = $176;\n   while(1) {\n    $208 = (($$6647827) + ($3))|0;\n    $209 = (($$6658826) - ($3))|0;\n    $210 = $$0663825 * $cosf;\n    $211 = $$0665824 * $sinf;\n    $212 = $210 - $211;\n    $213 = $$0665824 * $cosf;\n    $214 = $$0663825 * $sinf;\n    $215 = $214 + $213;\n    if ($20) {\n     $$0690804 = $3;$$2636806 = 0;$$2697803 = $197;$$2704802 = $209;$$3678805 = $208;\n     while(1) {\n      $243 = (($6) + ($$2636806<<2)|0);\n      $244 = +HEAPF32[$243>>2];\n      $245 = (($$0690804) + 1)|0;\n      $246 = (($6) + ($$0690804<<2)|0);\n      $247 = +HEAPF32[$246>>2];\n      $248 = $247 * $212;\n      $249 = $248 + $244;\n      $250 = (($$3678805) + 1)|0;\n      $251 = (($8) + ($$3678805<<2)|0);\n      HEAPF32[$251>>2] = $249;\n      $252 = (($$2697803) + 1)|0;\n      $253 = (($6) + ($$2697803<<2)|0);\n      $254 = +HEAPF32[$253>>2];\n      $255 = $254 * $215;\n      $256 = (($$2704802) + 1)|0;\n      $257 = (($8) + ($$2704802<<2)|0);\n      HEAPF32[$257>>2] = $255;\n      $258 = (($$2636806) + 1)|0;\n      $exitcond950 = ($258|0)==($3|0);\n      if ($exitcond950) {\n       break;\n      } else {\n       $$0690804 = $245;$$2636806 = $258;$$2697803 = $252;$$2704802 = $256;$$3678805 = $250;\n      }\n     }\n    }\n    if (!($brmerge987)) {\n     $$0662820$us = $212;$$0664819$us = $215;$$3705817$us = $197;$$4679818$us = $3;$$6620821$us = 2;\n     while(1) {\n      $216 = (($$4679818$us) + ($3))|0;\n      $217 = (($$3705817$us) - ($3))|0;\n      $218 = $$0662820$us * $212;\n      $219 = $$0664819$us * $215;\n      $220 = $218 - $219;\n      $221 = $$0664819$us * $212;\n      $222 = $$0662820$us * $215;\n      $223 = $222 + $221;\n      $$0684812$us = $217;$$0687811$us = $216;$$1691810$us = $209;$$3637813$us = 0;$$3698809$us = $208;\n      while(1) {\n       $224 = (($$0687811$us) + 1)|0;\n       $225 = (($6) + ($$0687811$us<<2)|0);\n       $226 = +HEAPF32[$225>>2];\n       $227 = $226 * $220;\n       $228 = (($$3698809$us) + 1)|0;\n       $229 = (($8) + ($$3698809$us<<2)|0);\n       $230 = +HEAPF32[$229>>2];\n       $231 = $230 + $227;\n       HEAPF32[$229>>2] = $231;\n       $232 = (($$0684812$us) + 1)|0;\n       $233 = (($6) + ($$0684812$us<<2)|0);\n       $234 = +HEAPF32[$233>>2];\n       $235 = $234 * $223;\n       $236 = (($$1691810$us) + 1)|0;\n       $237 = (($8) + ($$1691810$us<<2)|0);\n       $238 = +HEAPF32[$237>>2];\n       $239 = $238 + $235;\n       HEAPF32[$237>>2] = $239;\n       $240 = (($$3637813$us) + 1)|0;\n       $exitcond951 = ($240|0)==($3|0);\n       if ($exitcond951) {\n        break;\n       } else {\n        $$0684812$us = $232;$$0687811$us = $224;$$1691810$us = $236;$$3637813$us = $240;$$3698809$us = $228;\n       }\n      }\n      $241 = (($$6620821$us) + 1)|0;\n      $242 = ($241|0)<($13|0);\n      if ($242) {\n       $$0662820$us = $220;$$0664819$us = $223;$$3705817$us = $217;$$4679818$us = $216;$$6620821$us = $241;\n      } else {\n       break;\n      }\n     }\n    }\n    $259 = (($$0633828) + 1)|0;\n    $exitcond952 = ($259|0)==($13|0);\n    if ($exitcond952) {\n     break;\n    } else {\n     $$0633828 = $259;$$0663825 = $212;$$0665824 = $215;$$6647827 = $208;$$6658826 = $209;\n    }\n   }\n   $brmerge985$demorgan = $177 & $20;\n   if ($brmerge985$demorgan) {\n    $$7621799$us = 1;$$7648798$us = 0;\n    while(1) {\n     $199 = (($$7648798$us) + ($3))|0;\n     $$4638794$us = 0;$$7659793$us = $199;\n     while(1) {\n      $200 = (($$7659793$us) + 1)|0;\n      $201 = (($6) + ($$7659793$us<<2)|0);\n      $202 = +HEAPF32[$201>>2];\n      $203 = (($8) + ($$4638794$us<<2)|0);\n      $204 = +HEAPF32[$203>>2];\n      $205 = $204 + $202;\n      HEAPF32[$203>>2] = $205;\n      $206 = (($$4638794$us) + 1)|0;\n      $exitcond947 = ($206|0)==($3|0);\n      if ($exitcond947) {\n       break;\n      } else {\n       $$4638794$us = $206;$$7659793$us = $200;\n      }\n     }\n     $207 = (($$7621799$us) + 1)|0;\n     $exitcond948 = ($207|0)==($13|0);\n     if ($exitcond948) {\n      break;\n     } else {\n      $$7621799$us = $207;$$7648798$us = $199;\n     }\n    }\n   }\n  }\n } while(0);\n $260 = ($0|0)<($2|0);\n if ($260) {\n  $272 = ($0|0)>(0);\n  $273 = ($2|0)>(0);\n  $or$cond989 = $272 & $273;\n  if ($or$cond989) {\n   $$5784$us = 0;\n   while(1) {\n    $$7629781$us = 0;$$9650780$us = $$5784$us;$$9661779$us = $$5784$us;\n    while(1) {\n     $274 = (($7) + ($$9650780$us<<2)|0);\n     $275 = HEAP32[$274>>2]|0;\n     $276 = (($4) + ($$9661779$us<<2)|0);\n     HEAP32[$276>>2] = $275;\n     $277 = (($$9650780$us) + ($0))|0;\n     $278 = (($$9661779$us) + ($17))|0;\n     $279 = (($$7629781$us) + 1)|0;\n     $exitcond940 = ($279|0)==($2|0);\n     if ($exitcond940) {\n      break;\n     } else {\n      $$7629781$us = $279;$$9650780$us = $277;$$9661779$us = $278;\n     }\n    }\n    $280 = (($$5784$us) + 1)|0;\n    $exitcond941 = ($280|0)==($0|0);\n    if ($exitcond941) {\n     break;\n    } else {\n     $$5784$us = $280;\n    }\n   }\n  }\n } else {\n  $261 = ($2|0)>(0);\n  $262 = ($0|0)>(0);\n  $or$cond988 = $261 & $262;\n  if ($or$cond988) {\n   $$6628792$us = 0;$$8649791$us = 0;$$8660790$us = 0;\n   while(1) {\n    $$4787$us = 0;$$5671786$us = $$8649791$us;$$5680785$us = $$8660790$us;\n    while(1) {\n     $263 = (($$5671786$us) + 1)|0;\n     $264 = (($7) + ($$5671786$us<<2)|0);\n     $265 = HEAP32[$264>>2]|0;\n     $266 = (($$5680785$us) + 1)|0;\n     $267 = (($4) + ($$5680785$us<<2)|0);\n     HEAP32[$267>>2] = $265;\n     $268 = (($$4787$us) + 1)|0;\n     $exitcond943 = ($268|0)==($0|0);\n     if ($exitcond943) {\n      break;\n     } else {\n      $$4787$us = $268;$$5671786$us = $263;$$5680785$us = $266;\n     }\n    }\n    $269 = (($$8649791$us) + ($0))|0;\n    $270 = (($$8660790$us) + ($17))|0;\n    $271 = (($$6628792$us) + 1)|0;\n    $exitcond945 = ($271|0)==($2|0);\n    if ($exitcond945) {\n     break;\n    } else {\n     $$6628792$us = $271;$$8649791$us = $269;$$8660790$us = $270;\n    }\n   }\n  }\n }\n $281 = $0 << 1;\n $282 = Math_imul($16, $1)|0;\n $283 = ($2|0)>(0);\n $or$cond990 = $177 & $283;\n if ($or$cond990) {\n  $$10651774$us = 0;$$6672773$us = 0;$$6681772$us = $282;$$8775$us = 1;\n  while(1) {\n   $284 = (($$10651774$us) + ($281))|0;\n   $285 = (($$6672773$us) + ($16))|0;\n   $286 = (($$6681772$us) - ($16))|0;\n   $$2692767$us = $286;$$4699766$us = $285;$$4706765$us = $284;$$8630768$us = 0;\n   while(1) {\n    $287 = (($7) + ($$4699766$us<<2)|0);\n    $288 = HEAP32[$287>>2]|0;\n    $289 = (($$4706765$us) + -1)|0;\n    $290 = (($4) + ($289<<2)|0);\n    HEAP32[$290>>2] = $288;\n    $291 = (($7) + ($$2692767$us<<2)|0);\n    $292 = HEAP32[$291>>2]|0;\n    $293 = (($4) + ($$4706765$us<<2)|0);\n    HEAP32[$293>>2] = $292;\n    $294 = (($$4706765$us) + ($17))|0;\n    $295 = (($$4699766$us) + ($0))|0;\n    $296 = (($$2692767$us) + ($0))|0;\n    $297 = (($$8630768$us) + 1)|0;\n    $exitcond937 = ($297|0)==($2|0);\n    if ($exitcond937) {\n     break;\n    } else {\n     $$2692767$us = $296;$$4699766$us = $295;$$4706765$us = $294;$$8630768$us = $297;\n    }\n   }\n   $298 = (($$8775$us) + 1)|0;\n   $exitcond938 = ($298|0)==($13|0);\n   if ($exitcond938) {\n    break;\n   } else {\n    $$10651774$us = $284;$$6672773$us = $285;$$6681772$us = $286;$$8775$us = $298;\n   }\n  }\n }\n if ($18) {\n  return;\n }\n $299 = ($15|0)<($2|0);\n $300 = (0 - ($0))|0;\n if (!($299)) {\n  if (!($177)) {\n   return;\n  }\n  $$not991 = ($2|0)<(1);\n  $$not992 = ($0|0)<(3);\n  $brmerge993 = $$not991 | $$not992;\n  $$11762 = $300;$$5707759 = $282;$$7673761 = 0;$$7682760 = 0;$$9763 = 1;\n  while(1) {\n   $303 = (($$11762) + ($281))|0;\n   $304 = (($$7673761) + ($281))|0;\n   $305 = (($$7682760) + ($16))|0;\n   $306 = (($$5707759) - ($16))|0;\n   if (!($brmerge993)) {\n    $$1685755$us = $306;$$1688753$us = $305;$$3693751$us = $304;$$5700749$us = $303;$$9631757$us = 0;\n    while(1) {\n     $$6746$us = 2;\n     while(1) {\n      $307 = (($0) - ($$6746$us))|0;\n      $308 = (($$6746$us) + ($$1688753$us))|0;\n      $309 = (($308) + -1)|0;\n      $310 = (($7) + ($309<<2)|0);\n      $311 = +HEAPF32[$310>>2];\n      $312 = (($$6746$us) + ($$1685755$us))|0;\n      $313 = (($312) + -1)|0;\n      $314 = (($7) + ($313<<2)|0);\n      $315 = +HEAPF32[$314>>2];\n      $316 = $315 + $311;\n      $317 = (($$6746$us) + ($$3693751$us))|0;\n      $318 = (($317) + -1)|0;\n      $319 = (($4) + ($318<<2)|0);\n      HEAPF32[$319>>2] = $316;\n      $320 = +HEAPF32[$310>>2];\n      $321 = +HEAPF32[$314>>2];\n      $322 = $320 - $321;\n      $323 = (($307) + ($$5700749$us))|0;\n      $324 = (($323) + -1)|0;\n      $325 = (($4) + ($324<<2)|0);\n      HEAPF32[$325>>2] = $322;\n      $326 = (($7) + ($308<<2)|0);\n      $327 = +HEAPF32[$326>>2];\n      $328 = (($7) + ($312<<2)|0);\n      $329 = +HEAPF32[$328>>2];\n      $330 = $329 + $327;\n      $331 = (($4) + ($317<<2)|0);\n      HEAPF32[$331>>2] = $330;\n      $332 = +HEAPF32[$328>>2];\n      $333 = +HEAPF32[$326>>2];\n      $334 = $332 - $333;\n      $335 = (($4) + ($323<<2)|0);\n      HEAPF32[$335>>2] = $334;\n      $336 = (($$6746$us) + 2)|0;\n      $337 = ($336|0)<($0|0);\n      if ($337) {\n       $$6746$us = $336;\n      } else {\n       break;\n      }\n     }\n     $338 = (($$5700749$us) + ($17))|0;\n     $339 = (($$3693751$us) + ($17))|0;\n     $340 = (($$1688753$us) + ($0))|0;\n     $341 = (($$1685755$us) + ($0))|0;\n     $342 = (($$9631757$us) + 1)|0;\n     $exitcond935 = ($342|0)==($2|0);\n     if ($exitcond935) {\n      break;\n     } else {\n      $$1685755$us = $341;$$1688753$us = $340;$$3693751$us = $339;$$5700749$us = $338;$$9631757$us = $342;\n     }\n    }\n   }\n   $343 = (($$9763) + 1)|0;\n   $exitcond936 = ($343|0)==($13|0);\n   if ($exitcond936) {\n    break;\n   } else {\n    $$11762 = $303;$$5707759 = $306;$$7673761 = $304;$$7682760 = $305;$$9763 = $343;\n   }\n  }\n  return;\n }\n if (!($177)) {\n  return;\n }\n $301 = ($0|0)>(2);\n $302 = ($2|0)>(0);\n $$10744 = 1;$$12743 = $300;$$6708740 = $282;$$8674742 = 0;$$8683741 = 0;\n while(1) {\n  $344 = (($$12743) + ($281))|0;\n  $345 = (($$8674742) + ($281))|0;\n  $346 = (($$8683741) + ($16))|0;\n  $347 = (($$6708740) - ($16))|0;\n  if ($301) {\n   $348 = (($344) + ($0))|0;\n   if ($302) {\n    $$7736$us = 2;\n    while(1) {\n     $349 = (($348) - ($$7736$us))|0;\n     $350 = (($$7736$us) + ($345))|0;\n     $351 = (($$7736$us) + ($346))|0;\n     $352 = (($$7736$us) + ($347))|0;\n     $$10632735$us = 0;$$2686734$us = $352;$$2689733$us = $351;$$4694732$us = $350;$$6701731$us = $349;\n     while(1) {\n      $353 = (($$2689733$us) + -1)|0;\n      $354 = (($7) + ($353<<2)|0);\n      $355 = +HEAPF32[$354>>2];\n      $356 = (($$2686734$us) + -1)|0;\n      $357 = (($7) + ($356<<2)|0);\n      $358 = +HEAPF32[$357>>2];\n      $359 = $358 + $355;\n      $360 = (($$4694732$us) + -1)|0;\n      $361 = (($4) + ($360<<2)|0);\n      HEAPF32[$361>>2] = $359;\n      $362 = +HEAPF32[$354>>2];\n      $363 = +HEAPF32[$357>>2];\n      $364 = $362 - $363;\n      $365 = (($$6701731$us) + -1)|0;\n      $366 = (($4) + ($365<<2)|0);\n      HEAPF32[$366>>2] = $364;\n      $367 = (($7) + ($$2689733$us<<2)|0);\n      $368 = +HEAPF32[$367>>2];\n      $369 = (($7) + ($$2686734$us<<2)|0);\n      $370 = +HEAPF32[$369>>2];\n      $371 = $370 + $368;\n      $372 = (($4) + ($$4694732$us<<2)|0);\n      HEAPF32[$372>>2] = $371;\n      $373 = +HEAPF32[$369>>2];\n      $374 = +HEAPF32[$367>>2];\n      $375 = $373 - $374;\n      $376 = (($4) + ($$6701731$us<<2)|0);\n      HEAPF32[$376>>2] = $375;\n      $377 = (($$6701731$us) + ($17))|0;\n      $378 = (($$4694732$us) + ($17))|0;\n      $379 = (($$2689733$us) + ($0))|0;\n      $380 = (($$2686734$us) + ($0))|0;\n      $381 = (($$10632735$us) + 1)|0;\n      $exitcond = ($381|0)==($2|0);\n      if ($exitcond) {\n       break;\n      } else {\n       $$10632735$us = $381;$$2686734$us = $380;$$2689733$us = $379;$$4694732$us = $378;$$6701731$us = $377;\n      }\n     }\n     $382 = (($$7736$us) + 2)|0;\n     $383 = ($382|0)<($0|0);\n     if ($383) {\n      $$7736$us = $382;\n     } else {\n      break;\n     }\n    }\n   }\n  }\n  $384 = (($$10744) + 1)|0;\n  $exitcond933 = ($384|0)==($13|0);\n  if ($exitcond933) {\n   break;\n  } else {\n   $$10744 = $384;$$12743 = $344;$$6708740 = $347;$$8674742 = $345;$$8683741 = $346;\n  }\n }\n return;\n}\nfunction _drft_init($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$i$i = 0, $$0112$i$i = 0, $$0114135$us$i$i = 0.0, $$0115$i$i = 0, $$0117146$i$i = 0, $$0119$i$i = 0, $$0121144$i$i = 0, $$0122143$i$i = 0, $$0124142$i$i = 0, $$0125133$us$i$i = 0, $$0126136$us$i$i = 0, $$1$lcssa131$i$i = 0, $$1$us$i$i = 0, $$1113$i$i = 0, $$1113$us$i$i = 0, $$1116$ph$i$i = 0, $$1118134$us$i$i = 0, $$1120138$us$i$i = 0, $$1123$lcssa$i$i = 0, $$1123137$us$i$i = 0;\n var $$lcssa$i$i = 0, $$lcssa$not$i$i = 0, $$lcssa130$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $cosf$us$i$i = 0.0, $exitcond$i$i = 0, $exitcond160$i$i = 0, $exitcond161$i$i = 0, $indvars$iv$i$i = 0, $indvars$iv$in$i$i = 0, $or$cond$i$i = 0, $sinf$us$i$i = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n HEAP32[$0>>2] = $1;\n $2 = ($1*3)|0;\n $3 = (_calloc($2,4)|0);\n $4 = ((($0)) + 4|0);\n HEAP32[$4>>2] = $3;\n $5 = (_calloc(32,4)|0);\n $6 = ((($0)) + 8|0);\n HEAP32[$6>>2] = $5;\n $7 = ($1|0)==(1);\n if ($7) {\n  return;\n }\n $8 = (($3) + ($1<<2)|0);\n $9 = ((($5)) + 8|0);\n $$0$i$i = 0;$$0112$i$i = $1;$$0115$i$i = 0;$$0119$i$i = -1;\n L4: while(1) {\n  $10 = (($$0119$i$i) + 1)|0;\n  $11 = ($10|0)<(4);\n  if ($11) {\n   $12 = (28060 + ($10<<2)|0);\n   $13 = HEAP32[$12>>2]|0;\n   $$1116$ph$i$i = $13;\n  } else {\n   $14 = (($$0115$i$i) + 2)|0;\n   $$1116$ph$i$i = $14;\n  }\n  $15 = ($$1116$ph$i$i|0)==(2);\n  if ($15) {\n   $$1113$i$i = $$0112$i$i;$indvars$iv$in$i$i = $$0$i$i;\n  } else {\n   $$1$us$i$i = $$0$i$i;$$1113$us$i$i = $$0112$i$i;\n   while(1) {\n    $16 = (($$1113$us$i$i|0) / ($$1116$ph$i$i|0))&-1;\n    $17 = Math_imul($16, $$1116$ph$i$i)|0;\n    $18 = ($$1113$us$i$i|0)==($17|0);\n    if (!($18)) {\n     $$0$i$i = $$1$us$i$i;$$0112$i$i = $$1113$us$i$i;$$0115$i$i = $$1116$ph$i$i;$$0119$i$i = $10;\n     continue L4;\n    }\n    $19 = (($$1$us$i$i) + 1)|0;\n    $20 = (($$1$us$i$i) + 2)|0;\n    $21 = (($5) + ($20<<2)|0);\n    HEAP32[$21>>2] = $$1116$ph$i$i;\n    $22 = ($16|0)==(1);\n    if ($22) {\n     label = 9;\n     break L4;\n    } else {\n     $$1$us$i$i = $19;$$1113$us$i$i = $16;\n    }\n   }\n  }\n  while(1) {\n   $indvars$iv$i$i = (($indvars$iv$in$i$i) + 1)|0;\n   $24 = (($$1113$i$i|0) / 2)&-1;\n   $25 = $24 << 1;\n   $26 = ($$1113$i$i|0)==($25|0);\n   if (!($26)) {\n    $$0$i$i = $indvars$iv$in$i$i;$$0112$i$i = $$1113$i$i;$$0115$i$i = $$1116$ph$i$i;$$0119$i$i = $10;\n    continue L4;\n   }\n   $27 = (($indvars$iv$in$i$i) + 2)|0;\n   $28 = (($5) + ($27<<2)|0);\n   HEAP32[$28>>2] = 2;\n   $29 = ($indvars$iv$in$i$i|0)==(0);\n   if (!($29)) {\n    $30 = ($indvars$iv$in$i$i|0)<(1);\n    if (!($30)) {\n     $$0117146$i$i = 1;\n     while(1) {\n      $31 = (($indvars$iv$i$i) - ($$0117146$i$i))|0;\n      $32 = (($31) + 1)|0;\n      $33 = (($5) + ($32<<2)|0);\n      $34 = HEAP32[$33>>2]|0;\n      $35 = (($31) + 2)|0;\n      $36 = (($5) + ($35<<2)|0);\n      HEAP32[$36>>2] = $34;\n      $37 = (($$0117146$i$i) + 1)|0;\n      $exitcond161$i$i = ($37|0)==($indvars$iv$i$i|0);\n      if ($exitcond161$i$i) {\n       break;\n      } else {\n       $$0117146$i$i = $37;\n      }\n     }\n    }\n    HEAP32[$9>>2] = 2;\n   }\n   $38 = $$1113$i$i & -2;\n   $39 = ($38|0)==(2);\n   if ($39) {\n    $$1$lcssa131$i$i = $indvars$iv$in$i$i;$$lcssa$i$i = $29;$$lcssa130$i$i = $indvars$iv$i$i;\n    break L4;\n   } else {\n    $$1113$i$i = $24;$indvars$iv$in$i$i = $indvars$iv$i$i;\n   }\n  }\n }\n if ((label|0) == 9) {\n  $23 = ($$1$us$i$i|0)==(0);\n  $$1$lcssa131$i$i = $$1$us$i$i;$$lcssa$i$i = $23;$$lcssa130$i$i = $19;\n }\n HEAP32[$5>>2] = $1;\n $40 = ((($5)) + 4|0);\n HEAP32[$40>>2] = $$lcssa130$i$i;\n $41 = (+($1|0));\n $42 = 6.2831854820251465 / $41;\n $$lcssa$not$i$i = $$lcssa$i$i ^ 1;\n $43 = ($$1$lcssa131$i$i|0)>(0);\n $or$cond$i$i = $43 & $$lcssa$not$i$i;\n if ($or$cond$i$i) {\n  $$0121144$i$i = 0;$$0122143$i$i = 0;$$0124142$i$i = 1;\n } else {\n  return;\n }\n while(1) {\n  $44 = (($$0121144$i$i) + 2)|0;\n  $45 = (($5) + ($44<<2)|0);\n  $46 = HEAP32[$45>>2]|0;\n  $47 = Math_imul($46, $$0124142$i$i)|0;\n  $48 = (($1|0) / ($47|0))&-1;\n  $49 = (($46) + -1)|0;\n  $50 = ($46|0)>(1);\n  do {\n   if ($50) {\n    $51 = ($48|0)>(2);\n    $52 = Math_imul($48, $49)|0;\n    if ($51) {\n     $$0126136$us$i$i = 0;$$1120138$us$i$i = 0;$$1123137$us$i$i = $$0122143$i$i;\n    } else {\n     $53 = (($52) + ($$0122143$i$i))|0;\n     $$1123$lcssa$i$i = $53;\n     break;\n    }\n    while(1) {\n     $54 = (($$0126136$us$i$i) + ($$0124142$i$i))|0;\n     $55 = (+($54|0));\n     $56 = $55 * $42;\n     $$0114135$us$i$i = 0.0;$$0125133$us$i$i = 2;$$1118134$us$i$i = $$1123137$us$i$i;\n     while(1) {\n      $57 = $$0114135$us$i$i + 1.0;\n      $58 = $56 * $57;\n      $cosf$us$i$i = (+Math_cos((+$58)));\n      $59 = (($$1118134$us$i$i) + 1)|0;\n      $60 = (($8) + ($$1118134$us$i$i<<2)|0);\n      HEAPF32[$60>>2] = $cosf$us$i$i;\n      $sinf$us$i$i = (+Math_sin((+$58)));\n      $61 = (($$1118134$us$i$i) + 2)|0;\n      $62 = (($8) + ($59<<2)|0);\n      HEAPF32[$62>>2] = $sinf$us$i$i;\n      $63 = (($$0125133$us$i$i) + 2)|0;\n      $64 = ($63|0)<($48|0);\n      if ($64) {\n       $$0114135$us$i$i = $57;$$0125133$us$i$i = $63;$$1118134$us$i$i = $61;\n      } else {\n       break;\n      }\n     }\n     $65 = (($$1123137$us$i$i) + ($48))|0;\n     $66 = (($$1120138$us$i$i) + 1)|0;\n     $exitcond$i$i = ($66|0)==($49|0);\n     if ($exitcond$i$i) {\n      break;\n     } else {\n      $$0126136$us$i$i = $54;$$1120138$us$i$i = $66;$$1123137$us$i$i = $65;\n     }\n    }\n    $67 = (($52) + ($$0122143$i$i))|0;\n    $$1123$lcssa$i$i = $67;\n   } else {\n    $$1123$lcssa$i$i = $$0122143$i$i;\n   }\n  } while(0);\n  $68 = (($$0121144$i$i) + 1)|0;\n  $exitcond160$i$i = ($68|0)==($$1$lcssa131$i$i|0);\n  if ($exitcond160$i$i) {\n   break;\n  } else {\n   $$0121144$i$i = $68;$$0122143$i$i = $$1123$lcssa$i$i;$$0124142$i$i = $47;\n  }\n }\n return;\n}\nfunction _drft_clear($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if (!($4)) {\n  _free($3);\n }\n $5 = ((($0)) + 8|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if (!($7)) {\n  _free($6);\n }\n ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;\n return;\n}\nfunction _vorbis_encode_setup_init($0) {\n $0 = $0|0;\n var $$ = 0, $$$0$i = 0, $$$073$i = 0, $$$2$i = 0, $$$2190$i$i = 0, $$$i = 0, $$$i193 = 0.0, $$$i205 = 0.0, $$$i208 = 0.0, $$$i214 = 0.0, $$$i220 = 0.0, $$0 = 0, $$0$i197 = 0, $$0$i198 = 0, $$0$i200 = 0, $$0$i202 = 0, $$012$i$i$i = 0, $$012$i207$1$i$i = 0, $$012$i207$2$i$i = 0, $$012$i207$3$i$i = 0;\n var $$012$i207$i$i = 0, $$012$i212$i$i = 0, $$012$i217$1$i$i = 0, $$012$i217$2$i$i = 0, $$012$i217$3$i$i = 0, $$012$i217$i$i = 0, $$0122$i = 0, $$0185257 = 0, $$0188$lcssa$i$i = 0, $$0193236$i$i = 0, $$0194238$i$i = 0, $$0195257$i$i = 0, $$0204$i$i = 0.0, $$0260$i$i = 0, $$042$i = 0, $$042$i210 = 0, $$042$i216 = 0, $$042$i222 = 0, $$06074$i = 0, $$07$i$i$i = 0;\n var $$07$i210$1$i$i = 0, $$07$i210$2$i$i = 0, $$07$i210$3$i$i = 0, $$07$i210$i$i = 0, $$07$i215$i$i = 0, $$07$i220$1$i$i = 0, $$07$i220$2$i$i = 0, $$07$i220$3$i$i = 0, $$07$i220$i$i = 0, $$07392$i = 0, $$075$i = 0, $$07591$i = 0, $$07881$i = 0, $$088$i = 0, $$1121$i = 0, $$1189$lcssa$i$i = 0, $$1205$i$i = 0.0, $$1205$in$i$i = 0.0, $$1205$in$in$i$i = 0, $$1258$i$i = 0;\n var $$17686$i = 0, $$2$lcssa$i = 0, $$2120$i = 0, $$2190237$i$i = 0, $$2197$1$i$i = 0, $$2197$2$i$i = 0, $$2197$3$i$i = 0, $$2197$i$i = 0, $$2206$i$i = 0.0, $$2251$i$i = 0, $$27780$i256 = 0, $$282$i = 0, $$3198248$i$i = 0, $$3249$i$i = 0, $$41$i = 0, $$41$i209 = 0, $$41$i215 = 0, $$41$i221 = 0, $$4192$i$i = 0, $$4241$i$i = 0;\n var $$5$1$i$i = 0, $$5$2$i$i = 0, $$5$3$i$i = 0, $$5$i$i = 0, $$56$i = 0, $$pre = 0.0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i195 = 0, $$pre$phi273$i$iZ2D = 0, $$pre128$i = 0, $$pre268$i$i = 0, $$pre269$i$i = 0, $$pre270$i$i = 0, $$pre271 = 0, $$pre271$i$i = 0, $$pre272 = 0, $$pre272$i$i = 0, $$pre99$i = 0, $$sink = 0;\n var $$sink$i$i = 0, $$sink226 = 0.0, $$sink228 = 0.0, $$sink241 = 0, $$sink3 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0;\n var $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0.0, $1029 = 0.0;\n var $103 = 0, $1030 = 0.0, $1031 = 0.0, $1032 = 0, $1033 = 0.0, $1034 = 0.0, $1035 = 0.0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0.0, $1044 = 0.0, $1045 = 0, $1046 = 0.0, $1047 = 0.0;\n var $1048 = 0.0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0;\n var $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0.0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0;\n var $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0;\n var $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0;\n var $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0.0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0;\n var $1138 = 0, $1139 = 0, $114 = 0.0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0;\n var $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0;\n var $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0.0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0;\n var $1192 = 0.0, $1193 = 0, $1194 = 0.0, $1195 = 0.0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0.0, $120 = 0, $1200 = 0, $1201 = 0.0, $1202 = 0.0, $1203 = 0.0, $1204 = 0, $1205 = 0, $1206 = 0.0, $1207 = 0.0, $1208 = 0.0, $1209 = 0.0;\n var $121 = 0.0, $1210 = 0.0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0.0, $122 = 0.0, $1220 = 0, $1221 = 0, $1222 = 0.0, $1223 = 0.0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0;\n var $1228 = 0, $1229 = 0, $123 = 0.0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0.0, $1237 = 0, $1238 = 0, $1239 = 0.0, $124 = 0, $1240 = 0, $1241 = 0, $125 = 0, $126 = 0.0, $127 = 0.0, $128 = 0.0;\n var $129 = 0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0;\n var $147 = 0, $148 = 0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0, $164 = 0.0;\n var $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0, $17 = 0, $170 = 0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0;\n var $183 = 0.0, $184 = 0.0, $185 = 0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0.0;\n var $200 = 0.0, $201 = 0.0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0.0, $206 = 0.0, $207 = 0, $208 = 0.0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0;\n var $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0.0, $233 = 0.0, $234 = 0, $235 = 0.0, $236 = 0.0;\n var $237 = 0.0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;\n var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;\n var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0.0, $281 = 0, $282 = 0, $283 = 0, $284 = 0.0, $285 = 0, $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0, $29 = 0, $290 = 0.0;\n var $291 = 0.0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0.0, $296 = 0.0, $297 = 0.0, $298 = 0, $299 = 0.0, $3 = 0, $30 = 0, $300 = 0.0, $301 = 0, $302 = 0, $303 = 0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0;\n var $309 = 0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0, $315 = 0.0, $316 = 0.0, $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0, $324 = 0.0, $325 = 0.0, $326 = 0;\n var $327 = 0, $328 = 0, $329 = 0.0, $33 = 0, $330 = 0.0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0.0, $336 = 0.0, $337 = 0.0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0, $341 = 0.0, $342 = 0.0, $343 = 0.0, $344 = 0.0;\n var $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0.0, $352 = 0.0, $353 = 0, $354 = 0.0, $355 = 0.0, $356 = 0, $357 = 0, $358 = 0, $359 = 0.0, $36 = 0, $360 = 0.0, $361 = 0, $362 = 0;\n var $363 = 0, $364 = 0, $365 = 0, $366 = 0.0, $367 = 0.0, $368 = 0.0, $369 = 0, $37 = 0, $370 = 0.0, $371 = 0.0, $372 = 0.0, $373 = 0.0, $374 = 0.0, $375 = 0.0, $376 = 0.0, $377 = 0.0, $378 = 0, $379 = 0.0, $38 = 0, $380 = 0.0;\n var $381 = 0, $382 = 0, $383 = 0, $384 = 0.0, $385 = 0.0, $386 = 0, $387 = 0, $388 = 0, $389 = 0.0, $39 = 0.0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;\n var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0.0;\n var $417 = 0, $418 = 0.0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;\n var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0.0, $443 = 0, $444 = 0.0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;\n var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0.0;\n var $471 = 0, $472 = 0.0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;\n var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0.0, $497 = 0, $498 = 0, $499 = 0.0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;\n var $507 = 0.0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0.0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0.0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0.0;\n var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0.0, $531 = 0.0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0.0, $537 = 0.0, $538 = 0.0, $539 = 0, $54 = 0, $540 = 0, $541 = 0.0, $542 = 0.0;\n var $543 = 0.0, $544 = 0, $545 = 0.0, $546 = 0.0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0.0, $551 = 0, $552 = 0, $553 = 0, $554 = 0.0, $555 = 0.0, $556 = 0, $557 = 0, $558 = 0.0, $559 = 0.0, $56 = 0, $560 = 0.0;\n var $561 = 0.0, $562 = 0, $563 = 0, $564 = 0, $565 = 0.0, $566 = 0, $567 = 0.0, $568 = 0.0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0.0, $573 = 0.0, $574 = 0.0, $575 = 0, $576 = 0, $577 = 0.0, $578 = 0.0, $579 = 0.0;\n var $58 = 0, $580 = 0, $581 = 0.0, $582 = 0.0, $583 = 0, $584 = 0, $585 = 0, $586 = 0.0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0.0, $591 = 0.0, $592 = 0, $593 = 0, $594 = 0.0, $595 = 0.0, $596 = 0.0, $597 = 0.0;\n var $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0.0, $602 = 0, $603 = 0, $604 = 0, $605 = 0.0, $606 = 0.0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0.0, $611 = 0.0, $612 = 0.0, $613 = 0, $614 = 0;\n var $615 = 0.0, $616 = 0.0, $617 = 0.0, $618 = 0, $619 = 0.0, $62 = 0, $620 = 0.0, $621 = 0, $622 = 0, $623 = 0, $624 = 0.0, $625 = 0, $626 = 0, $627 = 0, $628 = 0.0, $629 = 0.0, $63 = 0, $630 = 0, $631 = 0, $632 = 0.0;\n var $633 = 0.0, $634 = 0.0, $635 = 0.0, $636 = 0, $637 = 0, $638 = 0, $639 = 0.0, $64 = 0, $640 = 0, $641 = 0.0, $642 = 0.0, $643 = 0, $644 = 0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0, $65 = 0, $650 = 0;\n var $651 = 0.0, $652 = 0.0, $653 = 0.0, $654 = 0, $655 = 0.0, $656 = 0.0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0, $662 = 0, $663 = 0, $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0.0, $669 = 0.0;\n var $67 = 0, $670 = 0.0, $671 = 0.0, $672 = 0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0, $678 = 0, $679 = 0.0, $68 = 0, $680 = 0.0, $681 = 0, $682 = 0, $683 = 0.0, $684 = 0.0, $685 = 0.0, $686 = 0, $687 = 0;\n var $688 = 0, $689 = 0.0, $69 = 0, $690 = 0.0, $691 = 0.0, $692 = 0.0, $693 = 0, $694 = 0, $695 = 0.0, $696 = 0, $697 = 0.0, $698 = 0.0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0.0, $702 = 0.0, $703 = 0.0, $704 = 0;\n var $705 = 0, $706 = 0, $707 = 0.0, $708 = 0.0, $709 = 0.0, $71 = 0, $710 = 0.0, $711 = 0, $712 = 0, $713 = 0.0, $714 = 0, $715 = 0.0, $716 = 0.0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0.0, $722 = 0.0;\n var $723 = 0.0, $724 = 0, $725 = 0, $726 = 0, $727 = 0.0, $728 = 0.0, $729 = 0.0, $73 = 0, $730 = 0.0, $731 = 0, $732 = 0, $733 = 0.0, $734 = 0, $735 = 0.0, $736 = 0.0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;\n var $741 = 0.0, $742 = 0.0, $743 = 0.0, $744 = 0, $745 = 0, $746 = 0, $747 = 0.0, $748 = 0.0, $749 = 0.0, $75 = 0, $750 = 0.0, $751 = 0, $752 = 0, $753 = 0.0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;\n var $76 = 0, $760 = 0, $761 = 0.0, $762 = 0.0, $763 = 0, $764 = 0.0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0.0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0.0, $777 = 0;\n var $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0.0, $786 = 0.0, $787 = 0, $788 = 0, $789 = 0.0, $79 = 0, $790 = 0.0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;\n var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0.0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0.0, $806 = 0.0, $807 = 0, $808 = 0, $809 = 0.0, $81 = 0, $810 = 0.0, $811 = 0, $812 = 0;\n var $813 = 0, $814 = 0.0, $815 = 0.0, $816 = 0, $817 = 0.0, $818 = 0.0, $819 = 0, $82 = 0, $820 = 0.0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;\n var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;\n var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;\n var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;\n var $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0;\n var $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0;\n var $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0;\n var $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0;\n var $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0;\n var $976 = 0, $977 = 0, $978 = 0, $979 = 0.0, $98 = 0, $980 = 0.0, $981 = 0, $982 = 0, $983 = 0, $984 = 0.0, $985 = 0.0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0.0, $991 = 0.0, $992 = 0.0, $993 = 0;\n var $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond$i = 0, $exitcond$i191 = 0, $exitcond$i191255 = 0, $exitcond$i196 = 0, $exitcond$i206 = 0, $exitcond$i211 = 0, $exitcond$i217 = 0, $exitcond$i223 = 0, $exitcond126$i = 0, $exitcond127$i = 0, $exitcond96$i = 0, $exitcond97$i = 0, $or$cond$i = 0, $or$cond$i204 = 0;\n var $or$cond$i207 = 0, $or$cond$i213 = 0, $or$cond$i219 = 0, $phitmp = 0, $storemerge$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 28|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0|0);\n if ($3) {\n  $$0 = -131;\n  return ($$0|0);\n }\n $4 = ((($2)) + 3456|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0);\n $$ = $6&1;\n $7 = ((($2)) + 3496|0);\n $8 = +HEAPF64[$7>>3];\n $9 = $8 > -80.0;\n if ($9) {\n  $$sink226 = -80.0;\n  label = 4;\n } else {\n  $10 = $8 < -200.0;\n  if ($10) {\n   $$sink226 = -200.0;\n   label = 4;\n  }\n }\n if ((label|0) == 4) {\n  HEAPF64[$7>>3] = $$sink226;\n }\n $11 = ((($2)) + 3512|0);\n $12 = +HEAPF64[$11>>3];\n $13 = $12 > 0.0;\n if ($13) {\n  $$sink228 = 0.0;\n  label = 7;\n } else {\n  $14 = $12 < -99999.0;\n  if ($14) {\n   $$sink228 = -99999.0;\n   label = 7;\n  }\n }\n if ((label|0) == 7) {\n  HEAPF64[$11>>3] = $$sink228;\n }\n $15 = ((($2)) + 3396|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ($16|0)==(0|0);\n if ($17) {\n  $$0 = -131;\n  return ($$0|0);\n }\n $18 = ((($2)) + 3392|0);\n HEAP32[$18>>2] = 1;\n $19 = ((($2)) + 3400|0);\n $20 = +HEAPF64[$19>>3];\n $21 = ((($16)) + 24|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = ((($16)) + 28|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = (~~(($20)));\n $26 = (($22) + ($25<<2)|0);\n $27 = HEAP32[$26>>2]|0;\n $28 = (($24) + ($25<<2)|0);\n $29 = HEAP32[$28>>2]|0;\n HEAP32[$2>>2] = $27;\n $30 = ((($2)) + 4|0);\n HEAP32[$30>>2] = $29;\n $31 = ($27|0)==($29|0);\n $32 = ((($16)) + 144|0);\n $33 = HEAP32[$32>>2]|0;\n $34 = ($33|0)>(0);\n if ($34) {\n  $35 = ((($16)) + 136|0);\n  $36 = ((($16)) + 140|0);\n  $37 = ((($16)) + 148|0);\n  $$0185257 = 0;$39 = $20;$55 = $2;\n  while(1) {\n   $38 = (~~(($39)));\n   $40 = HEAP32[$35>>2]|0;\n   $41 = HEAP32[$36>>2]|0;\n   $42 = HEAP32[$37>>2]|0;\n   $43 = (($42) + ($$0185257<<2)|0);\n   $44 = HEAP32[$43>>2]|0;\n   $45 = (_calloc(1,1120)|0);\n   $46 = (($44) + ($38<<2)|0);\n   $47 = HEAP32[$46>>2]|0;\n   $48 = (($41) + (($47*1120)|0)|0);\n   _memcpy(($45|0),($48|0),1120)|0;\n   $49 = HEAP32[$45>>2]|0;\n   $50 = ($49|0)>(0);\n   if ($50) {\n    $51 = ((($45)) + 4|0);\n    $$07392$i = -1;$$07591$i = 0;\n    while(1) {\n     $58 = (($51) + ($$07591$i<<2)|0);\n     $59 = HEAP32[$58>>2]|0;\n     $60 = ($59|0)>($$07392$i|0);\n     $$$073$i = $60 ? $59 : $$07392$i;\n     $61 = (($$07591$i) + 1)|0;\n     $exitcond97$i = ($61|0)==($49|0);\n     if ($exitcond97$i) {\n      break;\n     } else {\n      $$07392$i = $$$073$i;$$07591$i = $61;\n     }\n    }\n    $52 = ($$$073$i|0)<(0);\n    if (!($52)) {\n     $53 = ((($45)) + 256|0);\n     $54 = ((($55)) + 24|0);\n     $56 = ((($45)) + 192|0);\n     $57 = ((($45)) + 320|0);\n     $$088$i = -1;$$17686$i = 0;\n     while(1) {\n      $69 = (($53) + ($$17686$i<<2)|0);\n      $70 = HEAP32[$69>>2]|0;\n      $71 = ($70|0)>($$088$i|0);\n      $$$0$i = $71 ? $70 : $$088$i;\n      $72 = HEAP32[$54>>2]|0;\n      $73 = (($72) + ($70))|0;\n      HEAP32[$69>>2] = $73;\n      $74 = (($56) + ($$17686$i<<2)|0);\n      $75 = HEAP32[$74>>2]|0;\n      $76 = ($75|0)==(31);\n      if ($76) {\n       $$2$lcssa$i = $$$0$i;\n      } else {\n       $$07881$i = 0;$$282$i = $$$0$i;$1241 = $75;\n       while(1) {\n        $77 = ((($57) + ($$17686$i<<5)|0) + ($$07881$i<<2)|0);\n        $78 = HEAP32[$77>>2]|0;\n        $79 = ($78|0)>($$282$i|0);\n        $$$2$i = $79 ? $78 : $$282$i;\n        $80 = ($78|0)>(-1);\n        if ($80) {\n         $81 = HEAP32[$54>>2]|0;\n         $82 = (($81) + ($78))|0;\n         HEAP32[$77>>2] = $82;\n         $$pre$i = HEAP32[$74>>2]|0;\n         $85 = $$pre$i;\n        } else {\n         $85 = $1241;\n        }\n        $83 = (($$07881$i) + 1)|0;\n        $84 = 1 << $85;\n        $86 = ($83|0)<($84|0);\n        if ($86) {\n         $$07881$i = $83;$$282$i = $$$2$i;$1241 = $85;\n        } else {\n         $$2$lcssa$i = $$$2$i;\n         break;\n        }\n       }\n      }\n      $87 = (($$17686$i) + 1)|0;\n      $exitcond96$i = ($$17686$i|0)==($$$073$i|0);\n      if ($exitcond96$i) {\n       break;\n      } else {\n       $$088$i = $$2$lcssa$i;$$17686$i = $87;\n      }\n     }\n     $62 = ($$2$lcssa$i|0)<(0);\n     if (!($62)) {\n      $63 = (($40) + ($47<<2)|0);\n      $64 = HEAP32[$63>>2]|0;\n      $65 = HEAP32[$64>>2]|0;\n      $66 = HEAP32[$54>>2]|0;\n      $67 = (($66) + 1)|0;\n      HEAP32[$54>>2] = $67;\n      $68 = (((($55)) + 1824|0) + ($66<<2)|0);\n      HEAP32[$68>>2] = $65;\n      $exitcond$i191255 = ($$2$lcssa$i|0)==(0);\n      if (!($exitcond$i191255)) {\n       $$27780$i256 = 0;\n       while(1) {\n        $88 = (($$27780$i256) + 1)|0;\n        $$pre99$i = HEAP32[$46>>2]|0;\n        $89 = (($40) + ($$pre99$i<<2)|0);\n        $90 = HEAP32[$89>>2]|0;\n        $91 = (($90) + ($88<<2)|0);\n        $92 = HEAP32[$91>>2]|0;\n        $93 = HEAP32[$54>>2]|0;\n        $94 = (($93) + 1)|0;\n        HEAP32[$54>>2] = $94;\n        $95 = (((($55)) + 1824|0) + ($93<<2)|0);\n        HEAP32[$95>>2] = $92;\n        $exitcond$i191 = ($88|0)==($$2$lcssa$i|0);\n        if ($exitcond$i191) {\n         break;\n        } else {\n         $$27780$i256 = $88;\n        }\n       }\n      }\n     }\n    }\n   }\n   $96 = ((($55)) + 16|0);\n   $97 = HEAP32[$96>>2]|0;\n   $98 = (((($55)) + 800|0) + ($97<<2)|0);\n   HEAP32[$98>>2] = 1;\n   $99 = HEAP32[$96>>2]|0;\n   $100 = (((($55)) + 1056|0) + ($99<<2)|0);\n   HEAP32[$100>>2] = $45;\n   $101 = HEAP32[$96>>2]|0;\n   $102 = (($101) + 1)|0;\n   HEAP32[$96>>2] = $102;\n   $103 = (($$0185257) + 1)|0;\n   $104 = HEAP32[$32>>2]|0;\n   $105 = ($103|0)<($104|0);\n   if (!($105)) {\n    break;\n   }\n   $$pre = +HEAPF64[$19>>3];\n   $$pre271 = HEAP32[$1>>2]|0;\n   $$0185257 = $103;$39 = $$pre;$55 = $$pre271;\n  }\n  $$pre272 = HEAP32[$1>>2]|0;\n  $116 = $$pre272;\n } else {\n  $116 = $2;\n }\n $106 = ((($2)) + 3520|0);\n $107 = +HEAPF64[$106>>3];\n $108 = ((($16)) + 124|0);\n $109 = HEAP32[$108>>2]|0;\n $110 = ((($16)) + 128|0);\n $111 = HEAP32[$110>>2]|0;\n $112 = (~~(($107)));\n $113 = (+($112|0));\n $114 = $107 - $113;\n $115 = ((($116)) + 2868|0);\n $117 = (($111) + ($112<<3)|0);\n $118 = +HEAPF64[$117>>3];\n $119 = (~~(($118)));\n $120 = (($109) + (($119*492)|0)|0);\n _memcpy(($115|0),($120|0),492)|0;\n $121 = +HEAPF64[$117>>3];\n $122 = 1.0 - $114;\n $123 = $121 * $122;\n $124 = (($112) + 1)|0;\n $125 = (($111) + ($124<<3)|0);\n $126 = +HEAPF64[$125>>3];\n $127 = $126 * $114;\n $128 = $127 + $123;\n $129 = (~~(($128)));\n $130 = (+($129|0));\n $131 = $128 - $130;\n $132 = $131 == 0.0;\n $133 = ($129|0)>(0);\n $or$cond$i = $133 & $132;\n $$$i193 = $or$cond$i ? 1.0 : $131;\n $134 = $or$cond$i << 31 >> 31;\n $$56$i = (($134) + ($129))|0;\n $135 = 1.0 - $$$i193;\n $136 = (($$56$i) + 1)|0;\n $137 = (((($109) + (($$56$i*492)|0)|0)) + 4|0);\n $138 = +HEAPF32[$137>>2];\n $139 = $138;\n $140 = $135 * $139;\n $141 = (((($109) + (($136*492)|0)|0)) + 4|0);\n $142 = +HEAPF32[$141>>2];\n $143 = $142;\n $144 = $$$i193 * $143;\n $145 = $140 + $144;\n $146 = $145;\n $147 = ((($116)) + 2872|0);\n HEAPF32[$147>>2] = $146;\n $148 = (((($109) + (($$56$i*492)|0)|0)) + 32|0);\n $149 = +HEAPF32[$148>>2];\n $150 = $149;\n $151 = $135 * $150;\n $152 = (((($109) + (($136*492)|0)|0)) + 32|0);\n $153 = +HEAPF32[$152>>2];\n $154 = $153;\n $155 = $$$i193 * $154;\n $156 = $151 + $155;\n $157 = $156;\n $158 = ((($116)) + 2900|0);\n HEAPF32[$158>>2] = $157;\n $159 = (((($109) + (($$56$i*492)|0)|0)) + 8|0);\n $160 = +HEAPF32[$159>>2];\n $161 = $160;\n $162 = $135 * $161;\n $163 = (((($109) + (($136*492)|0)|0)) + 8|0);\n $164 = +HEAPF32[$163>>2];\n $165 = $164;\n $166 = $165 * $$$i193;\n $167 = $166 + $162;\n $168 = $167;\n $169 = ((($116)) + 2876|0);\n HEAPF32[$169>>2] = $168;\n $170 = (((($109) + (($$56$i*492)|0)|0)) + 36|0);\n $171 = +HEAPF32[$170>>2];\n $172 = $171;\n $173 = $172 * $135;\n $174 = (((($109) + (($136*492)|0)|0)) + 36|0);\n $175 = +HEAPF32[$174>>2];\n $176 = $175;\n $177 = $176 * $$$i193;\n $178 = $177 + $173;\n $179 = $178;\n $180 = ((($116)) + 2904|0);\n HEAPF32[$180>>2] = $179;\n $181 = (((($109) + (($$56$i*492)|0)|0)) + 12|0);\n $182 = +HEAPF32[$181>>2];\n $183 = $182;\n $184 = $183 * $135;\n $185 = (((($109) + (($136*492)|0)|0)) + 12|0);\n $186 = +HEAPF32[$185>>2];\n $187 = $186;\n $188 = $187 * $$$i193;\n $189 = $188 + $184;\n $190 = $189;\n $191 = ((($116)) + 2880|0);\n HEAPF32[$191>>2] = $190;\n $192 = (((($109) + (($$56$i*492)|0)|0)) + 40|0);\n $193 = +HEAPF32[$192>>2];\n $194 = $193;\n $195 = $194 * $135;\n $196 = (((($109) + (($136*492)|0)|0)) + 40|0);\n $197 = +HEAPF32[$196>>2];\n $198 = $197;\n $199 = $198 * $$$i193;\n $200 = $199 + $195;\n $201 = $200;\n $202 = ((($116)) + 2908|0);\n HEAPF32[$202>>2] = $201;\n $203 = (((($109) + (($$56$i*492)|0)|0)) + 16|0);\n $204 = +HEAPF32[$203>>2];\n $205 = $204;\n $206 = $205 * $135;\n $207 = (((($109) + (($136*492)|0)|0)) + 16|0);\n $208 = +HEAPF32[$207>>2];\n $209 = $208;\n $210 = $209 * $$$i193;\n $211 = $210 + $206;\n $212 = $211;\n $213 = ((($116)) + 2884|0);\n HEAPF32[$213>>2] = $212;\n $214 = (((($109) + (($$56$i*492)|0)|0)) + 44|0);\n $215 = +HEAPF32[$214>>2];\n $216 = $215;\n $217 = $216 * $135;\n $218 = (((($109) + (($136*492)|0)|0)) + 44|0);\n $219 = +HEAPF32[$218>>2];\n $220 = $219;\n $221 = $220 * $$$i193;\n $222 = $221 + $217;\n $223 = $222;\n $224 = ((($116)) + 2912|0);\n HEAPF32[$224>>2] = $223;\n $225 = ((($116)) + 3512|0);\n $226 = +HEAPF64[$225>>3];\n $227 = $226;\n $228 = ((($116)) + 2936|0);\n HEAPF32[$228>>2] = $227;\n $229 = ((($16)) + 132|0);\n $230 = HEAP32[$229>>2]|0;\n $231 = ((($2)) + 3472|0);\n $232 = +HEAPF64[$231>>3];\n $233 = $232;\n $234 = (~~(($233)));\n $235 = (+($234|0));\n $236 = $233 - $235;\n $237 = $236;\n $238 = HEAP32[$1>>2]|0;\n $239 = ($230|0)==(0|0);\n L44: do {\n  if ($239) {\n   $240 = ((($238)) + 4|0);\n   $241 = HEAP32[$238>>2]|0;\n   $242 = ((($238)) + 3240|0);\n   HEAP32[$242>>2] = $241;\n   $243 = HEAP32[$240>>2]|0;\n   $244 = ((($238)) + 3300|0);\n   HEAP32[$244>>2] = $243;\n   $245 = ((($238)) + 3244|0);\n   HEAP32[$245>>2] = $241;\n   $246 = ((($238)) + 3304|0);\n   HEAP32[$246>>2] = $243;\n   $247 = ((($238)) + 3248|0);\n   HEAP32[$247>>2] = $241;\n   $248 = ((($238)) + 3308|0);\n   HEAP32[$248>>2] = $243;\n   $249 = ((($238)) + 3252|0);\n   HEAP32[$249>>2] = $241;\n   $250 = ((($238)) + 3312|0);\n   HEAP32[$250>>2] = $243;\n   $251 = ((($238)) + 3256|0);\n   HEAP32[$251>>2] = $241;\n   $252 = ((($238)) + 3316|0);\n   HEAP32[$252>>2] = $243;\n   $253 = ((($238)) + 3260|0);\n   HEAP32[$253>>2] = $241;\n   $254 = ((($238)) + 3320|0);\n   HEAP32[$254>>2] = $243;\n   $255 = ((($238)) + 3264|0);\n   HEAP32[$255>>2] = $241;\n   $256 = ((($238)) + 3324|0);\n   HEAP32[$256>>2] = $243;\n   $257 = ((($238)) + 3268|0);\n   HEAP32[$257>>2] = $241;\n   $258 = ((($238)) + 3328|0);\n   HEAP32[$258>>2] = $243;\n   $259 = ((($238)) + 3272|0);\n   HEAP32[$259>>2] = $241;\n   $260 = ((($238)) + 3332|0);\n   HEAP32[$260>>2] = $243;\n   $261 = ((($238)) + 3276|0);\n   HEAP32[$261>>2] = $241;\n   $262 = ((($238)) + 3336|0);\n   HEAP32[$262>>2] = $243;\n   $263 = ((($238)) + 3280|0);\n   HEAP32[$263>>2] = $241;\n   $264 = ((($238)) + 3340|0);\n   HEAP32[$264>>2] = $243;\n   $265 = ((($238)) + 3284|0);\n   HEAP32[$265>>2] = $241;\n   $266 = ((($238)) + 3344|0);\n   HEAP32[$266>>2] = $243;\n   $267 = ((($238)) + 3288|0);\n   HEAP32[$267>>2] = $241;\n   $268 = ((($238)) + 3348|0);\n   HEAP32[$268>>2] = $243;\n   $269 = ((($238)) + 3292|0);\n   HEAP32[$269>>2] = $241;\n   $270 = ((($238)) + 3352|0);\n   HEAP32[$270>>2] = $243;\n   $271 = ((($238)) + 3296|0);\n   HEAP32[$271>>2] = $241;\n   $272 = ((($238)) + 3356|0);\n   HEAP32[$272>>2] = $243;\n  } else {\n   $273 = ((($238)) + 3120|0);\n   $274 = (($230) + (($234*240)|0)|0);\n   dest=$273; src=$274; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));\n   $275 = ((($238)) + 3180|0);\n   $276 = (((($230) + (($234*240)|0)|0)) + 60|0);\n   dest=$275; src=$276; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));\n   $277 = ((($2)) + 3420|0);\n   $278 = HEAP32[$277>>2]|0;\n   $279 = ($278|0)==(0);\n   if (!($279)) {\n    $280 = 1.0 - $237;\n    $281 = (($234) + 1)|0;\n    $282 = ((($0)) + 8|0);\n    $283 = ((($238)) + 4|0);\n    $$pre$i195 = HEAP32[$282>>2]|0;\n    $284 = (+($$pre$i195|0));\n    $$0122$i = 0;\n    while(1) {\n     $285 = ((((($230) + (($234*240)|0)|0)) + 120|0) + ($$0122$i<<2)|0);\n     $286 = +HEAPF32[$285>>2];\n     $287 = $286;\n     $288 = $287 * $280;\n     $289 = ((((($230) + (($281*240)|0)|0)) + 120|0) + ($$0122$i<<2)|0);\n     $290 = +HEAPF32[$289>>2];\n     $291 = $290;\n     $292 = $291 * $237;\n     $293 = $292 + $288;\n     $294 = $293;\n     $295 = $294;\n     $296 = $295 * 1000.0;\n     $297 = $296 / $284;\n     $298 = HEAP32[$238>>2]|0;\n     $299 = (+($298|0));\n     $300 = $297 * $299;\n     $301 = (~~(($300)));\n     $302 = (((($238)) + 3000|0) + ($$0122$i<<2)|0);\n     HEAP32[$302>>2] = $301;\n     $303 = HEAP32[$283>>2]|0;\n     $304 = (+($303|0));\n     $305 = $297 * $304;\n     $306 = (~~(($305)));\n     $307 = (((($238)) + 3060|0) + ($$0122$i<<2)|0);\n     HEAP32[$307>>2] = $306;\n     $308 = (~~(($294)));\n     $309 = (((($238)) + 2940|0) + ($$0122$i<<2)|0);\n     HEAP32[$309>>2] = $308;\n     $310 = ((((($230) + (($234*240)|0)|0)) + 180|0) + ($$0122$i<<2)|0);\n     $311 = +HEAPF32[$310>>2];\n     $312 = $311;\n     $313 = $312 * $280;\n     $314 = ((((($230) + (($281*240)|0)|0)) + 180|0) + ($$0122$i<<2)|0);\n     $315 = +HEAPF32[$314>>2];\n     $316 = $315;\n     $317 = $316 * $237;\n     $318 = $317 + $313;\n     $319 = $318;\n     $320 = $319;\n     $321 = $320 * 1000.0;\n     $322 = $321 / $284;\n     $323 = HEAP32[$238>>2]|0;\n     $324 = (+($323|0));\n     $325 = $322 * $324;\n     $326 = (~~(($325)));\n     $327 = (((($238)) + 3240|0) + ($$0122$i<<2)|0);\n     HEAP32[$327>>2] = $326;\n     $328 = HEAP32[$283>>2]|0;\n     $329 = (+($328|0));\n     $330 = $322 * $329;\n     $331 = (~~(($330)));\n     $332 = (((($238)) + 3300|0) + ($$0122$i<<2)|0);\n     HEAP32[$332>>2] = $331;\n     $333 = (($$0122$i) + 1)|0;\n     $exitcond127$i = ($333|0)==(15);\n     if ($exitcond127$i) {\n      break L44;\n     } else {\n      $$0122$i = $333;\n     }\n    }\n   }\n   $334 = (((($230) + (($234*240)|0)|0)) + 148|0);\n   $335 = +HEAPF32[$334>>2];\n   $336 = $335;\n   $337 = 1.0 - $237;\n   $338 = $336 * $337;\n   $339 = (($234) + 1)|0;\n   $340 = (((($230) + (($339*240)|0)|0)) + 148|0);\n   $341 = +HEAPF32[$340>>2];\n   $342 = $341;\n   $343 = $342 * $237;\n   $344 = $343 + $338;\n   $345 = $344;\n   $346 = $345;\n   $347 = $346 * 1000.0;\n   $348 = ((($0)) + 8|0);\n   $349 = ((($238)) + 4|0);\n   $350 = (~~(($345)));\n   $$pre128$i = HEAP32[$348>>2]|0;\n   $351 = (+($$pre128$i|0));\n   $352 = $347 / $351;\n   $$1121$i = 0;\n   while(1) {\n    $353 = HEAP32[$238>>2]|0;\n    $354 = (+($353|0));\n    $355 = $354 * $352;\n    $356 = (~~(($355)));\n    $357 = (((($238)) + 3000|0) + ($$1121$i<<2)|0);\n    HEAP32[$357>>2] = $356;\n    $358 = HEAP32[$349>>2]|0;\n    $359 = (+($358|0));\n    $360 = $359 * $352;\n    $361 = (~~(($360)));\n    $362 = (((($238)) + 3060|0) + ($$1121$i<<2)|0);\n    HEAP32[$362>>2] = $361;\n    $363 = (((($238)) + 2940|0) + ($$1121$i<<2)|0);\n    HEAP32[$363>>2] = $350;\n    $364 = (($$1121$i) + 1)|0;\n    $exitcond126$i = ($364|0)==(15);\n    if ($exitcond126$i) {\n     break;\n    } else {\n     $$1121$i = $364;\n    }\n   }\n   $365 = (((($230) + (($234*240)|0)|0)) + 208|0);\n   $366 = +HEAPF32[$365>>2];\n   $367 = $366;\n   $368 = $367 * $337;\n   $369 = (((($230) + (($339*240)|0)|0)) + 208|0);\n   $370 = +HEAPF32[$369>>2];\n   $371 = $370;\n   $372 = $371 * $237;\n   $373 = $372 + $368;\n   $374 = $373;\n   $375 = $374;\n   $376 = $375 * 1000.0;\n   $377 = $376 / $351;\n   $$2120$i = 0;\n   while(1) {\n    $378 = HEAP32[$238>>2]|0;\n    $379 = (+($378|0));\n    $380 = $379 * $377;\n    $381 = (~~(($380)));\n    $382 = (((($238)) + 3240|0) + ($$2120$i<<2)|0);\n    HEAP32[$382>>2] = $381;\n    $383 = HEAP32[$349>>2]|0;\n    $384 = (+($383|0));\n    $385 = $384 * $377;\n    $386 = (~~(($385)));\n    $387 = (((($238)) + 3300|0) + ($$2120$i<<2)|0);\n    HEAP32[$387>>2] = $386;\n    $388 = (($$2120$i) + 1)|0;\n    $exitcond$i196 = ($388|0)==(15);\n    if ($exitcond$i196) {\n     break;\n    } else {\n     $$2120$i = $388;\n    }\n   }\n  }\n } while(0);\n $389 = +HEAPF64[$19>>3];\n $390 = ((($16)) + 92|0);\n $391 = HEAP32[$390>>2]|0;\n $392 = ((($16)) + 100|0);\n $393 = HEAP32[$392>>2]|0;\n $394 = ((($16)) + 108|0);\n $395 = HEAP32[$394>>2]|0;\n $396 = HEAP32[$1>>2]|0;\n $397 = ((($396)) + 2852|0);\n $398 = HEAP32[$397>>2]|0;\n $399 = (~~(($389)));\n $400 = ((($396)) + 28|0);\n $401 = HEAP32[$400>>2]|0;\n $402 = ($401|0)>(0);\n if (!($402)) {\n  HEAP32[$400>>2] = 1;\n }\n $403 = ($398|0)==(0|0);\n if ($403) {\n  $404 = (_calloc(1,520)|0);\n  HEAP32[$397>>2] = $404;\n  $$0$i197 = $404;\n } else {\n  $$0$i197 = $398;\n }\n _memcpy(($$0$i197|0),(152|0),520)|0;\n HEAP32[$$0$i197>>2] = 0;\n $405 = ((($396)) + 3460|0);\n $406 = HEAP32[$405>>2]|0;\n $407 = ($406|0)==(0);\n if (!($407)) {\n  $408 = ((($$0$i197)) + 500|0);\n  HEAP32[$408>>2] = 1;\n  $409 = (($391) + ($399<<2)|0);\n  $410 = HEAP32[$409>>2]|0;\n  $411 = ((($$0$i197)) + 504|0);\n  HEAP32[$411>>2] = $410;\n  $412 = (($393) + ($399<<2)|0);\n  $413 = HEAP32[$412>>2]|0;\n  $414 = ((($$0$i197)) + 508|0);\n  HEAP32[$414>>2] = $413;\n  $415 = (($395) + ($399<<3)|0);\n  $416 = +HEAPF64[$415>>3];\n  $417 = ((($$0$i197)) + 512|0);\n  HEAPF64[$417>>3] = $416;\n }\n $418 = +HEAPF64[$19>>3];\n $419 = HEAP32[$390>>2]|0;\n $420 = HEAP32[$392>>2]|0;\n $421 = HEAP32[$394>>2]|0;\n $422 = HEAP32[$1>>2]|0;\n $423 = ((($422)) + 2856|0);\n $424 = HEAP32[$423>>2]|0;\n $425 = (~~(($418)));\n $426 = ((($422)) + 28|0);\n $427 = HEAP32[$426>>2]|0;\n $428 = ($427|0)>(1);\n if (!($428)) {\n  HEAP32[$426>>2] = 2;\n }\n $429 = ($424|0)==(0|0);\n if ($429) {\n  $430 = (_calloc(1,520)|0);\n  HEAP32[$423>>2] = $430;\n  $$0$i198 = $430;\n } else {\n  $$0$i198 = $424;\n }\n _memcpy(($$0$i198|0),(152|0),520)|0;\n HEAP32[$$0$i198>>2] = 0;\n $431 = ((($422)) + 3460|0);\n $432 = HEAP32[$431>>2]|0;\n $433 = ($432|0)==(0);\n if (!($433)) {\n  $434 = ((($$0$i198)) + 500|0);\n  HEAP32[$434>>2] = 1;\n  $435 = (($419) + ($425<<2)|0);\n  $436 = HEAP32[$435>>2]|0;\n  $437 = ((($$0$i198)) + 504|0);\n  HEAP32[$437>>2] = $436;\n  $438 = (($420) + ($425<<2)|0);\n  $439 = HEAP32[$438>>2]|0;\n  $440 = ((($$0$i198)) + 508|0);\n  HEAP32[$440>>2] = $439;\n  $441 = (($421) + ($425<<3)|0);\n  $442 = +HEAPF64[$441>>3];\n  $443 = ((($$0$i198)) + 512|0);\n  HEAPF64[$443>>3] = $442;\n }\n if (!($31)) {\n  $444 = +HEAPF64[$19>>3];\n  $445 = ((($16)) + 96|0);\n  $446 = HEAP32[$445>>2]|0;\n  $447 = ((($16)) + 104|0);\n  $448 = HEAP32[$447>>2]|0;\n  $449 = HEAP32[$394>>2]|0;\n  $450 = HEAP32[$1>>2]|0;\n  $451 = ((($450)) + 2860|0);\n  $452 = HEAP32[$451>>2]|0;\n  $453 = (~~(($444)));\n  $454 = ((($450)) + 28|0);\n  $455 = HEAP32[$454>>2]|0;\n  $456 = ($455|0)>(2);\n  if (!($456)) {\n   HEAP32[$454>>2] = 3;\n  }\n  $457 = ($452|0)==(0|0);\n  if ($457) {\n   $458 = (_calloc(1,520)|0);\n   HEAP32[$451>>2] = $458;\n   $$0$i200 = $458;\n  } else {\n   $$0$i200 = $452;\n  }\n  _memcpy(($$0$i200|0),(152|0),520)|0;\n  HEAP32[$$0$i200>>2] = 1;\n  $459 = ((($450)) + 3460|0);\n  $460 = HEAP32[$459>>2]|0;\n  $461 = ($460|0)==(0);\n  if (!($461)) {\n   $462 = ((($$0$i200)) + 500|0);\n   HEAP32[$462>>2] = 1;\n   $463 = (($446) + ($453<<2)|0);\n   $464 = HEAP32[$463>>2]|0;\n   $465 = ((($$0$i200)) + 504|0);\n   HEAP32[$465>>2] = $464;\n   $466 = (($448) + ($453<<2)|0);\n   $467 = HEAP32[$466>>2]|0;\n   $468 = ((($$0$i200)) + 508|0);\n   HEAP32[$468>>2] = $467;\n   $469 = (($449) + ($453<<3)|0);\n   $470 = +HEAPF64[$469>>3];\n   $471 = ((($$0$i200)) + 512|0);\n   HEAPF64[$471>>3] = $470;\n  }\n  $472 = +HEAPF64[$19>>3];\n  $473 = HEAP32[$445>>2]|0;\n  $474 = HEAP32[$447>>2]|0;\n  $475 = HEAP32[$394>>2]|0;\n  $476 = HEAP32[$1>>2]|0;\n  $477 = ((($476)) + 2864|0);\n  $478 = HEAP32[$477>>2]|0;\n  $479 = (~~(($472)));\n  $480 = ((($476)) + 28|0);\n  $481 = HEAP32[$480>>2]|0;\n  $482 = ($481|0)>(3);\n  if (!($482)) {\n   HEAP32[$480>>2] = 4;\n  }\n  $483 = ($478|0)==(0|0);\n  if ($483) {\n   $484 = (_calloc(1,520)|0);\n   HEAP32[$477>>2] = $484;\n   $$0$i202 = $484;\n  } else {\n   $$0$i202 = $478;\n  }\n  _memcpy(($$0$i202|0),(152|0),520)|0;\n  HEAP32[$$0$i202>>2] = 1;\n  $485 = ((($476)) + 3460|0);\n  $486 = HEAP32[$485>>2]|0;\n  $487 = ($486|0)==(0);\n  if (!($487)) {\n   $488 = ((($$0$i202)) + 500|0);\n   HEAP32[$488>>2] = 1;\n   $489 = (($473) + ($479<<2)|0);\n   $490 = HEAP32[$489>>2]|0;\n   $491 = ((($$0$i202)) + 504|0);\n   HEAP32[$491>>2] = $490;\n   $492 = (($474) + ($479<<2)|0);\n   $493 = HEAP32[$492>>2]|0;\n   $494 = ((($$0$i202)) + 508|0);\n   HEAP32[$494>>2] = $493;\n   $495 = (($475) + ($479<<3)|0);\n   $496 = +HEAPF64[$495>>3];\n   $497 = ((($$0$i202)) + 512|0);\n   HEAPF64[$497>>3] = $496;\n  }\n }\n $498 = (((($2)) + 3528|0) + ($$<<5)|0);\n $499 = +HEAPF64[$498>>3];\n $500 = ((($16)) + 32|0);\n $501 = HEAP32[$500>>2]|0;\n $502 = ((($16)) + 36|0);\n $503 = HEAP32[$502>>2]|0;\n $504 = ((($16)) + 44|0);\n $505 = HEAP32[$504>>2]|0;\n _vorbis_encode_tonemask_setup($0,$499,0,$501,$503,$505);\n $506 = ((($2)) + 3560|0);\n $507 = +HEAPF64[$506>>3];\n $508 = HEAP32[$500>>2]|0;\n $509 = HEAP32[$502>>2]|0;\n $510 = ((($16)) + 52|0);\n $511 = HEAP32[$510>>2]|0;\n _vorbis_encode_tonemask_setup($0,$507,1,$508,$509,$511);\n if (!($31)) {\n  $512 = ((($2)) + 3592|0);\n  $513 = +HEAPF64[$512>>3];\n  $514 = HEAP32[$500>>2]|0;\n  $515 = HEAP32[$502>>2]|0;\n  $516 = HEAP32[$510>>2]|0;\n  _vorbis_encode_tonemask_setup($0,$513,2,$514,$515,$516);\n  $517 = ((($2)) + 3624|0);\n  $518 = +HEAPF64[$517>>3];\n  $519 = HEAP32[$500>>2]|0;\n  $520 = HEAP32[$502>>2]|0;\n  $521 = ((($16)) + 48|0);\n  $522 = HEAP32[$521>>2]|0;\n  _vorbis_encode_tonemask_setup($0,$518,3,$519,$520,$522);\n }\n $523 = (((((($2)) + 3528|0) + ($$<<5)|0)) + 24|0);\n $524 = +HEAPF64[$523>>3];\n $525 = ((($16)) + 80|0);\n $526 = HEAP32[$525>>2]|0;\n $527 = ((($16)) + 84|0);\n $528 = HEAP32[$527>>2]|0;\n $529 = (~~(($524)));\n $530 = (+($529|0));\n $531 = $524 - $530;\n $532 = HEAP32[$1>>2]|0;\n $533 = ((($532)) + 2852|0);\n $534 = HEAP32[$533>>2]|0;\n $535 = (($528) + ($529<<3)|0);\n $536 = +HEAPF64[$535>>3];\n $537 = 1.0 - $531;\n $538 = $536 * $537;\n $539 = (($529) + 1)|0;\n $540 = (($528) + ($539<<3)|0);\n $541 = +HEAPF64[$540>>3];\n $542 = $541 * $531;\n $543 = $542 + $538;\n $544 = (~~(($543)));\n $545 = (+($544|0));\n $546 = $543 - $545;\n $547 = $546 == 0.0;\n $548 = ($544|0)>(0);\n $or$cond$i204 = $548 & $547;\n $$$i205 = $or$cond$i204 ? 1.0 : $546;\n $549 = $or$cond$i204 << 31 >> 31;\n $$41$i = (($549) + ($544))|0;\n $550 = 1.0 - $$$i205;\n $551 = (($$41$i) + 1)|0;\n $$042$i = 0;\n while(1) {\n  $552 = ((($526) + (($$41$i*160)|0)|0) + ($$042$i<<2)|0);\n  $553 = HEAP32[$552>>2]|0;\n  $554 = (+($553|0));\n  $555 = $554 * $550;\n  $556 = ((($526) + (($551*160)|0)|0) + ($$042$i<<2)|0);\n  $557 = HEAP32[$556>>2]|0;\n  $558 = (+($557|0));\n  $559 = $558 * $$$i205;\n  $560 = $559 + $555;\n  $561 = $560;\n  $562 = (((($534)) + 336|0) + ($$042$i<<2)|0);\n  HEAPF32[$562>>2] = $561;\n  $563 = (($$042$i) + 1)|0;\n  $exitcond$i206 = ($563|0)==(40);\n  if ($exitcond$i206) {\n   break;\n  } else {\n   $$042$i = $563;\n  }\n }\n $564 = ((($2)) + 3584|0);\n $565 = +HEAPF64[$564>>3];\n $566 = (~~(($565)));\n $567 = (+($566|0));\n $568 = $565 - $567;\n $569 = ((($532)) + 2856|0);\n $570 = HEAP32[$569>>2]|0;\n $571 = (($528) + ($566<<3)|0);\n $572 = +HEAPF64[$571>>3];\n $573 = 1.0 - $568;\n $574 = $572 * $573;\n $575 = (($566) + 1)|0;\n $576 = (($528) + ($575<<3)|0);\n $577 = +HEAPF64[$576>>3];\n $578 = $577 * $568;\n $579 = $578 + $574;\n $580 = (~~(($579)));\n $581 = (+($580|0));\n $582 = $579 - $581;\n $583 = $582 == 0.0;\n $584 = ($580|0)>(0);\n $or$cond$i207 = $584 & $583;\n $$$i208 = $or$cond$i207 ? 1.0 : $582;\n $585 = $or$cond$i207 << 31 >> 31;\n $$41$i209 = (($585) + ($580))|0;\n $586 = 1.0 - $$$i208;\n $587 = (($$41$i209) + 1)|0;\n $$042$i210 = 0;\n while(1) {\n  $588 = ((($526) + (($$41$i209*160)|0)|0) + ($$042$i210<<2)|0);\n  $589 = HEAP32[$588>>2]|0;\n  $590 = (+($589|0));\n  $591 = $590 * $586;\n  $592 = ((($526) + (($587*160)|0)|0) + ($$042$i210<<2)|0);\n  $593 = HEAP32[$592>>2]|0;\n  $594 = (+($593|0));\n  $595 = $594 * $$$i208;\n  $596 = $595 + $591;\n  $597 = $596;\n  $598 = (((($570)) + 336|0) + ($$042$i210<<2)|0);\n  HEAPF32[$598>>2] = $597;\n  $599 = (($$042$i210) + 1)|0;\n  $exitcond$i211 = ($599|0)==(40);\n  if ($exitcond$i211) {\n   break;\n  } else {\n   $$042$i210 = $599;\n  }\n }\n if (!($31)) {\n  $600 = ((($2)) + 3616|0);\n  $601 = +HEAPF64[$600>>3];\n  $602 = ((($16)) + 88|0);\n  $603 = HEAP32[$602>>2]|0;\n  $604 = (~~(($601)));\n  $605 = (+($604|0));\n  $606 = $601 - $605;\n  $607 = ((($532)) + 2860|0);\n  $608 = HEAP32[$607>>2]|0;\n  $609 = (($603) + ($604<<3)|0);\n  $610 = +HEAPF64[$609>>3];\n  $611 = 1.0 - $606;\n  $612 = $610 * $611;\n  $613 = (($604) + 1)|0;\n  $614 = (($603) + ($613<<3)|0);\n  $615 = +HEAPF64[$614>>3];\n  $616 = $615 * $606;\n  $617 = $616 + $612;\n  $618 = (~~(($617)));\n  $619 = (+($618|0));\n  $620 = $617 - $619;\n  $621 = $620 == 0.0;\n  $622 = ($618|0)>(0);\n  $or$cond$i213 = $622 & $621;\n  $$$i214 = $or$cond$i213 ? 1.0 : $620;\n  $623 = $or$cond$i213 << 31 >> 31;\n  $$41$i215 = (($623) + ($618))|0;\n  $624 = 1.0 - $$$i214;\n  $625 = (($$41$i215) + 1)|0;\n  $$042$i216 = 0;\n  while(1) {\n   $626 = ((($526) + (($$41$i215*160)|0)|0) + ($$042$i216<<2)|0);\n   $627 = HEAP32[$626>>2]|0;\n   $628 = (+($627|0));\n   $629 = $628 * $624;\n   $630 = ((($526) + (($625*160)|0)|0) + ($$042$i216<<2)|0);\n   $631 = HEAP32[$630>>2]|0;\n   $632 = (+($631|0));\n   $633 = $632 * $$$i214;\n   $634 = $633 + $629;\n   $635 = $634;\n   $636 = (((($608)) + 336|0) + ($$042$i216<<2)|0);\n   HEAPF32[$636>>2] = $635;\n   $637 = (($$042$i216) + 1)|0;\n   $exitcond$i217 = ($637|0)==(40);\n   if ($exitcond$i217) {\n    break;\n   } else {\n    $$042$i216 = $637;\n   }\n  }\n  $638 = ((($2)) + 3648|0);\n  $639 = +HEAPF64[$638>>3];\n  $640 = (~~(($639)));\n  $641 = (+($640|0));\n  $642 = $639 - $641;\n  $643 = ((($532)) + 2864|0);\n  $644 = HEAP32[$643>>2]|0;\n  $645 = (($603) + ($640<<3)|0);\n  $646 = +HEAPF64[$645>>3];\n  $647 = 1.0 - $642;\n  $648 = $646 * $647;\n  $649 = (($640) + 1)|0;\n  $650 = (($603) + ($649<<3)|0);\n  $651 = +HEAPF64[$650>>3];\n  $652 = $651 * $642;\n  $653 = $652 + $648;\n  $654 = (~~(($653)));\n  $655 = (+($654|0));\n  $656 = $653 - $655;\n  $657 = $656 == 0.0;\n  $658 = ($654|0)>(0);\n  $or$cond$i219 = $658 & $657;\n  $$$i220 = $or$cond$i219 ? 1.0 : $656;\n  $659 = $or$cond$i219 << 31 >> 31;\n  $$41$i221 = (($659) + ($654))|0;\n  $660 = 1.0 - $$$i220;\n  $661 = (($$41$i221) + 1)|0;\n  $$042$i222 = 0;\n  while(1) {\n   $662 = ((($526) + (($$41$i221*160)|0)|0) + ($$042$i222<<2)|0);\n   $663 = HEAP32[$662>>2]|0;\n   $664 = (+($663|0));\n   $665 = $664 * $660;\n   $666 = ((($526) + (($661*160)|0)|0) + ($$042$i222<<2)|0);\n   $667 = HEAP32[$666>>2]|0;\n   $668 = (+($667|0));\n   $669 = $668 * $$$i220;\n   $670 = $669 + $665;\n   $671 = $670;\n   $672 = (((($644)) + 336|0) + ($$042$i222<<2)|0);\n   HEAPF32[$672>>2] = $671;\n   $673 = (($$042$i222) + 1)|0;\n   $exitcond$i223 = ($673|0)==(40);\n   if ($exitcond$i223) {\n    break;\n   } else {\n    $$042$i222 = $673;\n   }\n  }\n }\n $674 = (((((($2)) + 3528|0) + ($$<<5)|0)) + 8|0);\n $675 = +HEAPF64[$674>>3];\n $676 = ((($16)) + 40|0);\n $677 = HEAP32[$676>>2]|0;\n $678 = (~~(($675)));\n $679 = (+($678|0));\n $680 = $675 - $679;\n $681 = (($677) + ($678<<2)|0);\n $682 = HEAP32[$681>>2]|0;\n $683 = (+($682|0));\n $684 = 1.0 - $680;\n $685 = $683 * $684;\n $686 = (($678) + 1)|0;\n $687 = (($677) + ($686<<2)|0);\n $688 = HEAP32[$687>>2]|0;\n $689 = (+($688|0));\n $690 = $689 * $680;\n $691 = $690 + $685;\n $692 = $691;\n $693 = ((($534)) + 32|0);\n HEAPF32[$693>>2] = $692;\n $694 = ((($2)) + 3568|0);\n $695 = +HEAPF64[$694>>3];\n $696 = (~~(($695)));\n $697 = (+($696|0));\n $698 = $695 - $697;\n $699 = (($677) + ($696<<2)|0);\n $700 = HEAP32[$699>>2]|0;\n $701 = (+($700|0));\n $702 = 1.0 - $698;\n $703 = $701 * $702;\n $704 = (($696) + 1)|0;\n $705 = (($677) + ($704<<2)|0);\n $706 = HEAP32[$705>>2]|0;\n $707 = (+($706|0));\n $708 = $707 * $698;\n $709 = $708 + $703;\n $710 = $709;\n $711 = ((($570)) + 32|0);\n HEAPF32[$711>>2] = $710;\n if (!($31)) {\n  $712 = ((($2)) + 3600|0);\n  $713 = +HEAPF64[$712>>3];\n  $714 = (~~(($713)));\n  $715 = (+($714|0));\n  $716 = $713 - $715;\n  $717 = ((($532)) + 2860|0);\n  $718 = HEAP32[$717>>2]|0;\n  $719 = (($677) + ($714<<2)|0);\n  $720 = HEAP32[$719>>2]|0;\n  $721 = (+($720|0));\n  $722 = 1.0 - $716;\n  $723 = $721 * $722;\n  $724 = (($714) + 1)|0;\n  $725 = (($677) + ($724<<2)|0);\n  $726 = HEAP32[$725>>2]|0;\n  $727 = (+($726|0));\n  $728 = $727 * $716;\n  $729 = $728 + $723;\n  $730 = $729;\n  $731 = ((($718)) + 32|0);\n  HEAPF32[$731>>2] = $730;\n  $732 = ((($2)) + 3632|0);\n  $733 = +HEAPF64[$732>>3];\n  $734 = (~~(($733)));\n  $735 = (+($734|0));\n  $736 = $733 - $735;\n  $737 = ((($532)) + 2864|0);\n  $738 = HEAP32[$737>>2]|0;\n  $739 = (($677) + ($734<<2)|0);\n  $740 = HEAP32[$739>>2]|0;\n  $741 = (+($740|0));\n  $742 = 1.0 - $736;\n  $743 = $741 * $742;\n  $744 = (($734) + 1)|0;\n  $745 = (($677) + ($744<<2)|0);\n  $746 = HEAP32[$745>>2]|0;\n  $747 = (+($746|0));\n  $748 = $747 * $736;\n  $749 = $748 + $743;\n  $750 = $749;\n  $751 = ((($738)) + 32|0);\n  HEAPF32[$751>>2] = $750;\n }\n $752 = (((((($2)) + 3528|0) + ($$<<5)|0)) + 16|0);\n $753 = +HEAPF64[$752>>3];\n $754 = ((($16)) + 76|0);\n $755 = HEAP32[$754>>2]|0;\n $756 = ((($16)) + 60|0);\n $757 = HEAP32[$756>>2]|0;\n $758 = ((($16)) + 56|0);\n $759 = HEAP32[$758>>2]|0;\n if ($6) {\n  $762 = 0.0;\n } else {\n  $760 = ((($2)) + 3408|0);\n  $761 = +HEAPF64[$760>>3];\n  $762 = $761;\n }\n _vorbis_encode_noisebias_setup($0,$753,0,$755,$757,$759,$762);\n $763 = ((($2)) + 3576|0);\n $764 = +HEAPF64[$763>>3];\n $765 = HEAP32[$754>>2]|0;\n $766 = ((($16)) + 64|0);\n $767 = HEAP32[$766>>2]|0;\n $768 = HEAP32[$758>>2]|0;\n _vorbis_encode_noisebias_setup($0,$764,1,$765,$767,$768,0.0);\n if ($31) {\n  $801 = HEAP32[$1>>2]|0;\n  $802 = ((($801)) + 2852|0);\n  $803 = HEAP32[$802>>2]|0;\n  $804 = ((($801)) + 3496|0);\n  $805 = +HEAPF64[$804>>3];\n  $806 = $805;\n  $807 = ((($803)) + 4|0);\n  HEAPF32[$807>>2] = $806;\n  $808 = ((($801)) + 3504|0);\n  $809 = +HEAPF64[$808>>3];\n  $810 = $809;\n  $811 = ((($803)) + 8|0);\n  HEAPF32[$811>>2] = $810;\n  $812 = ((($801)) + 2856|0);\n  $$sink241 = $812;$815 = $805;$818 = $809;$829 = $801;\n } else {\n  $769 = ((($2)) + 3608|0);\n  $770 = +HEAPF64[$769>>3];\n  $771 = HEAP32[$754>>2]|0;\n  $772 = ((($16)) + 68|0);\n  $773 = HEAP32[$772>>2]|0;\n  $774 = HEAP32[$758>>2]|0;\n  _vorbis_encode_noisebias_setup($0,$770,2,$771,$773,$774,0.0);\n  $775 = ((($2)) + 3640|0);\n  $776 = +HEAPF64[$775>>3];\n  $777 = HEAP32[$754>>2]|0;\n  $778 = ((($16)) + 72|0);\n  $779 = HEAP32[$778>>2]|0;\n  $780 = HEAP32[$758>>2]|0;\n  _vorbis_encode_noisebias_setup($0,$776,3,$777,$779,$780,0.0);\n  $781 = HEAP32[$1>>2]|0;\n  $782 = ((($781)) + 2852|0);\n  $783 = HEAP32[$782>>2]|0;\n  $784 = ((($781)) + 3496|0);\n  $785 = +HEAPF64[$784>>3];\n  $786 = $785;\n  $787 = ((($783)) + 4|0);\n  HEAPF32[$787>>2] = $786;\n  $788 = ((($781)) + 3504|0);\n  $789 = +HEAPF64[$788>>3];\n  $790 = $789;\n  $791 = ((($783)) + 8|0);\n  HEAPF32[$791>>2] = $790;\n  $792 = ((($781)) + 2856|0);\n  $793 = HEAP32[$792>>2]|0;\n  $794 = ((($793)) + 4|0);\n  HEAPF32[$794>>2] = $786;\n  $795 = ((($793)) + 8|0);\n  HEAPF32[$795>>2] = $790;\n  $796 = ((($781)) + 2860|0);\n  $797 = HEAP32[$796>>2]|0;\n  $798 = ((($797)) + 4|0);\n  HEAPF32[$798>>2] = $786;\n  $799 = ((($797)) + 8|0);\n  HEAPF32[$799>>2] = $790;\n  $800 = ((($781)) + 2864|0);\n  $$sink241 = $800;$815 = $785;$818 = $789;$829 = $781;\n }\n $813 = HEAP32[$$sink241>>2]|0;\n $814 = $815;\n $816 = ((($813)) + 4|0);\n HEAPF32[$816>>2] = $814;\n $817 = $818;\n $819 = ((($813)) + 8|0);\n HEAPF32[$819>>2] = $817;\n $820 = +HEAPF64[$19>>3];\n $821 = ((($16)) + 152|0);\n $822 = HEAP32[$821>>2]|0;\n $823 = (~~(($820)));\n $824 = (($822) + ($823<<3)|0);\n $825 = HEAP32[$824>>2]|0;\n $826 = (((($822) + ($823<<3)|0)) + 4|0);\n $827 = HEAP32[$826>>2]|0;\n $828 = HEAP32[$829>>2]|0;\n $830 = ((($829)) + 4|0);\n $831 = HEAP32[$830>>2]|0;\n $832 = ($828|0)==($831|0);\n $$$i = $832 ? 1 : 2;\n $833 = ((($829)) + 8|0);\n $834 = ((($829)) + 12|0);\n $835 = ((($0)) + 8|0);\n $836 = ((($0)) + 4|0);\n $$075$i = 0;\n while(1) {\n  $837 = (_calloc(1,3208)|0);\n  $838 = (((($829)) + 544|0) + ($$075$i<<2)|0);\n  HEAP32[$838>>2] = $837;\n  $839 = (_calloc(1,16)|0);\n  $840 = (((($829)) + 32|0) + ($$075$i<<2)|0);\n  HEAP32[$840>>2] = $839;\n  $841 = (28076 + ($$075$i<<4)|0);\n  ;HEAP32[$839>>2]=HEAP32[$841>>2]|0;HEAP32[$839+4>>2]=HEAP32[$841+4>>2]|0;HEAP32[$839+8>>2]=HEAP32[$841+8>>2]|0;HEAP32[$839+12>>2]=HEAP32[$841+12>>2]|0;\n  $842 = HEAP32[$833>>2]|0;\n  $843 = ($$075$i|0)<($842|0);\n  if (!($843)) {\n   $844 = (($$075$i) + 1)|0;\n   HEAP32[$833>>2] = $844;\n  }\n  $845 = (((($829)) + 288|0) + ($$075$i<<2)|0);\n  HEAP32[$845>>2] = 0;\n  $846 = HEAP32[$838>>2]|0;\n  $847 = (($825) + (($$075$i*3208)|0)|0);\n  _memcpy(($846|0),($847|0),3208)|0;\n  $848 = HEAP32[$834>>2]|0;\n  $849 = ($$075$i|0)<($848|0);\n  if (!($849)) {\n   $850 = (($$075$i) + 1)|0;\n   HEAP32[$834>>2] = $850;\n  }\n  $851 = HEAP32[$847>>2]|0;\n  $852 = ($851|0)>(0);\n  L130: do {\n   if ($852) {\n    $$06074$i = 0;\n    while(1) {\n     $853 = ((((($825) + (($$075$i*3208)|0)|0)) + 1092|0) + ($$06074$i<<2)|0);\n     $854 = HEAP32[$853>>2]|0;\n     $855 = HEAP32[$1>>2]|0;\n     $856 = (_malloc(2840)|0);\n     $857 = (((($855)) + 1568|0) + ($854<<2)|0);\n     HEAP32[$857>>2] = $856;\n     $858 = (((($827) + ($854<<5)|0)) + 12|0);\n     $859 = HEAP32[$858>>2]|0;\n     _memcpy(($856|0),($859|0),2840)|0;\n     $860 = ((($855)) + 20|0);\n     $861 = HEAP32[$860>>2]|0;\n     $862 = ($861|0)>($854|0);\n     if (!($862)) {\n      $863 = (($854) + 1)|0;\n      HEAP32[$860>>2] = $863;\n     }\n     $864 = (((($827) + ($854<<5)|0)) + 8|0);\n     $865 = HEAP32[$864>>2]|0;\n     $866 = ((($856)) + 8|0);\n     HEAP32[$866>>2] = $865;\n     $867 = (($827) + ($854<<5)|0);\n     $868 = HEAP32[$867>>2]|0;\n     $869 = (((($855)) + 1312|0) + ($854<<2)|0);\n     HEAP32[$869>>2] = $868;\n     $870 = ((($855)) + 3420|0);\n     $871 = HEAP32[$870>>2]|0;\n     $872 = ($871|0)==(0);\n     $873 = ((($856)) + 12|0);\n     $874 = HEAP32[$873>>2]|0;\n     $875 = ($874|0)>(0);\n     do {\n      if ($872) {\n       if ($875) {\n        $879 = (((($827) + ($854<<5)|0)) + 24|0);\n        $880 = HEAP32[$879>>2]|0;\n        $881 = ((($856)) + 24|0);\n        $$2251$i$i = 0;\n        while(1) {\n         $930 = (($881) + ($$2251$i$i<<2)|0);\n         $931 = (($880) + ($$2251$i$i<<4)|0);\n         $932 = HEAP32[$931>>2]|0;\n         $933 = ($932|0)==(0|0);\n         if (!($933)) {\n          $934 = HEAP32[$930>>2]|0;\n          $935 = $934 | 1;\n          HEAP32[$930>>2] = $935;\n         }\n         $936 = (((($880) + ($$2251$i$i<<4)|0)) + 4|0);\n         $937 = HEAP32[$936>>2]|0;\n         $938 = ($937|0)==(0|0);\n         if (!($938)) {\n          $1104 = HEAP32[$930>>2]|0;\n          $1105 = $1104 | 2;\n          HEAP32[$930>>2] = $1105;\n         }\n         $1106 = (((($880) + ($$2251$i$i<<4)|0)) + 8|0);\n         $1107 = HEAP32[$1106>>2]|0;\n         $1108 = ($1107|0)==(0|0);\n         if (!($1108)) {\n          $1109 = HEAP32[$930>>2]|0;\n          $1110 = $1109 | 4;\n          HEAP32[$930>>2] = $1110;\n         }\n         $1111 = (((($880) + ($$2251$i$i<<4)|0)) + 12|0);\n         $1112 = HEAP32[$1111>>2]|0;\n         $1113 = ($1112|0)==(0|0);\n         if (!($1113)) {\n          $1114 = HEAP32[$930>>2]|0;\n          $1115 = $1114 | 8;\n          HEAP32[$930>>2] = $1115;\n         }\n         $1116 = (($$2251$i$i) + 1)|0;\n         $1117 = HEAP32[$873>>2]|0;\n         $1118 = ($1116|0)<($1117|0);\n         if ($1118) {\n          $$2251$i$i = $1116;\n         } else {\n          $953 = $1117;\n          break;\n         }\n        }\n       } else {\n        $953 = $874;\n       }\n       $939 = (((($827) + ($854<<5)|0)) + 16|0);\n       $940 = HEAP32[$939>>2]|0;\n       $941 = ((($855)) + 24|0);\n       $942 = HEAP32[$941>>2]|0;\n       $943 = ($942|0)>(0);\n       $944 = $940;\n       L155: do {\n        if ($943) {\n         $$012$i212$i$i = 0;\n         while(1) {\n          $945 = (((($855)) + 1824|0) + ($$012$i212$i$i<<2)|0);\n          $946 = HEAP32[$945>>2]|0;\n          $947 = ($946|0)==($940|0);\n          if ($947) {\n           $$07$i215$i$i = $$012$i212$i$i;\n           break L155;\n          }\n          $948 = (($$012$i212$i$i) + 1)|0;\n          $949 = ($948|0)<($942|0);\n          if ($949) {\n           $$012$i212$i$i = $948;\n          } else {\n           label = 114;\n           break;\n          }\n         }\n        } else {\n         label = 114;\n        }\n       } while(0);\n       if ((label|0) == 114) {\n        label = 0;\n        $950 = (($942) + 1)|0;\n        HEAP32[$941>>2] = $950;\n        $$07$i215$i$i = $942;\n       }\n       $951 = ((($856)) + 20|0);\n       HEAP32[$951>>2] = $$07$i215$i$i;\n       $952 = (((($855)) + 1824|0) + ($$07$i215$i$i<<2)|0);\n       HEAP32[$952>>2] = $944;\n       $954 = ($953|0)>(0);\n       if (!($954)) {\n        break;\n       }\n       $955 = (((($827) + ($854<<5)|0)) + 24|0);\n       $956 = ((($856)) + 280|0);\n       $$3198248$i$i = 0;$$3249$i$i = 0;\n       while(1) {\n        $957 = HEAP32[$955>>2]|0;\n        $958 = (($957) + ($$3249$i$i<<4)|0);\n        $959 = HEAP32[$958>>2]|0;\n        $960 = ($959|0)==(0|0);\n        $961 = $959;\n        if ($960) {\n         $$5$i$i = $$3198248$i$i;$974 = $957;\n        } else {\n         $962 = HEAP32[$941>>2]|0;\n         $963 = ($962|0)>(0);\n         L167: do {\n          if ($963) {\n           $$012$i207$i$i = 0;\n           while(1) {\n            $964 = (((($855)) + 1824|0) + ($$012$i207$i$i<<2)|0);\n            $965 = HEAP32[$964>>2]|0;\n            $966 = ($965|0)==($959|0);\n            if ($966) {\n             $$07$i210$i$i = $$012$i207$i$i;\n             break L167;\n            }\n            $967 = (($$012$i207$i$i) + 1)|0;\n            $968 = ($967|0)<($962|0);\n            if ($968) {\n             $$012$i207$i$i = $967;\n            } else {\n             label = 121;\n             break;\n            }\n           }\n          } else {\n           label = 121;\n          }\n         } while(0);\n         if ((label|0) == 121) {\n          label = 0;\n          $969 = (($962) + 1)|0;\n          HEAP32[$941>>2] = $969;\n          $$07$i210$i$i = $962;\n         }\n         $970 = (($$3198248$i$i) + 1)|0;\n         $971 = (($956) + ($$3198248$i$i<<2)|0);\n         HEAP32[$971>>2] = $$07$i210$i$i;\n         $972 = (((($855)) + 1824|0) + ($$07$i210$i$i<<2)|0);\n         HEAP32[$972>>2] = $961;\n         $$pre270$i$i = HEAP32[$955>>2]|0;\n         $$5$i$i = $970;$974 = $$pre270$i$i;\n        }\n        $973 = (((($974) + ($$3249$i$i<<4)|0)) + 4|0);\n        $975 = HEAP32[$973>>2]|0;\n        $976 = ($975|0)==(0|0);\n        $977 = $975;\n        if ($976) {\n         $$5$1$i$i = $$5$i$i;$1070 = $974;\n        } else {\n         $1058 = HEAP32[$941>>2]|0;\n         $1059 = ($1058|0)>(0);\n         L177: do {\n          if ($1059) {\n           $$012$i207$1$i$i = 0;\n           while(1) {\n            $1060 = (((($855)) + 1824|0) + ($$012$i207$1$i$i<<2)|0);\n            $1061 = HEAP32[$1060>>2]|0;\n            $1062 = ($1061|0)==($975|0);\n            if ($1062) {\n             $$07$i210$1$i$i = $$012$i207$1$i$i;\n             break L177;\n            }\n            $1063 = (($$012$i207$1$i$i) + 1)|0;\n            $1064 = ($1063|0)<($1058|0);\n            if ($1064) {\n             $$012$i207$1$i$i = $1063;\n            } else {\n             label = 146;\n             break;\n            }\n           }\n          } else {\n           label = 146;\n          }\n         } while(0);\n         if ((label|0) == 146) {\n          label = 0;\n          $1065 = (($1058) + 1)|0;\n          HEAP32[$941>>2] = $1065;\n          $$07$i210$1$i$i = $1058;\n         }\n         $1066 = (($$5$i$i) + 1)|0;\n         $1067 = (($956) + ($$5$i$i<<2)|0);\n         HEAP32[$1067>>2] = $$07$i210$1$i$i;\n         $1068 = (((($855)) + 1824|0) + ($$07$i210$1$i$i<<2)|0);\n         HEAP32[$1068>>2] = $977;\n         $$pre271$i$i = HEAP32[$955>>2]|0;\n         $$5$1$i$i = $1066;$1070 = $$pre271$i$i;\n        }\n        $1069 = (((($1070) + ($$3249$i$i<<4)|0)) + 8|0);\n        $1071 = HEAP32[$1069>>2]|0;\n        $1072 = ($1071|0)==(0|0);\n        $1073 = $1071;\n        if ($1072) {\n         $$5$2$i$i = $$5$1$i$i;$1086 = $1070;\n        } else {\n         $1074 = HEAP32[$941>>2]|0;\n         $1075 = ($1074|0)>(0);\n         L187: do {\n          if ($1075) {\n           $$012$i207$2$i$i = 0;\n           while(1) {\n            $1076 = (((($855)) + 1824|0) + ($$012$i207$2$i$i<<2)|0);\n            $1077 = HEAP32[$1076>>2]|0;\n            $1078 = ($1077|0)==($1071|0);\n            if ($1078) {\n             $$07$i210$2$i$i = $$012$i207$2$i$i;\n             break L187;\n            }\n            $1079 = (($$012$i207$2$i$i) + 1)|0;\n            $1080 = ($1079|0)<($1074|0);\n            if ($1080) {\n             $$012$i207$2$i$i = $1079;\n            } else {\n             label = 152;\n             break;\n            }\n           }\n          } else {\n           label = 152;\n          }\n         } while(0);\n         if ((label|0) == 152) {\n          label = 0;\n          $1081 = (($1074) + 1)|0;\n          HEAP32[$941>>2] = $1081;\n          $$07$i210$2$i$i = $1074;\n         }\n         $1082 = (($$5$1$i$i) + 1)|0;\n         $1083 = (($956) + ($$5$1$i$i<<2)|0);\n         HEAP32[$1083>>2] = $$07$i210$2$i$i;\n         $1084 = (((($855)) + 1824|0) + ($$07$i210$2$i$i<<2)|0);\n         HEAP32[$1084>>2] = $1073;\n         $$pre272$i$i = HEAP32[$955>>2]|0;\n         $$5$2$i$i = $1082;$1086 = $$pre272$i$i;\n        }\n        $1085 = (((($1086) + ($$3249$i$i<<4)|0)) + 12|0);\n        $1087 = HEAP32[$1085>>2]|0;\n        $1088 = ($1087|0)==(0|0);\n        $1089 = $1087;\n        if ($1088) {\n         $$5$3$i$i = $$5$2$i$i;\n        } else {\n         $1090 = HEAP32[$941>>2]|0;\n         $1091 = ($1090|0)>(0);\n         L197: do {\n          if ($1091) {\n           $$012$i207$3$i$i = 0;\n           while(1) {\n            $1092 = (((($855)) + 1824|0) + ($$012$i207$3$i$i<<2)|0);\n            $1093 = HEAP32[$1092>>2]|0;\n            $1094 = ($1093|0)==($1087|0);\n            if ($1094) {\n             $$07$i210$3$i$i = $$012$i207$3$i$i;\n             break L197;\n            }\n            $1095 = (($$012$i207$3$i$i) + 1)|0;\n            $1096 = ($1095|0)<($1090|0);\n            if ($1096) {\n             $$012$i207$3$i$i = $1095;\n            } else {\n             label = 158;\n             break;\n            }\n           }\n          } else {\n           label = 158;\n          }\n         } while(0);\n         if ((label|0) == 158) {\n          label = 0;\n          $1097 = (($1090) + 1)|0;\n          HEAP32[$941>>2] = $1097;\n          $$07$i210$3$i$i = $1090;\n         }\n         $1098 = (($$5$2$i$i) + 1)|0;\n         $1099 = (($956) + ($$5$2$i$i<<2)|0);\n         HEAP32[$1099>>2] = $$07$i210$3$i$i;\n         $1100 = (((($855)) + 1824|0) + ($$07$i210$3$i$i<<2)|0);\n         HEAP32[$1100>>2] = $1089;\n         $$5$3$i$i = $1098;\n        }\n        $1101 = (($$3249$i$i) + 1)|0;\n        $1102 = HEAP32[$873>>2]|0;\n        $1103 = ($1101|0)<($1102|0);\n        if ($1103) {\n         $$3198248$i$i = $$5$3$i$i;$$3249$i$i = $1101;\n        } else {\n         break;\n        }\n       }\n      } else {\n       if ($875) {\n        $876 = (((($827) + ($854<<5)|0)) + 28|0);\n        $877 = HEAP32[$876>>2]|0;\n        $878 = ((($856)) + 24|0);\n        $$0260$i$i = 0;\n        while(1) {\n         $882 = (($878) + ($$0260$i$i<<2)|0);\n         $883 = (($877) + ($$0260$i$i<<4)|0);\n         $884 = HEAP32[$883>>2]|0;\n         $885 = ($884|0)==(0|0);\n         if (!($885)) {\n          $886 = HEAP32[$882>>2]|0;\n          $887 = $886 | 1;\n          HEAP32[$882>>2] = $887;\n         }\n         $888 = (((($877) + ($$0260$i$i<<4)|0)) + 4|0);\n         $889 = HEAP32[$888>>2]|0;\n         $890 = ($889|0)==(0|0);\n         if (!($890)) {\n          $1165 = HEAP32[$882>>2]|0;\n          $1166 = $1165 | 2;\n          HEAP32[$882>>2] = $1166;\n         }\n         $1167 = (((($877) + ($$0260$i$i<<4)|0)) + 8|0);\n         $1168 = HEAP32[$1167>>2]|0;\n         $1169 = ($1168|0)==(0|0);\n         if (!($1169)) {\n          $1170 = HEAP32[$882>>2]|0;\n          $1171 = $1170 | 4;\n          HEAP32[$882>>2] = $1171;\n         }\n         $1172 = (((($877) + ($$0260$i$i<<4)|0)) + 12|0);\n         $1173 = HEAP32[$1172>>2]|0;\n         $1174 = ($1173|0)==(0|0);\n         if (!($1174)) {\n          $1175 = HEAP32[$882>>2]|0;\n          $1176 = $1175 | 8;\n          HEAP32[$882>>2] = $1176;\n         }\n         $1177 = (($$0260$i$i) + 1)|0;\n         $1178 = HEAP32[$873>>2]|0;\n         $1179 = ($1177|0)<($1178|0);\n         if ($1179) {\n          $$0260$i$i = $1177;\n         } else {\n          $905 = $1178;\n          break;\n         }\n        }\n       } else {\n        $905 = $874;\n       }\n       $891 = (((($827) + ($854<<5)|0)) + 20|0);\n       $892 = HEAP32[$891>>2]|0;\n       $893 = ((($855)) + 24|0);\n       $894 = HEAP32[$893>>2]|0;\n       $895 = ($894|0)>(0);\n       $896 = $892;\n       L223: do {\n        if ($895) {\n         $$012$i$i$i = 0;\n         while(1) {\n          $897 = (((($855)) + 1824|0) + ($$012$i$i$i<<2)|0);\n          $898 = HEAP32[$897>>2]|0;\n          $899 = ($898|0)==($892|0);\n          if ($899) {\n           $$07$i$i$i = $$012$i$i$i;\n           break L223;\n          }\n          $900 = (($$012$i$i$i) + 1)|0;\n          $901 = ($900|0)<($894|0);\n          if ($901) {\n           $$012$i$i$i = $900;\n          } else {\n           label = 98;\n           break;\n          }\n         }\n        } else {\n         label = 98;\n        }\n       } while(0);\n       if ((label|0) == 98) {\n        label = 0;\n        $902 = (($894) + 1)|0;\n        HEAP32[$893>>2] = $902;\n        $$07$i$i$i = $894;\n       }\n       $903 = ((($856)) + 20|0);\n       HEAP32[$903>>2] = $$07$i$i$i;\n       $904 = (((($855)) + 1824|0) + ($$07$i$i$i<<2)|0);\n       HEAP32[$904>>2] = $896;\n       $906 = ($905|0)>(0);\n       if (!($906)) {\n        break;\n       }\n       $907 = (((($827) + ($854<<5)|0)) + 28|0);\n       $908 = ((($856)) + 280|0);\n       $$0195257$i$i = 0;$$1258$i$i = 0;\n       while(1) {\n        $909 = HEAP32[$907>>2]|0;\n        $910 = (($909) + ($$1258$i$i<<4)|0);\n        $911 = HEAP32[$910>>2]|0;\n        $912 = ($911|0)==(0|0);\n        $913 = $911;\n        if ($912) {\n         $$2197$i$i = $$0195257$i$i;$926 = $909;\n        } else {\n         $914 = HEAP32[$893>>2]|0;\n         $915 = ($914|0)>(0);\n         L235: do {\n          if ($915) {\n           $$012$i217$i$i = 0;\n           while(1) {\n            $916 = (((($855)) + 1824|0) + ($$012$i217$i$i<<2)|0);\n            $917 = HEAP32[$916>>2]|0;\n            $918 = ($917|0)==($911|0);\n            if ($918) {\n             $$07$i220$i$i = $$012$i217$i$i;\n             break L235;\n            }\n            $919 = (($$012$i217$i$i) + 1)|0;\n            $920 = ($919|0)<($914|0);\n            if ($920) {\n             $$012$i217$i$i = $919;\n            } else {\n             label = 105;\n             break;\n            }\n           }\n          } else {\n           label = 105;\n          }\n         } while(0);\n         if ((label|0) == 105) {\n          label = 0;\n          $921 = (($914) + 1)|0;\n          HEAP32[$893>>2] = $921;\n          $$07$i220$i$i = $914;\n         }\n         $922 = (($$0195257$i$i) + 1)|0;\n         $923 = (($908) + ($$0195257$i$i<<2)|0);\n         HEAP32[$923>>2] = $$07$i220$i$i;\n         $924 = (((($855)) + 1824|0) + ($$07$i220$i$i<<2)|0);\n         HEAP32[$924>>2] = $913;\n         $$pre$i$i = HEAP32[$907>>2]|0;\n         $$2197$i$i = $922;$926 = $$pre$i$i;\n        }\n        $925 = (((($926) + ($$1258$i$i<<4)|0)) + 4|0);\n        $927 = HEAP32[$925>>2]|0;\n        $928 = ($927|0)==(0|0);\n        $929 = $927;\n        if ($928) {\n         $$2197$1$i$i = $$2197$i$i;$1131 = $926;\n        } else {\n         $1119 = HEAP32[$893>>2]|0;\n         $1120 = ($1119|0)>(0);\n         L245: do {\n          if ($1120) {\n           $$012$i217$1$i$i = 0;\n           while(1) {\n            $1121 = (((($855)) + 1824|0) + ($$012$i217$1$i$i<<2)|0);\n            $1122 = HEAP32[$1121>>2]|0;\n            $1123 = ($1122|0)==($927|0);\n            if ($1123) {\n             $$07$i220$1$i$i = $$012$i217$1$i$i;\n             break L245;\n            }\n            $1124 = (($$012$i217$1$i$i) + 1)|0;\n            $1125 = ($1124|0)<($1119|0);\n            if ($1125) {\n             $$012$i217$1$i$i = $1124;\n            } else {\n             label = 170;\n             break;\n            }\n           }\n          } else {\n           label = 170;\n          }\n         } while(0);\n         if ((label|0) == 170) {\n          label = 0;\n          $1126 = (($1119) + 1)|0;\n          HEAP32[$893>>2] = $1126;\n          $$07$i220$1$i$i = $1119;\n         }\n         $1127 = (($$2197$i$i) + 1)|0;\n         $1128 = (($908) + ($$2197$i$i<<2)|0);\n         HEAP32[$1128>>2] = $$07$i220$1$i$i;\n         $1129 = (((($855)) + 1824|0) + ($$07$i220$1$i$i<<2)|0);\n         HEAP32[$1129>>2] = $929;\n         $$pre268$i$i = HEAP32[$907>>2]|0;\n         $$2197$1$i$i = $1127;$1131 = $$pre268$i$i;\n        }\n        $1130 = (((($1131) + ($$1258$i$i<<4)|0)) + 8|0);\n        $1132 = HEAP32[$1130>>2]|0;\n        $1133 = ($1132|0)==(0|0);\n        $1134 = $1132;\n        if ($1133) {\n         $$2197$2$i$i = $$2197$1$i$i;$1147 = $1131;\n        } else {\n         $1135 = HEAP32[$893>>2]|0;\n         $1136 = ($1135|0)>(0);\n         L255: do {\n          if ($1136) {\n           $$012$i217$2$i$i = 0;\n           while(1) {\n            $1137 = (((($855)) + 1824|0) + ($$012$i217$2$i$i<<2)|0);\n            $1138 = HEAP32[$1137>>2]|0;\n            $1139 = ($1138|0)==($1132|0);\n            if ($1139) {\n             $$07$i220$2$i$i = $$012$i217$2$i$i;\n             break L255;\n            }\n            $1140 = (($$012$i217$2$i$i) + 1)|0;\n            $1141 = ($1140|0)<($1135|0);\n            if ($1141) {\n             $$012$i217$2$i$i = $1140;\n            } else {\n             label = 176;\n             break;\n            }\n           }\n          } else {\n           label = 176;\n          }\n         } while(0);\n         if ((label|0) == 176) {\n          label = 0;\n          $1142 = (($1135) + 1)|0;\n          HEAP32[$893>>2] = $1142;\n          $$07$i220$2$i$i = $1135;\n         }\n         $1143 = (($$2197$1$i$i) + 1)|0;\n         $1144 = (($908) + ($$2197$1$i$i<<2)|0);\n         HEAP32[$1144>>2] = $$07$i220$2$i$i;\n         $1145 = (((($855)) + 1824|0) + ($$07$i220$2$i$i<<2)|0);\n         HEAP32[$1145>>2] = $1134;\n         $$pre269$i$i = HEAP32[$907>>2]|0;\n         $$2197$2$i$i = $1143;$1147 = $$pre269$i$i;\n        }\n        $1146 = (((($1147) + ($$1258$i$i<<4)|0)) + 12|0);\n        $1148 = HEAP32[$1146>>2]|0;\n        $1149 = ($1148|0)==(0|0);\n        $1150 = $1148;\n        if ($1149) {\n         $$2197$3$i$i = $$2197$2$i$i;\n        } else {\n         $1151 = HEAP32[$893>>2]|0;\n         $1152 = ($1151|0)>(0);\n         L265: do {\n          if ($1152) {\n           $$012$i217$3$i$i = 0;\n           while(1) {\n            $1153 = (((($855)) + 1824|0) + ($$012$i217$3$i$i<<2)|0);\n            $1154 = HEAP32[$1153>>2]|0;\n            $1155 = ($1154|0)==($1148|0);\n            if ($1155) {\n             $$07$i220$3$i$i = $$012$i217$3$i$i;\n             break L265;\n            }\n            $1156 = (($$012$i217$3$i$i) + 1)|0;\n            $1157 = ($1156|0)<($1151|0);\n            if ($1157) {\n             $$012$i217$3$i$i = $1156;\n            } else {\n             label = 182;\n             break;\n            }\n           }\n          } else {\n           label = 182;\n          }\n         } while(0);\n         if ((label|0) == 182) {\n          label = 0;\n          $1158 = (($1151) + 1)|0;\n          HEAP32[$893>>2] = $1158;\n          $$07$i220$3$i$i = $1151;\n         }\n         $1159 = (($$2197$2$i$i) + 1)|0;\n         $1160 = (($908) + ($$2197$2$i$i<<2)|0);\n         HEAP32[$1160>>2] = $$07$i220$3$i$i;\n         $1161 = (((($855)) + 1824|0) + ($$07$i220$3$i$i<<2)|0);\n         HEAP32[$1161>>2] = $1150;\n         $$2197$3$i$i = $1159;\n        }\n        $1162 = (($$1258$i$i) + 1)|0;\n        $1163 = HEAP32[$873>>2]|0;\n        $1164 = ($1162|0)<($1163|0);\n        if ($1164) {\n         $$0195257$i$i = $$2197$3$i$i;$$1258$i$i = $1162;\n        } else {\n         break;\n        }\n       }\n      }\n     } while(0);\n     $978 = ((($855)) + 3480|0);\n     $979 = +HEAPF64[$978>>3];\n     $980 = $979 * 1000.0;\n     $981 = (((($855)) + 1056|0) + ($$075$i<<2)|0);\n     $982 = HEAP32[$981>>2]|0;\n     $983 = HEAP32[$835>>2]|0;\n     $984 = (+($983|0));\n     $985 = $984 * 0.5;\n     $986 = (($855) + ($$075$i<<2)|0);\n     $987 = HEAP32[$986>>2]|0;\n     $988 = $987 >> 1;\n     $989 = $980 > $985;\n     $$0204$i$i = $989 ? $985 : $980;\n     $990 = $$0204$i$i / $985;\n     $991 = (+($988|0));\n     $992 = $990 * $991;\n     $993 = (~~(($992)));\n     $994 = ((($982)) + 1116|0);\n     HEAP32[$994>>2] = $993;\n     $995 = (((($827) + ($854<<5)|0)) + 4|0);\n     $996 = HEAP32[$995>>2]|0;\n     L274: do {\n      switch ($996|0) {\n      case 1:  {\n       $997 = HEAP32[$870>>2]|0;\n       $998 = ($997|0)==(0);\n       $$sink$i$i = $998 ? 7 : 14;\n       $999 = (((($855)) + 2940|0) + ($$sink$i$i<<2)|0);\n       $$1205$in$in$i$i = HEAP32[$999>>2]|0;\n       $$1205$in$i$i = (+($$1205$in$in$i$i|0));\n       $$1205$i$i = $$1205$in$i$i * 1000.0;\n       $1000 = $$1205$i$i > $985;\n       if (!($1000)) {\n        $$2206$i$i = $$1205$i$i;\n        break L274;\n       }\n       $$2206$i$i = $985;\n       break;\n      }\n      case 2:  {\n       $$2206$i$i = 250.0;\n       break;\n      }\n      default: {\n       $$2206$i$i = $$0204$i$i;\n      }\n      }\n     } while(0);\n     $1001 = HEAP32[$869>>2]|0;\n     $1002 = ($1001|0)==(2);\n     do {\n      if ($1002) {\n       $1003 = ((($855)) + 12|0);\n       $1004 = HEAP32[$1003>>2]|0;\n       $1005 = ($1004|0)>(0);\n       if ($1005) {\n        $$4241$i$i = 0;\n        while(1) {\n         $1006 = (((($855)) + 544|0) + ($$4241$i$i<<2)|0);\n         $1007 = HEAP32[$1006>>2]|0;\n         $1008 = HEAP32[$1007>>2]|0;\n         $1009 = ($1008|0)>(0);\n         if ($1009) {\n          $$0194238$i$i = 0;\n          while(1) {\n           $1010 = (((($1007)) + 1092|0) + ($$0194238$i$i<<2)|0);\n           $1011 = HEAP32[$1010>>2]|0;\n           $1012 = ($1011|0)==($854|0);\n           do {\n            if ($1012) {\n             $1013 = HEAP32[$836>>2]|0;\n             $1014 = ($1013|0)>(0);\n             if ($1014) {\n              $$0193236$i$i = 0;$$2190237$i$i = 0;\n             } else {\n              $$4192$i$i = 0;\n              break;\n             }\n             while(1) {\n              $1015 = (((($1007)) + 4|0) + ($$0193236$i$i<<2)|0);\n              $1016 = HEAP32[$1015>>2]|0;\n              $1017 = ($1016|0)==($$0194238$i$i|0);\n              $1018 = $1017&1;\n              $$$2190$i$i = (($1018) + ($$2190237$i$i))|0;\n              $1019 = (($$0193236$i$i) + 1)|0;\n              $exitcond$i = ($1019|0)==($1013|0);\n              if ($exitcond$i) {\n               $$4192$i$i = $$$2190$i$i;\n               break;\n              } else {\n               $$0193236$i$i = $1019;$$2190237$i$i = $$$2190$i$i;\n              }\n             }\n            } else {\n             $$4192$i$i = 0;\n            }\n           } while(0);\n           $1020 = (($$0194238$i$i) + 1)|0;\n           $1021 = ($1020|0)<($1008|0);\n           $1022 = ($$4192$i$i|0)==(0);\n           $1023 = $1021 & $1022;\n           if ($1023) {\n            $$0194238$i$i = $1020;\n           } else {\n            $$1189$lcssa$i$i = $$4192$i$i;\n            break;\n           }\n          }\n         } else {\n          $$1189$lcssa$i$i = 0;\n         }\n         $1024 = (($$4241$i$i) + 1)|0;\n         $1025 = ($1024|0)<($1004|0);\n         $1026 = ($$1189$lcssa$i$i|0)==(0);\n         $1027 = $1025 & $1026;\n         if ($1027) {\n          $$4241$i$i = $1024;\n         } else {\n          $$0188$lcssa$i$i = $$1189$lcssa$i$i;\n          break;\n         }\n        }\n       } else {\n        $$0188$lcssa$i$i = 0;\n       }\n       $1028 = $$2206$i$i / $985;\n       $1029 = $1028 * $991;\n       $1030 = (+($$0188$lcssa$i$i|0));\n       $1031 = $1029 * $1030;\n       $1032 = HEAP32[$866>>2]|0;\n       $1033 = (+($1032|0));\n       $1034 = $1031 / $1033;\n       $1035 = $1034 + 0.90000000000000002;\n       $1036 = (~~(($1035)));\n       $1037 = Math_imul($1036, $1032)|0;\n       $1038 = ((($856)) + 4|0);\n       $1039 = Math_imul($$0188$lcssa$i$i, $988)|0;\n       $1040 = ($1037|0)>($1039|0);\n       if ($1040) {\n        $1041 = (($1039|0) % ($1032|0))&-1;\n        $1042 = (($1039) - ($1041))|0;\n        $storemerge$i$i = $1042;\n       } else {\n        $storemerge$i$i = $1037;\n       }\n       HEAP32[$1038>>2] = $storemerge$i$i;\n       $$pre$phi273$i$iZ2D = $1038;$1055 = $storemerge$i$i;$1057 = $1032;\n      } else {\n       $1043 = $$2206$i$i / $985;\n       $1044 = $1043 * $991;\n       $1045 = HEAP32[$866>>2]|0;\n       $1046 = (+($1045|0));\n       $1047 = $1044 / $1046;\n       $1048 = $1047 + 0.90000000000000002;\n       $1049 = (~~(($1048)));\n       $1050 = Math_imul($1049, $1045)|0;\n       $1051 = ((($856)) + 4|0);\n       HEAP32[$1051>>2] = $1050;\n       $1052 = ($1050|0)>($988|0);\n       if (!($1052)) {\n        $$pre$phi273$i$iZ2D = $1051;$1055 = $1050;$1057 = $1045;\n        break;\n       }\n       $1053 = (($988|0) % ($1045|0))&-1;\n       $1054 = (($988) - ($1053))|0;\n       HEAP32[$1051>>2] = $1054;\n       $$pre$phi273$i$iZ2D = $1051;$1055 = $1054;$1057 = $1045;\n      }\n     } while(0);\n     $1056 = ($1055|0)==(0);\n     if ($1056) {\n      HEAP32[$$pre$phi273$i$iZ2D>>2] = $1057;\n     }\n     $1180 = (($$06074$i) + 1)|0;\n     $1181 = HEAP32[$847>>2]|0;\n     $1182 = ($1180|0)<($1181|0);\n     if ($1182) {\n      $$06074$i = $1180;\n     } else {\n      break L130;\n     }\n    }\n   }\n  } while(0);\n  $1183 = (($$075$i) + 1)|0;\n  $1184 = ($1183|0)<($$$i|0);\n  if ($1184) {\n   $$075$i = $1183;\n  } else {\n   break;\n  }\n }\n $1185 = ((($2)) + 3428|0);\n $1186 = HEAP32[$1185>>2]|0;\n $1187 = ($1186|0)>(0);\n do {\n  if ($1187) {\n   $$sink = $1186;\n  } else {\n   $1188 = HEAP32[$1>>2]|0;\n   $1189 = ((($1188)) + 3396|0);\n   $1190 = HEAP32[$1189>>2]|0;\n   $1191 = ((($1188)) + 3400|0);\n   $1192 = +HEAPF64[$1191>>3];\n   $1193 = (~~(($1192)));\n   $1194 = (+($1193|0));\n   $1195 = $1192 - $1194;\n   $1196 = ((($1190)) + 4|0);\n   $1197 = HEAP32[$1196>>2]|0;\n   $1198 = ($1197|0)==(0|0);\n   if ($1198) {\n    $$sink = -1;\n    break;\n   }\n   $1199 = HEAP32[$836>>2]|0;\n   $1200 = (($1197) + ($1193<<3)|0);\n   $1201 = +HEAPF64[$1200>>3];\n   $1202 = 1.0 - $1195;\n   $1203 = $1201 * $1202;\n   $1204 = (($1193) + 1)|0;\n   $1205 = (($1197) + ($1204<<3)|0);\n   $1206 = +HEAPF64[$1205>>3];\n   $1207 = $1206 * $1195;\n   $1208 = $1207 + $1203;\n   $1209 = (+($1199|0));\n   $1210 = $1208 * $1209;\n   $phitmp = (~~(($1210)));\n   $$sink = $phitmp;\n  }\n } while(0);\n $1211 = ((($0)) + 16|0);\n HEAP32[$1211>>2] = $$sink;\n $1212 = ((($2)) + 3424|0);\n $1213 = HEAP32[$1212>>2]|0;\n $1214 = ((($0)) + 20|0);\n HEAP32[$1214>>2] = $1213;\n $1215 = ((($2)) + 3440|0);\n $1216 = HEAP32[$1215>>2]|0;\n $1217 = ((($0)) + 12|0);\n HEAP32[$1217>>2] = $1216;\n $1218 = ($1186|0)==(0);\n if ($1218) {\n  $$sink3 = 0;\n } else {\n  $1219 = (+($1186|0));\n  $1220 = ((($2)) + 3444|0);\n  $1221 = HEAP32[$1220>>2]|0;\n  $1222 = (+($1221|0));\n  $1223 = $1222 / $1219;\n  $1224 = (~~(($1223)));\n  $$sink3 = $1224;\n }\n $1225 = ((($0)) + 24|0);\n HEAP32[$1225>>2] = $$sink3;\n $1226 = ((($2)) + 3420|0);\n $1227 = HEAP32[$1226>>2]|0;\n $1228 = ($1227|0)==(0);\n if ($1228) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $1229 = ((($2)) + 3360|0);\n HEAP32[$1229>>2] = $1186;\n $1230 = ((($2)) + 3364|0);\n HEAP32[$1230>>2] = $1213;\n $1231 = ((($2)) + 3368|0);\n HEAP32[$1231>>2] = $1216;\n $1232 = ((($2)) + 3444|0);\n $1233 = HEAP32[$1232>>2]|0;\n $1234 = ((($2)) + 3372|0);\n HEAP32[$1234>>2] = $1233;\n $1235 = ((($2)) + 3448|0);\n $1236 = +HEAPF64[$1235>>3];\n $1237 = ((($2)) + 3376|0);\n HEAPF64[$1237>>3] = $1236;\n $1238 = ((($2)) + 3432|0);\n $1239 = +HEAPF64[$1238>>3];\n $1240 = ((($2)) + 3384|0);\n HEAPF64[$1240>>3] = $1239;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _vorbis_encode_tonemask_setup($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = +$1;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$068 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0;\n var $29 = 0.0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0;\n var $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0;\n var $68 = 0.0, $69 = 0, $7 = 0.0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0.0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0;\n var $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0, $92 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = (~~(($1)));\n $7 = (+($6|0));\n $8 = $1 - $7;\n $9 = ((($0)) + 28|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = (((($10)) + 2852|0) + ($2<<2)|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = (($3) + (($6*20)|0)|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (+($14|0));\n $16 = 1.0 - $8;\n $17 = $15 * $16;\n $18 = (($6) + 1)|0;\n $19 = (($3) + (($18*20)|0)|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = (+($20|0));\n $22 = $21 * $8;\n $23 = $22 + $17;\n $24 = $23;\n $25 = ((($12)) + 12|0);\n HEAPF32[$25>>2] = $24;\n $26 = (((($3) + (($6*20)|0)|0)) + 4|0);\n $27 = HEAP32[$26>>2]|0;\n $28 = (+($27|0));\n $29 = $28 * $16;\n $30 = (((($3) + (($18*20)|0)|0)) + 4|0);\n $31 = HEAP32[$30>>2]|0;\n $32 = (+($31|0));\n $33 = $32 * $8;\n $34 = $33 + $29;\n $35 = $34;\n $36 = ((($12)) + 16|0);\n HEAPF32[$36>>2] = $35;\n $37 = (((($3) + (($6*20)|0)|0)) + 8|0);\n $38 = HEAP32[$37>>2]|0;\n $39 = (+($38|0));\n $40 = $39 * $16;\n $41 = (((($3) + (($18*20)|0)|0)) + 8|0);\n $42 = HEAP32[$41>>2]|0;\n $43 = (+($42|0));\n $44 = $43 * $8;\n $45 = $44 + $40;\n $46 = $45;\n $47 = ((($12)) + 20|0);\n HEAPF32[$47>>2] = $46;\n $48 = (((($3) + (($6*20)|0)|0)) + 12|0);\n $49 = +HEAPF32[$48>>2];\n $50 = $49;\n $51 = $50 * $16;\n $52 = (((($3) + (($18*20)|0)|0)) + 12|0);\n $53 = +HEAPF32[$52>>2];\n $54 = $53;\n $55 = $54 * $8;\n $56 = $55 + $51;\n $57 = $56;\n $58 = ((($12)) + 24|0);\n HEAPF32[$58>>2] = $57;\n $59 = (((($3) + (($6*20)|0)|0)) + 16|0);\n $60 = +HEAPF32[$59>>2];\n $61 = $60;\n $62 = $61 * $16;\n $63 = (((($3) + (($18*20)|0)|0)) + 16|0);\n $64 = +HEAPF32[$63>>2];\n $65 = $64;\n $66 = $65 * $8;\n $67 = $66 + $62;\n $68 = $67;\n $69 = ((($12)) + 28|0);\n HEAPF32[$69>>2] = $68;\n $70 = (($4) + ($6<<2)|0);\n $71 = HEAP32[$70>>2]|0;\n $72 = (+($71|0));\n $73 = $72 * $16;\n $74 = (($4) + ($18<<2)|0);\n $75 = HEAP32[$74>>2]|0;\n $76 = (+($75|0));\n $77 = $76 * $8;\n $78 = $77 + $73;\n $79 = $78;\n $80 = ((($12)) + 496|0);\n HEAPF32[$80>>2] = $79;\n $$068 = 0;\n while(1) {\n  $81 = ((($5) + (($6*68)|0)|0) + ($$068<<2)|0);\n  $82 = HEAP32[$81>>2]|0;\n  $83 = (+($82|0));\n  $84 = $83 * $16;\n  $85 = ((($5) + (($18*68)|0)|0) + ($$068<<2)|0);\n  $86 = HEAP32[$85>>2]|0;\n  $87 = (+($86|0));\n  $88 = $87 * $8;\n  $89 = $88 + $84;\n  $90 = $89;\n  $91 = (((($12)) + 36|0) + ($$068<<2)|0);\n  HEAPF32[$91>>2] = $90;\n  $92 = (($$068) + 1)|0;\n  $exitcond = ($92|0)==(17);\n  if ($exitcond) {\n   break;\n  } else {\n   $$068 = $92;\n  }\n }\n return;\n}\nfunction _vorbis_encode_noisebias_setup($0,$1,$2,$3,$4,$5,$6) {\n $0 = $0|0;\n $1 = +$1;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = +$6;\n var $$074 = 0, $$074$1 = 0, $$074$2 = 0, $$phi$trans$insert = 0, $$phi$trans$insert85 = 0, $$phi$trans$insert88 = 0, $$pre = 0.0, $$pre86 = 0.0, $$pre89 = 0.0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0;\n var $11 = 0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0.0;\n var $24 = 0.0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0.0;\n var $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0;\n var $64 = 0, $65 = 0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0.0, $80 = 0, $81 = 0.0;\n var $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;\n var $exitcond$1 = 0, $exitcond$2 = 0, $exitcond79 = 0, $exitcond79$1 = 0, $exitcond79$2 = 0, $storemerge = 0.0, $storemerge$1 = 0.0, $storemerge$191 = 0.0, $storemerge$2 = 0.0, $storemerge$290 = 0.0, $storemerge92 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $7 = (~~(($1)));\n $8 = (+($7|0));\n $9 = $1 - $8;\n $10 = ((($0)) + 28|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (((($11)) + 2852|0) + ($2<<2)|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (($3) + ($7<<2)|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = (+($15|0));\n $17 = 1.0 - $9;\n $18 = $16 * $17;\n $19 = (($7) + 1)|0;\n $20 = (($3) + ($19<<2)|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = (+($21|0));\n $23 = $22 * $9;\n $24 = $23 + $18;\n $25 = $24;\n $26 = ((($13)) + 108|0);\n HEAPF32[$26>>2] = $25;\n $27 = (($5) + (($2*12)|0)|0);\n $28 = HEAP32[$27>>2]|0;\n $29 = ((($13)) + 120|0);\n HEAP32[$29>>2] = $28;\n $30 = (((($5) + (($2*12)|0)|0)) + 4|0);\n $31 = HEAP32[$30>>2]|0;\n $32 = ((($13)) + 124|0);\n HEAP32[$32>>2] = $31;\n $33 = (((($5) + (($2*12)|0)|0)) + 8|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = ((($13)) + 128|0);\n HEAP32[$35>>2] = $34;\n $$074 = 0;\n while(1) {\n  $36 = ((($4) + (($7*204)|0)|0) + ($$074<<2)|0);\n  $37 = HEAP32[$36>>2]|0;\n  $38 = (+($37|0));\n  $39 = $38 * $17;\n  $40 = ((($4) + (($19*204)|0)|0) + ($$074<<2)|0);\n  $41 = HEAP32[$40>>2]|0;\n  $42 = (+($41|0));\n  $43 = $42 * $9;\n  $44 = $43 + $39;\n  $45 = $44;\n  $46 = (((($13)) + 132|0) + ($$074<<2)|0);\n  HEAPF32[$46>>2] = $45;\n  $47 = (($$074) + 1)|0;\n  $exitcond79 = ($47|0)==(17);\n  if ($exitcond79) {\n   $$074$1 = 0;\n   break;\n  } else {\n   $$074 = $47;\n  }\n }\n while(1) {\n  $86 = ((((($4) + (($7*204)|0)|0)) + 68|0) + ($$074$1<<2)|0);\n  $87 = HEAP32[$86>>2]|0;\n  $88 = (+($87|0));\n  $89 = $88 * $17;\n  $90 = ((((($4) + (($19*204)|0)|0)) + 68|0) + ($$074$1<<2)|0);\n  $91 = HEAP32[$90>>2]|0;\n  $92 = (+($91|0));\n  $93 = $92 * $9;\n  $94 = $93 + $89;\n  $95 = $94;\n  $96 = (((($13)) + 200|0) + ($$074$1<<2)|0);\n  HEAPF32[$96>>2] = $95;\n  $97 = (($$074$1) + 1)|0;\n  $exitcond79$1 = ($97|0)==(17);\n  if ($exitcond79$1) {\n   $$074$2 = 0;\n   break;\n  } else {\n   $$074$1 = $97;\n  }\n }\n while(1) {\n  $98 = ((((($4) + (($7*204)|0)|0)) + 136|0) + ($$074$2<<2)|0);\n  $99 = HEAP32[$98>>2]|0;\n  $100 = (+($99|0));\n  $101 = $100 * $17;\n  $102 = ((((($4) + (($19*204)|0)|0)) + 136|0) + ($$074$2<<2)|0);\n  $103 = HEAP32[$102>>2]|0;\n  $104 = (+($103|0));\n  $105 = $104 * $9;\n  $106 = $105 + $101;\n  $107 = $106;\n  $108 = (((($13)) + 268|0) + ($$074$2<<2)|0);\n  HEAPF32[$108>>2] = $107;\n  $109 = (($$074$2) + 1)|0;\n  $exitcond79$2 = ($109|0)==(17);\n  if ($exitcond79$2) {\n   break;\n  } else {\n   $$074$2 = $109;\n  }\n }\n $110 = ((($13)) + 132|0);\n $111 = +HEAPF32[$110>>2];\n $54 = $111 + 6.0;\n $112 = ((($13)) + 132|0);\n $113 = $111;\n $114 = $113 + $6;\n $115 = $114;\n $116 = $115 < $54;\n $storemerge92 = $116 ? $54 : $115;\n HEAPF32[$112>>2] = $storemerge92;\n $48 = 1;\n while(1) {\n  $$phi$trans$insert = (((($13)) + 132|0) + ($48<<2)|0);\n  $$pre = +HEAPF32[$$phi$trans$insert>>2];\n  $49 = (((($13)) + 132|0) + ($48<<2)|0);\n  $50 = $$pre;\n  $51 = $50 + $6;\n  $52 = $51;\n  $53 = $52 < $54;\n  $storemerge = $53 ? $54 : $52;\n  HEAPF32[$49>>2] = $storemerge;\n  $55 = (($48) + 1)|0;\n  $exitcond = ($55|0)==(17);\n  if ($exitcond) {\n   break;\n  } else {\n   $48 = $55;\n  }\n }\n $56 = ((($13)) + 200|0);\n $57 = +HEAPF32[$56>>2];\n $58 = $57 + 6.0;\n $59 = ((($13)) + 200|0);\n $60 = $57;\n $61 = $60 + $6;\n $62 = $61;\n $63 = $62 < $58;\n $storemerge$191 = $63 ? $58 : $62;\n HEAPF32[$59>>2] = $storemerge$191;\n $64 = 1;\n while(1) {\n  $$phi$trans$insert85 = (((($13)) + 200|0) + ($64<<2)|0);\n  $$pre86 = +HEAPF32[$$phi$trans$insert85>>2];\n  $65 = (((($13)) + 200|0) + ($64<<2)|0);\n  $66 = $$pre86;\n  $67 = $66 + $6;\n  $68 = $67;\n  $69 = $68 < $58;\n  $storemerge$1 = $69 ? $58 : $68;\n  HEAPF32[$65>>2] = $storemerge$1;\n  $70 = (($64) + 1)|0;\n  $exitcond$1 = ($70|0)==(17);\n  if ($exitcond$1) {\n   break;\n  } else {\n   $64 = $70;\n  }\n }\n $71 = ((($13)) + 268|0);\n $72 = +HEAPF32[$71>>2];\n $73 = $72 + 6.0;\n $74 = ((($13)) + 268|0);\n $75 = $72;\n $76 = $75 + $6;\n $77 = $76;\n $78 = $77 < $73;\n $storemerge$290 = $78 ? $73 : $77;\n HEAPF32[$74>>2] = $storemerge$290;\n $79 = 1;\n while(1) {\n  $$phi$trans$insert88 = (((($13)) + 268|0) + ($79<<2)|0);\n  $$pre89 = +HEAPF32[$$phi$trans$insert88>>2];\n  $80 = (((($13)) + 268|0) + ($79<<2)|0);\n  $81 = $$pre89;\n  $82 = $81 + $6;\n  $83 = $82;\n  $84 = $83 < $73;\n  $storemerge$2 = $84 ? $73 : $83;\n  HEAPF32[$80>>2] = $storemerge$2;\n  $85 = (($79) + 1)|0;\n  $exitcond$2 = ($85|0)==(17);\n  if ($exitcond$2) {\n   break;\n  } else {\n   $79 = $85;\n  }\n }\n return;\n}\nfunction _get_setup_template($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = +$2;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0.0, $$06272 = 0, $$06272$us = 0, $$065$lcssa = 0, $$06569 = 0, $$2 = 0, $$lcssa = 0, $$lcssa66 = 0, $$lcssa68 = 0, $$phi$trans$insert = 0, $$pre = 0.0, $$pre83 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;\n var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;\n var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0.0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0;\n var $75 = 0.0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $9 = 0, $or$cond = 0, $or$cond$us = 0, $storemerge = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($3|0)!=(0);\n $6 = (+($0|0));\n $7 = $2 / $6;\n $$ = $5 ? $7 : $2;\n L1: do {\n  if ($5) {\n   $$06272$us = 0;$81 = 28264;$9 = 28108;\n   while(1) {\n    $8 = ((($9)) + 12|0);\n    $10 = HEAP32[$8>>2]|0;\n    $11 = ($10|0)==(-1);\n    $12 = ($10|0)==($0|0);\n    $or$cond$us = $11 | $12;\n    if ($or$cond$us) {\n     $13 = ((($9)) + 16|0);\n     $14 = HEAP32[$13>>2]|0;\n     $15 = ($14|0)>($1|0);\n     if (!($15)) {\n      $16 = ((($9)) + 20|0);\n      $17 = HEAP32[$16>>2]|0;\n      $18 = ($17|0)<($1|0);\n      if (!($18)) {\n       $19 = HEAP32[$9>>2]|0;\n       $20 = ((($9)) + 4|0);\n       $21 = HEAP32[$20>>2]|0;\n       $22 = +HEAPF64[$21>>3];\n       $23 = $$ < $22;\n       if (!($23)) {\n        $24 = (($21) + ($19<<3)|0);\n        $25 = +HEAPF64[$24>>3];\n        $26 = $$ > $25;\n        if (!($26)) {\n         $$lcssa = $21;$$lcssa66 = $19;$$lcssa68 = $81;$83 = $22;\n         break L1;\n        }\n       }\n      }\n     }\n    }\n    $27 = (($$06272$us) + 1)|0;\n    $28 = (28264 + ($27<<2)|0);\n    $29 = HEAP32[$28>>2]|0;\n    $30 = ($27|0)==(17);\n    if ($30) {\n     $$2 = 0;\n     break;\n    } else {\n     $$06272$us = $27;$81 = $28;$9 = $29;\n    }\n   }\n   return ($$2|0);\n  } else {\n   $$06272 = 0;$32 = 28108;$82 = 28264;\n   while(1) {\n    $31 = ((($32)) + 12|0);\n    $33 = HEAP32[$31>>2]|0;\n    $34 = ($33|0)==(-1);\n    $35 = ($33|0)==($0|0);\n    $or$cond = $34 | $35;\n    if ($or$cond) {\n     $36 = ((($32)) + 16|0);\n     $37 = HEAP32[$36>>2]|0;\n     $38 = ($37|0)>($1|0);\n     if (!($38)) {\n      $39 = ((($32)) + 20|0);\n      $40 = HEAP32[$39>>2]|0;\n      $41 = ($40|0)<($1|0);\n      if (!($41)) {\n       $42 = HEAP32[$32>>2]|0;\n       $43 = ((($32)) + 8|0);\n       $44 = HEAP32[$43>>2]|0;\n       $45 = +HEAPF64[$44>>3];\n       $46 = $$ < $45;\n       if (!($46)) {\n        $47 = (($44) + ($42<<3)|0);\n        $48 = +HEAPF64[$47>>3];\n        $49 = $$ > $48;\n        if (!($49)) {\n         $$lcssa = $44;$$lcssa66 = $42;$$lcssa68 = $82;$83 = $45;\n         break L1;\n        }\n       }\n      }\n     }\n    }\n    $77 = (($$06272) + 1)|0;\n    $78 = (28264 + ($77<<2)|0);\n    $79 = HEAP32[$78>>2]|0;\n    $80 = ($77|0)==(17);\n    if ($80) {\n     $$2 = 0;\n     break;\n    } else {\n     $$06272 = $77;$32 = $79;$82 = $78;\n    }\n   }\n   return ($$2|0);\n  }\n } while(0);\n $50 = ($$lcssa66|0)>(0);\n L21: do {\n  if ($50) {\n   $$06569 = 0;$52 = $83;\n   while(1) {\n    $51 = !($$ >= $52);\n    $$pre83 = (($$06569) + 1)|0;\n    if (!($51)) {\n     $53 = (($$lcssa) + ($$pre83<<3)|0);\n     $54 = +HEAPF64[$53>>3];\n     $55 = $$ < $54;\n     if ($55) {\n      $$065$lcssa = $$06569;\n      break L21;\n     }\n    }\n    $56 = ($$pre83|0)<($$lcssa66|0);\n    if (!($56)) {\n     $$065$lcssa = $$pre83;\n     break L21;\n    }\n    $$phi$trans$insert = (($$lcssa) + ($$pre83<<3)|0);\n    $$pre = +HEAPF64[$$phi$trans$insert>>3];\n    $$06569 = $$pre83;$52 = $$pre;\n   }\n  } else {\n   $$065$lcssa = 0;\n  }\n } while(0);\n $57 = ($$065$lcssa|0)==($$lcssa66|0);\n if ($57) {\n  $58 = (+($$lcssa66|0));\n  $59 = $58 + -0.001;\n  $storemerge = $59;\n } else {\n  $60 = (($$lcssa) + ($$065$lcssa<<3)|0);\n  $61 = +HEAPF64[$60>>3];\n  $62 = $61;\n  $63 = (($$065$lcssa) + 1)|0;\n  $64 = (($$lcssa) + ($63<<3)|0);\n  $65 = +HEAPF64[$64>>3];\n  $66 = $65;\n  $67 = $62;\n  $68 = $$ - $67;\n  $69 = $66 - $62;\n  $70 = $69;\n  $71 = $68 / $70;\n  $72 = $71;\n  $73 = (+($$065$lcssa|0));\n  $74 = $72 + $73;\n  $75 = $74;\n  $storemerge = $75;\n }\n HEAPF64[$4>>3] = $storemerge;\n $76 = HEAP32[$$lcssa68>>2]|0;\n $$2 = $76;\n return ($$2|0);\n}\nfunction _vorbis_encode_setup_setting($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0.0;\n var $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;\n var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($4)) + 3396|0);\n $6 = HEAP32[$5>>2]|0;\n HEAP32[$0>>2] = 0;\n $7 = ((($0)) + 4|0);\n HEAP32[$7>>2] = $1;\n $8 = ((($0)) + 8|0);\n HEAP32[$8>>2] = $2;\n $9 = ((($4)) + 3456|0);\n HEAP32[$9>>2] = 1;\n $10 = ((($4)) + 3460|0);\n HEAP32[$10>>2] = 1;\n $11 = ((($4)) + 3400|0);\n $12 = +HEAPF64[$11>>3];\n $13 = (~~(($12)));\n $14 = (+($13|0));\n $15 = $12 - $14;\n $16 = ((($4)) + 3472|0);\n HEAPF64[$16>>3] = $12;\n $17 = ((($4)) + 3488|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ($18|0)==(0);\n $20 = (($13) + 1)|0;\n $21 = 1.0 - $15;\n if ($19) {\n  $22 = ((($6)) + 120|0);\n  $23 = HEAP32[$22>>2]|0;\n  $24 = (($23) + ($13<<3)|0);\n  $25 = +HEAPF64[$24>>3];\n  $26 = $25 * $21;\n  $27 = (($23) + ($20<<3)|0);\n  $28 = +HEAPF64[$27>>3];\n  $29 = $28 * $15;\n  $30 = $29 + $26;\n  $31 = ((($4)) + 3480|0);\n  HEAPF64[$31>>3] = $30;\n }\n $32 = ((($6)) + 112|0);\n $33 = HEAP32[$32>>2]|0;\n $34 = (($33) + ($13<<2)|0);\n $35 = HEAP32[$34>>2]|0;\n $36 = (+($35|0));\n $37 = $36 * $21;\n $38 = (($33) + ($20<<2)|0);\n $39 = HEAP32[$38>>2]|0;\n $40 = (+($39|0));\n $41 = $40 * $15;\n $42 = $41 + $37;\n $43 = ((($4)) + 3496|0);\n HEAPF64[$43>>3] = $42;\n $44 = ((($6)) + 116|0);\n $45 = HEAP32[$44>>2]|0;\n $46 = (($45) + ($13<<2)|0);\n $47 = HEAP32[$46>>2]|0;\n $48 = (+($47|0));\n $49 = $48 * $21;\n $50 = (($45) + ($20<<2)|0);\n $51 = HEAP32[$50>>2]|0;\n $52 = (+($51|0));\n $53 = $52 * $15;\n $54 = $53 + $49;\n $55 = ((($4)) + 3504|0);\n HEAPF64[$55>>3] = $54;\n $56 = ((($4)) + 3512|0);\n HEAPF64[$56>>3] = -6.0;\n $57 = ((($4)) + 3520|0);\n HEAPF64[$57>>3] = $12;\n $58 = ((($4)) + 3528|0);\n HEAPF64[$58>>3] = $12;\n $59 = ((($4)) + 3536|0);\n HEAPF64[$59>>3] = $12;\n $60 = ((($4)) + 3544|0);\n HEAPF64[$60>>3] = $12;\n $61 = ((($4)) + 3552|0);\n HEAPF64[$61>>3] = $12;\n $62 = ((($4)) + 3560|0);\n HEAPF64[$62>>3] = $12;\n $63 = ((($4)) + 3568|0);\n HEAPF64[$63>>3] = $12;\n $64 = ((($4)) + 3576|0);\n HEAPF64[$64>>3] = $12;\n $65 = ((($4)) + 3584|0);\n HEAPF64[$65>>3] = $12;\n $66 = ((($4)) + 3592|0);\n HEAPF64[$66>>3] = $12;\n $67 = ((($4)) + 3600|0);\n HEAPF64[$67>>3] = $12;\n $68 = ((($4)) + 3608|0);\n HEAPF64[$68>>3] = $12;\n $69 = ((($4)) + 3616|0);\n HEAPF64[$69>>3] = $12;\n $70 = ((($4)) + 3624|0);\n HEAPF64[$70>>3] = $12;\n $71 = ((($4)) + 3632|0);\n HEAPF64[$71>>3] = $12;\n $72 = ((($4)) + 3640|0);\n HEAPF64[$72>>3] = $12;\n $73 = ((($4)) + 3648|0);\n HEAPF64[$73>>3] = $12;\n return;\n}\nfunction _vorbis_encode_init_vbr($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = +$3;\n var $$0 = 0, $$0$i$ph = 0, $$021$i = 0.0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($2|0)<(1);\n if ($4) {\n  $$0$i$ph = -131;\n } else {\n  $5 = ((($0)) + 28|0);\n  $6 = HEAP32[$5>>2]|0;\n  $7 = $3;\n  $8 = $7 + 9.9999999999999995E-8;\n  $9 = $8;\n  $10 = !($9 >= 1.0);\n  $$021$i = $10 ? $9 : 0.99989998340606689;\n  $11 = ((($6)) + 3416|0);\n  HEAPF32[$11>>2] = $$021$i;\n  $12 = $$021$i;\n  $13 = ((($6)) + 3400|0);\n  $14 = (_get_setup_template($1,$2,$12,0,$13)|0);\n  $15 = ((($6)) + 3396|0);\n  HEAP32[$15>>2] = $14;\n  $16 = ($14|0)==(0|0);\n  if ($16) {\n   $$0$i$ph = -130;\n  } else {\n   _vorbis_encode_setup_setting($0,$1,$2);\n   $17 = ((($6)) + 3420|0);\n   HEAP32[$17>>2] = 0;\n   $18 = ((($6)) + 3464|0);\n   HEAP32[$18>>2] = 1;\n   $19 = (_vorbis_encode_setup_init($0)|0);\n   $20 = ($19|0)==(0);\n   if ($20) {\n    $$0 = 0;\n    return ($$0|0);\n   }\n   _vorbis_info_clear($0);\n   $$0 = $19;\n   return ($$0|0);\n  }\n }\n _vorbis_info_clear($0);\n $$0 = $$0$i$ph;\n return ($$0|0);\n}\nfunction __vorbis_apply_window($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$071$lcssa = 0, $$081 = 0, $$17280 = 0, $$178 = 0, $$178$in = 0, $$2$lcssa = 0, $$277 = 0, $$neg = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;\n var $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $exitcond = 0, $scevgep = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = ($4|0)!=(0);\n $7 = $6 ? $3 : 0;\n $8 = $6 ? $5 : 0;\n $9 = (($1) + ($7<<2)|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = (191876 + ($10<<2)|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = (($1) + ($8<<2)|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (191876 + ($14<<2)|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = (($2) + ($4<<2)|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = (($2) + ($7<<2)|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = (($2) + ($8<<2)|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = (($18|0) / 4)&-1;\n $24 = (($20|0) / 4)&-1;\n $25 = (($23) - ($24))|0;\n $26 = (($20|0) / 2)&-1;\n $27 = (($25) + ($26))|0;\n $28 = (($18|0) / 2)&-1;\n $29 = (($28) + ($23))|0;\n $$neg = (($22|0) / -4)&-1;\n $30 = (($29) + ($$neg))|0;\n $31 = (($22|0) / 2)&-1;\n $32 = (($30) + ($31))|0;\n $33 = ($25|0)>(0);\n if ($33) {\n  $34 = (($23) - ($24))|0;\n  $35 = $34 << 2;\n  _memset(($0|0),0,($35|0))|0;\n  $$071$lcssa = $25;\n } else {\n  $$071$lcssa = 0;\n }\n $36 = ($$071$lcssa|0)<($27|0);\n if ($36) {\n  $37 = (($26) + ($23))|0;\n  $38 = (($37) - ($$071$lcssa))|0;\n  $39 = (($38) - ($24))|0;\n  $$081 = 0;$$17280 = $$071$lcssa;\n  while(1) {\n   $41 = (($12) + ($$081<<2)|0);\n   $42 = +HEAPF32[$41>>2];\n   $43 = (($0) + ($$17280<<2)|0);\n   $44 = +HEAPF32[$43>>2];\n   $45 = $44 * $42;\n   HEAPF32[$43>>2] = $45;\n   $46 = (($$17280) + 1)|0;\n   $47 = (($$081) + 1)|0;\n   $exitcond = ($47|0)==($39|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$081 = $47;$$17280 = $46;\n   }\n  }\n }\n $40 = ($22|0)>(1);\n if ($40) {\n  $$178$in = $31;$$277 = $30;\n  while(1) {\n   $$178 = (($$178$in) + -1)|0;\n   $51 = (($16) + ($$178<<2)|0);\n   $52 = +HEAPF32[$51>>2];\n   $53 = (($0) + ($$277<<2)|0);\n   $54 = +HEAPF32[$53>>2];\n   $55 = $54 * $52;\n   HEAPF32[$53>>2] = $55;\n   $56 = (($$277) + 1)|0;\n   $57 = ($56|0)<($32|0);\n   if ($57) {\n    $$178$in = $$178;$$277 = $56;\n   } else {\n    $$2$lcssa = $56;\n    break;\n   }\n  }\n } else {\n  $$2$lcssa = $30;\n }\n $48 = ($18|0)>($$2$lcssa|0);\n if (!($48)) {\n  return;\n }\n $scevgep = (($0) + ($$2$lcssa<<2)|0);\n $49 = (($18) - ($$2$lcssa))|0;\n $50 = $49 << 2;\n _memset(($scevgep|0),0,($50|0))|0;\n return;\n}\nfunction _encoder_init($0,$1,$2) {\n $0 = $0|0;\n $1 = +$1;\n $2 = +$2;\n var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_malloc(688)|0);\n $4 = ((($3)) + 408|0);\n _vorbis_info_init($4);\n $5 = (~~(($1)));\n (_vorbis_encode_init_vbr($4,$0,$5,$2)|0);\n $6 = ((($3)) + 440|0);\n _vorbis_comment_init($6);\n $7 = ((($3)) + 456|0);\n (_vorbis_analysis_init($7,$4)|0);\n $8 = ((($3)) + 568|0);\n (_vorbis_block_init($7,$8)|0);\n $9 = (_time((0|0))|0);\n _srand($9);\n $10 = ((($3)) + 680|0);\n HEAP32[$10>>2] = 0;\n $11 = ((($3)) + 684|0);\n HEAP32[$11>>2] = 0;\n return ($3|0);\n}\nfunction _encoder_set_tag($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 440|0);\n _vorbis_comment_add_tag($3,$1,$2);\n return;\n}\nfunction _encoder_stream_init($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);\n $1 = sp + 32|0;\n $2 = sp;\n $3 = ((($0)) + 456|0);\n $4 = ((($0)) + 440|0);\n $5 = ((($0)) + 360|0);\n (_vorbis_analysis_headerout($3,$4,$5,$1,$2)|0);\n $6 = (_rand()|0);\n (_ogg_stream_init($0,$6)|0);\n (_ogg_stream_packetin($0,$5)|0);\n (_ogg_stream_packetin($0,$1)|0);\n (_ogg_stream_packetin($0,$2)|0);\n $7 = ((($0)) + 392|0);\n $8 = (_ogg_stream_flush($0,$7)|0);\n $9 = ($8|0)==(0);\n if ($9) {\n  STACKTOP = sp;return;\n }\n $10 = ((($0)) + 684|0);\n $11 = ((($0)) + 396|0);\n $12 = ((($0)) + 404|0);\n $13 = ((($0)) + 680|0);\n $14 = ((($0)) + 392|0);\n $15 = ((($0)) + 400|0);\n while(1) {\n  $16 = HEAP32[$10>>2]|0;\n  $17 = HEAP32[$11>>2]|0;\n  $18 = (($17) + ($16))|0;\n  $19 = HEAP32[$12>>2]|0;\n  $20 = (($18) + ($19))|0;\n  $21 = ($20|0)==(0);\n  if (!($21)) {\n   $24 = HEAP32[$13>>2]|0;\n   $25 = (_realloc($24,$20)|0);\n   HEAP32[$13>>2] = $25;\n   $26 = HEAP32[$10>>2]|0;\n   $27 = (($25) + ($26)|0);\n   $28 = HEAP32[$14>>2]|0;\n   $29 = HEAP32[$11>>2]|0;\n   _memcpy(($27|0),($28|0),($29|0))|0;\n   $30 = (($29) + ($26))|0;\n   HEAP32[$10>>2] = $30;\n   $31 = (($25) + ($30)|0);\n   $32 = HEAP32[$15>>2]|0;\n   $33 = HEAP32[$12>>2]|0;\n   _memcpy(($31|0),($32|0),($33|0))|0;\n   $34 = (($33) + ($30))|0;\n   HEAP32[$10>>2] = $34;\n  }\n  $22 = (_ogg_stream_flush($0,$7)|0);\n  $23 = ($22|0)==(0);\n  if ($23) {\n   break;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _encoder_clear($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n (_ogg_stream_clear($0)|0);\n $1 = ((($0)) + 568|0);\n (_vorbis_block_clear($1)|0);\n $2 = ((($0)) + 456|0);\n _vorbis_dsp_clear($2);\n $3 = ((($0)) + 440|0);\n _vorbis_comment_clear($3);\n $4 = ((($0)) + 408|0);\n _vorbis_info_clear($4);\n $5 = ((($0)) + 680|0);\n $6 = HEAP32[$5>>2]|0;\n _free($6);\n _free($0);\n return;\n}\nfunction _encoder_analysis_buffer($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 456|0);\n $3 = (_vorbis_analysis_buffer($2,$1)|0);\n return ($3|0);\n}\nfunction _encoder_process($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 456|0);\n (_vorbis_analysis_wrote($2,$1)|0);\n $3 = ((($0)) + 568|0);\n $4 = (_vorbis_analysis_blockout($2,$3)|0);\n $5 = ($4|0)==(1);\n if (!($5)) {\n  return;\n }\n $6 = ((($0)) + 360|0);\n $7 = ((($0)) + 392|0);\n $8 = ((($0)) + 684|0);\n $9 = ((($0)) + 396|0);\n $10 = ((($0)) + 404|0);\n $11 = ((($0)) + 680|0);\n $12 = ((($0)) + 392|0);\n $13 = ((($0)) + 400|0);\n while(1) {\n  (_vorbis_analysis($3,0)|0);\n  (_vorbis_bitrate_addblock($3)|0);\n  $16 = (_vorbis_bitrate_flushpacket($2,$6)|0);\n  $17 = ($16|0)==(0);\n  if (!($17)) {\n   while(1) {\n    (_ogg_stream_packetin($0,$6)|0);\n    $20 = (_ogg_stream_pageout($0,$7)|0);\n    $21 = ($20|0)==(0);\n    if (!($21)) {\n     while(1) {\n      $22 = HEAP32[$8>>2]|0;\n      $23 = HEAP32[$9>>2]|0;\n      $24 = (($23) + ($22))|0;\n      $25 = HEAP32[$10>>2]|0;\n      $26 = (($24) + ($25))|0;\n      $27 = ($26|0)==(0);\n      if (!($27)) {\n       $30 = HEAP32[$11>>2]|0;\n       $31 = (_realloc($30,$26)|0);\n       HEAP32[$11>>2] = $31;\n       $32 = HEAP32[$8>>2]|0;\n       $33 = (($31) + ($32)|0);\n       $34 = HEAP32[$12>>2]|0;\n       $35 = HEAP32[$9>>2]|0;\n       _memcpy(($33|0),($34|0),($35|0))|0;\n       $36 = (($35) + ($32))|0;\n       HEAP32[$8>>2] = $36;\n       $37 = (($31) + ($36)|0);\n       $38 = HEAP32[$13>>2]|0;\n       $39 = HEAP32[$10>>2]|0;\n       _memcpy(($37|0),($38|0),($39|0))|0;\n       $40 = (($39) + ($36))|0;\n       HEAP32[$8>>2] = $40;\n      }\n      $28 = (_ogg_stream_pageout($0,$7)|0);\n      $29 = ($28|0)==(0);\n      if ($29) {\n       break;\n      }\n     }\n    }\n    $18 = (_vorbis_bitrate_flushpacket($2,$6)|0);\n    $19 = ($18|0)==(0);\n    if ($19) {\n     break;\n    }\n   }\n  }\n  $14 = (_vorbis_analysis_blockout($2,$3)|0);\n  $15 = ($14|0)==(1);\n  if (!($15)) {\n   break;\n  }\n }\n return;\n}\nfunction _encoder_data_len($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 684|0);\n $2 = HEAP32[$1>>2]|0;\n return ($2|0);\n}\nfunction _encoder_transfer_data($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 684|0);\n HEAP32[$1>>2] = 0;\n $2 = ((($0)) + 680|0);\n $3 = HEAP32[$2>>2]|0;\n return ($3|0);\n}\nfunction _emscripten_get_global_libc() {\n var label = 0, sp = 0;\n sp = STACKTOP;\n return (546292|0);\n}\nfunction ___stdio_close($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $1 = ((($0)) + 60|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = (_dummy_243($2)|0);\n HEAP32[$vararg_buffer>>2] = $3;\n $4 = (___syscall6(6,($vararg_buffer|0))|0);\n $5 = (___syscall_ret($4)|0);\n STACKTOP = sp;return ($5|0);\n}\nfunction ___stdio_seek($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $vararg_buffer = sp;\n $3 = sp + 20|0;\n $4 = ((($0)) + 60|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $3;\n HEAP32[$vararg_buffer>>2] = $5;\n $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n HEAP32[$vararg_ptr1>>2] = 0;\n $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n HEAP32[$vararg_ptr2>>2] = $1;\n $vararg_ptr3 = ((($vararg_buffer)) + 12|0);\n HEAP32[$vararg_ptr3>>2] = $6;\n $vararg_ptr4 = ((($vararg_buffer)) + 16|0);\n HEAP32[$vararg_ptr4>>2] = $2;\n $7 = (___syscall140(140,($vararg_buffer|0))|0);\n $8 = (___syscall_ret($7)|0);\n $9 = ($8|0)<(0);\n if ($9) {\n  HEAP32[$3>>2] = -1;\n  $10 = -1;\n } else {\n  $$pre = HEAP32[$3>>2]|0;\n  $10 = $$pre;\n }\n STACKTOP = sp;return ($10|0);\n}\nfunction ___syscall_ret($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0>>>0)>(4294963200);\n if ($1) {\n  $2 = (0 - ($0))|0;\n  $3 = (___errno_location()|0);\n  HEAP32[$3>>2] = $2;\n  $$0 = -1;\n } else {\n  $$0 = $0;\n }\n return ($$0|0);\n}\nfunction ___errno_location() {\n var $0 = 0, $1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $0 = (___pthread_self_304()|0);\n $1 = ((($0)) + 64|0);\n return ($1|0);\n}\nfunction ___pthread_self_304() {\n var $0 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $0 = (_pthread_self()|0);\n return ($0|0);\n}\nfunction _pthread_self() {\n var label = 0, sp = 0;\n sp = STACKTOP;\n return (224548|0);\n}\nfunction _dummy_243($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return ($0|0);\n}\nfunction ___stdout_write($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $vararg_buffer = sp;\n $3 = sp + 16|0;\n $4 = ((($0)) + 36|0);\n HEAP32[$4>>2] = 33;\n $5 = HEAP32[$0>>2]|0;\n $6 = $5 & 64;\n $7 = ($6|0)==(0);\n if ($7) {\n  $8 = ((($0)) + 60|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = $3;\n  HEAP32[$vararg_buffer>>2] = $9;\n  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n  HEAP32[$vararg_ptr1>>2] = 21523;\n  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n  HEAP32[$vararg_ptr2>>2] = $10;\n  $11 = (___syscall54(54,($vararg_buffer|0))|0);\n  $12 = ($11|0)==(0);\n  if (!($12)) {\n   $13 = ((($0)) + 75|0);\n   HEAP8[$13>>0] = -1;\n  }\n }\n $14 = (___stdio_write($0,$1,$2)|0);\n STACKTOP = sp;return ($14|0);\n}\nfunction ___stdio_write($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0;\n var $vararg_ptr7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $vararg_buffer3 = sp + 16|0;\n $vararg_buffer = sp;\n $3 = sp + 32|0;\n $4 = ((($0)) + 28|0);\n $5 = HEAP32[$4>>2]|0;\n HEAP32[$3>>2] = $5;\n $6 = ((($3)) + 4|0);\n $7 = ((($0)) + 20|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = (($8) - ($5))|0;\n HEAP32[$6>>2] = $9;\n $10 = ((($3)) + 8|0);\n HEAP32[$10>>2] = $1;\n $11 = ((($3)) + 12|0);\n HEAP32[$11>>2] = $2;\n $12 = (($9) + ($2))|0;\n $13 = ((($0)) + 60|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = $3;\n HEAP32[$vararg_buffer>>2] = $14;\n $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n HEAP32[$vararg_ptr1>>2] = $15;\n $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n HEAP32[$vararg_ptr2>>2] = 2;\n $16 = (___syscall146(146,($vararg_buffer|0))|0);\n $17 = (___syscall_ret($16)|0);\n $18 = ($12|0)==($17|0);\n L1: do {\n  if ($18) {\n   label = 3;\n  } else {\n   $$04756 = 2;$$04855 = $12;$$04954 = $3;$25 = $17;\n   while(1) {\n    $26 = ($25|0)<(0);\n    if ($26) {\n     break;\n    }\n    $34 = (($$04855) - ($25))|0;\n    $35 = ((($$04954)) + 4|0);\n    $36 = HEAP32[$35>>2]|0;\n    $37 = ($25>>>0)>($36>>>0);\n    $38 = ((($$04954)) + 8|0);\n    $$150 = $37 ? $38 : $$04954;\n    $39 = $37 << 31 >> 31;\n    $$1 = (($39) + ($$04756))|0;\n    $40 = $37 ? $36 : 0;\n    $$0 = (($25) - ($40))|0;\n    $41 = HEAP32[$$150>>2]|0;\n    $42 = (($41) + ($$0)|0);\n    HEAP32[$$150>>2] = $42;\n    $43 = ((($$150)) + 4|0);\n    $44 = HEAP32[$43>>2]|0;\n    $45 = (($44) - ($$0))|0;\n    HEAP32[$43>>2] = $45;\n    $46 = HEAP32[$13>>2]|0;\n    $47 = $$150;\n    HEAP32[$vararg_buffer3>>2] = $46;\n    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);\n    HEAP32[$vararg_ptr6>>2] = $47;\n    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);\n    HEAP32[$vararg_ptr7>>2] = $$1;\n    $48 = (___syscall146(146,($vararg_buffer3|0))|0);\n    $49 = (___syscall_ret($48)|0);\n    $50 = ($34|0)==($49|0);\n    if ($50) {\n     label = 3;\n     break L1;\n    } else {\n     $$04756 = $$1;$$04855 = $34;$$04954 = $$150;$25 = $49;\n    }\n   }\n   $27 = ((($0)) + 16|0);\n   HEAP32[$27>>2] = 0;\n   HEAP32[$4>>2] = 0;\n   HEAP32[$7>>2] = 0;\n   $28 = HEAP32[$0>>2]|0;\n   $29 = $28 | 32;\n   HEAP32[$0>>2] = $29;\n   $30 = ($$04756|0)==(2);\n   if ($30) {\n    $$051 = 0;\n   } else {\n    $31 = ((($$04954)) + 4|0);\n    $32 = HEAP32[$31>>2]|0;\n    $33 = (($2) - ($32))|0;\n    $$051 = $33;\n   }\n  }\n } while(0);\n if ((label|0) == 3) {\n  $19 = ((($0)) + 44|0);\n  $20 = HEAP32[$19>>2]|0;\n  $21 = ((($0)) + 48|0);\n  $22 = HEAP32[$21>>2]|0;\n  $23 = (($20) + ($22)|0);\n  $24 = ((($0)) + 16|0);\n  HEAP32[$24>>2] = $23;\n  HEAP32[$4>>2] = $20;\n  HEAP32[$7>>2] = $20;\n  $$051 = $2;\n }\n STACKTOP = sp;return ($$051|0);\n}\nfunction _srand($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (($0) + -1)|0;\n $2 = 546280;\n $3 = $2;\n HEAP32[$3>>2] = $1;\n $4 = (($2) + 4)|0;\n $5 = $4;\n HEAP32[$5>>2] = 0;\n return;\n}\nfunction _rand() {\n var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $0 = 546280;\n $1 = $0;\n $2 = HEAP32[$1>>2]|0;\n $3 = (($0) + 4)|0;\n $4 = $3;\n $5 = HEAP32[$4>>2]|0;\n $6 = (___muldi3(($2|0),($5|0),1284865837,1481765933)|0);\n $7 = tempRet0;\n $8 = (_i64Add(($6|0),($7|0),1,0)|0);\n $9 = tempRet0;\n $10 = 546280;\n $11 = $10;\n HEAP32[$11>>2] = $8;\n $12 = (($10) + 4)|0;\n $13 = $12;\n HEAP32[$13>>2] = $9;\n $14 = (_bitshift64Lshr(($8|0),($9|0),33)|0);\n $15 = tempRet0;\n return ($14|0);\n}\nfunction _strlen($0) {\n $0 = $0|0;\n var $$0 = 0, $$015$lcssa = 0, $$01519 = 0, $$1$lcssa = 0, $$pn = 0, $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = $0;\n $2 = $1 & 3;\n $3 = ($2|0)==(0);\n L1: do {\n  if ($3) {\n   $$015$lcssa = $0;\n   label = 4;\n  } else {\n   $$01519 = $0;$23 = $1;\n   while(1) {\n    $4 = HEAP8[$$01519>>0]|0;\n    $5 = ($4<<24>>24)==(0);\n    if ($5) {\n     $$sink = $23;\n     break L1;\n    }\n    $6 = ((($$01519)) + 1|0);\n    $7 = $6;\n    $8 = $7 & 3;\n    $9 = ($8|0)==(0);\n    if ($9) {\n     $$015$lcssa = $6;\n     label = 4;\n     break;\n    } else {\n     $$01519 = $6;$23 = $7;\n    }\n   }\n  }\n } while(0);\n if ((label|0) == 4) {\n  $$0 = $$015$lcssa;\n  while(1) {\n   $10 = HEAP32[$$0>>2]|0;\n   $11 = (($10) + -16843009)|0;\n   $12 = $10 & -2139062144;\n   $13 = $12 ^ -2139062144;\n   $14 = $13 & $11;\n   $15 = ($14|0)==(0);\n   $16 = ((($$0)) + 4|0);\n   if ($15) {\n    $$0 = $16;\n   } else {\n    break;\n   }\n  }\n  $17 = $10&255;\n  $18 = ($17<<24>>24)==(0);\n  if ($18) {\n   $$1$lcssa = $$0;\n  } else {\n   $$pn = $$0;\n   while(1) {\n    $19 = ((($$pn)) + 1|0);\n    $$pre = HEAP8[$19>>0]|0;\n    $20 = ($$pre<<24>>24)==(0);\n    if ($20) {\n     $$1$lcssa = $19;\n     break;\n    } else {\n     $$pn = $19;\n    }\n   }\n  }\n  $21 = $$1$lcssa;\n  $$sink = $21;\n }\n $22 = (($$sink) - ($1))|0;\n return ($22|0);\n}\nfunction _strcpy($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n (___stpcpy($0,$1)|0);\n return ($0|0);\n}\nfunction ___stpcpy($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$029 = 0, $$037 = 0, $$1$ph = 0, $$128$ph = 0, $$12834 = 0, $$135 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = $1;\n $3 = $0;\n $4 = $2 ^ $3;\n $5 = $4 & 3;\n $6 = ($5|0)==(0);\n L1: do {\n  if ($6) {\n   $7 = $2 & 3;\n   $8 = ($7|0)==(0);\n   if ($8) {\n    $$026$lcssa = $1;$$027$lcssa = $0;\n   } else {\n    $$02642 = $1;$$02741 = $0;\n    while(1) {\n     $9 = HEAP8[$$02642>>0]|0;\n     HEAP8[$$02741>>0] = $9;\n     $10 = ($9<<24>>24)==(0);\n     if ($10) {\n      $$029 = $$02741;\n      break L1;\n     }\n     $11 = ((($$02642)) + 1|0);\n     $12 = ((($$02741)) + 1|0);\n     $13 = $11;\n     $14 = $13 & 3;\n     $15 = ($14|0)==(0);\n     if ($15) {\n      $$026$lcssa = $11;$$027$lcssa = $12;\n      break;\n     } else {\n      $$02642 = $11;$$02741 = $12;\n     }\n    }\n   }\n   $16 = HEAP32[$$026$lcssa>>2]|0;\n   $17 = (($16) + -16843009)|0;\n   $18 = $16 & -2139062144;\n   $19 = $18 ^ -2139062144;\n   $20 = $19 & $17;\n   $21 = ($20|0)==(0);\n   if ($21) {\n    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;\n    while(1) {\n     $22 = ((($$037)) + 4|0);\n     $23 = ((($$02536)) + 4|0);\n     HEAP32[$$02536>>2] = $24;\n     $25 = HEAP32[$22>>2]|0;\n     $26 = (($25) + -16843009)|0;\n     $27 = $25 & -2139062144;\n     $28 = $27 ^ -2139062144;\n     $29 = $28 & $26;\n     $30 = ($29|0)==(0);\n     if ($30) {\n      $$02536 = $23;$$037 = $22;$24 = $25;\n     } else {\n      $$0$lcssa = $22;$$025$lcssa = $23;\n      break;\n     }\n    }\n   } else {\n    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;\n   }\n   $$1$ph = $$0$lcssa;$$128$ph = $$025$lcssa;\n   label = 8;\n  } else {\n   $$1$ph = $1;$$128$ph = $0;\n   label = 8;\n  }\n } while(0);\n if ((label|0) == 8) {\n  $31 = HEAP8[$$1$ph>>0]|0;\n  HEAP8[$$128$ph>>0] = $31;\n  $32 = ($31<<24>>24)==(0);\n  if ($32) {\n   $$029 = $$128$ph;\n  } else {\n   $$12834 = $$128$ph;$$135 = $$1$ph;\n   while(1) {\n    $33 = ((($$135)) + 1|0);\n    $34 = ((($$12834)) + 1|0);\n    $35 = HEAP8[$33>>0]|0;\n    HEAP8[$34>>0] = $35;\n    $36 = ($35<<24>>24)==(0);\n    if ($36) {\n     $$029 = $34;\n     break;\n    } else {\n     $$12834 = $34;$$135 = $33;\n    }\n   }\n  }\n }\n return ($$029|0);\n}\nfunction ___lockfile($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return 0;\n}\nfunction ___unlockfile($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return;\n}\nfunction _scalbn($0,$1) {\n $0 = +$0;\n $1 = $1|0;\n var $$ = 0, $$$ = 0, $$0 = 0.0, $$020 = 0, $$1 = 0, $$1$ = 0, $$21 = 0.0, $$22 = 0.0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0;\n var $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($1|0)>(1023);\n if ($2) {\n  $3 = $0 * 8.9884656743115795E+307;\n  $4 = (($1) + -1023)|0;\n  $5 = ($4|0)>(1023);\n  $6 = $3 * 8.9884656743115795E+307;\n  $7 = (($1) + -2046)|0;\n  $8 = ($7|0)<(1023);\n  $$ = $8 ? $7 : 1023;\n  $$$ = $5 ? $$ : $4;\n  $$21 = $5 ? $6 : $3;\n  $$0 = $$21;$$020 = $$$;\n } else {\n  $9 = ($1|0)<(-1022);\n  if ($9) {\n   $10 = $0 * 2.2250738585072014E-308;\n   $11 = (($1) + 1022)|0;\n   $12 = ($11|0)<(-1022);\n   $13 = $10 * 2.2250738585072014E-308;\n   $14 = (($1) + 2044)|0;\n   $15 = ($14|0)>(-1022);\n   $$1 = $15 ? $14 : -1022;\n   $$1$ = $12 ? $$1 : $11;\n   $$22 = $12 ? $13 : $10;\n   $$0 = $$22;$$020 = $$1$;\n  } else {\n   $$0 = $0;$$020 = $1;\n  }\n }\n $16 = (($$020) + 1023)|0;\n $17 = (_bitshift64Shl(($16|0),0,52)|0);\n $18 = tempRet0;\n HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];\n $20 = $$0 * $19;\n return (+$20);\n}\nfunction _qsort($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $$067$lcssa = 0, $$06772 = 0, $$068$lcssa = 0, $$06871 = 0, $$1 = 0, $$169 = 0, $$2 = 0, $$pre$pre = 0, $$pre76 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $15$phi = 0, $16 = 0, $17 = 0, $18 = 0;\n var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);\n $4 = sp + 8|0;\n $5 = sp;\n $6 = Math_imul($2, $1)|0;\n $7 = $5;\n $8 = $7;\n HEAP32[$8>>2] = 1;\n $9 = (($7) + 4)|0;\n $10 = $9;\n HEAP32[$10>>2] = 0;\n $11 = ($6|0)==(0);\n L1: do {\n  if (!($11)) {\n   $12 = (0 - ($2))|0;\n   $13 = ((($4)) + 4|0);\n   HEAP32[$13>>2] = $2;\n   HEAP32[$4>>2] = $2;\n   $$0 = 2;$15 = $2;$17 = $2;\n   while(1) {\n    $14 = (($15) + ($2))|0;\n    $16 = (($14) + ($17))|0;\n    $18 = (($4) + ($$0<<2)|0);\n    HEAP32[$18>>2] = $16;\n    $19 = ($16>>>0)<($6>>>0);\n    $20 = (($$0) + 1)|0;\n    if ($19) {\n     $15$phi = $17;$$0 = $20;$17 = $16;$15 = $15$phi;\n    } else {\n     break;\n    }\n   }\n   $21 = (($0) + ($6)|0);\n   $22 = (($21) + ($12)|0);\n   $23 = ($22>>>0)>($0>>>0);\n   if ($23) {\n    $24 = $22;\n    $$06772 = 1;$$06871 = $0;$26 = 1;\n    while(1) {\n     $25 = $26 & 3;\n     $27 = ($25|0)==(3);\n     do {\n      if ($27) {\n       _sift($$06871,$2,$3,$$06772,$4);\n       _shr($5,2);\n       $28 = (($$06772) + 2)|0;\n       $$1 = $28;\n      } else {\n       $29 = (($$06772) + -1)|0;\n       $30 = (($4) + ($29<<2)|0);\n       $31 = HEAP32[$30>>2]|0;\n       $32 = $$06871;\n       $33 = (($24) - ($32))|0;\n       $34 = ($31>>>0)<($33>>>0);\n       if ($34) {\n        _sift($$06871,$2,$3,$$06772,$4);\n       } else {\n        _trinkle($$06871,$2,$3,$5,$$06772,0,$4);\n       }\n       $35 = ($$06772|0)==(1);\n       if ($35) {\n        _shl($5,1);\n        $$1 = 0;\n        break;\n       } else {\n        _shl($5,$29);\n        $$1 = 1;\n        break;\n       }\n      }\n     } while(0);\n     $36 = HEAP32[$5>>2]|0;\n     $37 = $36 | 1;\n     HEAP32[$5>>2] = $37;\n     $38 = (($$06871) + ($2)|0);\n     $39 = ($38>>>0)<($22>>>0);\n     if ($39) {\n      $$06772 = $$1;$$06871 = $38;$26 = $37;\n     } else {\n      $$067$lcssa = $$1;$$068$lcssa = $38;$61 = $37;\n      break;\n     }\n    }\n   } else {\n    $$067$lcssa = 1;$$068$lcssa = $0;$61 = 1;\n   }\n   _trinkle($$068$lcssa,$2,$3,$5,$$067$lcssa,0,$4);\n   $40 = ((($5)) + 4|0);\n   $$169 = $$068$lcssa;$$2 = $$067$lcssa;$42 = $61;\n   while(1) {\n    $41 = ($$2|0)==(1);\n    $43 = ($42|0)==(1);\n    $or$cond = $41 & $43;\n    if ($or$cond) {\n     $44 = HEAP32[$40>>2]|0;\n     $45 = ($44|0)==(0);\n     if ($45) {\n      break L1;\n     }\n    } else {\n     $46 = ($$2|0)<(2);\n     if (!($46)) {\n      _shl($5,2);\n      $49 = (($$2) + -2)|0;\n      $50 = HEAP32[$5>>2]|0;\n      $51 = $50 ^ 7;\n      HEAP32[$5>>2] = $51;\n      _shr($5,1);\n      $52 = (($4) + ($49<<2)|0);\n      $53 = HEAP32[$52>>2]|0;\n      $54 = (0 - ($53))|0;\n      $55 = (($$169) + ($54)|0);\n      $56 = (($55) + ($12)|0);\n      $57 = (($$2) + -1)|0;\n      _trinkle($56,$2,$3,$5,$57,1,$4);\n      _shl($5,1);\n      $58 = HEAP32[$5>>2]|0;\n      $59 = $58 | 1;\n      HEAP32[$5>>2] = $59;\n      $60 = (($$169) + ($12)|0);\n      _trinkle($60,$2,$3,$5,$49,1,$4);\n      $$169 = $60;$$2 = $49;$42 = $59;\n      continue;\n     }\n    }\n    $47 = (_pntz($5)|0);\n    _shr($5,$47);\n    $48 = (($47) + ($$2))|0;\n    $$pre$pre = HEAP32[$5>>2]|0;\n    $$pre76 = (($$169) + ($12)|0);\n    $$169 = $$pre76;$$2 = $48;$42 = $$pre$pre;\n   }\n  }\n } while(0);\n STACKTOP = sp;return;\n}\nfunction _sift($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0$lcssa = 0, $$029$be = 0, $$02932 = 0, $$030$be = 0, $$03031 = 0, $$033 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);\n $5 = sp;\n HEAP32[$5>>2] = $0;\n $6 = ($3|0)>(1);\n L1: do {\n  if ($6) {\n   $7 = (0 - ($1))|0;\n   $$02932 = $0;$$03031 = $3;$$033 = 1;$14 = $0;\n   while(1) {\n    $8 = (($$02932) + ($7)|0);\n    $9 = (($$03031) + -2)|0;\n    $10 = (($4) + ($9<<2)|0);\n    $11 = HEAP32[$10>>2]|0;\n    $12 = (0 - ($11))|0;\n    $13 = (($8) + ($12)|0);\n    $15 = (FUNCTION_TABLE_iii[$2 & 63]($14,$13)|0);\n    $16 = ($15|0)>(-1);\n    if ($16) {\n     $17 = (FUNCTION_TABLE_iii[$2 & 63]($14,$8)|0);\n     $18 = ($17|0)>(-1);\n     if ($18) {\n      $$0$lcssa = $$033;\n      break L1;\n     }\n    }\n    $19 = (FUNCTION_TABLE_iii[$2 & 63]($13,$8)|0);\n    $20 = ($19|0)>(-1);\n    $21 = (($$033) + 1)|0;\n    $22 = (($5) + ($$033<<2)|0);\n    if ($20) {\n     HEAP32[$22>>2] = $13;\n     $23 = (($$03031) + -1)|0;\n     $$029$be = $13;$$030$be = $23;\n    } else {\n     HEAP32[$22>>2] = $8;\n     $$029$be = $8;$$030$be = $9;\n    }\n    $24 = ($$030$be|0)>(1);\n    if (!($24)) {\n     $$0$lcssa = $21;\n     break L1;\n    }\n    $$pre = HEAP32[$5>>2]|0;\n    $$02932 = $$029$be;$$03031 = $$030$be;$$033 = $21;$14 = $$pre;\n   }\n  } else {\n   $$0$lcssa = 1;\n  }\n } while(0);\n _cycle($1,$5,$$0$lcssa);\n STACKTOP = sp;return;\n}\nfunction _shr($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$pre = 0, $$pre11 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($1>>>0)>(31);\n $3 = ((($0)) + 4|0);\n if ($2) {\n  $4 = (($1) + -32)|0;\n  $5 = HEAP32[$3>>2]|0;\n  HEAP32[$0>>2] = $5;\n  HEAP32[$3>>2] = 0;\n  $$0 = $4;$10 = 0;$7 = $5;\n } else {\n  $$pre = HEAP32[$0>>2]|0;\n  $$pre11 = HEAP32[$3>>2]|0;\n  $$0 = $1;$10 = $$pre11;$7 = $$pre;\n }\n $6 = $7 >>> $$0;\n $8 = (32 - ($$0))|0;\n $9 = $10 << $8;\n $11 = $9 | $6;\n HEAP32[$0>>2] = $11;\n $12 = $10 >>> $$0;\n HEAP32[$3>>2] = $12;\n return;\n}\nfunction _trinkle($0,$1,$2,$3,$4,$5,$6) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n var $$0$lcssa = 0, $$045$lcssa = 0, $$04551 = 0, $$0455780 = 0, $$046$lcssa = 0, $$04653 = 0, $$0465681 = 0, $$047$lcssa = 0, $$0475582 = 0, $$049 = 0, $$05879 = 0, $$05879$phi = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);\n $7 = sp + 232|0;\n $8 = sp;\n $9 = HEAP32[$3>>2]|0;\n HEAP32[$7>>2] = $9;\n $10 = ((($3)) + 4|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($7)) + 4|0);\n HEAP32[$12>>2] = $11;\n HEAP32[$8>>2] = $0;\n $13 = ($9|0)!=(1);\n $14 = ($11|0)!=(0);\n $15 = $13 | $14;\n L1: do {\n  if ($15) {\n   $16 = (0 - ($1))|0;\n   $17 = (($6) + ($4<<2)|0);\n   $18 = HEAP32[$17>>2]|0;\n   $19 = (0 - ($18))|0;\n   $20 = (($0) + ($19)|0);\n   $21 = (FUNCTION_TABLE_iii[$2 & 63]($20,$0)|0);\n   $22 = ($21|0)<(1);\n   if ($22) {\n    $$0$lcssa = $0;$$045$lcssa = 1;$$046$lcssa = $4;$$047$lcssa = $5;\n    label = 9;\n   } else {\n    $phitmp = ($5|0)==(0);\n    $$0455780 = 1;$$0465681 = $4;$$0475582 = $phitmp;$$05879 = $0;$28 = $20;\n    while(1) {\n     $23 = ($$0465681|0)>(1);\n     $or$cond = $$0475582 & $23;\n     if ($or$cond) {\n      $24 = (($$05879) + ($16)|0);\n      $25 = (($$0465681) + -2)|0;\n      $26 = (($6) + ($25<<2)|0);\n      $27 = HEAP32[$26>>2]|0;\n      $29 = (FUNCTION_TABLE_iii[$2 & 63]($24,$28)|0);\n      $30 = ($29|0)>(-1);\n      if ($30) {\n       $$04551 = $$0455780;$$04653 = $$0465681;$$049 = $$05879;\n       label = 10;\n       break L1;\n      }\n      $31 = (0 - ($27))|0;\n      $32 = (($24) + ($31)|0);\n      $33 = (FUNCTION_TABLE_iii[$2 & 63]($32,$28)|0);\n      $34 = ($33|0)>(-1);\n      if ($34) {\n       $$04551 = $$0455780;$$04653 = $$0465681;$$049 = $$05879;\n       label = 10;\n       break L1;\n      }\n     }\n     $35 = (($$0455780) + 1)|0;\n     $36 = (($8) + ($$0455780<<2)|0);\n     HEAP32[$36>>2] = $28;\n     $37 = (_pntz($7)|0);\n     _shr($7,$37);\n     $38 = (($37) + ($$0465681))|0;\n     $39 = HEAP32[$7>>2]|0;\n     $40 = ($39|0)!=(1);\n     $41 = HEAP32[$12>>2]|0;\n     $42 = ($41|0)!=(0);\n     $43 = $40 | $42;\n     if (!($43)) {\n      $$04551 = $35;$$04653 = $38;$$049 = $28;\n      label = 10;\n      break L1;\n     }\n     $$pre = HEAP32[$8>>2]|0;\n     $44 = (($6) + ($38<<2)|0);\n     $45 = HEAP32[$44>>2]|0;\n     $46 = (0 - ($45))|0;\n     $47 = (($28) + ($46)|0);\n     $48 = (FUNCTION_TABLE_iii[$2 & 63]($47,$$pre)|0);\n     $49 = ($48|0)<(1);\n     if ($49) {\n      $$0$lcssa = $28;$$045$lcssa = $35;$$046$lcssa = $38;$$047$lcssa = 0;\n      label = 9;\n      break;\n     } else {\n      $$05879$phi = $28;$$0455780 = $35;$$0465681 = $38;$$0475582 = 1;$28 = $47;$$05879 = $$05879$phi;\n     }\n    }\n   }\n  } else {\n   $$0$lcssa = $0;$$045$lcssa = 1;$$046$lcssa = $4;$$047$lcssa = $5;\n   label = 9;\n  }\n } while(0);\n if ((label|0) == 9) {\n  $50 = ($$047$lcssa|0)==(0);\n  if ($50) {\n   $$04551 = $$045$lcssa;$$04653 = $$046$lcssa;$$049 = $$0$lcssa;\n   label = 10;\n  }\n }\n if ((label|0) == 10) {\n  _cycle($1,$8,$$04551);\n  _sift($$049,$1,$2,$$04653,$6);\n }\n STACKTOP = sp;return;\n}\nfunction _shl($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$pre = 0, $$pre11 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($1>>>0)>(31);\n $3 = ((($0)) + 4|0);\n if ($2) {\n  $4 = (($1) + -32)|0;\n  $5 = HEAP32[$0>>2]|0;\n  HEAP32[$3>>2] = $5;\n  HEAP32[$0>>2] = 0;\n  $$0 = $4;$10 = 0;$7 = $5;\n } else {\n  $$pre = HEAP32[$3>>2]|0;\n  $$pre11 = HEAP32[$0>>2]|0;\n  $$0 = $1;$10 = $$pre11;$7 = $$pre;\n }\n $6 = $7 << $$0;\n $8 = (32 - ($$0))|0;\n $9 = $10 >>> $8;\n $11 = $9 | $6;\n HEAP32[$3>>2] = $11;\n $12 = $10 << $$0;\n HEAP32[$0>>2] = $12;\n return;\n}\nfunction _pntz($0) {\n $0 = $0|0;\n var $$ = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = HEAP32[$0>>2]|0;\n $2 = (($1) + -1)|0;\n $3 = (_a_ctz_l($2)|0);\n $4 = ($3|0)==(0);\n if ($4) {\n  $5 = ((($0)) + 4|0);\n  $6 = HEAP32[$5>>2]|0;\n  $7 = (_a_ctz_l($6)|0);\n  $8 = (($7) + 32)|0;\n  $9 = ($7|0)==(0);\n  $$ = $9 ? 0 : $8;\n  return ($$|0);\n } else {\n  return ($3|0);\n }\n return (0)|0;\n}\nfunction _a_ctz_l($0) {\n $0 = $0|0;\n var $$068 = 0, $$07 = 0, $$09 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0);\n if ($1) {\n  $$07 = 32;\n } else {\n  $2 = $0 & 1;\n  $3 = ($2|0)==(0);\n  if ($3) {\n   $$068 = $0;$$09 = 0;\n   while(1) {\n    $4 = (($$09) + 1)|0;\n    $5 = $$068 >>> 1;\n    $6 = $5 & 1;\n    $7 = ($6|0)==(0);\n    if ($7) {\n     $$068 = $5;$$09 = $4;\n    } else {\n     $$07 = $4;\n     break;\n    }\n   }\n  } else {\n   $$07 = 0;\n  }\n }\n return ($$07|0);\n}\nfunction _cycle($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$02527 = 0, $$026 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);\n $3 = sp;\n $4 = ($2|0)<(2);\n L1: do {\n  if (!($4)) {\n   $5 = (($1) + ($2<<2)|0);\n   HEAP32[$5>>2] = $3;\n   $6 = ($0|0)==(0);\n   if (!($6)) {\n    $$02527 = $0;$10 = $3;\n    while(1) {\n     $7 = ($$02527>>>0)<(256);\n     $8 = $7 ? $$02527 : 256;\n     $9 = HEAP32[$1>>2]|0;\n     _memcpy(($10|0),($9|0),($8|0))|0;\n     $$026 = 0;\n     while(1) {\n      $11 = (($1) + ($$026<<2)|0);\n      $12 = HEAP32[$11>>2]|0;\n      $13 = (($$026) + 1)|0;\n      $14 = (($1) + ($13<<2)|0);\n      $15 = HEAP32[$14>>2]|0;\n      _memcpy(($12|0),($15|0),($8|0))|0;\n      $16 = HEAP32[$11>>2]|0;\n      $17 = (($16) + ($8)|0);\n      HEAP32[$11>>2] = $17;\n      $exitcond = ($13|0)==($2|0);\n      if ($exitcond) {\n       break;\n      } else {\n       $$026 = $13;\n      }\n     }\n     $18 = (($$02527) - ($8))|0;\n     $19 = ($18|0)==(0);\n     if ($19) {\n      break L1;\n     }\n     $$pre = HEAP32[$5>>2]|0;\n     $$02527 = $18;$10 = $$pre;\n    }\n   }\n  }\n } while(0);\n STACKTOP = sp;return;\n}\nfunction _strcat($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_strlen($0)|0);\n $3 = (($0) + ($2)|0);\n (_strcpy($3,$1)|0);\n return ($0|0);\n}\nfunction _ldexp($0,$1) {\n $0 = +$0;\n $1 = $1|0;\n var $2 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (+_scalbn($0,$1));\n return (+$2);\n}\nfunction _rint($0) {\n $0 = +$0;\n var $$015 = 0.0, $$sink16 = 0.0, $$sink17 = 0.0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;\n $2 = HEAP32[tempDoublePtr+4>>2]|0;\n $3 = $2 & 2146435072;\n $4 = ($3>>>0)>(1126170624);\n $5 = (0)>(0);\n $6 = ($3|0)==(1126170624);\n $7 = $6 & $5;\n $8 = $4 | $7;\n if ($8) {\n  $$015 = $0;\n } else {\n  $9 = ($2|0)<(0);\n  $$sink17 = $9 ? -4503599627370496.0 : 4503599627370496.0;\n  $$sink16 = $9 ? 4503599627370496.0 : -4503599627370496.0;\n  $10 = $$sink17 + $0;\n  $11 = $$sink16 + $10;\n  $12 = $11 == 0.0;\n  if ($12) {\n   $13 = $9 ? -0.0 : 0.0;\n   $$015 = $13;\n  } else {\n   $$015 = $11;\n  }\n }\n return (+$$015);\n}\nfunction _rintf($0) {\n $0 = +$0;\n var $$015 = 0.0, $$sink16 = 0.0, $$sink17 = 0.0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0, $8 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);\n $2 = $1 & 2130706432;\n $3 = ($2>>>0)>(1249902592);\n if ($3) {\n  $$015 = $0;\n } else {\n  $4 = ($1|0)<(0);\n  $$sink17 = $4 ? -8388608.0 : 8388608.0;\n  $$sink16 = $4 ? 8388608.0 : -8388608.0;\n  $5 = $$sink17 + $0;\n  $6 = $$sink16 + $5;\n  $7 = $6 == 0.0;\n  if ($7) {\n   $8 = $4 ? -0.0 : 0.0;\n   $$015 = $8;\n  } else {\n   $$015 = $6;\n  }\n }\n return (+$$015);\n}\nfunction ___ofl_lock() {\n var label = 0, sp = 0;\n sp = STACKTOP;\n ___lock((546356|0));\n return (546364|0);\n}\nfunction ___ofl_unlock() {\n var label = 0, sp = 0;\n sp = STACKTOP;\n ___unlock((546356|0));\n return;\n}\nfunction _fflush($0) {\n $0 = $0|0;\n var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n do {\n  if ($1) {\n   $8 = HEAP32[56229]|0;\n   $9 = ($8|0)==(0|0);\n   if ($9) {\n    $29 = 0;\n   } else {\n    $10 = HEAP32[56229]|0;\n    $11 = (_fflush($10)|0);\n    $29 = $11;\n   }\n   $12 = (___ofl_lock()|0);\n   $$02325 = HEAP32[$12>>2]|0;\n   $13 = ($$02325|0)==(0|0);\n   if ($13) {\n    $$024$lcssa = $29;\n   } else {\n    $$02327 = $$02325;$$02426 = $29;\n    while(1) {\n     $14 = ((($$02327)) + 76|0);\n     $15 = HEAP32[$14>>2]|0;\n     $16 = ($15|0)>(-1);\n     if ($16) {\n      $17 = (___lockfile($$02327)|0);\n      $25 = $17;\n     } else {\n      $25 = 0;\n     }\n     $18 = ((($$02327)) + 20|0);\n     $19 = HEAP32[$18>>2]|0;\n     $20 = ((($$02327)) + 28|0);\n     $21 = HEAP32[$20>>2]|0;\n     $22 = ($19>>>0)>($21>>>0);\n     if ($22) {\n      $23 = (___fflush_unlocked($$02327)|0);\n      $24 = $23 | $$02426;\n      $$1 = $24;\n     } else {\n      $$1 = $$02426;\n     }\n     $26 = ($25|0)==(0);\n     if (!($26)) {\n      ___unlockfile($$02327);\n     }\n     $27 = ((($$02327)) + 56|0);\n     $$023 = HEAP32[$27>>2]|0;\n     $28 = ($$023|0)==(0|0);\n     if ($28) {\n      $$024$lcssa = $$1;\n      break;\n     } else {\n      $$02327 = $$023;$$02426 = $$1;\n     }\n    }\n   }\n   ___ofl_unlock();\n   $$0 = $$024$lcssa;\n  } else {\n   $2 = ((($0)) + 76|0);\n   $3 = HEAP32[$2>>2]|0;\n   $4 = ($3|0)>(-1);\n   if (!($4)) {\n    $5 = (___fflush_unlocked($0)|0);\n    $$0 = $5;\n    break;\n   }\n   $6 = (___lockfile($0)|0);\n   $phitmp = ($6|0)==(0);\n   $7 = (___fflush_unlocked($0)|0);\n   if ($phitmp) {\n    $$0 = $7;\n   } else {\n    ___unlockfile($0);\n    $$0 = $7;\n   }\n  }\n } while(0);\n return ($$0|0);\n}\nfunction ___fflush_unlocked($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 20|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($2>>>0)>($4>>>0);\n if ($5) {\n  $6 = ((($0)) + 36|0);\n  $7 = HEAP32[$6>>2]|0;\n  (FUNCTION_TABLE_iiii[$7 & 63]($0,0,0)|0);\n  $8 = HEAP32[$1>>2]|0;\n  $9 = ($8|0)==(0|0);\n  if ($9) {\n   $$0 = -1;\n  } else {\n   label = 3;\n  }\n } else {\n  label = 3;\n }\n if ((label|0) == 3) {\n  $10 = ((($0)) + 4|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = ((($0)) + 8|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = ($11>>>0)<($13>>>0);\n  if ($14) {\n   $15 = $11;\n   $16 = $13;\n   $17 = (($15) - ($16))|0;\n   $18 = ((($0)) + 40|0);\n   $19 = HEAP32[$18>>2]|0;\n   (FUNCTION_TABLE_iiii[$19 & 63]($0,$17,1)|0);\n  }\n  $20 = ((($0)) + 16|0);\n  HEAP32[$20>>2] = 0;\n  HEAP32[$3>>2] = 0;\n  HEAP32[$1>>2] = 0;\n  HEAP32[$12>>2] = 0;\n  HEAP32[$10>>2] = 0;\n  $$0 = 0;\n }\n return ($$0|0);\n}\nfunction _malloc($0) {\n $0 = $0|0;\n var $$$0192$i = 0, $$$0193$i = 0, $$$4236$i = 0, $$$4351$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0189$i = 0, $$0192$lcssa$i = 0, $$01928$i = 0, $$0193$lcssa$i = 0, $$01937$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0;\n var $$0212$i$i = 0, $$024371$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0289$i$i = 0, $$0295$i$i = 0, $$0296$i$i = 0, $$0342$i = 0, $$0344$i = 0, $$0345$i = 0, $$0347$i = 0, $$0353$i = 0, $$0358$i = 0, $$0359$$i = 0, $$0359$i = 0, $$0361$i = 0, $$0362$i = 0, $$0368$i = 0, $$1196$i = 0, $$1198$i = 0;\n var $$124470$i = 0, $$1291$i$i = 0, $$1293$i$i = 0, $$1343$i = 0, $$1348$i = 0, $$1363$i = 0, $$1370$i = 0, $$1374$i = 0, $$2234253237$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2355$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3350$i = 0, $$3372$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$415$i = 0;\n var $$4236$i = 0, $$4351$lcssa$i = 0, $$435114$i = 0, $$4357$$4$i = 0, $$4357$ph$i = 0, $$435713$i = 0, $$723948$i = 0, $$749$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i19$i = 0, $$pre$i210 = 0, $$pre$i212 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i211Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi11$i$iZ2D = 0, $$pre$phiZ2D = 0;\n var $$pre10$i$i = 0, $$sink1$i = 0, $$sink1$i$i = 0, $$sink16$i = 0, $$sink2$i = 0, $$sink2$i204 = 0, $$sink3$i = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0;\n var $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0;\n var $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0;\n var $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;\n var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;\n var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;\n var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;\n var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;\n var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;\n var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;\n var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;\n var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;\n var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;\n var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;\n var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;\n var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;\n var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;\n var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;\n var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;\n var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;\n var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;\n var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;\n var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;\n var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;\n var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;\n var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;\n var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;\n var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;\n var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;\n var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;\n var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;\n var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;\n var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;\n var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;\n var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;\n var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;\n var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;\n var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;\n var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;\n var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;\n var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;\n var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;\n var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;\n var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;\n var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;\n var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;\n var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;\n var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;\n var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;\n var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;\n var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;\n var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;\n var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i208 = 0, $exitcond$i$i = 0, $not$$i = 0, $not$$i$i = 0, $not$$i17$i = 0, $not$$i209 = 0, $not$$i216 = 0, $not$1$i = 0, $not$1$i203 = 0, $not$5$i = 0, $not$7$i$i = 0, $not$8$i = 0, $not$9$i = 0;\n var $or$cond$i = 0, $or$cond$i214 = 0, $or$cond1$i = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond11$not$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond2$i215 = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond7$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp;\n $2 = ($0>>>0)<(245);\n do {\n  if ($2) {\n   $3 = ($0>>>0)<(11);\n   $4 = (($0) + 11)|0;\n   $5 = $4 & -8;\n   $6 = $3 ? 16 : $5;\n   $7 = $6 >>> 3;\n   $8 = HEAP32[136592]|0;\n   $9 = $8 >>> $7;\n   $10 = $9 & 3;\n   $11 = ($10|0)==(0);\n   if (!($11)) {\n    $12 = $9 & 1;\n    $13 = $12 ^ 1;\n    $14 = (($13) + ($7))|0;\n    $15 = $14 << 1;\n    $16 = (546408 + ($15<<2)|0);\n    $17 = ((($16)) + 8|0);\n    $18 = HEAP32[$17>>2]|0;\n    $19 = ((($18)) + 8|0);\n    $20 = HEAP32[$19>>2]|0;\n    $21 = ($16|0)==($20|0);\n    do {\n     if ($21) {\n      $22 = 1 << $14;\n      $23 = $22 ^ -1;\n      $24 = $8 & $23;\n      HEAP32[136592] = $24;\n     } else {\n      $25 = HEAP32[(546384)>>2]|0;\n      $26 = ($20>>>0)<($25>>>0);\n      if ($26) {\n       _abort();\n       // unreachable;\n      }\n      $27 = ((($20)) + 12|0);\n      $28 = HEAP32[$27>>2]|0;\n      $29 = ($28|0)==($18|0);\n      if ($29) {\n       HEAP32[$27>>2] = $16;\n       HEAP32[$17>>2] = $20;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    } while(0);\n    $30 = $14 << 3;\n    $31 = $30 | 3;\n    $32 = ((($18)) + 4|0);\n    HEAP32[$32>>2] = $31;\n    $33 = (($18) + ($30)|0);\n    $34 = ((($33)) + 4|0);\n    $35 = HEAP32[$34>>2]|0;\n    $36 = $35 | 1;\n    HEAP32[$34>>2] = $36;\n    $$0 = $19;\n    STACKTOP = sp;return ($$0|0);\n   }\n   $37 = HEAP32[(546376)>>2]|0;\n   $38 = ($6>>>0)>($37>>>0);\n   if ($38) {\n    $39 = ($9|0)==(0);\n    if (!($39)) {\n     $40 = $9 << $7;\n     $41 = 2 << $7;\n     $42 = (0 - ($41))|0;\n     $43 = $41 | $42;\n     $44 = $40 & $43;\n     $45 = (0 - ($44))|0;\n     $46 = $44 & $45;\n     $47 = (($46) + -1)|0;\n     $48 = $47 >>> 12;\n     $49 = $48 & 16;\n     $50 = $47 >>> $49;\n     $51 = $50 >>> 5;\n     $52 = $51 & 8;\n     $53 = $52 | $49;\n     $54 = $50 >>> $52;\n     $55 = $54 >>> 2;\n     $56 = $55 & 4;\n     $57 = $53 | $56;\n     $58 = $54 >>> $56;\n     $59 = $58 >>> 1;\n     $60 = $59 & 2;\n     $61 = $57 | $60;\n     $62 = $58 >>> $60;\n     $63 = $62 >>> 1;\n     $64 = $63 & 1;\n     $65 = $61 | $64;\n     $66 = $62 >>> $64;\n     $67 = (($65) + ($66))|0;\n     $68 = $67 << 1;\n     $69 = (546408 + ($68<<2)|0);\n     $70 = ((($69)) + 8|0);\n     $71 = HEAP32[$70>>2]|0;\n     $72 = ((($71)) + 8|0);\n     $73 = HEAP32[$72>>2]|0;\n     $74 = ($69|0)==($73|0);\n     do {\n      if ($74) {\n       $75 = 1 << $67;\n       $76 = $75 ^ -1;\n       $77 = $8 & $76;\n       HEAP32[136592] = $77;\n       $98 = $77;\n      } else {\n       $78 = HEAP32[(546384)>>2]|0;\n       $79 = ($73>>>0)<($78>>>0);\n       if ($79) {\n        _abort();\n        // unreachable;\n       }\n       $80 = ((($73)) + 12|0);\n       $81 = HEAP32[$80>>2]|0;\n       $82 = ($81|0)==($71|0);\n       if ($82) {\n        HEAP32[$80>>2] = $69;\n        HEAP32[$70>>2] = $73;\n        $98 = $8;\n        break;\n       } else {\n        _abort();\n        // unreachable;\n       }\n      }\n     } while(0);\n     $83 = $67 << 3;\n     $84 = (($83) - ($6))|0;\n     $85 = $6 | 3;\n     $86 = ((($71)) + 4|0);\n     HEAP32[$86>>2] = $85;\n     $87 = (($71) + ($6)|0);\n     $88 = $84 | 1;\n     $89 = ((($87)) + 4|0);\n     HEAP32[$89>>2] = $88;\n     $90 = (($87) + ($84)|0);\n     HEAP32[$90>>2] = $84;\n     $91 = ($37|0)==(0);\n     if (!($91)) {\n      $92 = HEAP32[(546388)>>2]|0;\n      $93 = $37 >>> 3;\n      $94 = $93 << 1;\n      $95 = (546408 + ($94<<2)|0);\n      $96 = 1 << $93;\n      $97 = $98 & $96;\n      $99 = ($97|0)==(0);\n      if ($99) {\n       $100 = $98 | $96;\n       HEAP32[136592] = $100;\n       $$pre = ((($95)) + 8|0);\n       $$0199 = $95;$$pre$phiZ2D = $$pre;\n      } else {\n       $101 = ((($95)) + 8|0);\n       $102 = HEAP32[$101>>2]|0;\n       $103 = HEAP32[(546384)>>2]|0;\n       $104 = ($102>>>0)<($103>>>0);\n       if ($104) {\n        _abort();\n        // unreachable;\n       } else {\n        $$0199 = $102;$$pre$phiZ2D = $101;\n       }\n      }\n      HEAP32[$$pre$phiZ2D>>2] = $92;\n      $105 = ((($$0199)) + 12|0);\n      HEAP32[$105>>2] = $92;\n      $106 = ((($92)) + 8|0);\n      HEAP32[$106>>2] = $$0199;\n      $107 = ((($92)) + 12|0);\n      HEAP32[$107>>2] = $95;\n     }\n     HEAP32[(546376)>>2] = $84;\n     HEAP32[(546388)>>2] = $87;\n     $$0 = $72;\n     STACKTOP = sp;return ($$0|0);\n    }\n    $108 = HEAP32[(546372)>>2]|0;\n    $109 = ($108|0)==(0);\n    if ($109) {\n     $$0197 = $6;\n    } else {\n     $110 = (0 - ($108))|0;\n     $111 = $108 & $110;\n     $112 = (($111) + -1)|0;\n     $113 = $112 >>> 12;\n     $114 = $113 & 16;\n     $115 = $112 >>> $114;\n     $116 = $115 >>> 5;\n     $117 = $116 & 8;\n     $118 = $117 | $114;\n     $119 = $115 >>> $117;\n     $120 = $119 >>> 2;\n     $121 = $120 & 4;\n     $122 = $118 | $121;\n     $123 = $119 >>> $121;\n     $124 = $123 >>> 1;\n     $125 = $124 & 2;\n     $126 = $122 | $125;\n     $127 = $123 >>> $125;\n     $128 = $127 >>> 1;\n     $129 = $128 & 1;\n     $130 = $126 | $129;\n     $131 = $127 >>> $129;\n     $132 = (($130) + ($131))|0;\n     $133 = (546672 + ($132<<2)|0);\n     $134 = HEAP32[$133>>2]|0;\n     $135 = ((($134)) + 4|0);\n     $136 = HEAP32[$135>>2]|0;\n     $137 = $136 & -8;\n     $138 = (($137) - ($6))|0;\n     $139 = ((($134)) + 16|0);\n     $140 = HEAP32[$139>>2]|0;\n     $not$5$i = ($140|0)==(0|0);\n     $$sink16$i = $not$5$i&1;\n     $141 = (((($134)) + 16|0) + ($$sink16$i<<2)|0);\n     $142 = HEAP32[$141>>2]|0;\n     $143 = ($142|0)==(0|0);\n     if ($143) {\n      $$0192$lcssa$i = $134;$$0193$lcssa$i = $138;\n     } else {\n      $$01928$i = $134;$$01937$i = $138;$145 = $142;\n      while(1) {\n       $144 = ((($145)) + 4|0);\n       $146 = HEAP32[$144>>2]|0;\n       $147 = $146 & -8;\n       $148 = (($147) - ($6))|0;\n       $149 = ($148>>>0)<($$01937$i>>>0);\n       $$$0193$i = $149 ? $148 : $$01937$i;\n       $$$0192$i = $149 ? $145 : $$01928$i;\n       $150 = ((($145)) + 16|0);\n       $151 = HEAP32[$150>>2]|0;\n       $not$$i = ($151|0)==(0|0);\n       $$sink1$i = $not$$i&1;\n       $152 = (((($145)) + 16|0) + ($$sink1$i<<2)|0);\n       $153 = HEAP32[$152>>2]|0;\n       $154 = ($153|0)==(0|0);\n       if ($154) {\n        $$0192$lcssa$i = $$$0192$i;$$0193$lcssa$i = $$$0193$i;\n        break;\n       } else {\n        $$01928$i = $$$0192$i;$$01937$i = $$$0193$i;$145 = $153;\n       }\n      }\n     }\n     $155 = HEAP32[(546384)>>2]|0;\n     $156 = ($$0192$lcssa$i>>>0)<($155>>>0);\n     if ($156) {\n      _abort();\n      // unreachable;\n     }\n     $157 = (($$0192$lcssa$i) + ($6)|0);\n     $158 = ($$0192$lcssa$i>>>0)<($157>>>0);\n     if (!($158)) {\n      _abort();\n      // unreachable;\n     }\n     $159 = ((($$0192$lcssa$i)) + 24|0);\n     $160 = HEAP32[$159>>2]|0;\n     $161 = ((($$0192$lcssa$i)) + 12|0);\n     $162 = HEAP32[$161>>2]|0;\n     $163 = ($162|0)==($$0192$lcssa$i|0);\n     do {\n      if ($163) {\n       $173 = ((($$0192$lcssa$i)) + 20|0);\n       $174 = HEAP32[$173>>2]|0;\n       $175 = ($174|0)==(0|0);\n       if ($175) {\n        $176 = ((($$0192$lcssa$i)) + 16|0);\n        $177 = HEAP32[$176>>2]|0;\n        $178 = ($177|0)==(0|0);\n        if ($178) {\n         $$3$i = 0;\n         break;\n        } else {\n         $$1196$i = $177;$$1198$i = $176;\n        }\n       } else {\n        $$1196$i = $174;$$1198$i = $173;\n       }\n       while(1) {\n        $179 = ((($$1196$i)) + 20|0);\n        $180 = HEAP32[$179>>2]|0;\n        $181 = ($180|0)==(0|0);\n        if (!($181)) {\n         $$1196$i = $180;$$1198$i = $179;\n         continue;\n        }\n        $182 = ((($$1196$i)) + 16|0);\n        $183 = HEAP32[$182>>2]|0;\n        $184 = ($183|0)==(0|0);\n        if ($184) {\n         break;\n        } else {\n         $$1196$i = $183;$$1198$i = $182;\n        }\n       }\n       $185 = ($$1198$i>>>0)<($155>>>0);\n       if ($185) {\n        _abort();\n        // unreachable;\n       } else {\n        HEAP32[$$1198$i>>2] = 0;\n        $$3$i = $$1196$i;\n        break;\n       }\n      } else {\n       $164 = ((($$0192$lcssa$i)) + 8|0);\n       $165 = HEAP32[$164>>2]|0;\n       $166 = ($165>>>0)<($155>>>0);\n       if ($166) {\n        _abort();\n        // unreachable;\n       }\n       $167 = ((($165)) + 12|0);\n       $168 = HEAP32[$167>>2]|0;\n       $169 = ($168|0)==($$0192$lcssa$i|0);\n       if (!($169)) {\n        _abort();\n        // unreachable;\n       }\n       $170 = ((($162)) + 8|0);\n       $171 = HEAP32[$170>>2]|0;\n       $172 = ($171|0)==($$0192$lcssa$i|0);\n       if ($172) {\n        HEAP32[$167>>2] = $162;\n        HEAP32[$170>>2] = $165;\n        $$3$i = $162;\n        break;\n       } else {\n        _abort();\n        // unreachable;\n       }\n      }\n     } while(0);\n     $186 = ($160|0)==(0|0);\n     L73: do {\n      if (!($186)) {\n       $187 = ((($$0192$lcssa$i)) + 28|0);\n       $188 = HEAP32[$187>>2]|0;\n       $189 = (546672 + ($188<<2)|0);\n       $190 = HEAP32[$189>>2]|0;\n       $191 = ($$0192$lcssa$i|0)==($190|0);\n       do {\n        if ($191) {\n         HEAP32[$189>>2] = $$3$i;\n         $cond$i = ($$3$i|0)==(0|0);\n         if ($cond$i) {\n          $192 = 1 << $188;\n          $193 = $192 ^ -1;\n          $194 = $108 & $193;\n          HEAP32[(546372)>>2] = $194;\n          break L73;\n         }\n        } else {\n         $195 = HEAP32[(546384)>>2]|0;\n         $196 = ($160>>>0)<($195>>>0);\n         if ($196) {\n          _abort();\n          // unreachable;\n         } else {\n          $197 = ((($160)) + 16|0);\n          $198 = HEAP32[$197>>2]|0;\n          $not$1$i = ($198|0)!=($$0192$lcssa$i|0);\n          $$sink2$i = $not$1$i&1;\n          $199 = (((($160)) + 16|0) + ($$sink2$i<<2)|0);\n          HEAP32[$199>>2] = $$3$i;\n          $200 = ($$3$i|0)==(0|0);\n          if ($200) {\n           break L73;\n          } else {\n           break;\n          }\n         }\n        }\n       } while(0);\n       $201 = HEAP32[(546384)>>2]|0;\n       $202 = ($$3$i>>>0)<($201>>>0);\n       if ($202) {\n        _abort();\n        // unreachable;\n       }\n       $203 = ((($$3$i)) + 24|0);\n       HEAP32[$203>>2] = $160;\n       $204 = ((($$0192$lcssa$i)) + 16|0);\n       $205 = HEAP32[$204>>2]|0;\n       $206 = ($205|0)==(0|0);\n       do {\n        if (!($206)) {\n         $207 = ($205>>>0)<($201>>>0);\n         if ($207) {\n          _abort();\n          // unreachable;\n         } else {\n          $208 = ((($$3$i)) + 16|0);\n          HEAP32[$208>>2] = $205;\n          $209 = ((($205)) + 24|0);\n          HEAP32[$209>>2] = $$3$i;\n          break;\n         }\n        }\n       } while(0);\n       $210 = ((($$0192$lcssa$i)) + 20|0);\n       $211 = HEAP32[$210>>2]|0;\n       $212 = ($211|0)==(0|0);\n       if (!($212)) {\n        $213 = HEAP32[(546384)>>2]|0;\n        $214 = ($211>>>0)<($213>>>0);\n        if ($214) {\n         _abort();\n         // unreachable;\n        } else {\n         $215 = ((($$3$i)) + 20|0);\n         HEAP32[$215>>2] = $211;\n         $216 = ((($211)) + 24|0);\n         HEAP32[$216>>2] = $$3$i;\n         break;\n        }\n       }\n      }\n     } while(0);\n     $217 = ($$0193$lcssa$i>>>0)<(16);\n     if ($217) {\n      $218 = (($$0193$lcssa$i) + ($6))|0;\n      $219 = $218 | 3;\n      $220 = ((($$0192$lcssa$i)) + 4|0);\n      HEAP32[$220>>2] = $219;\n      $221 = (($$0192$lcssa$i) + ($218)|0);\n      $222 = ((($221)) + 4|0);\n      $223 = HEAP32[$222>>2]|0;\n      $224 = $223 | 1;\n      HEAP32[$222>>2] = $224;\n     } else {\n      $225 = $6 | 3;\n      $226 = ((($$0192$lcssa$i)) + 4|0);\n      HEAP32[$226>>2] = $225;\n      $227 = $$0193$lcssa$i | 1;\n      $228 = ((($157)) + 4|0);\n      HEAP32[$228>>2] = $227;\n      $229 = (($157) + ($$0193$lcssa$i)|0);\n      HEAP32[$229>>2] = $$0193$lcssa$i;\n      $230 = ($37|0)==(0);\n      if (!($230)) {\n       $231 = HEAP32[(546388)>>2]|0;\n       $232 = $37 >>> 3;\n       $233 = $232 << 1;\n       $234 = (546408 + ($233<<2)|0);\n       $235 = 1 << $232;\n       $236 = $8 & $235;\n       $237 = ($236|0)==(0);\n       if ($237) {\n        $238 = $8 | $235;\n        HEAP32[136592] = $238;\n        $$pre$i = ((($234)) + 8|0);\n        $$0189$i = $234;$$pre$phi$iZ2D = $$pre$i;\n       } else {\n        $239 = ((($234)) + 8|0);\n        $240 = HEAP32[$239>>2]|0;\n        $241 = HEAP32[(546384)>>2]|0;\n        $242 = ($240>>>0)<($241>>>0);\n        if ($242) {\n         _abort();\n         // unreachable;\n        } else {\n         $$0189$i = $240;$$pre$phi$iZ2D = $239;\n        }\n       }\n       HEAP32[$$pre$phi$iZ2D>>2] = $231;\n       $243 = ((($$0189$i)) + 12|0);\n       HEAP32[$243>>2] = $231;\n       $244 = ((($231)) + 8|0);\n       HEAP32[$244>>2] = $$0189$i;\n       $245 = ((($231)) + 12|0);\n       HEAP32[$245>>2] = $234;\n      }\n      HEAP32[(546376)>>2] = $$0193$lcssa$i;\n      HEAP32[(546388)>>2] = $157;\n     }\n     $246 = ((($$0192$lcssa$i)) + 8|0);\n     $$0 = $246;\n     STACKTOP = sp;return ($$0|0);\n    }\n   } else {\n    $$0197 = $6;\n   }\n  } else {\n   $247 = ($0>>>0)>(4294967231);\n   if ($247) {\n    $$0197 = -1;\n   } else {\n    $248 = (($0) + 11)|0;\n    $249 = $248 & -8;\n    $250 = HEAP32[(546372)>>2]|0;\n    $251 = ($250|0)==(0);\n    if ($251) {\n     $$0197 = $249;\n    } else {\n     $252 = (0 - ($249))|0;\n     $253 = $248 >>> 8;\n     $254 = ($253|0)==(0);\n     if ($254) {\n      $$0358$i = 0;\n     } else {\n      $255 = ($249>>>0)>(16777215);\n      if ($255) {\n       $$0358$i = 31;\n      } else {\n       $256 = (($253) + 1048320)|0;\n       $257 = $256 >>> 16;\n       $258 = $257 & 8;\n       $259 = $253 << $258;\n       $260 = (($259) + 520192)|0;\n       $261 = $260 >>> 16;\n       $262 = $261 & 4;\n       $263 = $262 | $258;\n       $264 = $259 << $262;\n       $265 = (($264) + 245760)|0;\n       $266 = $265 >>> 16;\n       $267 = $266 & 2;\n       $268 = $263 | $267;\n       $269 = (14 - ($268))|0;\n       $270 = $264 << $267;\n       $271 = $270 >>> 15;\n       $272 = (($269) + ($271))|0;\n       $273 = $272 << 1;\n       $274 = (($272) + 7)|0;\n       $275 = $249 >>> $274;\n       $276 = $275 & 1;\n       $277 = $276 | $273;\n       $$0358$i = $277;\n      }\n     }\n     $278 = (546672 + ($$0358$i<<2)|0);\n     $279 = HEAP32[$278>>2]|0;\n     $280 = ($279|0)==(0|0);\n     L117: do {\n      if ($280) {\n       $$2355$i = 0;$$3$i201 = 0;$$3350$i = $252;\n       label = 81;\n      } else {\n       $281 = ($$0358$i|0)==(31);\n       $282 = $$0358$i >>> 1;\n       $283 = (25 - ($282))|0;\n       $284 = $281 ? 0 : $283;\n       $285 = $249 << $284;\n       $$0342$i = 0;$$0347$i = $252;$$0353$i = $279;$$0359$i = $285;$$0362$i = 0;\n       while(1) {\n        $286 = ((($$0353$i)) + 4|0);\n        $287 = HEAP32[$286>>2]|0;\n        $288 = $287 & -8;\n        $289 = (($288) - ($249))|0;\n        $290 = ($289>>>0)<($$0347$i>>>0);\n        if ($290) {\n         $291 = ($289|0)==(0);\n         if ($291) {\n          $$415$i = $$0353$i;$$435114$i = 0;$$435713$i = $$0353$i;\n          label = 85;\n          break L117;\n         } else {\n          $$1343$i = $$0353$i;$$1348$i = $289;\n         }\n        } else {\n         $$1343$i = $$0342$i;$$1348$i = $$0347$i;\n        }\n        $292 = ((($$0353$i)) + 20|0);\n        $293 = HEAP32[$292>>2]|0;\n        $294 = $$0359$i >>> 31;\n        $295 = (((($$0353$i)) + 16|0) + ($294<<2)|0);\n        $296 = HEAP32[$295>>2]|0;\n        $297 = ($293|0)==(0|0);\n        $298 = ($293|0)==($296|0);\n        $or$cond2$i = $297 | $298;\n        $$1363$i = $or$cond2$i ? $$0362$i : $293;\n        $299 = ($296|0)==(0|0);\n        $not$8$i = $299 ^ 1;\n        $300 = $not$8$i&1;\n        $$0359$$i = $$0359$i << $300;\n        if ($299) {\n         $$2355$i = $$1363$i;$$3$i201 = $$1343$i;$$3350$i = $$1348$i;\n         label = 81;\n         break;\n        } else {\n         $$0342$i = $$1343$i;$$0347$i = $$1348$i;$$0353$i = $296;$$0359$i = $$0359$$i;$$0362$i = $$1363$i;\n        }\n       }\n      }\n     } while(0);\n     if ((label|0) == 81) {\n      $301 = ($$2355$i|0)==(0|0);\n      $302 = ($$3$i201|0)==(0|0);\n      $or$cond$i = $301 & $302;\n      if ($or$cond$i) {\n       $303 = 2 << $$0358$i;\n       $304 = (0 - ($303))|0;\n       $305 = $303 | $304;\n       $306 = $250 & $305;\n       $307 = ($306|0)==(0);\n       if ($307) {\n        $$0197 = $249;\n        break;\n       }\n       $308 = (0 - ($306))|0;\n       $309 = $306 & $308;\n       $310 = (($309) + -1)|0;\n       $311 = $310 >>> 12;\n       $312 = $311 & 16;\n       $313 = $310 >>> $312;\n       $314 = $313 >>> 5;\n       $315 = $314 & 8;\n       $316 = $315 | $312;\n       $317 = $313 >>> $315;\n       $318 = $317 >>> 2;\n       $319 = $318 & 4;\n       $320 = $316 | $319;\n       $321 = $317 >>> $319;\n       $322 = $321 >>> 1;\n       $323 = $322 & 2;\n       $324 = $320 | $323;\n       $325 = $321 >>> $323;\n       $326 = $325 >>> 1;\n       $327 = $326 & 1;\n       $328 = $324 | $327;\n       $329 = $325 >>> $327;\n       $330 = (($328) + ($329))|0;\n       $331 = (546672 + ($330<<2)|0);\n       $332 = HEAP32[$331>>2]|0;\n       $$4$ph$i = 0;$$4357$ph$i = $332;\n      } else {\n       $$4$ph$i = $$3$i201;$$4357$ph$i = $$2355$i;\n      }\n      $333 = ($$4357$ph$i|0)==(0|0);\n      if ($333) {\n       $$4$lcssa$i = $$4$ph$i;$$4351$lcssa$i = $$3350$i;\n      } else {\n       $$415$i = $$4$ph$i;$$435114$i = $$3350$i;$$435713$i = $$4357$ph$i;\n       label = 85;\n      }\n     }\n     if ((label|0) == 85) {\n      while(1) {\n       label = 0;\n       $334 = ((($$435713$i)) + 4|0);\n       $335 = HEAP32[$334>>2]|0;\n       $336 = $335 & -8;\n       $337 = (($336) - ($249))|0;\n       $338 = ($337>>>0)<($$435114$i>>>0);\n       $$$4351$i = $338 ? $337 : $$435114$i;\n       $$4357$$4$i = $338 ? $$435713$i : $$415$i;\n       $339 = ((($$435713$i)) + 16|0);\n       $340 = HEAP32[$339>>2]|0;\n       $not$1$i203 = ($340|0)==(0|0);\n       $$sink2$i204 = $not$1$i203&1;\n       $341 = (((($$435713$i)) + 16|0) + ($$sink2$i204<<2)|0);\n       $342 = HEAP32[$341>>2]|0;\n       $343 = ($342|0)==(0|0);\n       if ($343) {\n        $$4$lcssa$i = $$4357$$4$i;$$4351$lcssa$i = $$$4351$i;\n        break;\n       } else {\n        $$415$i = $$4357$$4$i;$$435114$i = $$$4351$i;$$435713$i = $342;\n        label = 85;\n       }\n      }\n     }\n     $344 = ($$4$lcssa$i|0)==(0|0);\n     if ($344) {\n      $$0197 = $249;\n     } else {\n      $345 = HEAP32[(546376)>>2]|0;\n      $346 = (($345) - ($249))|0;\n      $347 = ($$4351$lcssa$i>>>0)<($346>>>0);\n      if ($347) {\n       $348 = HEAP32[(546384)>>2]|0;\n       $349 = ($$4$lcssa$i>>>0)<($348>>>0);\n       if ($349) {\n        _abort();\n        // unreachable;\n       }\n       $350 = (($$4$lcssa$i) + ($249)|0);\n       $351 = ($$4$lcssa$i>>>0)<($350>>>0);\n       if (!($351)) {\n        _abort();\n        // unreachable;\n       }\n       $352 = ((($$4$lcssa$i)) + 24|0);\n       $353 = HEAP32[$352>>2]|0;\n       $354 = ((($$4$lcssa$i)) + 12|0);\n       $355 = HEAP32[$354>>2]|0;\n       $356 = ($355|0)==($$4$lcssa$i|0);\n       do {\n        if ($356) {\n         $366 = ((($$4$lcssa$i)) + 20|0);\n         $367 = HEAP32[$366>>2]|0;\n         $368 = ($367|0)==(0|0);\n         if ($368) {\n          $369 = ((($$4$lcssa$i)) + 16|0);\n          $370 = HEAP32[$369>>2]|0;\n          $371 = ($370|0)==(0|0);\n          if ($371) {\n           $$3372$i = 0;\n           break;\n          } else {\n           $$1370$i = $370;$$1374$i = $369;\n          }\n         } else {\n          $$1370$i = $367;$$1374$i = $366;\n         }\n         while(1) {\n          $372 = ((($$1370$i)) + 20|0);\n          $373 = HEAP32[$372>>2]|0;\n          $374 = ($373|0)==(0|0);\n          if (!($374)) {\n           $$1370$i = $373;$$1374$i = $372;\n           continue;\n          }\n          $375 = ((($$1370$i)) + 16|0);\n          $376 = HEAP32[$375>>2]|0;\n          $377 = ($376|0)==(0|0);\n          if ($377) {\n           break;\n          } else {\n           $$1370$i = $376;$$1374$i = $375;\n          }\n         }\n         $378 = ($$1374$i>>>0)<($348>>>0);\n         if ($378) {\n          _abort();\n          // unreachable;\n         } else {\n          HEAP32[$$1374$i>>2] = 0;\n          $$3372$i = $$1370$i;\n          break;\n         }\n        } else {\n         $357 = ((($$4$lcssa$i)) + 8|0);\n         $358 = HEAP32[$357>>2]|0;\n         $359 = ($358>>>0)<($348>>>0);\n         if ($359) {\n          _abort();\n          // unreachable;\n         }\n         $360 = ((($358)) + 12|0);\n         $361 = HEAP32[$360>>2]|0;\n         $362 = ($361|0)==($$4$lcssa$i|0);\n         if (!($362)) {\n          _abort();\n          // unreachable;\n         }\n         $363 = ((($355)) + 8|0);\n         $364 = HEAP32[$363>>2]|0;\n         $365 = ($364|0)==($$4$lcssa$i|0);\n         if ($365) {\n          HEAP32[$360>>2] = $355;\n          HEAP32[$363>>2] = $358;\n          $$3372$i = $355;\n          break;\n         } else {\n          _abort();\n          // unreachable;\n         }\n        }\n       } while(0);\n       $379 = ($353|0)==(0|0);\n       L164: do {\n        if ($379) {\n         $470 = $250;\n        } else {\n         $380 = ((($$4$lcssa$i)) + 28|0);\n         $381 = HEAP32[$380>>2]|0;\n         $382 = (546672 + ($381<<2)|0);\n         $383 = HEAP32[$382>>2]|0;\n         $384 = ($$4$lcssa$i|0)==($383|0);\n         do {\n          if ($384) {\n           HEAP32[$382>>2] = $$3372$i;\n           $cond$i208 = ($$3372$i|0)==(0|0);\n           if ($cond$i208) {\n            $385 = 1 << $381;\n            $386 = $385 ^ -1;\n            $387 = $250 & $386;\n            HEAP32[(546372)>>2] = $387;\n            $470 = $387;\n            break L164;\n           }\n          } else {\n           $388 = HEAP32[(546384)>>2]|0;\n           $389 = ($353>>>0)<($388>>>0);\n           if ($389) {\n            _abort();\n            // unreachable;\n           } else {\n            $390 = ((($353)) + 16|0);\n            $391 = HEAP32[$390>>2]|0;\n            $not$$i209 = ($391|0)!=($$4$lcssa$i|0);\n            $$sink3$i = $not$$i209&1;\n            $392 = (((($353)) + 16|0) + ($$sink3$i<<2)|0);\n            HEAP32[$392>>2] = $$3372$i;\n            $393 = ($$3372$i|0)==(0|0);\n            if ($393) {\n             $470 = $250;\n             break L164;\n            } else {\n             break;\n            }\n           }\n          }\n         } while(0);\n         $394 = HEAP32[(546384)>>2]|0;\n         $395 = ($$3372$i>>>0)<($394>>>0);\n         if ($395) {\n          _abort();\n          // unreachable;\n         }\n         $396 = ((($$3372$i)) + 24|0);\n         HEAP32[$396>>2] = $353;\n         $397 = ((($$4$lcssa$i)) + 16|0);\n         $398 = HEAP32[$397>>2]|0;\n         $399 = ($398|0)==(0|0);\n         do {\n          if (!($399)) {\n           $400 = ($398>>>0)<($394>>>0);\n           if ($400) {\n            _abort();\n            // unreachable;\n           } else {\n            $401 = ((($$3372$i)) + 16|0);\n            HEAP32[$401>>2] = $398;\n            $402 = ((($398)) + 24|0);\n            HEAP32[$402>>2] = $$3372$i;\n            break;\n           }\n          }\n         } while(0);\n         $403 = ((($$4$lcssa$i)) + 20|0);\n         $404 = HEAP32[$403>>2]|0;\n         $405 = ($404|0)==(0|0);\n         if ($405) {\n          $470 = $250;\n         } else {\n          $406 = HEAP32[(546384)>>2]|0;\n          $407 = ($404>>>0)<($406>>>0);\n          if ($407) {\n           _abort();\n           // unreachable;\n          } else {\n           $408 = ((($$3372$i)) + 20|0);\n           HEAP32[$408>>2] = $404;\n           $409 = ((($404)) + 24|0);\n           HEAP32[$409>>2] = $$3372$i;\n           $470 = $250;\n           break;\n          }\n         }\n        }\n       } while(0);\n       $410 = ($$4351$lcssa$i>>>0)<(16);\n       do {\n        if ($410) {\n         $411 = (($$4351$lcssa$i) + ($249))|0;\n         $412 = $411 | 3;\n         $413 = ((($$4$lcssa$i)) + 4|0);\n         HEAP32[$413>>2] = $412;\n         $414 = (($$4$lcssa$i) + ($411)|0);\n         $415 = ((($414)) + 4|0);\n         $416 = HEAP32[$415>>2]|0;\n         $417 = $416 | 1;\n         HEAP32[$415>>2] = $417;\n        } else {\n         $418 = $249 | 3;\n         $419 = ((($$4$lcssa$i)) + 4|0);\n         HEAP32[$419>>2] = $418;\n         $420 = $$4351$lcssa$i | 1;\n         $421 = ((($350)) + 4|0);\n         HEAP32[$421>>2] = $420;\n         $422 = (($350) + ($$4351$lcssa$i)|0);\n         HEAP32[$422>>2] = $$4351$lcssa$i;\n         $423 = $$4351$lcssa$i >>> 3;\n         $424 = ($$4351$lcssa$i>>>0)<(256);\n         if ($424) {\n          $425 = $423 << 1;\n          $426 = (546408 + ($425<<2)|0);\n          $427 = HEAP32[136592]|0;\n          $428 = 1 << $423;\n          $429 = $427 & $428;\n          $430 = ($429|0)==(0);\n          if ($430) {\n           $431 = $427 | $428;\n           HEAP32[136592] = $431;\n           $$pre$i210 = ((($426)) + 8|0);\n           $$0368$i = $426;$$pre$phi$i211Z2D = $$pre$i210;\n          } else {\n           $432 = ((($426)) + 8|0);\n           $433 = HEAP32[$432>>2]|0;\n           $434 = HEAP32[(546384)>>2]|0;\n           $435 = ($433>>>0)<($434>>>0);\n           if ($435) {\n            _abort();\n            // unreachable;\n           } else {\n            $$0368$i = $433;$$pre$phi$i211Z2D = $432;\n           }\n          }\n          HEAP32[$$pre$phi$i211Z2D>>2] = $350;\n          $436 = ((($$0368$i)) + 12|0);\n          HEAP32[$436>>2] = $350;\n          $437 = ((($350)) + 8|0);\n          HEAP32[$437>>2] = $$0368$i;\n          $438 = ((($350)) + 12|0);\n          HEAP32[$438>>2] = $426;\n          break;\n         }\n         $439 = $$4351$lcssa$i >>> 8;\n         $440 = ($439|0)==(0);\n         if ($440) {\n          $$0361$i = 0;\n         } else {\n          $441 = ($$4351$lcssa$i>>>0)>(16777215);\n          if ($441) {\n           $$0361$i = 31;\n          } else {\n           $442 = (($439) + 1048320)|0;\n           $443 = $442 >>> 16;\n           $444 = $443 & 8;\n           $445 = $439 << $444;\n           $446 = (($445) + 520192)|0;\n           $447 = $446 >>> 16;\n           $448 = $447 & 4;\n           $449 = $448 | $444;\n           $450 = $445 << $448;\n           $451 = (($450) + 245760)|0;\n           $452 = $451 >>> 16;\n           $453 = $452 & 2;\n           $454 = $449 | $453;\n           $455 = (14 - ($454))|0;\n           $456 = $450 << $453;\n           $457 = $456 >>> 15;\n           $458 = (($455) + ($457))|0;\n           $459 = $458 << 1;\n           $460 = (($458) + 7)|0;\n           $461 = $$4351$lcssa$i >>> $460;\n           $462 = $461 & 1;\n           $463 = $462 | $459;\n           $$0361$i = $463;\n          }\n         }\n         $464 = (546672 + ($$0361$i<<2)|0);\n         $465 = ((($350)) + 28|0);\n         HEAP32[$465>>2] = $$0361$i;\n         $466 = ((($350)) + 16|0);\n         $467 = ((($466)) + 4|0);\n         HEAP32[$467>>2] = 0;\n         HEAP32[$466>>2] = 0;\n         $468 = 1 << $$0361$i;\n         $469 = $470 & $468;\n         $471 = ($469|0)==(0);\n         if ($471) {\n          $472 = $470 | $468;\n          HEAP32[(546372)>>2] = $472;\n          HEAP32[$464>>2] = $350;\n          $473 = ((($350)) + 24|0);\n          HEAP32[$473>>2] = $464;\n          $474 = ((($350)) + 12|0);\n          HEAP32[$474>>2] = $350;\n          $475 = ((($350)) + 8|0);\n          HEAP32[$475>>2] = $350;\n          break;\n         }\n         $476 = HEAP32[$464>>2]|0;\n         $477 = ($$0361$i|0)==(31);\n         $478 = $$0361$i >>> 1;\n         $479 = (25 - ($478))|0;\n         $480 = $477 ? 0 : $479;\n         $481 = $$4351$lcssa$i << $480;\n         $$0344$i = $481;$$0345$i = $476;\n         while(1) {\n          $482 = ((($$0345$i)) + 4|0);\n          $483 = HEAP32[$482>>2]|0;\n          $484 = $483 & -8;\n          $485 = ($484|0)==($$4351$lcssa$i|0);\n          if ($485) {\n           label = 139;\n           break;\n          }\n          $486 = $$0344$i >>> 31;\n          $487 = (((($$0345$i)) + 16|0) + ($486<<2)|0);\n          $488 = $$0344$i << 1;\n          $489 = HEAP32[$487>>2]|0;\n          $490 = ($489|0)==(0|0);\n          if ($490) {\n           label = 136;\n           break;\n          } else {\n           $$0344$i = $488;$$0345$i = $489;\n          }\n         }\n         if ((label|0) == 136) {\n          $491 = HEAP32[(546384)>>2]|0;\n          $492 = ($487>>>0)<($491>>>0);\n          if ($492) {\n           _abort();\n           // unreachable;\n          } else {\n           HEAP32[$487>>2] = $350;\n           $493 = ((($350)) + 24|0);\n           HEAP32[$493>>2] = $$0345$i;\n           $494 = ((($350)) + 12|0);\n           HEAP32[$494>>2] = $350;\n           $495 = ((($350)) + 8|0);\n           HEAP32[$495>>2] = $350;\n           break;\n          }\n         }\n         else if ((label|0) == 139) {\n          $496 = ((($$0345$i)) + 8|0);\n          $497 = HEAP32[$496>>2]|0;\n          $498 = HEAP32[(546384)>>2]|0;\n          $499 = ($497>>>0)>=($498>>>0);\n          $not$9$i = ($$0345$i>>>0)>=($498>>>0);\n          $500 = $499 & $not$9$i;\n          if ($500) {\n           $501 = ((($497)) + 12|0);\n           HEAP32[$501>>2] = $350;\n           HEAP32[$496>>2] = $350;\n           $502 = ((($350)) + 8|0);\n           HEAP32[$502>>2] = $497;\n           $503 = ((($350)) + 12|0);\n           HEAP32[$503>>2] = $$0345$i;\n           $504 = ((($350)) + 24|0);\n           HEAP32[$504>>2] = 0;\n           break;\n          } else {\n           _abort();\n           // unreachable;\n          }\n         }\n        }\n       } while(0);\n       $505 = ((($$4$lcssa$i)) + 8|0);\n       $$0 = $505;\n       STACKTOP = sp;return ($$0|0);\n      } else {\n       $$0197 = $249;\n      }\n     }\n    }\n   }\n  }\n } while(0);\n $506 = HEAP32[(546376)>>2]|0;\n $507 = ($506>>>0)<($$0197>>>0);\n if (!($507)) {\n  $508 = (($506) - ($$0197))|0;\n  $509 = HEAP32[(546388)>>2]|0;\n  $510 = ($508>>>0)>(15);\n  if ($510) {\n   $511 = (($509) + ($$0197)|0);\n   HEAP32[(546388)>>2] = $511;\n   HEAP32[(546376)>>2] = $508;\n   $512 = $508 | 1;\n   $513 = ((($511)) + 4|0);\n   HEAP32[$513>>2] = $512;\n   $514 = (($511) + ($508)|0);\n   HEAP32[$514>>2] = $508;\n   $515 = $$0197 | 3;\n   $516 = ((($509)) + 4|0);\n   HEAP32[$516>>2] = $515;\n  } else {\n   HEAP32[(546376)>>2] = 0;\n   HEAP32[(546388)>>2] = 0;\n   $517 = $506 | 3;\n   $518 = ((($509)) + 4|0);\n   HEAP32[$518>>2] = $517;\n   $519 = (($509) + ($506)|0);\n   $520 = ((($519)) + 4|0);\n   $521 = HEAP32[$520>>2]|0;\n   $522 = $521 | 1;\n   HEAP32[$520>>2] = $522;\n  }\n  $523 = ((($509)) + 8|0);\n  $$0 = $523;\n  STACKTOP = sp;return ($$0|0);\n }\n $524 = HEAP32[(546380)>>2]|0;\n $525 = ($524>>>0)>($$0197>>>0);\n if ($525) {\n  $526 = (($524) - ($$0197))|0;\n  HEAP32[(546380)>>2] = $526;\n  $527 = HEAP32[(546392)>>2]|0;\n  $528 = (($527) + ($$0197)|0);\n  HEAP32[(546392)>>2] = $528;\n  $529 = $526 | 1;\n  $530 = ((($528)) + 4|0);\n  HEAP32[$530>>2] = $529;\n  $531 = $$0197 | 3;\n  $532 = ((($527)) + 4|0);\n  HEAP32[$532>>2] = $531;\n  $533 = ((($527)) + 8|0);\n  $$0 = $533;\n  STACKTOP = sp;return ($$0|0);\n }\n $534 = HEAP32[136710]|0;\n $535 = ($534|0)==(0);\n if ($535) {\n  HEAP32[(546848)>>2] = 4096;\n  HEAP32[(546844)>>2] = 4096;\n  HEAP32[(546852)>>2] = -1;\n  HEAP32[(546856)>>2] = -1;\n  HEAP32[(546860)>>2] = 0;\n  HEAP32[(546812)>>2] = 0;\n  $536 = $1;\n  $537 = $536 & -16;\n  $538 = $537 ^ 1431655768;\n  HEAP32[$1>>2] = $538;\n  HEAP32[136710] = $538;\n  $542 = 4096;\n } else {\n  $$pre$i212 = HEAP32[(546848)>>2]|0;\n  $542 = $$pre$i212;\n }\n $539 = (($$0197) + 48)|0;\n $540 = (($$0197) + 47)|0;\n $541 = (($542) + ($540))|0;\n $543 = (0 - ($542))|0;\n $544 = $541 & $543;\n $545 = ($544>>>0)>($$0197>>>0);\n if (!($545)) {\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $546 = HEAP32[(546808)>>2]|0;\n $547 = ($546|0)==(0);\n if (!($547)) {\n  $548 = HEAP32[(546800)>>2]|0;\n  $549 = (($548) + ($544))|0;\n  $550 = ($549>>>0)<=($548>>>0);\n  $551 = ($549>>>0)>($546>>>0);\n  $or$cond1$i = $550 | $551;\n  if ($or$cond1$i) {\n   $$0 = 0;\n   STACKTOP = sp;return ($$0|0);\n  }\n }\n $552 = HEAP32[(546812)>>2]|0;\n $553 = $552 & 4;\n $554 = ($553|0)==(0);\n L244: do {\n  if ($554) {\n   $555 = HEAP32[(546392)>>2]|0;\n   $556 = ($555|0)==(0|0);\n   L246: do {\n    if ($556) {\n     label = 163;\n    } else {\n     $$0$i$i = (546816);\n     while(1) {\n      $557 = HEAP32[$$0$i$i>>2]|0;\n      $558 = ($557>>>0)>($555>>>0);\n      if (!($558)) {\n       $559 = ((($$0$i$i)) + 4|0);\n       $560 = HEAP32[$559>>2]|0;\n       $561 = (($557) + ($560)|0);\n       $562 = ($561>>>0)>($555>>>0);\n       if ($562) {\n        break;\n       }\n      }\n      $563 = ((($$0$i$i)) + 8|0);\n      $564 = HEAP32[$563>>2]|0;\n      $565 = ($564|0)==(0|0);\n      if ($565) {\n       label = 163;\n       break L246;\n      } else {\n       $$0$i$i = $564;\n      }\n     }\n     $588 = (($541) - ($524))|0;\n     $589 = $588 & $543;\n     $590 = ($589>>>0)<(2147483647);\n     if ($590) {\n      $591 = (_sbrk(($589|0))|0);\n      $592 = HEAP32[$$0$i$i>>2]|0;\n      $593 = HEAP32[$559>>2]|0;\n      $594 = (($592) + ($593)|0);\n      $595 = ($591|0)==($594|0);\n      if ($595) {\n       $596 = ($591|0)==((-1)|0);\n       if ($596) {\n        $$2234253237$i = $589;\n       } else {\n        $$723948$i = $589;$$749$i = $591;\n        label = 180;\n        break L244;\n       }\n      } else {\n       $$2247$ph$i = $591;$$2253$ph$i = $589;\n       label = 171;\n      }\n     } else {\n      $$2234253237$i = 0;\n     }\n    }\n   } while(0);\n   do {\n    if ((label|0) == 163) {\n     $566 = (_sbrk(0)|0);\n     $567 = ($566|0)==((-1)|0);\n     if ($567) {\n      $$2234253237$i = 0;\n     } else {\n      $568 = $566;\n      $569 = HEAP32[(546844)>>2]|0;\n      $570 = (($569) + -1)|0;\n      $571 = $570 & $568;\n      $572 = ($571|0)==(0);\n      $573 = (($570) + ($568))|0;\n      $574 = (0 - ($569))|0;\n      $575 = $573 & $574;\n      $576 = (($575) - ($568))|0;\n      $577 = $572 ? 0 : $576;\n      $$$i = (($577) + ($544))|0;\n      $578 = HEAP32[(546800)>>2]|0;\n      $579 = (($$$i) + ($578))|0;\n      $580 = ($$$i>>>0)>($$0197>>>0);\n      $581 = ($$$i>>>0)<(2147483647);\n      $or$cond$i214 = $580 & $581;\n      if ($or$cond$i214) {\n       $582 = HEAP32[(546808)>>2]|0;\n       $583 = ($582|0)==(0);\n       if (!($583)) {\n        $584 = ($579>>>0)<=($578>>>0);\n        $585 = ($579>>>0)>($582>>>0);\n        $or$cond2$i215 = $584 | $585;\n        if ($or$cond2$i215) {\n         $$2234253237$i = 0;\n         break;\n        }\n       }\n       $586 = (_sbrk(($$$i|0))|0);\n       $587 = ($586|0)==($566|0);\n       if ($587) {\n        $$723948$i = $$$i;$$749$i = $566;\n        label = 180;\n        break L244;\n       } else {\n        $$2247$ph$i = $586;$$2253$ph$i = $$$i;\n        label = 171;\n       }\n      } else {\n       $$2234253237$i = 0;\n      }\n     }\n    }\n   } while(0);\n   do {\n    if ((label|0) == 171) {\n     $597 = (0 - ($$2253$ph$i))|0;\n     $598 = ($$2247$ph$i|0)!=((-1)|0);\n     $599 = ($$2253$ph$i>>>0)<(2147483647);\n     $or$cond7$i = $599 & $598;\n     $600 = ($539>>>0)>($$2253$ph$i>>>0);\n     $or$cond10$i = $600 & $or$cond7$i;\n     if (!($or$cond10$i)) {\n      $610 = ($$2247$ph$i|0)==((-1)|0);\n      if ($610) {\n       $$2234253237$i = 0;\n       break;\n      } else {\n       $$723948$i = $$2253$ph$i;$$749$i = $$2247$ph$i;\n       label = 180;\n       break L244;\n      }\n     }\n     $601 = HEAP32[(546848)>>2]|0;\n     $602 = (($540) - ($$2253$ph$i))|0;\n     $603 = (($602) + ($601))|0;\n     $604 = (0 - ($601))|0;\n     $605 = $603 & $604;\n     $606 = ($605>>>0)<(2147483647);\n     if (!($606)) {\n      $$723948$i = $$2253$ph$i;$$749$i = $$2247$ph$i;\n      label = 180;\n      break L244;\n     }\n     $607 = (_sbrk(($605|0))|0);\n     $608 = ($607|0)==((-1)|0);\n     if ($608) {\n      (_sbrk(($597|0))|0);\n      $$2234253237$i = 0;\n      break;\n     } else {\n      $609 = (($605) + ($$2253$ph$i))|0;\n      $$723948$i = $609;$$749$i = $$2247$ph$i;\n      label = 180;\n      break L244;\n     }\n    }\n   } while(0);\n   $611 = HEAP32[(546812)>>2]|0;\n   $612 = $611 | 4;\n   HEAP32[(546812)>>2] = $612;\n   $$4236$i = $$2234253237$i;\n   label = 178;\n  } else {\n   $$4236$i = 0;\n   label = 178;\n  }\n } while(0);\n if ((label|0) == 178) {\n  $613 = ($544>>>0)<(2147483647);\n  if ($613) {\n   $614 = (_sbrk(($544|0))|0);\n   $615 = (_sbrk(0)|0);\n   $616 = ($614|0)!=((-1)|0);\n   $617 = ($615|0)!=((-1)|0);\n   $or$cond5$i = $616 & $617;\n   $618 = ($614>>>0)<($615>>>0);\n   $or$cond11$i = $618 & $or$cond5$i;\n   $619 = $615;\n   $620 = $614;\n   $621 = (($619) - ($620))|0;\n   $622 = (($$0197) + 40)|0;\n   $623 = ($621>>>0)>($622>>>0);\n   $$$4236$i = $623 ? $621 : $$4236$i;\n   $or$cond11$not$i = $or$cond11$i ^ 1;\n   $624 = ($614|0)==((-1)|0);\n   $not$$i216 = $623 ^ 1;\n   $625 = $624 | $not$$i216;\n   $or$cond50$i = $625 | $or$cond11$not$i;\n   if (!($or$cond50$i)) {\n    $$723948$i = $$$4236$i;$$749$i = $614;\n    label = 180;\n   }\n  }\n }\n if ((label|0) == 180) {\n  $626 = HEAP32[(546800)>>2]|0;\n  $627 = (($626) + ($$723948$i))|0;\n  HEAP32[(546800)>>2] = $627;\n  $628 = HEAP32[(546804)>>2]|0;\n  $629 = ($627>>>0)>($628>>>0);\n  if ($629) {\n   HEAP32[(546804)>>2] = $627;\n  }\n  $630 = HEAP32[(546392)>>2]|0;\n  $631 = ($630|0)==(0|0);\n  do {\n   if ($631) {\n    $632 = HEAP32[(546384)>>2]|0;\n    $633 = ($632|0)==(0|0);\n    $634 = ($$749$i>>>0)<($632>>>0);\n    $or$cond12$i = $633 | $634;\n    if ($or$cond12$i) {\n     HEAP32[(546384)>>2] = $$749$i;\n    }\n    HEAP32[(546816)>>2] = $$749$i;\n    HEAP32[(546820)>>2] = $$723948$i;\n    HEAP32[(546828)>>2] = 0;\n    $635 = HEAP32[136710]|0;\n    HEAP32[(546404)>>2] = $635;\n    HEAP32[(546400)>>2] = -1;\n    $$01$i$i = 0;\n    while(1) {\n     $636 = $$01$i$i << 1;\n     $637 = (546408 + ($636<<2)|0);\n     $638 = ((($637)) + 12|0);\n     HEAP32[$638>>2] = $637;\n     $639 = ((($637)) + 8|0);\n     HEAP32[$639>>2] = $637;\n     $640 = (($$01$i$i) + 1)|0;\n     $exitcond$i$i = ($640|0)==(32);\n     if ($exitcond$i$i) {\n      break;\n     } else {\n      $$01$i$i = $640;\n     }\n    }\n    $641 = (($$723948$i) + -40)|0;\n    $642 = ((($$749$i)) + 8|0);\n    $643 = $642;\n    $644 = $643 & 7;\n    $645 = ($644|0)==(0);\n    $646 = (0 - ($643))|0;\n    $647 = $646 & 7;\n    $648 = $645 ? 0 : $647;\n    $649 = (($$749$i) + ($648)|0);\n    $650 = (($641) - ($648))|0;\n    HEAP32[(546392)>>2] = $649;\n    HEAP32[(546380)>>2] = $650;\n    $651 = $650 | 1;\n    $652 = ((($649)) + 4|0);\n    HEAP32[$652>>2] = $651;\n    $653 = (($649) + ($650)|0);\n    $654 = ((($653)) + 4|0);\n    HEAP32[$654>>2] = 40;\n    $655 = HEAP32[(546856)>>2]|0;\n    HEAP32[(546396)>>2] = $655;\n   } else {\n    $$024371$i = (546816);\n    while(1) {\n     $656 = HEAP32[$$024371$i>>2]|0;\n     $657 = ((($$024371$i)) + 4|0);\n     $658 = HEAP32[$657>>2]|0;\n     $659 = (($656) + ($658)|0);\n     $660 = ($$749$i|0)==($659|0);\n     if ($660) {\n      label = 190;\n      break;\n     }\n     $661 = ((($$024371$i)) + 8|0);\n     $662 = HEAP32[$661>>2]|0;\n     $663 = ($662|0)==(0|0);\n     if ($663) {\n      break;\n     } else {\n      $$024371$i = $662;\n     }\n    }\n    if ((label|0) == 190) {\n     $664 = ((($$024371$i)) + 12|0);\n     $665 = HEAP32[$664>>2]|0;\n     $666 = $665 & 8;\n     $667 = ($666|0)==(0);\n     if ($667) {\n      $668 = ($630>>>0)>=($656>>>0);\n      $669 = ($630>>>0)<($$749$i>>>0);\n      $or$cond51$i = $669 & $668;\n      if ($or$cond51$i) {\n       $670 = (($658) + ($$723948$i))|0;\n       HEAP32[$657>>2] = $670;\n       $671 = HEAP32[(546380)>>2]|0;\n       $672 = ((($630)) + 8|0);\n       $673 = $672;\n       $674 = $673 & 7;\n       $675 = ($674|0)==(0);\n       $676 = (0 - ($673))|0;\n       $677 = $676 & 7;\n       $678 = $675 ? 0 : $677;\n       $679 = (($630) + ($678)|0);\n       $680 = (($$723948$i) - ($678))|0;\n       $681 = (($671) + ($680))|0;\n       HEAP32[(546392)>>2] = $679;\n       HEAP32[(546380)>>2] = $681;\n       $682 = $681 | 1;\n       $683 = ((($679)) + 4|0);\n       HEAP32[$683>>2] = $682;\n       $684 = (($679) + ($681)|0);\n       $685 = ((($684)) + 4|0);\n       HEAP32[$685>>2] = 40;\n       $686 = HEAP32[(546856)>>2]|0;\n       HEAP32[(546396)>>2] = $686;\n       break;\n      }\n     }\n    }\n    $687 = HEAP32[(546384)>>2]|0;\n    $688 = ($$749$i>>>0)<($687>>>0);\n    if ($688) {\n     HEAP32[(546384)>>2] = $$749$i;\n     $752 = $$749$i;\n    } else {\n     $752 = $687;\n    }\n    $689 = (($$749$i) + ($$723948$i)|0);\n    $$124470$i = (546816);\n    while(1) {\n     $690 = HEAP32[$$124470$i>>2]|0;\n     $691 = ($690|0)==($689|0);\n     if ($691) {\n      label = 198;\n      break;\n     }\n     $692 = ((($$124470$i)) + 8|0);\n     $693 = HEAP32[$692>>2]|0;\n     $694 = ($693|0)==(0|0);\n     if ($694) {\n      break;\n     } else {\n      $$124470$i = $693;\n     }\n    }\n    if ((label|0) == 198) {\n     $695 = ((($$124470$i)) + 12|0);\n     $696 = HEAP32[$695>>2]|0;\n     $697 = $696 & 8;\n     $698 = ($697|0)==(0);\n     if ($698) {\n      HEAP32[$$124470$i>>2] = $$749$i;\n      $699 = ((($$124470$i)) + 4|0);\n      $700 = HEAP32[$699>>2]|0;\n      $701 = (($700) + ($$723948$i))|0;\n      HEAP32[$699>>2] = $701;\n      $702 = ((($$749$i)) + 8|0);\n      $703 = $702;\n      $704 = $703 & 7;\n      $705 = ($704|0)==(0);\n      $706 = (0 - ($703))|0;\n      $707 = $706 & 7;\n      $708 = $705 ? 0 : $707;\n      $709 = (($$749$i) + ($708)|0);\n      $710 = ((($689)) + 8|0);\n      $711 = $710;\n      $712 = $711 & 7;\n      $713 = ($712|0)==(0);\n      $714 = (0 - ($711))|0;\n      $715 = $714 & 7;\n      $716 = $713 ? 0 : $715;\n      $717 = (($689) + ($716)|0);\n      $718 = $717;\n      $719 = $709;\n      $720 = (($718) - ($719))|0;\n      $721 = (($709) + ($$0197)|0);\n      $722 = (($720) - ($$0197))|0;\n      $723 = $$0197 | 3;\n      $724 = ((($709)) + 4|0);\n      HEAP32[$724>>2] = $723;\n      $725 = ($717|0)==($630|0);\n      do {\n       if ($725) {\n        $726 = HEAP32[(546380)>>2]|0;\n        $727 = (($726) + ($722))|0;\n        HEAP32[(546380)>>2] = $727;\n        HEAP32[(546392)>>2] = $721;\n        $728 = $727 | 1;\n        $729 = ((($721)) + 4|0);\n        HEAP32[$729>>2] = $728;\n       } else {\n        $730 = HEAP32[(546388)>>2]|0;\n        $731 = ($717|0)==($730|0);\n        if ($731) {\n         $732 = HEAP32[(546376)>>2]|0;\n         $733 = (($732) + ($722))|0;\n         HEAP32[(546376)>>2] = $733;\n         HEAP32[(546388)>>2] = $721;\n         $734 = $733 | 1;\n         $735 = ((($721)) + 4|0);\n         HEAP32[$735>>2] = $734;\n         $736 = (($721) + ($733)|0);\n         HEAP32[$736>>2] = $733;\n         break;\n        }\n        $737 = ((($717)) + 4|0);\n        $738 = HEAP32[$737>>2]|0;\n        $739 = $738 & 3;\n        $740 = ($739|0)==(1);\n        if ($740) {\n         $741 = $738 & -8;\n         $742 = $738 >>> 3;\n         $743 = ($738>>>0)<(256);\n         L314: do {\n          if ($743) {\n           $744 = ((($717)) + 8|0);\n           $745 = HEAP32[$744>>2]|0;\n           $746 = ((($717)) + 12|0);\n           $747 = HEAP32[$746>>2]|0;\n           $748 = $742 << 1;\n           $749 = (546408 + ($748<<2)|0);\n           $750 = ($745|0)==($749|0);\n           do {\n            if (!($750)) {\n             $751 = ($745>>>0)<($752>>>0);\n             if ($751) {\n              _abort();\n              // unreachable;\n             }\n             $753 = ((($745)) + 12|0);\n             $754 = HEAP32[$753>>2]|0;\n             $755 = ($754|0)==($717|0);\n             if ($755) {\n              break;\n             }\n             _abort();\n             // unreachable;\n            }\n           } while(0);\n           $756 = ($747|0)==($745|0);\n           if ($756) {\n            $757 = 1 << $742;\n            $758 = $757 ^ -1;\n            $759 = HEAP32[136592]|0;\n            $760 = $759 & $758;\n            HEAP32[136592] = $760;\n            break;\n           }\n           $761 = ($747|0)==($749|0);\n           do {\n            if ($761) {\n             $$pre10$i$i = ((($747)) + 8|0);\n             $$pre$phi11$i$iZ2D = $$pre10$i$i;\n            } else {\n             $762 = ($747>>>0)<($752>>>0);\n             if ($762) {\n              _abort();\n              // unreachable;\n             }\n             $763 = ((($747)) + 8|0);\n             $764 = HEAP32[$763>>2]|0;\n             $765 = ($764|0)==($717|0);\n             if ($765) {\n              $$pre$phi11$i$iZ2D = $763;\n              break;\n             }\n             _abort();\n             // unreachable;\n            }\n           } while(0);\n           $766 = ((($745)) + 12|0);\n           HEAP32[$766>>2] = $747;\n           HEAP32[$$pre$phi11$i$iZ2D>>2] = $745;\n          } else {\n           $767 = ((($717)) + 24|0);\n           $768 = HEAP32[$767>>2]|0;\n           $769 = ((($717)) + 12|0);\n           $770 = HEAP32[$769>>2]|0;\n           $771 = ($770|0)==($717|0);\n           do {\n            if ($771) {\n             $781 = ((($717)) + 16|0);\n             $782 = ((($781)) + 4|0);\n             $783 = HEAP32[$782>>2]|0;\n             $784 = ($783|0)==(0|0);\n             if ($784) {\n              $785 = HEAP32[$781>>2]|0;\n              $786 = ($785|0)==(0|0);\n              if ($786) {\n               $$3$i$i = 0;\n               break;\n              } else {\n               $$1291$i$i = $785;$$1293$i$i = $781;\n              }\n             } else {\n              $$1291$i$i = $783;$$1293$i$i = $782;\n             }\n             while(1) {\n              $787 = ((($$1291$i$i)) + 20|0);\n              $788 = HEAP32[$787>>2]|0;\n              $789 = ($788|0)==(0|0);\n              if (!($789)) {\n               $$1291$i$i = $788;$$1293$i$i = $787;\n               continue;\n              }\n              $790 = ((($$1291$i$i)) + 16|0);\n              $791 = HEAP32[$790>>2]|0;\n              $792 = ($791|0)==(0|0);\n              if ($792) {\n               break;\n              } else {\n               $$1291$i$i = $791;$$1293$i$i = $790;\n              }\n             }\n             $793 = ($$1293$i$i>>>0)<($752>>>0);\n             if ($793) {\n              _abort();\n              // unreachable;\n             } else {\n              HEAP32[$$1293$i$i>>2] = 0;\n              $$3$i$i = $$1291$i$i;\n              break;\n             }\n            } else {\n             $772 = ((($717)) + 8|0);\n             $773 = HEAP32[$772>>2]|0;\n             $774 = ($773>>>0)<($752>>>0);\n             if ($774) {\n              _abort();\n              // unreachable;\n             }\n             $775 = ((($773)) + 12|0);\n             $776 = HEAP32[$775>>2]|0;\n             $777 = ($776|0)==($717|0);\n             if (!($777)) {\n              _abort();\n              // unreachable;\n             }\n             $778 = ((($770)) + 8|0);\n             $779 = HEAP32[$778>>2]|0;\n             $780 = ($779|0)==($717|0);\n             if ($780) {\n              HEAP32[$775>>2] = $770;\n              HEAP32[$778>>2] = $773;\n              $$3$i$i = $770;\n              break;\n             } else {\n              _abort();\n              // unreachable;\n             }\n            }\n           } while(0);\n           $794 = ($768|0)==(0|0);\n           if ($794) {\n            break;\n           }\n           $795 = ((($717)) + 28|0);\n           $796 = HEAP32[$795>>2]|0;\n           $797 = (546672 + ($796<<2)|0);\n           $798 = HEAP32[$797>>2]|0;\n           $799 = ($717|0)==($798|0);\n           do {\n            if ($799) {\n             HEAP32[$797>>2] = $$3$i$i;\n             $cond$i$i = ($$3$i$i|0)==(0|0);\n             if (!($cond$i$i)) {\n              break;\n             }\n             $800 = 1 << $796;\n             $801 = $800 ^ -1;\n             $802 = HEAP32[(546372)>>2]|0;\n             $803 = $802 & $801;\n             HEAP32[(546372)>>2] = $803;\n             break L314;\n            } else {\n             $804 = HEAP32[(546384)>>2]|0;\n             $805 = ($768>>>0)<($804>>>0);\n             if ($805) {\n              _abort();\n              // unreachable;\n             } else {\n              $806 = ((($768)) + 16|0);\n              $807 = HEAP32[$806>>2]|0;\n              $not$$i17$i = ($807|0)!=($717|0);\n              $$sink1$i$i = $not$$i17$i&1;\n              $808 = (((($768)) + 16|0) + ($$sink1$i$i<<2)|0);\n              HEAP32[$808>>2] = $$3$i$i;\n              $809 = ($$3$i$i|0)==(0|0);\n              if ($809) {\n               break L314;\n              } else {\n               break;\n              }\n             }\n            }\n           } while(0);\n           $810 = HEAP32[(546384)>>2]|0;\n           $811 = ($$3$i$i>>>0)<($810>>>0);\n           if ($811) {\n            _abort();\n            // unreachable;\n           }\n           $812 = ((($$3$i$i)) + 24|0);\n           HEAP32[$812>>2] = $768;\n           $813 = ((($717)) + 16|0);\n           $814 = HEAP32[$813>>2]|0;\n           $815 = ($814|0)==(0|0);\n           do {\n            if (!($815)) {\n             $816 = ($814>>>0)<($810>>>0);\n             if ($816) {\n              _abort();\n              // unreachable;\n             } else {\n              $817 = ((($$3$i$i)) + 16|0);\n              HEAP32[$817>>2] = $814;\n              $818 = ((($814)) + 24|0);\n              HEAP32[$818>>2] = $$3$i$i;\n              break;\n             }\n            }\n           } while(0);\n           $819 = ((($813)) + 4|0);\n           $820 = HEAP32[$819>>2]|0;\n           $821 = ($820|0)==(0|0);\n           if ($821) {\n            break;\n           }\n           $822 = HEAP32[(546384)>>2]|0;\n           $823 = ($820>>>0)<($822>>>0);\n           if ($823) {\n            _abort();\n            // unreachable;\n           } else {\n            $824 = ((($$3$i$i)) + 20|0);\n            HEAP32[$824>>2] = $820;\n            $825 = ((($820)) + 24|0);\n            HEAP32[$825>>2] = $$3$i$i;\n            break;\n           }\n          }\n         } while(0);\n         $826 = (($717) + ($741)|0);\n         $827 = (($741) + ($722))|0;\n         $$0$i18$i = $826;$$0287$i$i = $827;\n        } else {\n         $$0$i18$i = $717;$$0287$i$i = $722;\n        }\n        $828 = ((($$0$i18$i)) + 4|0);\n        $829 = HEAP32[$828>>2]|0;\n        $830 = $829 & -2;\n        HEAP32[$828>>2] = $830;\n        $831 = $$0287$i$i | 1;\n        $832 = ((($721)) + 4|0);\n        HEAP32[$832>>2] = $831;\n        $833 = (($721) + ($$0287$i$i)|0);\n        HEAP32[$833>>2] = $$0287$i$i;\n        $834 = $$0287$i$i >>> 3;\n        $835 = ($$0287$i$i>>>0)<(256);\n        if ($835) {\n         $836 = $834 << 1;\n         $837 = (546408 + ($836<<2)|0);\n         $838 = HEAP32[136592]|0;\n         $839 = 1 << $834;\n         $840 = $838 & $839;\n         $841 = ($840|0)==(0);\n         do {\n          if ($841) {\n           $842 = $838 | $839;\n           HEAP32[136592] = $842;\n           $$pre$i19$i = ((($837)) + 8|0);\n           $$0295$i$i = $837;$$pre$phi$i20$iZ2D = $$pre$i19$i;\n          } else {\n           $843 = ((($837)) + 8|0);\n           $844 = HEAP32[$843>>2]|0;\n           $845 = HEAP32[(546384)>>2]|0;\n           $846 = ($844>>>0)<($845>>>0);\n           if (!($846)) {\n            $$0295$i$i = $844;$$pre$phi$i20$iZ2D = $843;\n            break;\n           }\n           _abort();\n           // unreachable;\n          }\n         } while(0);\n         HEAP32[$$pre$phi$i20$iZ2D>>2] = $721;\n         $847 = ((($$0295$i$i)) + 12|0);\n         HEAP32[$847>>2] = $721;\n         $848 = ((($721)) + 8|0);\n         HEAP32[$848>>2] = $$0295$i$i;\n         $849 = ((($721)) + 12|0);\n         HEAP32[$849>>2] = $837;\n         break;\n        }\n        $850 = $$0287$i$i >>> 8;\n        $851 = ($850|0)==(0);\n        do {\n         if ($851) {\n          $$0296$i$i = 0;\n         } else {\n          $852 = ($$0287$i$i>>>0)>(16777215);\n          if ($852) {\n           $$0296$i$i = 31;\n           break;\n          }\n          $853 = (($850) + 1048320)|0;\n          $854 = $853 >>> 16;\n          $855 = $854 & 8;\n          $856 = $850 << $855;\n          $857 = (($856) + 520192)|0;\n          $858 = $857 >>> 16;\n          $859 = $858 & 4;\n          $860 = $859 | $855;\n          $861 = $856 << $859;\n          $862 = (($861) + 245760)|0;\n          $863 = $862 >>> 16;\n          $864 = $863 & 2;\n          $865 = $860 | $864;\n          $866 = (14 - ($865))|0;\n          $867 = $861 << $864;\n          $868 = $867 >>> 15;\n          $869 = (($866) + ($868))|0;\n          $870 = $869 << 1;\n          $871 = (($869) + 7)|0;\n          $872 = $$0287$i$i >>> $871;\n          $873 = $872 & 1;\n          $874 = $873 | $870;\n          $$0296$i$i = $874;\n         }\n        } while(0);\n        $875 = (546672 + ($$0296$i$i<<2)|0);\n        $876 = ((($721)) + 28|0);\n        HEAP32[$876>>2] = $$0296$i$i;\n        $877 = ((($721)) + 16|0);\n        $878 = ((($877)) + 4|0);\n        HEAP32[$878>>2] = 0;\n        HEAP32[$877>>2] = 0;\n        $879 = HEAP32[(546372)>>2]|0;\n        $880 = 1 << $$0296$i$i;\n        $881 = $879 & $880;\n        $882 = ($881|0)==(0);\n        if ($882) {\n         $883 = $879 | $880;\n         HEAP32[(546372)>>2] = $883;\n         HEAP32[$875>>2] = $721;\n         $884 = ((($721)) + 24|0);\n         HEAP32[$884>>2] = $875;\n         $885 = ((($721)) + 12|0);\n         HEAP32[$885>>2] = $721;\n         $886 = ((($721)) + 8|0);\n         HEAP32[$886>>2] = $721;\n         break;\n        }\n        $887 = HEAP32[$875>>2]|0;\n        $888 = ($$0296$i$i|0)==(31);\n        $889 = $$0296$i$i >>> 1;\n        $890 = (25 - ($889))|0;\n        $891 = $888 ? 0 : $890;\n        $892 = $$0287$i$i << $891;\n        $$0288$i$i = $892;$$0289$i$i = $887;\n        while(1) {\n         $893 = ((($$0289$i$i)) + 4|0);\n         $894 = HEAP32[$893>>2]|0;\n         $895 = $894 & -8;\n         $896 = ($895|0)==($$0287$i$i|0);\n         if ($896) {\n          label = 265;\n          break;\n         }\n         $897 = $$0288$i$i >>> 31;\n         $898 = (((($$0289$i$i)) + 16|0) + ($897<<2)|0);\n         $899 = $$0288$i$i << 1;\n         $900 = HEAP32[$898>>2]|0;\n         $901 = ($900|0)==(0|0);\n         if ($901) {\n          label = 262;\n          break;\n         } else {\n          $$0288$i$i = $899;$$0289$i$i = $900;\n         }\n        }\n        if ((label|0) == 262) {\n         $902 = HEAP32[(546384)>>2]|0;\n         $903 = ($898>>>0)<($902>>>0);\n         if ($903) {\n          _abort();\n          // unreachable;\n         } else {\n          HEAP32[$898>>2] = $721;\n          $904 = ((($721)) + 24|0);\n          HEAP32[$904>>2] = $$0289$i$i;\n          $905 = ((($721)) + 12|0);\n          HEAP32[$905>>2] = $721;\n          $906 = ((($721)) + 8|0);\n          HEAP32[$906>>2] = $721;\n          break;\n         }\n        }\n        else if ((label|0) == 265) {\n         $907 = ((($$0289$i$i)) + 8|0);\n         $908 = HEAP32[$907>>2]|0;\n         $909 = HEAP32[(546384)>>2]|0;\n         $910 = ($908>>>0)>=($909>>>0);\n         $not$7$i$i = ($$0289$i$i>>>0)>=($909>>>0);\n         $911 = $910 & $not$7$i$i;\n         if ($911) {\n          $912 = ((($908)) + 12|0);\n          HEAP32[$912>>2] = $721;\n          HEAP32[$907>>2] = $721;\n          $913 = ((($721)) + 8|0);\n          HEAP32[$913>>2] = $908;\n          $914 = ((($721)) + 12|0);\n          HEAP32[$914>>2] = $$0289$i$i;\n          $915 = ((($721)) + 24|0);\n          HEAP32[$915>>2] = 0;\n          break;\n         } else {\n          _abort();\n          // unreachable;\n         }\n        }\n       }\n      } while(0);\n      $1047 = ((($709)) + 8|0);\n      $$0 = $1047;\n      STACKTOP = sp;return ($$0|0);\n     }\n    }\n    $$0$i$i$i = (546816);\n    while(1) {\n     $916 = HEAP32[$$0$i$i$i>>2]|0;\n     $917 = ($916>>>0)>($630>>>0);\n     if (!($917)) {\n      $918 = ((($$0$i$i$i)) + 4|0);\n      $919 = HEAP32[$918>>2]|0;\n      $920 = (($916) + ($919)|0);\n      $921 = ($920>>>0)>($630>>>0);\n      if ($921) {\n       break;\n      }\n     }\n     $922 = ((($$0$i$i$i)) + 8|0);\n     $923 = HEAP32[$922>>2]|0;\n     $$0$i$i$i = $923;\n    }\n    $924 = ((($920)) + -47|0);\n    $925 = ((($924)) + 8|0);\n    $926 = $925;\n    $927 = $926 & 7;\n    $928 = ($927|0)==(0);\n    $929 = (0 - ($926))|0;\n    $930 = $929 & 7;\n    $931 = $928 ? 0 : $930;\n    $932 = (($924) + ($931)|0);\n    $933 = ((($630)) + 16|0);\n    $934 = ($932>>>0)<($933>>>0);\n    $935 = $934 ? $630 : $932;\n    $936 = ((($935)) + 8|0);\n    $937 = ((($935)) + 24|0);\n    $938 = (($$723948$i) + -40)|0;\n    $939 = ((($$749$i)) + 8|0);\n    $940 = $939;\n    $941 = $940 & 7;\n    $942 = ($941|0)==(0);\n    $943 = (0 - ($940))|0;\n    $944 = $943 & 7;\n    $945 = $942 ? 0 : $944;\n    $946 = (($$749$i) + ($945)|0);\n    $947 = (($938) - ($945))|0;\n    HEAP32[(546392)>>2] = $946;\n    HEAP32[(546380)>>2] = $947;\n    $948 = $947 | 1;\n    $949 = ((($946)) + 4|0);\n    HEAP32[$949>>2] = $948;\n    $950 = (($946) + ($947)|0);\n    $951 = ((($950)) + 4|0);\n    HEAP32[$951>>2] = 40;\n    $952 = HEAP32[(546856)>>2]|0;\n    HEAP32[(546396)>>2] = $952;\n    $953 = ((($935)) + 4|0);\n    HEAP32[$953>>2] = 27;\n    ;HEAP32[$936>>2]=HEAP32[(546816)>>2]|0;HEAP32[$936+4>>2]=HEAP32[(546816)+4>>2]|0;HEAP32[$936+8>>2]=HEAP32[(546816)+8>>2]|0;HEAP32[$936+12>>2]=HEAP32[(546816)+12>>2]|0;\n    HEAP32[(546816)>>2] = $$749$i;\n    HEAP32[(546820)>>2] = $$723948$i;\n    HEAP32[(546828)>>2] = 0;\n    HEAP32[(546824)>>2] = $936;\n    $955 = $937;\n    while(1) {\n     $954 = ((($955)) + 4|0);\n     HEAP32[$954>>2] = 7;\n     $956 = ((($955)) + 8|0);\n     $957 = ($956>>>0)<($920>>>0);\n     if ($957) {\n      $955 = $954;\n     } else {\n      break;\n     }\n    }\n    $958 = ($935|0)==($630|0);\n    if (!($958)) {\n     $959 = $935;\n     $960 = $630;\n     $961 = (($959) - ($960))|0;\n     $962 = HEAP32[$953>>2]|0;\n     $963 = $962 & -2;\n     HEAP32[$953>>2] = $963;\n     $964 = $961 | 1;\n     $965 = ((($630)) + 4|0);\n     HEAP32[$965>>2] = $964;\n     HEAP32[$935>>2] = $961;\n     $966 = $961 >>> 3;\n     $967 = ($961>>>0)<(256);\n     if ($967) {\n      $968 = $966 << 1;\n      $969 = (546408 + ($968<<2)|0);\n      $970 = HEAP32[136592]|0;\n      $971 = 1 << $966;\n      $972 = $970 & $971;\n      $973 = ($972|0)==(0);\n      if ($973) {\n       $974 = $970 | $971;\n       HEAP32[136592] = $974;\n       $$pre$i$i = ((($969)) + 8|0);\n       $$0211$i$i = $969;$$pre$phi$i$iZ2D = $$pre$i$i;\n      } else {\n       $975 = ((($969)) + 8|0);\n       $976 = HEAP32[$975>>2]|0;\n       $977 = HEAP32[(546384)>>2]|0;\n       $978 = ($976>>>0)<($977>>>0);\n       if ($978) {\n        _abort();\n        // unreachable;\n       } else {\n        $$0211$i$i = $976;$$pre$phi$i$iZ2D = $975;\n       }\n      }\n      HEAP32[$$pre$phi$i$iZ2D>>2] = $630;\n      $979 = ((($$0211$i$i)) + 12|0);\n      HEAP32[$979>>2] = $630;\n      $980 = ((($630)) + 8|0);\n      HEAP32[$980>>2] = $$0211$i$i;\n      $981 = ((($630)) + 12|0);\n      HEAP32[$981>>2] = $969;\n      break;\n     }\n     $982 = $961 >>> 8;\n     $983 = ($982|0)==(0);\n     if ($983) {\n      $$0212$i$i = 0;\n     } else {\n      $984 = ($961>>>0)>(16777215);\n      if ($984) {\n       $$0212$i$i = 31;\n      } else {\n       $985 = (($982) + 1048320)|0;\n       $986 = $985 >>> 16;\n       $987 = $986 & 8;\n       $988 = $982 << $987;\n       $989 = (($988) + 520192)|0;\n       $990 = $989 >>> 16;\n       $991 = $990 & 4;\n       $992 = $991 | $987;\n       $993 = $988 << $991;\n       $994 = (($993) + 245760)|0;\n       $995 = $994 >>> 16;\n       $996 = $995 & 2;\n       $997 = $992 | $996;\n       $998 = (14 - ($997))|0;\n       $999 = $993 << $996;\n       $1000 = $999 >>> 15;\n       $1001 = (($998) + ($1000))|0;\n       $1002 = $1001 << 1;\n       $1003 = (($1001) + 7)|0;\n       $1004 = $961 >>> $1003;\n       $1005 = $1004 & 1;\n       $1006 = $1005 | $1002;\n       $$0212$i$i = $1006;\n      }\n     }\n     $1007 = (546672 + ($$0212$i$i<<2)|0);\n     $1008 = ((($630)) + 28|0);\n     HEAP32[$1008>>2] = $$0212$i$i;\n     $1009 = ((($630)) + 20|0);\n     HEAP32[$1009>>2] = 0;\n     HEAP32[$933>>2] = 0;\n     $1010 = HEAP32[(546372)>>2]|0;\n     $1011 = 1 << $$0212$i$i;\n     $1012 = $1010 & $1011;\n     $1013 = ($1012|0)==(0);\n     if ($1013) {\n      $1014 = $1010 | $1011;\n      HEAP32[(546372)>>2] = $1014;\n      HEAP32[$1007>>2] = $630;\n      $1015 = ((($630)) + 24|0);\n      HEAP32[$1015>>2] = $1007;\n      $1016 = ((($630)) + 12|0);\n      HEAP32[$1016>>2] = $630;\n      $1017 = ((($630)) + 8|0);\n      HEAP32[$1017>>2] = $630;\n      break;\n     }\n     $1018 = HEAP32[$1007>>2]|0;\n     $1019 = ($$0212$i$i|0)==(31);\n     $1020 = $$0212$i$i >>> 1;\n     $1021 = (25 - ($1020))|0;\n     $1022 = $1019 ? 0 : $1021;\n     $1023 = $961 << $1022;\n     $$0206$i$i = $1023;$$0207$i$i = $1018;\n     while(1) {\n      $1024 = ((($$0207$i$i)) + 4|0);\n      $1025 = HEAP32[$1024>>2]|0;\n      $1026 = $1025 & -8;\n      $1027 = ($1026|0)==($961|0);\n      if ($1027) {\n       label = 292;\n       break;\n      }\n      $1028 = $$0206$i$i >>> 31;\n      $1029 = (((($$0207$i$i)) + 16|0) + ($1028<<2)|0);\n      $1030 = $$0206$i$i << 1;\n      $1031 = HEAP32[$1029>>2]|0;\n      $1032 = ($1031|0)==(0|0);\n      if ($1032) {\n       label = 289;\n       break;\n      } else {\n       $$0206$i$i = $1030;$$0207$i$i = $1031;\n      }\n     }\n     if ((label|0) == 289) {\n      $1033 = HEAP32[(546384)>>2]|0;\n      $1034 = ($1029>>>0)<($1033>>>0);\n      if ($1034) {\n       _abort();\n       // unreachable;\n      } else {\n       HEAP32[$1029>>2] = $630;\n       $1035 = ((($630)) + 24|0);\n       HEAP32[$1035>>2] = $$0207$i$i;\n       $1036 = ((($630)) + 12|0);\n       HEAP32[$1036>>2] = $630;\n       $1037 = ((($630)) + 8|0);\n       HEAP32[$1037>>2] = $630;\n       break;\n      }\n     }\n     else if ((label|0) == 292) {\n      $1038 = ((($$0207$i$i)) + 8|0);\n      $1039 = HEAP32[$1038>>2]|0;\n      $1040 = HEAP32[(546384)>>2]|0;\n      $1041 = ($1039>>>0)>=($1040>>>0);\n      $not$$i$i = ($$0207$i$i>>>0)>=($1040>>>0);\n      $1042 = $1041 & $not$$i$i;\n      if ($1042) {\n       $1043 = ((($1039)) + 12|0);\n       HEAP32[$1043>>2] = $630;\n       HEAP32[$1038>>2] = $630;\n       $1044 = ((($630)) + 8|0);\n       HEAP32[$1044>>2] = $1039;\n       $1045 = ((($630)) + 12|0);\n       HEAP32[$1045>>2] = $$0207$i$i;\n       $1046 = ((($630)) + 24|0);\n       HEAP32[$1046>>2] = 0;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    }\n   }\n  } while(0);\n  $1048 = HEAP32[(546380)>>2]|0;\n  $1049 = ($1048>>>0)>($$0197>>>0);\n  if ($1049) {\n   $1050 = (($1048) - ($$0197))|0;\n   HEAP32[(546380)>>2] = $1050;\n   $1051 = HEAP32[(546392)>>2]|0;\n   $1052 = (($1051) + ($$0197)|0);\n   HEAP32[(546392)>>2] = $1052;\n   $1053 = $1050 | 1;\n   $1054 = ((($1052)) + 4|0);\n   HEAP32[$1054>>2] = $1053;\n   $1055 = $$0197 | 3;\n   $1056 = ((($1051)) + 4|0);\n   HEAP32[$1056>>2] = $1055;\n   $1057 = ((($1051)) + 8|0);\n   $$0 = $1057;\n   STACKTOP = sp;return ($$0|0);\n  }\n }\n $1058 = (___errno_location()|0);\n HEAP32[$1058>>2] = 12;\n $$0 = 0;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _free($0) {\n $0 = $0|0;\n var $$0212$i = 0, $$0212$in$i = 0, $$0383 = 0, $$0384 = 0, $$0396 = 0, $$0403 = 0, $$1 = 0, $$1382 = 0, $$1387 = 0, $$1390 = 0, $$1398 = 0, $$1402 = 0, $$2 = 0, $$3 = 0, $$3400 = 0, $$pre = 0, $$pre$phi443Z2D = 0, $$pre$phi445Z2D = 0, $$pre$phiZ2D = 0, $$pre442 = 0;\n var $$pre444 = 0, $$sink3 = 0, $$sink5 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;\n var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;\n var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;\n var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;\n var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;\n var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;\n var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;\n var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;\n var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;\n var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;\n var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;\n var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;\n var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, $cond421 = 0, $cond422 = 0, $not$ = 0, $not$405 = 0, $not$437 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + -8|0);\n $3 = HEAP32[(546384)>>2]|0;\n $4 = ($2>>>0)<($3>>>0);\n if ($4) {\n  _abort();\n  // unreachable;\n }\n $5 = ((($0)) + -4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 3;\n $8 = ($7|0)==(1);\n if ($8) {\n  _abort();\n  // unreachable;\n }\n $9 = $6 & -8;\n $10 = (($2) + ($9)|0);\n $11 = $6 & 1;\n $12 = ($11|0)==(0);\n L10: do {\n  if ($12) {\n   $13 = HEAP32[$2>>2]|0;\n   $14 = ($7|0)==(0);\n   if ($14) {\n    return;\n   }\n   $15 = (0 - ($13))|0;\n   $16 = (($2) + ($15)|0);\n   $17 = (($13) + ($9))|0;\n   $18 = ($16>>>0)<($3>>>0);\n   if ($18) {\n    _abort();\n    // unreachable;\n   }\n   $19 = HEAP32[(546388)>>2]|0;\n   $20 = ($16|0)==($19|0);\n   if ($20) {\n    $104 = ((($10)) + 4|0);\n    $105 = HEAP32[$104>>2]|0;\n    $106 = $105 & 3;\n    $107 = ($106|0)==(3);\n    if (!($107)) {\n     $$1 = $16;$$1382 = $17;$112 = $16;\n     break;\n    }\n    $108 = (($16) + ($17)|0);\n    $109 = ((($16)) + 4|0);\n    $110 = $17 | 1;\n    $111 = $105 & -2;\n    HEAP32[(546376)>>2] = $17;\n    HEAP32[$104>>2] = $111;\n    HEAP32[$109>>2] = $110;\n    HEAP32[$108>>2] = $17;\n    return;\n   }\n   $21 = $13 >>> 3;\n   $22 = ($13>>>0)<(256);\n   if ($22) {\n    $23 = ((($16)) + 8|0);\n    $24 = HEAP32[$23>>2]|0;\n    $25 = ((($16)) + 12|0);\n    $26 = HEAP32[$25>>2]|0;\n    $27 = $21 << 1;\n    $28 = (546408 + ($27<<2)|0);\n    $29 = ($24|0)==($28|0);\n    if (!($29)) {\n     $30 = ($24>>>0)<($3>>>0);\n     if ($30) {\n      _abort();\n      // unreachable;\n     }\n     $31 = ((($24)) + 12|0);\n     $32 = HEAP32[$31>>2]|0;\n     $33 = ($32|0)==($16|0);\n     if (!($33)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $34 = ($26|0)==($24|0);\n    if ($34) {\n     $35 = 1 << $21;\n     $36 = $35 ^ -1;\n     $37 = HEAP32[136592]|0;\n     $38 = $37 & $36;\n     HEAP32[136592] = $38;\n     $$1 = $16;$$1382 = $17;$112 = $16;\n     break;\n    }\n    $39 = ($26|0)==($28|0);\n    if ($39) {\n     $$pre444 = ((($26)) + 8|0);\n     $$pre$phi445Z2D = $$pre444;\n    } else {\n     $40 = ($26>>>0)<($3>>>0);\n     if ($40) {\n      _abort();\n      // unreachable;\n     }\n     $41 = ((($26)) + 8|0);\n     $42 = HEAP32[$41>>2]|0;\n     $43 = ($42|0)==($16|0);\n     if ($43) {\n      $$pre$phi445Z2D = $41;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $44 = ((($24)) + 12|0);\n    HEAP32[$44>>2] = $26;\n    HEAP32[$$pre$phi445Z2D>>2] = $24;\n    $$1 = $16;$$1382 = $17;$112 = $16;\n    break;\n   }\n   $45 = ((($16)) + 24|0);\n   $46 = HEAP32[$45>>2]|0;\n   $47 = ((($16)) + 12|0);\n   $48 = HEAP32[$47>>2]|0;\n   $49 = ($48|0)==($16|0);\n   do {\n    if ($49) {\n     $59 = ((($16)) + 16|0);\n     $60 = ((($59)) + 4|0);\n     $61 = HEAP32[$60>>2]|0;\n     $62 = ($61|0)==(0|0);\n     if ($62) {\n      $63 = HEAP32[$59>>2]|0;\n      $64 = ($63|0)==(0|0);\n      if ($64) {\n       $$3 = 0;\n       break;\n      } else {\n       $$1387 = $63;$$1390 = $59;\n      }\n     } else {\n      $$1387 = $61;$$1390 = $60;\n     }\n     while(1) {\n      $65 = ((($$1387)) + 20|0);\n      $66 = HEAP32[$65>>2]|0;\n      $67 = ($66|0)==(0|0);\n      if (!($67)) {\n       $$1387 = $66;$$1390 = $65;\n       continue;\n      }\n      $68 = ((($$1387)) + 16|0);\n      $69 = HEAP32[$68>>2]|0;\n      $70 = ($69|0)==(0|0);\n      if ($70) {\n       break;\n      } else {\n       $$1387 = $69;$$1390 = $68;\n      }\n     }\n     $71 = ($$1390>>>0)<($3>>>0);\n     if ($71) {\n      _abort();\n      // unreachable;\n     } else {\n      HEAP32[$$1390>>2] = 0;\n      $$3 = $$1387;\n      break;\n     }\n    } else {\n     $50 = ((($16)) + 8|0);\n     $51 = HEAP32[$50>>2]|0;\n     $52 = ($51>>>0)<($3>>>0);\n     if ($52) {\n      _abort();\n      // unreachable;\n     }\n     $53 = ((($51)) + 12|0);\n     $54 = HEAP32[$53>>2]|0;\n     $55 = ($54|0)==($16|0);\n     if (!($55)) {\n      _abort();\n      // unreachable;\n     }\n     $56 = ((($48)) + 8|0);\n     $57 = HEAP32[$56>>2]|0;\n     $58 = ($57|0)==($16|0);\n     if ($58) {\n      HEAP32[$53>>2] = $48;\n      HEAP32[$56>>2] = $51;\n      $$3 = $48;\n      break;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n   } while(0);\n   $72 = ($46|0)==(0|0);\n   if ($72) {\n    $$1 = $16;$$1382 = $17;$112 = $16;\n   } else {\n    $73 = ((($16)) + 28|0);\n    $74 = HEAP32[$73>>2]|0;\n    $75 = (546672 + ($74<<2)|0);\n    $76 = HEAP32[$75>>2]|0;\n    $77 = ($16|0)==($76|0);\n    do {\n     if ($77) {\n      HEAP32[$75>>2] = $$3;\n      $cond421 = ($$3|0)==(0|0);\n      if ($cond421) {\n       $78 = 1 << $74;\n       $79 = $78 ^ -1;\n       $80 = HEAP32[(546372)>>2]|0;\n       $81 = $80 & $79;\n       HEAP32[(546372)>>2] = $81;\n       $$1 = $16;$$1382 = $17;$112 = $16;\n       break L10;\n      }\n     } else {\n      $82 = HEAP32[(546384)>>2]|0;\n      $83 = ($46>>>0)<($82>>>0);\n      if ($83) {\n       _abort();\n       // unreachable;\n      } else {\n       $84 = ((($46)) + 16|0);\n       $85 = HEAP32[$84>>2]|0;\n       $not$405 = ($85|0)!=($16|0);\n       $$sink3 = $not$405&1;\n       $86 = (((($46)) + 16|0) + ($$sink3<<2)|0);\n       HEAP32[$86>>2] = $$3;\n       $87 = ($$3|0)==(0|0);\n       if ($87) {\n        $$1 = $16;$$1382 = $17;$112 = $16;\n        break L10;\n       } else {\n        break;\n       }\n      }\n     }\n    } while(0);\n    $88 = HEAP32[(546384)>>2]|0;\n    $89 = ($$3>>>0)<($88>>>0);\n    if ($89) {\n     _abort();\n     // unreachable;\n    }\n    $90 = ((($$3)) + 24|0);\n    HEAP32[$90>>2] = $46;\n    $91 = ((($16)) + 16|0);\n    $92 = HEAP32[$91>>2]|0;\n    $93 = ($92|0)==(0|0);\n    do {\n     if (!($93)) {\n      $94 = ($92>>>0)<($88>>>0);\n      if ($94) {\n       _abort();\n       // unreachable;\n      } else {\n       $95 = ((($$3)) + 16|0);\n       HEAP32[$95>>2] = $92;\n       $96 = ((($92)) + 24|0);\n       HEAP32[$96>>2] = $$3;\n       break;\n      }\n     }\n    } while(0);\n    $97 = ((($91)) + 4|0);\n    $98 = HEAP32[$97>>2]|0;\n    $99 = ($98|0)==(0|0);\n    if ($99) {\n     $$1 = $16;$$1382 = $17;$112 = $16;\n    } else {\n     $100 = HEAP32[(546384)>>2]|0;\n     $101 = ($98>>>0)<($100>>>0);\n     if ($101) {\n      _abort();\n      // unreachable;\n     } else {\n      $102 = ((($$3)) + 20|0);\n      HEAP32[$102>>2] = $98;\n      $103 = ((($98)) + 24|0);\n      HEAP32[$103>>2] = $$3;\n      $$1 = $16;$$1382 = $17;$112 = $16;\n      break;\n     }\n    }\n   }\n  } else {\n   $$1 = $2;$$1382 = $9;$112 = $2;\n  }\n } while(0);\n $113 = ($112>>>0)<($10>>>0);\n if (!($113)) {\n  _abort();\n  // unreachable;\n }\n $114 = ((($10)) + 4|0);\n $115 = HEAP32[$114>>2]|0;\n $116 = $115 & 1;\n $117 = ($116|0)==(0);\n if ($117) {\n  _abort();\n  // unreachable;\n }\n $118 = $115 & 2;\n $119 = ($118|0)==(0);\n if ($119) {\n  $120 = HEAP32[(546392)>>2]|0;\n  $121 = ($10|0)==($120|0);\n  $122 = HEAP32[(546388)>>2]|0;\n  if ($121) {\n   $123 = HEAP32[(546380)>>2]|0;\n   $124 = (($123) + ($$1382))|0;\n   HEAP32[(546380)>>2] = $124;\n   HEAP32[(546392)>>2] = $$1;\n   $125 = $124 | 1;\n   $126 = ((($$1)) + 4|0);\n   HEAP32[$126>>2] = $125;\n   $127 = ($$1|0)==($122|0);\n   if (!($127)) {\n    return;\n   }\n   HEAP32[(546388)>>2] = 0;\n   HEAP32[(546376)>>2] = 0;\n   return;\n  }\n  $128 = ($10|0)==($122|0);\n  if ($128) {\n   $129 = HEAP32[(546376)>>2]|0;\n   $130 = (($129) + ($$1382))|0;\n   HEAP32[(546376)>>2] = $130;\n   HEAP32[(546388)>>2] = $112;\n   $131 = $130 | 1;\n   $132 = ((($$1)) + 4|0);\n   HEAP32[$132>>2] = $131;\n   $133 = (($112) + ($130)|0);\n   HEAP32[$133>>2] = $130;\n   return;\n  }\n  $134 = $115 & -8;\n  $135 = (($134) + ($$1382))|0;\n  $136 = $115 >>> 3;\n  $137 = ($115>>>0)<(256);\n  L108: do {\n   if ($137) {\n    $138 = ((($10)) + 8|0);\n    $139 = HEAP32[$138>>2]|0;\n    $140 = ((($10)) + 12|0);\n    $141 = HEAP32[$140>>2]|0;\n    $142 = $136 << 1;\n    $143 = (546408 + ($142<<2)|0);\n    $144 = ($139|0)==($143|0);\n    if (!($144)) {\n     $145 = HEAP32[(546384)>>2]|0;\n     $146 = ($139>>>0)<($145>>>0);\n     if ($146) {\n      _abort();\n      // unreachable;\n     }\n     $147 = ((($139)) + 12|0);\n     $148 = HEAP32[$147>>2]|0;\n     $149 = ($148|0)==($10|0);\n     if (!($149)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $150 = ($141|0)==($139|0);\n    if ($150) {\n     $151 = 1 << $136;\n     $152 = $151 ^ -1;\n     $153 = HEAP32[136592]|0;\n     $154 = $153 & $152;\n     HEAP32[136592] = $154;\n     break;\n    }\n    $155 = ($141|0)==($143|0);\n    if ($155) {\n     $$pre442 = ((($141)) + 8|0);\n     $$pre$phi443Z2D = $$pre442;\n    } else {\n     $156 = HEAP32[(546384)>>2]|0;\n     $157 = ($141>>>0)<($156>>>0);\n     if ($157) {\n      _abort();\n      // unreachable;\n     }\n     $158 = ((($141)) + 8|0);\n     $159 = HEAP32[$158>>2]|0;\n     $160 = ($159|0)==($10|0);\n     if ($160) {\n      $$pre$phi443Z2D = $158;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $161 = ((($139)) + 12|0);\n    HEAP32[$161>>2] = $141;\n    HEAP32[$$pre$phi443Z2D>>2] = $139;\n   } else {\n    $162 = ((($10)) + 24|0);\n    $163 = HEAP32[$162>>2]|0;\n    $164 = ((($10)) + 12|0);\n    $165 = HEAP32[$164>>2]|0;\n    $166 = ($165|0)==($10|0);\n    do {\n     if ($166) {\n      $177 = ((($10)) + 16|0);\n      $178 = ((($177)) + 4|0);\n      $179 = HEAP32[$178>>2]|0;\n      $180 = ($179|0)==(0|0);\n      if ($180) {\n       $181 = HEAP32[$177>>2]|0;\n       $182 = ($181|0)==(0|0);\n       if ($182) {\n        $$3400 = 0;\n        break;\n       } else {\n        $$1398 = $181;$$1402 = $177;\n       }\n      } else {\n       $$1398 = $179;$$1402 = $178;\n      }\n      while(1) {\n       $183 = ((($$1398)) + 20|0);\n       $184 = HEAP32[$183>>2]|0;\n       $185 = ($184|0)==(0|0);\n       if (!($185)) {\n        $$1398 = $184;$$1402 = $183;\n        continue;\n       }\n       $186 = ((($$1398)) + 16|0);\n       $187 = HEAP32[$186>>2]|0;\n       $188 = ($187|0)==(0|0);\n       if ($188) {\n        break;\n       } else {\n        $$1398 = $187;$$1402 = $186;\n       }\n      }\n      $189 = HEAP32[(546384)>>2]|0;\n      $190 = ($$1402>>>0)<($189>>>0);\n      if ($190) {\n       _abort();\n       // unreachable;\n      } else {\n       HEAP32[$$1402>>2] = 0;\n       $$3400 = $$1398;\n       break;\n      }\n     } else {\n      $167 = ((($10)) + 8|0);\n      $168 = HEAP32[$167>>2]|0;\n      $169 = HEAP32[(546384)>>2]|0;\n      $170 = ($168>>>0)<($169>>>0);\n      if ($170) {\n       _abort();\n       // unreachable;\n      }\n      $171 = ((($168)) + 12|0);\n      $172 = HEAP32[$171>>2]|0;\n      $173 = ($172|0)==($10|0);\n      if (!($173)) {\n       _abort();\n       // unreachable;\n      }\n      $174 = ((($165)) + 8|0);\n      $175 = HEAP32[$174>>2]|0;\n      $176 = ($175|0)==($10|0);\n      if ($176) {\n       HEAP32[$171>>2] = $165;\n       HEAP32[$174>>2] = $168;\n       $$3400 = $165;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    } while(0);\n    $191 = ($163|0)==(0|0);\n    if (!($191)) {\n     $192 = ((($10)) + 28|0);\n     $193 = HEAP32[$192>>2]|0;\n     $194 = (546672 + ($193<<2)|0);\n     $195 = HEAP32[$194>>2]|0;\n     $196 = ($10|0)==($195|0);\n     do {\n      if ($196) {\n       HEAP32[$194>>2] = $$3400;\n       $cond422 = ($$3400|0)==(0|0);\n       if ($cond422) {\n        $197 = 1 << $193;\n        $198 = $197 ^ -1;\n        $199 = HEAP32[(546372)>>2]|0;\n        $200 = $199 & $198;\n        HEAP32[(546372)>>2] = $200;\n        break L108;\n       }\n      } else {\n       $201 = HEAP32[(546384)>>2]|0;\n       $202 = ($163>>>0)<($201>>>0);\n       if ($202) {\n        _abort();\n        // unreachable;\n       } else {\n        $203 = ((($163)) + 16|0);\n        $204 = HEAP32[$203>>2]|0;\n        $not$ = ($204|0)!=($10|0);\n        $$sink5 = $not$&1;\n        $205 = (((($163)) + 16|0) + ($$sink5<<2)|0);\n        HEAP32[$205>>2] = $$3400;\n        $206 = ($$3400|0)==(0|0);\n        if ($206) {\n         break L108;\n        } else {\n         break;\n        }\n       }\n      }\n     } while(0);\n     $207 = HEAP32[(546384)>>2]|0;\n     $208 = ($$3400>>>0)<($207>>>0);\n     if ($208) {\n      _abort();\n      // unreachable;\n     }\n     $209 = ((($$3400)) + 24|0);\n     HEAP32[$209>>2] = $163;\n     $210 = ((($10)) + 16|0);\n     $211 = HEAP32[$210>>2]|0;\n     $212 = ($211|0)==(0|0);\n     do {\n      if (!($212)) {\n       $213 = ($211>>>0)<($207>>>0);\n       if ($213) {\n        _abort();\n        // unreachable;\n       } else {\n        $214 = ((($$3400)) + 16|0);\n        HEAP32[$214>>2] = $211;\n        $215 = ((($211)) + 24|0);\n        HEAP32[$215>>2] = $$3400;\n        break;\n       }\n      }\n     } while(0);\n     $216 = ((($210)) + 4|0);\n     $217 = HEAP32[$216>>2]|0;\n     $218 = ($217|0)==(0|0);\n     if (!($218)) {\n      $219 = HEAP32[(546384)>>2]|0;\n      $220 = ($217>>>0)<($219>>>0);\n      if ($220) {\n       _abort();\n       // unreachable;\n      } else {\n       $221 = ((($$3400)) + 20|0);\n       HEAP32[$221>>2] = $217;\n       $222 = ((($217)) + 24|0);\n       HEAP32[$222>>2] = $$3400;\n       break;\n      }\n     }\n    }\n   }\n  } while(0);\n  $223 = $135 | 1;\n  $224 = ((($$1)) + 4|0);\n  HEAP32[$224>>2] = $223;\n  $225 = (($112) + ($135)|0);\n  HEAP32[$225>>2] = $135;\n  $226 = HEAP32[(546388)>>2]|0;\n  $227 = ($$1|0)==($226|0);\n  if ($227) {\n   HEAP32[(546376)>>2] = $135;\n   return;\n  } else {\n   $$2 = $135;\n  }\n } else {\n  $228 = $115 & -2;\n  HEAP32[$114>>2] = $228;\n  $229 = $$1382 | 1;\n  $230 = ((($$1)) + 4|0);\n  HEAP32[$230>>2] = $229;\n  $231 = (($112) + ($$1382)|0);\n  HEAP32[$231>>2] = $$1382;\n  $$2 = $$1382;\n }\n $232 = $$2 >>> 3;\n $233 = ($$2>>>0)<(256);\n if ($233) {\n  $234 = $232 << 1;\n  $235 = (546408 + ($234<<2)|0);\n  $236 = HEAP32[136592]|0;\n  $237 = 1 << $232;\n  $238 = $236 & $237;\n  $239 = ($238|0)==(0);\n  if ($239) {\n   $240 = $236 | $237;\n   HEAP32[136592] = $240;\n   $$pre = ((($235)) + 8|0);\n   $$0403 = $235;$$pre$phiZ2D = $$pre;\n  } else {\n   $241 = ((($235)) + 8|0);\n   $242 = HEAP32[$241>>2]|0;\n   $243 = HEAP32[(546384)>>2]|0;\n   $244 = ($242>>>0)<($243>>>0);\n   if ($244) {\n    _abort();\n    // unreachable;\n   } else {\n    $$0403 = $242;$$pre$phiZ2D = $241;\n   }\n  }\n  HEAP32[$$pre$phiZ2D>>2] = $$1;\n  $245 = ((($$0403)) + 12|0);\n  HEAP32[$245>>2] = $$1;\n  $246 = ((($$1)) + 8|0);\n  HEAP32[$246>>2] = $$0403;\n  $247 = ((($$1)) + 12|0);\n  HEAP32[$247>>2] = $235;\n  return;\n }\n $248 = $$2 >>> 8;\n $249 = ($248|0)==(0);\n if ($249) {\n  $$0396 = 0;\n } else {\n  $250 = ($$2>>>0)>(16777215);\n  if ($250) {\n   $$0396 = 31;\n  } else {\n   $251 = (($248) + 1048320)|0;\n   $252 = $251 >>> 16;\n   $253 = $252 & 8;\n   $254 = $248 << $253;\n   $255 = (($254) + 520192)|0;\n   $256 = $255 >>> 16;\n   $257 = $256 & 4;\n   $258 = $257 | $253;\n   $259 = $254 << $257;\n   $260 = (($259) + 245760)|0;\n   $261 = $260 >>> 16;\n   $262 = $261 & 2;\n   $263 = $258 | $262;\n   $264 = (14 - ($263))|0;\n   $265 = $259 << $262;\n   $266 = $265 >>> 15;\n   $267 = (($264) + ($266))|0;\n   $268 = $267 << 1;\n   $269 = (($267) + 7)|0;\n   $270 = $$2 >>> $269;\n   $271 = $270 & 1;\n   $272 = $271 | $268;\n   $$0396 = $272;\n  }\n }\n $273 = (546672 + ($$0396<<2)|0);\n $274 = ((($$1)) + 28|0);\n HEAP32[$274>>2] = $$0396;\n $275 = ((($$1)) + 16|0);\n $276 = ((($$1)) + 20|0);\n HEAP32[$276>>2] = 0;\n HEAP32[$275>>2] = 0;\n $277 = HEAP32[(546372)>>2]|0;\n $278 = 1 << $$0396;\n $279 = $277 & $278;\n $280 = ($279|0)==(0);\n do {\n  if ($280) {\n   $281 = $277 | $278;\n   HEAP32[(546372)>>2] = $281;\n   HEAP32[$273>>2] = $$1;\n   $282 = ((($$1)) + 24|0);\n   HEAP32[$282>>2] = $273;\n   $283 = ((($$1)) + 12|0);\n   HEAP32[$283>>2] = $$1;\n   $284 = ((($$1)) + 8|0);\n   HEAP32[$284>>2] = $$1;\n  } else {\n   $285 = HEAP32[$273>>2]|0;\n   $286 = ($$0396|0)==(31);\n   $287 = $$0396 >>> 1;\n   $288 = (25 - ($287))|0;\n   $289 = $286 ? 0 : $288;\n   $290 = $$2 << $289;\n   $$0383 = $290;$$0384 = $285;\n   while(1) {\n    $291 = ((($$0384)) + 4|0);\n    $292 = HEAP32[$291>>2]|0;\n    $293 = $292 & -8;\n    $294 = ($293|0)==($$2|0);\n    if ($294) {\n     label = 124;\n     break;\n    }\n    $295 = $$0383 >>> 31;\n    $296 = (((($$0384)) + 16|0) + ($295<<2)|0);\n    $297 = $$0383 << 1;\n    $298 = HEAP32[$296>>2]|0;\n    $299 = ($298|0)==(0|0);\n    if ($299) {\n     label = 121;\n     break;\n    } else {\n     $$0383 = $297;$$0384 = $298;\n    }\n   }\n   if ((label|0) == 121) {\n    $300 = HEAP32[(546384)>>2]|0;\n    $301 = ($296>>>0)<($300>>>0);\n    if ($301) {\n     _abort();\n     // unreachable;\n    } else {\n     HEAP32[$296>>2] = $$1;\n     $302 = ((($$1)) + 24|0);\n     HEAP32[$302>>2] = $$0384;\n     $303 = ((($$1)) + 12|0);\n     HEAP32[$303>>2] = $$1;\n     $304 = ((($$1)) + 8|0);\n     HEAP32[$304>>2] = $$1;\n     break;\n    }\n   }\n   else if ((label|0) == 124) {\n    $305 = ((($$0384)) + 8|0);\n    $306 = HEAP32[$305>>2]|0;\n    $307 = HEAP32[(546384)>>2]|0;\n    $308 = ($306>>>0)>=($307>>>0);\n    $not$437 = ($$0384>>>0)>=($307>>>0);\n    $309 = $308 & $not$437;\n    if ($309) {\n     $310 = ((($306)) + 12|0);\n     HEAP32[$310>>2] = $$1;\n     HEAP32[$305>>2] = $$1;\n     $311 = ((($$1)) + 8|0);\n     HEAP32[$311>>2] = $306;\n     $312 = ((($$1)) + 12|0);\n     HEAP32[$312>>2] = $$0384;\n     $313 = ((($$1)) + 24|0);\n     HEAP32[$313>>2] = 0;\n     break;\n    } else {\n     _abort();\n     // unreachable;\n    }\n   }\n  }\n } while(0);\n $314 = HEAP32[(546400)>>2]|0;\n $315 = (($314) + -1)|0;\n HEAP32[(546400)>>2] = $315;\n $316 = ($315|0)==(0);\n if ($316) {\n  $$0212$in$i = (546824);\n } else {\n  return;\n }\n while(1) {\n  $$0212$i = HEAP32[$$0212$in$i>>2]|0;\n  $317 = ($$0212$i|0)==(0|0);\n  $318 = ((($$0212$i)) + 8|0);\n  if ($317) {\n   break;\n  } else {\n   $$0212$in$i = $318;\n  }\n }\n HEAP32[(546400)>>2] = -1;\n return;\n}\nfunction _calloc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0);\n if ($2) {\n  $$0 = 0;\n } else {\n  $3 = Math_imul($1, $0)|0;\n  $4 = $1 | $0;\n  $5 = ($4>>>0)>(65535);\n  if ($5) {\n   $6 = (($3>>>0) / ($0>>>0))&-1;\n   $7 = ($6|0)==($1|0);\n   $$ = $7 ? $3 : -1;\n   $$0 = $$;\n  } else {\n   $$0 = $3;\n  }\n }\n $8 = (_malloc($$0)|0);\n $9 = ($8|0)==(0|0);\n if ($9) {\n  return ($8|0);\n }\n $10 = ((($8)) + -4|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = $11 & 3;\n $13 = ($12|0)==(0);\n if ($13) {\n  return ($8|0);\n }\n _memset(($8|0),0,($$0|0))|0;\n return ($8|0);\n}\nfunction _realloc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $3 = (_malloc($1)|0);\n  $$1 = $3;\n  return ($$1|0);\n }\n $4 = ($1>>>0)>(4294967231);\n if ($4) {\n  $5 = (___errno_location()|0);\n  HEAP32[$5>>2] = 12;\n  $$1 = 0;\n  return ($$1|0);\n }\n $6 = ($1>>>0)<(11);\n $7 = (($1) + 11)|0;\n $8 = $7 & -8;\n $9 = $6 ? 16 : $8;\n $10 = ((($0)) + -8|0);\n $11 = (_try_realloc_chunk($10,$9)|0);\n $12 = ($11|0)==(0|0);\n if (!($12)) {\n  $13 = ((($11)) + 8|0);\n  $$1 = $13;\n  return ($$1|0);\n }\n $14 = (_malloc($1)|0);\n $15 = ($14|0)==(0|0);\n if ($15) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $16 = ((($0)) + -4|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = $17 & -8;\n $19 = $17 & 3;\n $20 = ($19|0)==(0);\n $21 = $20 ? 8 : 4;\n $22 = (($18) - ($21))|0;\n $23 = ($22>>>0)<($1>>>0);\n $24 = $23 ? $22 : $1;\n _memcpy(($14|0),($0|0),($24|0))|0;\n _free($0);\n $$1 = $14;\n return ($$1|0);\n}\nfunction _try_realloc_chunk($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$1272 = 0, $$1275 = 0, $$2 = 0, $$3 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;\n var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;\n var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;\n var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;\n var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;\n var $cond = 0, $not$ = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond3 = 0, $storemerge = 0, $storemerge1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & -8;\n $5 = (($0) + ($4)|0);\n $6 = HEAP32[(546384)>>2]|0;\n $7 = $3 & 3;\n $notlhs = ($0>>>0)>=($6>>>0);\n $notrhs = ($7|0)!=(1);\n $or$cond$not = $notrhs & $notlhs;\n $8 = ($0>>>0)<($5>>>0);\n $or$cond3 = $or$cond$not & $8;\n if (!($or$cond3)) {\n  _abort();\n  // unreachable;\n }\n $9 = ((($5)) + 4|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = $10 & 1;\n $12 = ($11|0)==(0);\n if ($12) {\n  _abort();\n  // unreachable;\n }\n $13 = ($7|0)==(0);\n if ($13) {\n  $14 = ($1>>>0)<(256);\n  if ($14) {\n   $$2 = 0;\n   return ($$2|0);\n  }\n  $15 = (($1) + 4)|0;\n  $16 = ($4>>>0)<($15>>>0);\n  if (!($16)) {\n   $17 = (($4) - ($1))|0;\n   $18 = HEAP32[(546848)>>2]|0;\n   $19 = $18 << 1;\n   $20 = ($17>>>0)>($19>>>0);\n   if (!($20)) {\n    $$2 = $0;\n    return ($$2|0);\n   }\n  }\n  $$2 = 0;\n  return ($$2|0);\n }\n $21 = ($4>>>0)<($1>>>0);\n if (!($21)) {\n  $22 = (($4) - ($1))|0;\n  $23 = ($22>>>0)>(15);\n  if (!($23)) {\n   $$2 = $0;\n   return ($$2|0);\n  }\n  $24 = (($0) + ($1)|0);\n  $25 = $3 & 1;\n  $26 = $25 | $1;\n  $27 = $26 | 2;\n  HEAP32[$2>>2] = $27;\n  $28 = ((($24)) + 4|0);\n  $29 = $22 | 3;\n  HEAP32[$28>>2] = $29;\n  $30 = (($24) + ($22)|0);\n  $31 = ((($30)) + 4|0);\n  $32 = HEAP32[$31>>2]|0;\n  $33 = $32 | 1;\n  HEAP32[$31>>2] = $33;\n  _dispose_chunk($24,$22);\n  $$2 = $0;\n  return ($$2|0);\n }\n $34 = HEAP32[(546392)>>2]|0;\n $35 = ($5|0)==($34|0);\n if ($35) {\n  $36 = HEAP32[(546380)>>2]|0;\n  $37 = (($36) + ($4))|0;\n  $38 = ($37>>>0)>($1>>>0);\n  $39 = (($37) - ($1))|0;\n  $40 = (($0) + ($1)|0);\n  if (!($38)) {\n   $$2 = 0;\n   return ($$2|0);\n  }\n  $41 = $39 | 1;\n  $42 = ((($40)) + 4|0);\n  $43 = $3 & 1;\n  $44 = $43 | $1;\n  $45 = $44 | 2;\n  HEAP32[$2>>2] = $45;\n  HEAP32[$42>>2] = $41;\n  HEAP32[(546392)>>2] = $40;\n  HEAP32[(546380)>>2] = $39;\n  $$2 = $0;\n  return ($$2|0);\n }\n $46 = HEAP32[(546388)>>2]|0;\n $47 = ($5|0)==($46|0);\n if ($47) {\n  $48 = HEAP32[(546376)>>2]|0;\n  $49 = (($48) + ($4))|0;\n  $50 = ($49>>>0)<($1>>>0);\n  if ($50) {\n   $$2 = 0;\n   return ($$2|0);\n  }\n  $51 = (($49) - ($1))|0;\n  $52 = ($51>>>0)>(15);\n  $53 = $3 & 1;\n  if ($52) {\n   $54 = (($0) + ($1)|0);\n   $55 = (($54) + ($51)|0);\n   $56 = $53 | $1;\n   $57 = $56 | 2;\n   HEAP32[$2>>2] = $57;\n   $58 = ((($54)) + 4|0);\n   $59 = $51 | 1;\n   HEAP32[$58>>2] = $59;\n   HEAP32[$55>>2] = $51;\n   $60 = ((($55)) + 4|0);\n   $61 = HEAP32[$60>>2]|0;\n   $62 = $61 & -2;\n   HEAP32[$60>>2] = $62;\n   $storemerge = $54;$storemerge1 = $51;\n  } else {\n   $63 = $53 | $49;\n   $64 = $63 | 2;\n   HEAP32[$2>>2] = $64;\n   $65 = (($0) + ($49)|0);\n   $66 = ((($65)) + 4|0);\n   $67 = HEAP32[$66>>2]|0;\n   $68 = $67 | 1;\n   HEAP32[$66>>2] = $68;\n   $storemerge = 0;$storemerge1 = 0;\n  }\n  HEAP32[(546376)>>2] = $storemerge1;\n  HEAP32[(546388)>>2] = $storemerge;\n  $$2 = $0;\n  return ($$2|0);\n }\n $69 = $10 & 2;\n $70 = ($69|0)==(0);\n if (!($70)) {\n  $$2 = 0;\n  return ($$2|0);\n }\n $71 = $10 & -8;\n $72 = (($71) + ($4))|0;\n $73 = ($72>>>0)<($1>>>0);\n if ($73) {\n  $$2 = 0;\n  return ($$2|0);\n }\n $74 = (($72) - ($1))|0;\n $75 = $10 >>> 3;\n $76 = ($10>>>0)<(256);\n L49: do {\n  if ($76) {\n   $77 = ((($5)) + 8|0);\n   $78 = HEAP32[$77>>2]|0;\n   $79 = ((($5)) + 12|0);\n   $80 = HEAP32[$79>>2]|0;\n   $81 = $75 << 1;\n   $82 = (546408 + ($81<<2)|0);\n   $83 = ($78|0)==($82|0);\n   if (!($83)) {\n    $84 = ($78>>>0)<($6>>>0);\n    if ($84) {\n     _abort();\n     // unreachable;\n    }\n    $85 = ((($78)) + 12|0);\n    $86 = HEAP32[$85>>2]|0;\n    $87 = ($86|0)==($5|0);\n    if (!($87)) {\n     _abort();\n     // unreachable;\n    }\n   }\n   $88 = ($80|0)==($78|0);\n   if ($88) {\n    $89 = 1 << $75;\n    $90 = $89 ^ -1;\n    $91 = HEAP32[136592]|0;\n    $92 = $91 & $90;\n    HEAP32[136592] = $92;\n    break;\n   }\n   $93 = ($80|0)==($82|0);\n   if ($93) {\n    $$pre = ((($80)) + 8|0);\n    $$pre$phiZ2D = $$pre;\n   } else {\n    $94 = ($80>>>0)<($6>>>0);\n    if ($94) {\n     _abort();\n     // unreachable;\n    }\n    $95 = ((($80)) + 8|0);\n    $96 = HEAP32[$95>>2]|0;\n    $97 = ($96|0)==($5|0);\n    if ($97) {\n     $$pre$phiZ2D = $95;\n    } else {\n     _abort();\n     // unreachable;\n    }\n   }\n   $98 = ((($78)) + 12|0);\n   HEAP32[$98>>2] = $80;\n   HEAP32[$$pre$phiZ2D>>2] = $78;\n  } else {\n   $99 = ((($5)) + 24|0);\n   $100 = HEAP32[$99>>2]|0;\n   $101 = ((($5)) + 12|0);\n   $102 = HEAP32[$101>>2]|0;\n   $103 = ($102|0)==($5|0);\n   do {\n    if ($103) {\n     $113 = ((($5)) + 16|0);\n     $114 = ((($113)) + 4|0);\n     $115 = HEAP32[$114>>2]|0;\n     $116 = ($115|0)==(0|0);\n     if ($116) {\n      $117 = HEAP32[$113>>2]|0;\n      $118 = ($117|0)==(0|0);\n      if ($118) {\n       $$3 = 0;\n       break;\n      } else {\n       $$1272 = $117;$$1275 = $113;\n      }\n     } else {\n      $$1272 = $115;$$1275 = $114;\n     }\n     while(1) {\n      $119 = ((($$1272)) + 20|0);\n      $120 = HEAP32[$119>>2]|0;\n      $121 = ($120|0)==(0|0);\n      if (!($121)) {\n       $$1272 = $120;$$1275 = $119;\n       continue;\n      }\n      $122 = ((($$1272)) + 16|0);\n      $123 = HEAP32[$122>>2]|0;\n      $124 = ($123|0)==(0|0);\n      if ($124) {\n       break;\n      } else {\n       $$1272 = $123;$$1275 = $122;\n      }\n     }\n     $125 = ($$1275>>>0)<($6>>>0);\n     if ($125) {\n      _abort();\n      // unreachable;\n     } else {\n      HEAP32[$$1275>>2] = 0;\n      $$3 = $$1272;\n      break;\n     }\n    } else {\n     $104 = ((($5)) + 8|0);\n     $105 = HEAP32[$104>>2]|0;\n     $106 = ($105>>>0)<($6>>>0);\n     if ($106) {\n      _abort();\n      // unreachable;\n     }\n     $107 = ((($105)) + 12|0);\n     $108 = HEAP32[$107>>2]|0;\n     $109 = ($108|0)==($5|0);\n     if (!($109)) {\n      _abort();\n      // unreachable;\n     }\n     $110 = ((($102)) + 8|0);\n     $111 = HEAP32[$110>>2]|0;\n     $112 = ($111|0)==($5|0);\n     if ($112) {\n      HEAP32[$107>>2] = $102;\n      HEAP32[$110>>2] = $105;\n      $$3 = $102;\n      break;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n   } while(0);\n   $126 = ($100|0)==(0|0);\n   if (!($126)) {\n    $127 = ((($5)) + 28|0);\n    $128 = HEAP32[$127>>2]|0;\n    $129 = (546672 + ($128<<2)|0);\n    $130 = HEAP32[$129>>2]|0;\n    $131 = ($5|0)==($130|0);\n    do {\n     if ($131) {\n      HEAP32[$129>>2] = $$3;\n      $cond = ($$3|0)==(0|0);\n      if ($cond) {\n       $132 = 1 << $128;\n       $133 = $132 ^ -1;\n       $134 = HEAP32[(546372)>>2]|0;\n       $135 = $134 & $133;\n       HEAP32[(546372)>>2] = $135;\n       break L49;\n      }\n     } else {\n      $136 = HEAP32[(546384)>>2]|0;\n      $137 = ($100>>>0)<($136>>>0);\n      if ($137) {\n       _abort();\n       // unreachable;\n      } else {\n       $138 = ((($100)) + 16|0);\n       $139 = HEAP32[$138>>2]|0;\n       $not$ = ($139|0)!=($5|0);\n       $$sink1 = $not$&1;\n       $140 = (((($100)) + 16|0) + ($$sink1<<2)|0);\n       HEAP32[$140>>2] = $$3;\n       $141 = ($$3|0)==(0|0);\n       if ($141) {\n        break L49;\n       } else {\n        break;\n       }\n      }\n     }\n    } while(0);\n    $142 = HEAP32[(546384)>>2]|0;\n    $143 = ($$3>>>0)<($142>>>0);\n    if ($143) {\n     _abort();\n     // unreachable;\n    }\n    $144 = ((($$3)) + 24|0);\n    HEAP32[$144>>2] = $100;\n    $145 = ((($5)) + 16|0);\n    $146 = HEAP32[$145>>2]|0;\n    $147 = ($146|0)==(0|0);\n    do {\n     if (!($147)) {\n      $148 = ($146>>>0)<($142>>>0);\n      if ($148) {\n       _abort();\n       // unreachable;\n      } else {\n       $149 = ((($$3)) + 16|0);\n       HEAP32[$149>>2] = $146;\n       $150 = ((($146)) + 24|0);\n       HEAP32[$150>>2] = $$3;\n       break;\n      }\n     }\n    } while(0);\n    $151 = ((($145)) + 4|0);\n    $152 = HEAP32[$151>>2]|0;\n    $153 = ($152|0)==(0|0);\n    if (!($153)) {\n     $154 = HEAP32[(546384)>>2]|0;\n     $155 = ($152>>>0)<($154>>>0);\n     if ($155) {\n      _abort();\n      // unreachable;\n     } else {\n      $156 = ((($$3)) + 20|0);\n      HEAP32[$156>>2] = $152;\n      $157 = ((($152)) + 24|0);\n      HEAP32[$157>>2] = $$3;\n      break;\n     }\n    }\n   }\n  }\n } while(0);\n $158 = ($74>>>0)<(16);\n $159 = $3 & 1;\n if ($158) {\n  $160 = $72 | $159;\n  $161 = $160 | 2;\n  HEAP32[$2>>2] = $161;\n  $162 = (($0) + ($72)|0);\n  $163 = ((($162)) + 4|0);\n  $164 = HEAP32[$163>>2]|0;\n  $165 = $164 | 1;\n  HEAP32[$163>>2] = $165;\n  $$2 = $0;\n  return ($$2|0);\n } else {\n  $166 = (($0) + ($1)|0);\n  $167 = $159 | $1;\n  $168 = $167 | 2;\n  HEAP32[$2>>2] = $168;\n  $169 = ((($166)) + 4|0);\n  $170 = $74 | 3;\n  HEAP32[$169>>2] = $170;\n  $171 = (($166) + ($74)|0);\n  $172 = ((($171)) + 4|0);\n  $173 = HEAP32[$172>>2]|0;\n  $174 = $173 | 1;\n  HEAP32[$172>>2] = $174;\n  _dispose_chunk($166,$74);\n  $$2 = $0;\n  return ($$2|0);\n }\n return (0)|0;\n}\nfunction _dispose_chunk($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0419 = 0, $$0420 = 0, $$0431 = 0, $$0438 = 0, $$1 = 0, $$1418 = 0, $$1426 = 0, $$1429 = 0, $$1433 = 0, $$1437 = 0, $$2 = 0, $$3 = 0, $$3435 = 0, $$pre = 0, $$pre$phi24Z2D = 0, $$pre$phi26Z2D = 0, $$pre$phiZ2D = 0, $$pre23 = 0, $$pre25 = 0, $$sink2 = 0;\n var $$sink4 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;\n var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;\n var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;\n var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;\n var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;\n var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;\n var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;\n var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;\n var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;\n var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;\n var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;\n var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;\n var $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond17 = 0, $not$ = 0, $not$1 = 0, $not$19 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (($0) + ($1)|0);\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 1;\n $6 = ($5|0)==(0);\n L1: do {\n  if ($6) {\n   $7 = HEAP32[$0>>2]|0;\n   $8 = $4 & 3;\n   $9 = ($8|0)==(0);\n   if ($9) {\n    return;\n   }\n   $10 = (0 - ($7))|0;\n   $11 = (($0) + ($10)|0);\n   $12 = (($7) + ($1))|0;\n   $13 = HEAP32[(546384)>>2]|0;\n   $14 = ($11>>>0)<($13>>>0);\n   if ($14) {\n    _abort();\n    // unreachable;\n   }\n   $15 = HEAP32[(546388)>>2]|0;\n   $16 = ($11|0)==($15|0);\n   if ($16) {\n    $100 = ((($2)) + 4|0);\n    $101 = HEAP32[$100>>2]|0;\n    $102 = $101 & 3;\n    $103 = ($102|0)==(3);\n    if (!($103)) {\n     $$1 = $11;$$1418 = $12;\n     break;\n    }\n    $104 = (($11) + ($12)|0);\n    $105 = ((($11)) + 4|0);\n    $106 = $12 | 1;\n    $107 = $101 & -2;\n    HEAP32[(546376)>>2] = $12;\n    HEAP32[$100>>2] = $107;\n    HEAP32[$105>>2] = $106;\n    HEAP32[$104>>2] = $12;\n    return;\n   }\n   $17 = $7 >>> 3;\n   $18 = ($7>>>0)<(256);\n   if ($18) {\n    $19 = ((($11)) + 8|0);\n    $20 = HEAP32[$19>>2]|0;\n    $21 = ((($11)) + 12|0);\n    $22 = HEAP32[$21>>2]|0;\n    $23 = $17 << 1;\n    $24 = (546408 + ($23<<2)|0);\n    $25 = ($20|0)==($24|0);\n    if (!($25)) {\n     $26 = ($20>>>0)<($13>>>0);\n     if ($26) {\n      _abort();\n      // unreachable;\n     }\n     $27 = ((($20)) + 12|0);\n     $28 = HEAP32[$27>>2]|0;\n     $29 = ($28|0)==($11|0);\n     if (!($29)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $30 = ($22|0)==($20|0);\n    if ($30) {\n     $31 = 1 << $17;\n     $32 = $31 ^ -1;\n     $33 = HEAP32[136592]|0;\n     $34 = $33 & $32;\n     HEAP32[136592] = $34;\n     $$1 = $11;$$1418 = $12;\n     break;\n    }\n    $35 = ($22|0)==($24|0);\n    if ($35) {\n     $$pre25 = ((($22)) + 8|0);\n     $$pre$phi26Z2D = $$pre25;\n    } else {\n     $36 = ($22>>>0)<($13>>>0);\n     if ($36) {\n      _abort();\n      // unreachable;\n     }\n     $37 = ((($22)) + 8|0);\n     $38 = HEAP32[$37>>2]|0;\n     $39 = ($38|0)==($11|0);\n     if ($39) {\n      $$pre$phi26Z2D = $37;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $40 = ((($20)) + 12|0);\n    HEAP32[$40>>2] = $22;\n    HEAP32[$$pre$phi26Z2D>>2] = $20;\n    $$1 = $11;$$1418 = $12;\n    break;\n   }\n   $41 = ((($11)) + 24|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = ((($11)) + 12|0);\n   $44 = HEAP32[$43>>2]|0;\n   $45 = ($44|0)==($11|0);\n   do {\n    if ($45) {\n     $55 = ((($11)) + 16|0);\n     $56 = ((($55)) + 4|0);\n     $57 = HEAP32[$56>>2]|0;\n     $58 = ($57|0)==(0|0);\n     if ($58) {\n      $59 = HEAP32[$55>>2]|0;\n      $60 = ($59|0)==(0|0);\n      if ($60) {\n       $$3 = 0;\n       break;\n      } else {\n       $$1426 = $59;$$1429 = $55;\n      }\n     } else {\n      $$1426 = $57;$$1429 = $56;\n     }\n     while(1) {\n      $61 = ((($$1426)) + 20|0);\n      $62 = HEAP32[$61>>2]|0;\n      $63 = ($62|0)==(0|0);\n      if (!($63)) {\n       $$1426 = $62;$$1429 = $61;\n       continue;\n      }\n      $64 = ((($$1426)) + 16|0);\n      $65 = HEAP32[$64>>2]|0;\n      $66 = ($65|0)==(0|0);\n      if ($66) {\n       break;\n      } else {\n       $$1426 = $65;$$1429 = $64;\n      }\n     }\n     $67 = ($$1429>>>0)<($13>>>0);\n     if ($67) {\n      _abort();\n      // unreachable;\n     } else {\n      HEAP32[$$1429>>2] = 0;\n      $$3 = $$1426;\n      break;\n     }\n    } else {\n     $46 = ((($11)) + 8|0);\n     $47 = HEAP32[$46>>2]|0;\n     $48 = ($47>>>0)<($13>>>0);\n     if ($48) {\n      _abort();\n      // unreachable;\n     }\n     $49 = ((($47)) + 12|0);\n     $50 = HEAP32[$49>>2]|0;\n     $51 = ($50|0)==($11|0);\n     if (!($51)) {\n      _abort();\n      // unreachable;\n     }\n     $52 = ((($44)) + 8|0);\n     $53 = HEAP32[$52>>2]|0;\n     $54 = ($53|0)==($11|0);\n     if ($54) {\n      HEAP32[$49>>2] = $44;\n      HEAP32[$52>>2] = $47;\n      $$3 = $44;\n      break;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n   } while(0);\n   $68 = ($42|0)==(0|0);\n   if ($68) {\n    $$1 = $11;$$1418 = $12;\n   } else {\n    $69 = ((($11)) + 28|0);\n    $70 = HEAP32[$69>>2]|0;\n    $71 = (546672 + ($70<<2)|0);\n    $72 = HEAP32[$71>>2]|0;\n    $73 = ($11|0)==($72|0);\n    do {\n     if ($73) {\n      HEAP32[$71>>2] = $$3;\n      $cond = ($$3|0)==(0|0);\n      if ($cond) {\n       $74 = 1 << $70;\n       $75 = $74 ^ -1;\n       $76 = HEAP32[(546372)>>2]|0;\n       $77 = $76 & $75;\n       HEAP32[(546372)>>2] = $77;\n       $$1 = $11;$$1418 = $12;\n       break L1;\n      }\n     } else {\n      $78 = HEAP32[(546384)>>2]|0;\n      $79 = ($42>>>0)<($78>>>0);\n      if ($79) {\n       _abort();\n       // unreachable;\n      } else {\n       $80 = ((($42)) + 16|0);\n       $81 = HEAP32[$80>>2]|0;\n       $not$1 = ($81|0)!=($11|0);\n       $$sink2 = $not$1&1;\n       $82 = (((($42)) + 16|0) + ($$sink2<<2)|0);\n       HEAP32[$82>>2] = $$3;\n       $83 = ($$3|0)==(0|0);\n       if ($83) {\n        $$1 = $11;$$1418 = $12;\n        break L1;\n       } else {\n        break;\n       }\n      }\n     }\n    } while(0);\n    $84 = HEAP32[(546384)>>2]|0;\n    $85 = ($$3>>>0)<($84>>>0);\n    if ($85) {\n     _abort();\n     // unreachable;\n    }\n    $86 = ((($$3)) + 24|0);\n    HEAP32[$86>>2] = $42;\n    $87 = ((($11)) + 16|0);\n    $88 = HEAP32[$87>>2]|0;\n    $89 = ($88|0)==(0|0);\n    do {\n     if (!($89)) {\n      $90 = ($88>>>0)<($84>>>0);\n      if ($90) {\n       _abort();\n       // unreachable;\n      } else {\n       $91 = ((($$3)) + 16|0);\n       HEAP32[$91>>2] = $88;\n       $92 = ((($88)) + 24|0);\n       HEAP32[$92>>2] = $$3;\n       break;\n      }\n     }\n    } while(0);\n    $93 = ((($87)) + 4|0);\n    $94 = HEAP32[$93>>2]|0;\n    $95 = ($94|0)==(0|0);\n    if ($95) {\n     $$1 = $11;$$1418 = $12;\n    } else {\n     $96 = HEAP32[(546384)>>2]|0;\n     $97 = ($94>>>0)<($96>>>0);\n     if ($97) {\n      _abort();\n      // unreachable;\n     } else {\n      $98 = ((($$3)) + 20|0);\n      HEAP32[$98>>2] = $94;\n      $99 = ((($94)) + 24|0);\n      HEAP32[$99>>2] = $$3;\n      $$1 = $11;$$1418 = $12;\n      break;\n     }\n    }\n   }\n  } else {\n   $$1 = $0;$$1418 = $1;\n  }\n } while(0);\n $108 = HEAP32[(546384)>>2]|0;\n $109 = ($2>>>0)<($108>>>0);\n if ($109) {\n  _abort();\n  // unreachable;\n }\n $110 = ((($2)) + 4|0);\n $111 = HEAP32[$110>>2]|0;\n $112 = $111 & 2;\n $113 = ($112|0)==(0);\n if ($113) {\n  $114 = HEAP32[(546392)>>2]|0;\n  $115 = ($2|0)==($114|0);\n  $116 = HEAP32[(546388)>>2]|0;\n  if ($115) {\n   $117 = HEAP32[(546380)>>2]|0;\n   $118 = (($117) + ($$1418))|0;\n   HEAP32[(546380)>>2] = $118;\n   HEAP32[(546392)>>2] = $$1;\n   $119 = $118 | 1;\n   $120 = ((($$1)) + 4|0);\n   HEAP32[$120>>2] = $119;\n   $121 = ($$1|0)==($116|0);\n   if (!($121)) {\n    return;\n   }\n   HEAP32[(546388)>>2] = 0;\n   HEAP32[(546376)>>2] = 0;\n   return;\n  }\n  $122 = ($2|0)==($116|0);\n  if ($122) {\n   $123 = HEAP32[(546376)>>2]|0;\n   $124 = (($123) + ($$1418))|0;\n   HEAP32[(546376)>>2] = $124;\n   HEAP32[(546388)>>2] = $$1;\n   $125 = $124 | 1;\n   $126 = ((($$1)) + 4|0);\n   HEAP32[$126>>2] = $125;\n   $127 = (($$1) + ($124)|0);\n   HEAP32[$127>>2] = $124;\n   return;\n  }\n  $128 = $111 & -8;\n  $129 = (($128) + ($$1418))|0;\n  $130 = $111 >>> 3;\n  $131 = ($111>>>0)<(256);\n  L96: do {\n   if ($131) {\n    $132 = ((($2)) + 8|0);\n    $133 = HEAP32[$132>>2]|0;\n    $134 = ((($2)) + 12|0);\n    $135 = HEAP32[$134>>2]|0;\n    $136 = $130 << 1;\n    $137 = (546408 + ($136<<2)|0);\n    $138 = ($133|0)==($137|0);\n    if (!($138)) {\n     $139 = ($133>>>0)<($108>>>0);\n     if ($139) {\n      _abort();\n      // unreachable;\n     }\n     $140 = ((($133)) + 12|0);\n     $141 = HEAP32[$140>>2]|0;\n     $142 = ($141|0)==($2|0);\n     if (!($142)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $143 = ($135|0)==($133|0);\n    if ($143) {\n     $144 = 1 << $130;\n     $145 = $144 ^ -1;\n     $146 = HEAP32[136592]|0;\n     $147 = $146 & $145;\n     HEAP32[136592] = $147;\n     break;\n    }\n    $148 = ($135|0)==($137|0);\n    if ($148) {\n     $$pre23 = ((($135)) + 8|0);\n     $$pre$phi24Z2D = $$pre23;\n    } else {\n     $149 = ($135>>>0)<($108>>>0);\n     if ($149) {\n      _abort();\n      // unreachable;\n     }\n     $150 = ((($135)) + 8|0);\n     $151 = HEAP32[$150>>2]|0;\n     $152 = ($151|0)==($2|0);\n     if ($152) {\n      $$pre$phi24Z2D = $150;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $153 = ((($133)) + 12|0);\n    HEAP32[$153>>2] = $135;\n    HEAP32[$$pre$phi24Z2D>>2] = $133;\n   } else {\n    $154 = ((($2)) + 24|0);\n    $155 = HEAP32[$154>>2]|0;\n    $156 = ((($2)) + 12|0);\n    $157 = HEAP32[$156>>2]|0;\n    $158 = ($157|0)==($2|0);\n    do {\n     if ($158) {\n      $168 = ((($2)) + 16|0);\n      $169 = ((($168)) + 4|0);\n      $170 = HEAP32[$169>>2]|0;\n      $171 = ($170|0)==(0|0);\n      if ($171) {\n       $172 = HEAP32[$168>>2]|0;\n       $173 = ($172|0)==(0|0);\n       if ($173) {\n        $$3435 = 0;\n        break;\n       } else {\n        $$1433 = $172;$$1437 = $168;\n       }\n      } else {\n       $$1433 = $170;$$1437 = $169;\n      }\n      while(1) {\n       $174 = ((($$1433)) + 20|0);\n       $175 = HEAP32[$174>>2]|0;\n       $176 = ($175|0)==(0|0);\n       if (!($176)) {\n        $$1433 = $175;$$1437 = $174;\n        continue;\n       }\n       $177 = ((($$1433)) + 16|0);\n       $178 = HEAP32[$177>>2]|0;\n       $179 = ($178|0)==(0|0);\n       if ($179) {\n        break;\n       } else {\n        $$1433 = $178;$$1437 = $177;\n       }\n      }\n      $180 = ($$1437>>>0)<($108>>>0);\n      if ($180) {\n       _abort();\n       // unreachable;\n      } else {\n       HEAP32[$$1437>>2] = 0;\n       $$3435 = $$1433;\n       break;\n      }\n     } else {\n      $159 = ((($2)) + 8|0);\n      $160 = HEAP32[$159>>2]|0;\n      $161 = ($160>>>0)<($108>>>0);\n      if ($161) {\n       _abort();\n       // unreachable;\n      }\n      $162 = ((($160)) + 12|0);\n      $163 = HEAP32[$162>>2]|0;\n      $164 = ($163|0)==($2|0);\n      if (!($164)) {\n       _abort();\n       // unreachable;\n      }\n      $165 = ((($157)) + 8|0);\n      $166 = HEAP32[$165>>2]|0;\n      $167 = ($166|0)==($2|0);\n      if ($167) {\n       HEAP32[$162>>2] = $157;\n       HEAP32[$165>>2] = $160;\n       $$3435 = $157;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    } while(0);\n    $181 = ($155|0)==(0|0);\n    if (!($181)) {\n     $182 = ((($2)) + 28|0);\n     $183 = HEAP32[$182>>2]|0;\n     $184 = (546672 + ($183<<2)|0);\n     $185 = HEAP32[$184>>2]|0;\n     $186 = ($2|0)==($185|0);\n     do {\n      if ($186) {\n       HEAP32[$184>>2] = $$3435;\n       $cond17 = ($$3435|0)==(0|0);\n       if ($cond17) {\n        $187 = 1 << $183;\n        $188 = $187 ^ -1;\n        $189 = HEAP32[(546372)>>2]|0;\n        $190 = $189 & $188;\n        HEAP32[(546372)>>2] = $190;\n        break L96;\n       }\n      } else {\n       $191 = HEAP32[(546384)>>2]|0;\n       $192 = ($155>>>0)<($191>>>0);\n       if ($192) {\n        _abort();\n        // unreachable;\n       } else {\n        $193 = ((($155)) + 16|0);\n        $194 = HEAP32[$193>>2]|0;\n        $not$ = ($194|0)!=($2|0);\n        $$sink4 = $not$&1;\n        $195 = (((($155)) + 16|0) + ($$sink4<<2)|0);\n        HEAP32[$195>>2] = $$3435;\n        $196 = ($$3435|0)==(0|0);\n        if ($196) {\n         break L96;\n        } else {\n         break;\n        }\n       }\n      }\n     } while(0);\n     $197 = HEAP32[(546384)>>2]|0;\n     $198 = ($$3435>>>0)<($197>>>0);\n     if ($198) {\n      _abort();\n      // unreachable;\n     }\n     $199 = ((($$3435)) + 24|0);\n     HEAP32[$199>>2] = $155;\n     $200 = ((($2)) + 16|0);\n     $201 = HEAP32[$200>>2]|0;\n     $202 = ($201|0)==(0|0);\n     do {\n      if (!($202)) {\n       $203 = ($201>>>0)<($197>>>0);\n       if ($203) {\n        _abort();\n        // unreachable;\n       } else {\n        $204 = ((($$3435)) + 16|0);\n        HEAP32[$204>>2] = $201;\n        $205 = ((($201)) + 24|0);\n        HEAP32[$205>>2] = $$3435;\n        break;\n       }\n      }\n     } while(0);\n     $206 = ((($200)) + 4|0);\n     $207 = HEAP32[$206>>2]|0;\n     $208 = ($207|0)==(0|0);\n     if (!($208)) {\n      $209 = HEAP32[(546384)>>2]|0;\n      $210 = ($207>>>0)<($209>>>0);\n      if ($210) {\n       _abort();\n       // unreachable;\n      } else {\n       $211 = ((($$3435)) + 20|0);\n       HEAP32[$211>>2] = $207;\n       $212 = ((($207)) + 24|0);\n       HEAP32[$212>>2] = $$3435;\n       break;\n      }\n     }\n    }\n   }\n  } while(0);\n  $213 = $129 | 1;\n  $214 = ((($$1)) + 4|0);\n  HEAP32[$214>>2] = $213;\n  $215 = (($$1) + ($129)|0);\n  HEAP32[$215>>2] = $129;\n  $216 = HEAP32[(546388)>>2]|0;\n  $217 = ($$1|0)==($216|0);\n  if ($217) {\n   HEAP32[(546376)>>2] = $129;\n   return;\n  } else {\n   $$2 = $129;\n  }\n } else {\n  $218 = $111 & -2;\n  HEAP32[$110>>2] = $218;\n  $219 = $$1418 | 1;\n  $220 = ((($$1)) + 4|0);\n  HEAP32[$220>>2] = $219;\n  $221 = (($$1) + ($$1418)|0);\n  HEAP32[$221>>2] = $$1418;\n  $$2 = $$1418;\n }\n $222 = $$2 >>> 3;\n $223 = ($$2>>>0)<(256);\n if ($223) {\n  $224 = $222 << 1;\n  $225 = (546408 + ($224<<2)|0);\n  $226 = HEAP32[136592]|0;\n  $227 = 1 << $222;\n  $228 = $226 & $227;\n  $229 = ($228|0)==(0);\n  if ($229) {\n   $230 = $226 | $227;\n   HEAP32[136592] = $230;\n   $$pre = ((($225)) + 8|0);\n   $$0438 = $225;$$pre$phiZ2D = $$pre;\n  } else {\n   $231 = ((($225)) + 8|0);\n   $232 = HEAP32[$231>>2]|0;\n   $233 = HEAP32[(546384)>>2]|0;\n   $234 = ($232>>>0)<($233>>>0);\n   if ($234) {\n    _abort();\n    // unreachable;\n   } else {\n    $$0438 = $232;$$pre$phiZ2D = $231;\n   }\n  }\n  HEAP32[$$pre$phiZ2D>>2] = $$1;\n  $235 = ((($$0438)) + 12|0);\n  HEAP32[$235>>2] = $$1;\n  $236 = ((($$1)) + 8|0);\n  HEAP32[$236>>2] = $$0438;\n  $237 = ((($$1)) + 12|0);\n  HEAP32[$237>>2] = $225;\n  return;\n }\n $238 = $$2 >>> 8;\n $239 = ($238|0)==(0);\n if ($239) {\n  $$0431 = 0;\n } else {\n  $240 = ($$2>>>0)>(16777215);\n  if ($240) {\n   $$0431 = 31;\n  } else {\n   $241 = (($238) + 1048320)|0;\n   $242 = $241 >>> 16;\n   $243 = $242 & 8;\n   $244 = $238 << $243;\n   $245 = (($244) + 520192)|0;\n   $246 = $245 >>> 16;\n   $247 = $246 & 4;\n   $248 = $247 | $243;\n   $249 = $244 << $247;\n   $250 = (($249) + 245760)|0;\n   $251 = $250 >>> 16;\n   $252 = $251 & 2;\n   $253 = $248 | $252;\n   $254 = (14 - ($253))|0;\n   $255 = $249 << $252;\n   $256 = $255 >>> 15;\n   $257 = (($254) + ($256))|0;\n   $258 = $257 << 1;\n   $259 = (($257) + 7)|0;\n   $260 = $$2 >>> $259;\n   $261 = $260 & 1;\n   $262 = $261 | $258;\n   $$0431 = $262;\n  }\n }\n $263 = (546672 + ($$0431<<2)|0);\n $264 = ((($$1)) + 28|0);\n HEAP32[$264>>2] = $$0431;\n $265 = ((($$1)) + 16|0);\n $266 = ((($$1)) + 20|0);\n HEAP32[$266>>2] = 0;\n HEAP32[$265>>2] = 0;\n $267 = HEAP32[(546372)>>2]|0;\n $268 = 1 << $$0431;\n $269 = $267 & $268;\n $270 = ($269|0)==(0);\n if ($270) {\n  $271 = $267 | $268;\n  HEAP32[(546372)>>2] = $271;\n  HEAP32[$263>>2] = $$1;\n  $272 = ((($$1)) + 24|0);\n  HEAP32[$272>>2] = $263;\n  $273 = ((($$1)) + 12|0);\n  HEAP32[$273>>2] = $$1;\n  $274 = ((($$1)) + 8|0);\n  HEAP32[$274>>2] = $$1;\n  return;\n }\n $275 = HEAP32[$263>>2]|0;\n $276 = ($$0431|0)==(31);\n $277 = $$0431 >>> 1;\n $278 = (25 - ($277))|0;\n $279 = $276 ? 0 : $278;\n $280 = $$2 << $279;\n $$0419 = $280;$$0420 = $275;\n while(1) {\n  $281 = ((($$0420)) + 4|0);\n  $282 = HEAP32[$281>>2]|0;\n  $283 = $282 & -8;\n  $284 = ($283|0)==($$2|0);\n  if ($284) {\n   label = 121;\n   break;\n  }\n  $285 = $$0419 >>> 31;\n  $286 = (((($$0420)) + 16|0) + ($285<<2)|0);\n  $287 = $$0419 << 1;\n  $288 = HEAP32[$286>>2]|0;\n  $289 = ($288|0)==(0|0);\n  if ($289) {\n   label = 118;\n   break;\n  } else {\n   $$0419 = $287;$$0420 = $288;\n  }\n }\n if ((label|0) == 118) {\n  $290 = HEAP32[(546384)>>2]|0;\n  $291 = ($286>>>0)<($290>>>0);\n  if ($291) {\n   _abort();\n   // unreachable;\n  }\n  HEAP32[$286>>2] = $$1;\n  $292 = ((($$1)) + 24|0);\n  HEAP32[$292>>2] = $$0420;\n  $293 = ((($$1)) + 12|0);\n  HEAP32[$293>>2] = $$1;\n  $294 = ((($$1)) + 8|0);\n  HEAP32[$294>>2] = $$1;\n  return;\n }\n else if ((label|0) == 121) {\n  $295 = ((($$0420)) + 8|0);\n  $296 = HEAP32[$295>>2]|0;\n  $297 = HEAP32[(546384)>>2]|0;\n  $298 = ($296>>>0)>=($297>>>0);\n  $not$19 = ($$0420>>>0)>=($297>>>0);\n  $299 = $298 & $not$19;\n  if (!($299)) {\n   _abort();\n   // unreachable;\n  }\n  $300 = ((($296)) + 12|0);\n  HEAP32[$300>>2] = $$1;\n  HEAP32[$295>>2] = $$1;\n  $301 = ((($$1)) + 8|0);\n  HEAP32[$301>>2] = $296;\n  $302 = ((($$1)) + 12|0);\n  HEAP32[$302>>2] = $$0420;\n  $303 = ((($$1)) + 24|0);\n  HEAP32[$303>>2] = 0;\n  return;\n }\n}\nfunction runPostSets() {\n\n HEAP32[27940 >> 2] = _floor0_exportbundle;\n}\nfunction _i64Add(a, b, c, d) {\n    /*\n      x = a + b*2^32\n      y = c + d*2^32\n      result = l + h*2^32\n    */\n    a = a|0; b = b|0; c = c|0; d = d|0;\n    var l = 0, h = 0;\n    l = (a + c)>>>0;\n    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.\n    return ((tempRet0 = h,l|0)|0);\n}\nfunction _memset(ptr, value, num) {\n    ptr = ptr|0; value = value|0; num = num|0;\n    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;\n    end = (ptr + num)|0;\n\n    value = value & 0xff;\n    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {\n      while ((ptr&3) != 0) {\n        HEAP8[((ptr)>>0)]=value;\n        ptr = (ptr+1)|0;\n      }\n\n      aligned_end = (end & -4)|0;\n      block_aligned_end = (aligned_end - 64)|0;\n      value4 = value | (value << 8) | (value << 16) | (value << 24);\n\n      while((ptr|0) <= (block_aligned_end|0)) {\n        HEAP32[((ptr)>>2)]=value4;\n        HEAP32[(((ptr)+(4))>>2)]=value4;\n        HEAP32[(((ptr)+(8))>>2)]=value4;\n        HEAP32[(((ptr)+(12))>>2)]=value4;\n        HEAP32[(((ptr)+(16))>>2)]=value4;\n        HEAP32[(((ptr)+(20))>>2)]=value4;\n        HEAP32[(((ptr)+(24))>>2)]=value4;\n        HEAP32[(((ptr)+(28))>>2)]=value4;\n        HEAP32[(((ptr)+(32))>>2)]=value4;\n        HEAP32[(((ptr)+(36))>>2)]=value4;\n        HEAP32[(((ptr)+(40))>>2)]=value4;\n        HEAP32[(((ptr)+(44))>>2)]=value4;\n        HEAP32[(((ptr)+(48))>>2)]=value4;\n        HEAP32[(((ptr)+(52))>>2)]=value4;\n        HEAP32[(((ptr)+(56))>>2)]=value4;\n        HEAP32[(((ptr)+(60))>>2)]=value4;\n        ptr = (ptr + 64)|0;\n      }\n\n      while ((ptr|0) < (aligned_end|0) ) {\n        HEAP32[((ptr)>>2)]=value4;\n        ptr = (ptr+4)|0;\n      }\n    }\n    // The remaining bytes.\n    while ((ptr|0) < (end|0)) {\n      HEAP8[((ptr)>>0)]=value;\n      ptr = (ptr+1)|0;\n    }\n    return (end-num)|0;\n}\nfunction _bitshift64Lshr(low, high, bits) {\n    low = low|0; high = high|0; bits = bits|0;\n    var ander = 0;\n    if ((bits|0) < 32) {\n      ander = ((1 << bits) - 1)|0;\n      tempRet0 = high >>> bits;\n      return (low >>> bits) | ((high&ander) << (32 - bits));\n    }\n    tempRet0 = 0;\n    return (high >>> (bits - 32))|0;\n}\nfunction _bitshift64Shl(low, high, bits) {\n    low = low|0; high = high|0; bits = bits|0;\n    var ander = 0;\n    if ((bits|0) < 32) {\n      ander = ((1 << bits) - 1)|0;\n      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));\n      return low << bits;\n    }\n    tempRet0 = low << (bits - 32);\n    return 0;\n}\nfunction ___muldsi3($a, $b) {\n    $a = $a | 0;\n    $b = $b | 0;\n    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;\n    $1 = $a & 65535;\n    $2 = $b & 65535;\n    $3 = Math_imul($2, $1) | 0;\n    $6 = $a >>> 16;\n    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;\n    $11 = $b >>> 16;\n    $12 = Math_imul($11, $1) | 0;\n    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;\n}\nfunction ___muldi3($a$0, $a$1, $b$0, $b$1) {\n    $a$0 = $a$0 | 0;\n    $a$1 = $a$1 | 0;\n    $b$0 = $b$0 | 0;\n    $b$1 = $b$1 | 0;\n    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;\n    $x_sroa_0_0_extract_trunc = $a$0;\n    $y_sroa_0_0_extract_trunc = $b$0;\n    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;\n    $1$1 = tempRet0;\n    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;\n    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;\n}\nfunction _sbrk(increment) {\n    increment = increment|0;\n    var oldDynamicTop = 0;\n    var oldDynamicTopOnChange = 0;\n    var newDynamicTop = 0;\n    var totalMemory = 0;\n    increment = ((increment + 15) & -16)|0;\n    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;\n    newDynamicTop = oldDynamicTop + increment | 0;\n\n    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.\n      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.\n      abortOnCannotGrowMemory()|0;\n      ___setErrNo(12);\n      return -1;\n    }\n\n    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;\n    totalMemory = getTotalMemory()|0;\n    if ((newDynamicTop|0) > (totalMemory|0)) {\n      if ((enlargeMemory()|0) == 0) {\n        ___setErrNo(12);\n        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;\n        return -1;\n      }\n    }\n    return oldDynamicTop|0;\n}\nfunction _memcpy(dest, src, num) {\n    dest = dest|0; src = src|0; num = num|0;\n    var ret = 0;\n    var aligned_dest_end = 0;\n    var block_aligned_dest_end = 0;\n    var dest_end = 0;\n    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.\n    if ((num|0) >=\n      8192\n    ) {\n      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;\n    }\n\n    ret = dest|0;\n    dest_end = (dest + num)|0;\n    if ((dest&3) == (src&3)) {\n      // The initial unaligned < 4-byte front.\n      while (dest & 3) {\n        if ((num|0) == 0) return ret|0;\n        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);\n        dest = (dest+1)|0;\n        src = (src+1)|0;\n        num = (num-1)|0;\n      }\n      aligned_dest_end = (dest_end & -4)|0;\n      block_aligned_dest_end = (aligned_dest_end - 64)|0;\n      while ((dest|0) <= (block_aligned_dest_end|0) ) {\n        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);\n        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);\n        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);\n        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);\n        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);\n        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);\n        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);\n        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);\n        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);\n        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);\n        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);\n        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);\n        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);\n        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);\n        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);\n        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);\n        dest = (dest+64)|0;\n        src = (src+64)|0;\n      }\n      while ((dest|0) < (aligned_dest_end|0) ) {\n        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);\n        dest = (dest+4)|0;\n        src = (src+4)|0;\n      }\n    } else {\n      // In the unaligned copy case, unroll a bit as well.\n      aligned_dest_end = (dest_end - 4)|0;\n      while ((dest|0) < (aligned_dest_end|0) ) {\n        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);\n        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);\n        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);\n        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);\n        dest = (dest+4)|0;\n        src = (src+4)|0;\n      }\n    }\n    // The remaining unaligned < 4 byte tail.\n    while ((dest|0) < (dest_end|0)) {\n      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);\n      dest = (dest+1)|0;\n      src = (src+1)|0;\n    }\n    return ret|0;\n}\nfunction _memmove(dest, src, num) {\n    dest = dest|0; src = src|0; num = num|0;\n    var ret = 0;\n    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {\n      // Unlikely case: Copy backwards in a safe manner\n      ret = dest;\n      src = (src + num)|0;\n      dest = (dest + num)|0;\n      while ((num|0) > 0) {\n        dest = (dest - 1)|0;\n        src = (src - 1)|0;\n        num = (num - 1)|0;\n        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);\n      }\n      dest = ret;\n    } else {\n      _memcpy(dest, src, num) | 0;\n    }\n    return dest | 0;\n}\nfunction _llvm_bswap_i32(x) {\n    x = x|0;\n    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;\n}\n\n  \nfunction dynCall_iiii(index,a1,a2,a3) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0;\n  return FUNCTION_TABLE_iiii[index&63](a1|0,a2|0,a3|0)|0;\n}\n\n\nfunction dynCall_vi(index,a1) {\n  index = index|0;\n  a1=a1|0;\n  FUNCTION_TABLE_vi[index&31](a1|0);\n}\n\n\nfunction dynCall_vii(index,a1,a2) {\n  index = index|0;\n  a1=a1|0; a2=a2|0;\n  FUNCTION_TABLE_vii[index&31](a1|0,a2|0);\n}\n\n\nfunction dynCall_ii(index,a1) {\n  index = index|0;\n  a1=a1|0;\n  return FUNCTION_TABLE_ii[index&31](a1|0)|0;\n}\n\n\nfunction dynCall_viii(index,a1,a2,a3) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0;\n  FUNCTION_TABLE_viii[index&15](a1|0,a2|0,a3|0);\n}\n\n\nfunction dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;\n  return FUNCTION_TABLE_iiiiiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;\n}\n\n\nfunction dynCall_iiiii(index,a1,a2,a3,a4) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;\n  return FUNCTION_TABLE_iiiii[index&31](a1|0,a2|0,a3|0,a4|0)|0;\n}\n\n\nfunction dynCall_iii(index,a1,a2) {\n  index = index|0;\n  a1=a1|0; a2=a2|0;\n  return FUNCTION_TABLE_iii[index&63](a1|0,a2|0)|0;\n}\n\n\nfunction dynCall_iiiiii(index,a1,a2,a3,a4,a5) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;\n  return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;\n}\n\nfunction b0(p0,p1,p2) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0;\n}\nfunction b1(p0) {\n p0 = p0|0; nullFunc_vi(1);\n}\nfunction b2(p0,p1) {\n p0 = p0|0;p1 = p1|0; nullFunc_vii(2);\n}\nfunction b3(p0) {\n p0 = p0|0; nullFunc_ii(3);return 0;\n}\nfunction b4(p0,p1,p2) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(4);\n}\nfunction b5(p0,p1,p2,p3,p4,p5,p6,p7) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(5);return 0;\n}\nfunction b6(p0,p1,p2,p3) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(6);return 0;\n}\nfunction b7(p0,p1) {\n p0 = p0|0;p1 = p1|0; nullFunc_iii(7);return 0;\n}\nfunction b8(p0,p1,p2,p3,p4) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(8);return 0;\n}\n\n// EMSCRIPTEN_END_FUNCS\nvar FUNCTION_TABLE_iiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,___stdout_write,___stdio_seek,b0\n,b0,b0,b0,b0,___stdio_write,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0\n,b0,b0,b0,b0,b0];\nvar FUNCTION_TABLE_vi = [b1,b1,b1,b1,_floor1_free_info,_floor1_free_look,b1,b1,b1,b1,_mapping0_free_info,b1,b1,b1,b1,_res0_free_info,_res0_free_look,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1\n,b1,b1,b1];\nvar FUNCTION_TABLE_vii = [b2,_floor1_pack,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_res0_pack,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2\n,b2,b2,b2];\nvar FUNCTION_TABLE_ii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_mapping0_forward,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,___stdio_close,b3,b3,b3\n,b3,b3,b3];\nvar FUNCTION_TABLE_viii = [b4,b4,b4,b4,b4,b4,b4,b4,_mapping0_pack,b4,b4,b4,b4,b4,b4,b4];\nvar FUNCTION_TABLE_iiiiiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_res1_forward,b5,b5,_res2_forward,b5,b5,b5,b5,b5\n,b5,b5,b5];\nvar FUNCTION_TABLE_iiiii = [b6,b6,b6,b6,b6,b6,b6,_floor1_inverse2,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6\n,b6,_vorbis_book_decodevs_add,_vorbis_book_decodev_add];\nvar FUNCTION_TABLE_iii = [b7,b7,_floor1_unpack,_floor1_look,b7,b7,_floor1_inverse1,b7,b7,_mapping0_unpack,b7,b7,_mapping0_inverse,_res0_unpack,_res0_look,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_icomp\n,_apsort,b7,b7,_sort32a,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7\n,b7,b7,b7,b7,b7];\nvar FUNCTION_TABLE_iiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_res0_inverse,b8,_res1_class,b8,_res1_inverse,_res2_class,b8,_res2_inverse,b8,b8,b8,b8\n,b8,b8,b8];\n\n  return { stackSave: stackSave, _encoder_set_tag: _encoder_set_tag, setThrew: setThrew, _encoder_stream_init: _encoder_stream_init, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, _memset: _memset, _sbrk: _sbrk, _encoder_init: _encoder_init, ___errno_location: ___errno_location, ___muldi3: ___muldi3, _encoder_analysis_buffer: _encoder_analysis_buffer, stackAlloc: stackAlloc, getTempRet0: getTempRet0, setTempRet0: setTempRet0, _i64Add: _i64Add, _encoder_clear: _encoder_clear, _encoder_transfer_data: _encoder_transfer_data, _emscripten_get_global_libc: _emscripten_get_global_libc, _encoder_process: _encoder_process, stackRestore: stackRestore, _llvm_bswap_i32: _llvm_bswap_i32, ___muldsi3: ___muldsi3, _free: _free, runPostSets: runPostSets, establishStackSpace: establishStackSpace, _memmove: _memmove, _encoder_data_len: _encoder_data_len, _malloc: _malloc, _memcpy: _memcpy, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii };\n})\n// EMSCRIPTEN_END_ASM\n(Module.asmGlobalArg, Module.asmLibraryArg, buffer);\n\nvar real_stackSave = asm[\"stackSave\"]; asm[\"stackSave\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_stackSave.apply(null, arguments);\n};\n\nvar real__encoder_set_tag = asm[\"_encoder_set_tag\"]; asm[\"_encoder_set_tag\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_set_tag.apply(null, arguments);\n};\n\nvar real_setThrew = asm[\"setThrew\"]; asm[\"setThrew\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_setThrew.apply(null, arguments);\n};\n\nvar real__encoder_stream_init = asm[\"_encoder_stream_init\"]; asm[\"_encoder_stream_init\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_stream_init.apply(null, arguments);\n};\n\nvar real__bitshift64Lshr = asm[\"_bitshift64Lshr\"]; asm[\"_bitshift64Lshr\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__bitshift64Lshr.apply(null, arguments);\n};\n\nvar real__bitshift64Shl = asm[\"_bitshift64Shl\"]; asm[\"_bitshift64Shl\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__bitshift64Shl.apply(null, arguments);\n};\n\nvar real__fflush = asm[\"_fflush\"]; asm[\"_fflush\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__fflush.apply(null, arguments);\n};\n\nvar real__sbrk = asm[\"_sbrk\"]; asm[\"_sbrk\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__sbrk.apply(null, arguments);\n};\n\nvar real__encoder_init = asm[\"_encoder_init\"]; asm[\"_encoder_init\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_init.apply(null, arguments);\n};\n\nvar real____errno_location = asm[\"___errno_location\"]; asm[\"___errno_location\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____errno_location.apply(null, arguments);\n};\n\nvar real____muldi3 = asm[\"___muldi3\"]; asm[\"___muldi3\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____muldi3.apply(null, arguments);\n};\n\nvar real__encoder_analysis_buffer = asm[\"_encoder_analysis_buffer\"]; asm[\"_encoder_analysis_buffer\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_analysis_buffer.apply(null, arguments);\n};\n\nvar real_stackAlloc = asm[\"stackAlloc\"]; asm[\"stackAlloc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_stackAlloc.apply(null, arguments);\n};\n\nvar real_getTempRet0 = asm[\"getTempRet0\"]; asm[\"getTempRet0\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_getTempRet0.apply(null, arguments);\n};\n\nvar real_setTempRet0 = asm[\"setTempRet0\"]; asm[\"setTempRet0\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_setTempRet0.apply(null, arguments);\n};\n\nvar real__i64Add = asm[\"_i64Add\"]; asm[\"_i64Add\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__i64Add.apply(null, arguments);\n};\n\nvar real__encoder_clear = asm[\"_encoder_clear\"]; asm[\"_encoder_clear\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_clear.apply(null, arguments);\n};\n\nvar real__encoder_transfer_data = asm[\"_encoder_transfer_data\"]; asm[\"_encoder_transfer_data\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_transfer_data.apply(null, arguments);\n};\n\nvar real__emscripten_get_global_libc = asm[\"_emscripten_get_global_libc\"]; asm[\"_emscripten_get_global_libc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__emscripten_get_global_libc.apply(null, arguments);\n};\n\nvar real__encoder_process = asm[\"_encoder_process\"]; asm[\"_encoder_process\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_process.apply(null, arguments);\n};\n\nvar real_stackRestore = asm[\"stackRestore\"]; asm[\"stackRestore\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_stackRestore.apply(null, arguments);\n};\n\nvar real__llvm_bswap_i32 = asm[\"_llvm_bswap_i32\"]; asm[\"_llvm_bswap_i32\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__llvm_bswap_i32.apply(null, arguments);\n};\n\nvar real____muldsi3 = asm[\"___muldsi3\"]; asm[\"___muldsi3\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____muldsi3.apply(null, arguments);\n};\n\nvar real__free = asm[\"_free\"]; asm[\"_free\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__free.apply(null, arguments);\n};\n\nvar real_establishStackSpace = asm[\"establishStackSpace\"]; asm[\"establishStackSpace\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real_establishStackSpace.apply(null, arguments);\n};\n\nvar real__memmove = asm[\"_memmove\"]; asm[\"_memmove\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__memmove.apply(null, arguments);\n};\n\nvar real__encoder_data_len = asm[\"_encoder_data_len\"]; asm[\"_encoder_data_len\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__encoder_data_len.apply(null, arguments);\n};\n\nvar real__malloc = asm[\"_malloc\"]; asm[\"_malloc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__malloc.apply(null, arguments);\n};\nvar stackSave = Module[\"stackSave\"] = asm[\"stackSave\"];\nvar _encoder_set_tag = Module[\"_encoder_set_tag\"] = asm[\"_encoder_set_tag\"];\nvar setThrew = Module[\"setThrew\"] = asm[\"setThrew\"];\nvar _encoder_stream_init = Module[\"_encoder_stream_init\"] = asm[\"_encoder_stream_init\"];\nvar _bitshift64Lshr = Module[\"_bitshift64Lshr\"] = asm[\"_bitshift64Lshr\"];\nvar _bitshift64Shl = Module[\"_bitshift64Shl\"] = asm[\"_bitshift64Shl\"];\nvar _fflush = Module[\"_fflush\"] = asm[\"_fflush\"];\nvar _memset = Module[\"_memset\"] = asm[\"_memset\"];\nvar _sbrk = Module[\"_sbrk\"] = asm[\"_sbrk\"];\nvar _encoder_init = Module[\"_encoder_init\"] = asm[\"_encoder_init\"];\nvar ___errno_location = Module[\"___errno_location\"] = asm[\"___errno_location\"];\nvar ___muldi3 = Module[\"___muldi3\"] = asm[\"___muldi3\"];\nvar _encoder_analysis_buffer = Module[\"_encoder_analysis_buffer\"] = asm[\"_encoder_analysis_buffer\"];\nvar stackAlloc = Module[\"stackAlloc\"] = asm[\"stackAlloc\"];\nvar getTempRet0 = Module[\"getTempRet0\"] = asm[\"getTempRet0\"];\nvar setTempRet0 = Module[\"setTempRet0\"] = asm[\"setTempRet0\"];\nvar _i64Add = Module[\"_i64Add\"] = asm[\"_i64Add\"];\nvar _encoder_clear = Module[\"_encoder_clear\"] = asm[\"_encoder_clear\"];\nvar _encoder_transfer_data = Module[\"_encoder_transfer_data\"] = asm[\"_encoder_transfer_data\"];\nvar _emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = asm[\"_emscripten_get_global_libc\"];\nvar _encoder_process = Module[\"_encoder_process\"] = asm[\"_encoder_process\"];\nvar stackRestore = Module[\"stackRestore\"] = asm[\"stackRestore\"];\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = asm[\"_llvm_bswap_i32\"];\nvar ___muldsi3 = Module[\"___muldsi3\"] = asm[\"___muldsi3\"];\nvar _free = Module[\"_free\"] = asm[\"_free\"];\nvar runPostSets = Module[\"runPostSets\"] = asm[\"runPostSets\"];\nvar establishStackSpace = Module[\"establishStackSpace\"] = asm[\"establishStackSpace\"];\nvar _memmove = Module[\"_memmove\"] = asm[\"_memmove\"];\nvar _encoder_data_len = Module[\"_encoder_data_len\"] = asm[\"_encoder_data_len\"];\nvar _malloc = Module[\"_malloc\"] = asm[\"_malloc\"];\nvar _memcpy = Module[\"_memcpy\"] = asm[\"_memcpy\"];\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = asm[\"dynCall_iiii\"];\nvar dynCall_vi = Module[\"dynCall_vi\"] = asm[\"dynCall_vi\"];\nvar dynCall_vii = Module[\"dynCall_vii\"] = asm[\"dynCall_vii\"];\nvar dynCall_ii = Module[\"dynCall_ii\"] = asm[\"dynCall_ii\"];\nvar dynCall_viii = Module[\"dynCall_viii\"] = asm[\"dynCall_viii\"];\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = asm[\"dynCall_iiiiiiiii\"];\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = asm[\"dynCall_iiiii\"];\nvar dynCall_iii = Module[\"dynCall_iii\"] = asm[\"dynCall_iii\"];\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = asm[\"dynCall_iiiiii\"];\n;\n\nRuntime.stackAlloc = Module['stackAlloc'];\nRuntime.stackSave = Module['stackSave'];\nRuntime.stackRestore = Module['stackRestore'];\nRuntime.establishStackSpace = Module['establishStackSpace'];\n\nRuntime.setTempRet0 = Module['setTempRet0'];\nRuntime.getTempRet0 = Module['getTempRet0'];\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule['asm'] = asm;\n\n\n\n\n\n\n/**\n * @constructor\n * @extends {Error}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n};\nExitStatus.prototype = new Error();\nExitStatus.prototype.constructor = ExitStatus;\n\nvar initialStackTop;\nvar preloadStartTime = null;\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!Module['calledRun']) run();\n  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n}\n\nModule['callMain'] = Module.callMain = function callMain(args) {\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');\n  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');\n\n  args = args || [];\n\n  ensureInitRuntime();\n\n  var argc = args.length+1;\n  function pad() {\n    for (var i = 0; i < 4-1; i++) {\n      argv.push(0);\n    }\n  }\n  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];\n  pad();\n  for (var i = 0; i < argc-1; i = i + 1) {\n    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));\n    pad();\n  }\n  argv.push(0);\n  argv = allocate(argv, 'i32', ALLOC_NORMAL);\n\n\n  try {\n\n    var ret = Module['_main'](argc, argv, 0);\n\n\n    // if we're not running an evented main loop, it's time to exit\n    exit(ret, /* implicit = */ true);\n  }\n  catch(e) {\n    if (e instanceof ExitStatus) {\n      // exit() throws this once it's done to make sure execution\n      // has been stopped completely\n      return;\n    } else if (e == 'SimulateInfiniteLoop') {\n      // running an evented main loop, don't immediately exit\n      Module['noExitRuntime'] = true;\n      return;\n    } else {\n      var toLog = e;\n      if (e && typeof e === 'object' && e.stack) {\n        toLog = [e, e.stack];\n      }\n      Module.printErr('exception thrown: ' + toLog);\n      Module['quit'](1, e);\n    }\n  } finally {\n    calledMain = true;\n  }\n}\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || Module['arguments'];\n\n  if (preloadStartTime === null) preloadStartTime = Date.now();\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  writeStackCookie();\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame\n\n  function doRun() {\n    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    ensureInitRuntime();\n\n    preMain();\n\n    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {\n      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');\n    }\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (Module['_main'] && shouldRunNow) Module['callMain'](args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nModule['run'] = Module.run = run;\n\nfunction exit(status, implicit) {\n  if (implicit && Module['noExitRuntime']) {\n    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');\n    return;\n  }\n\n  if (Module['noExitRuntime']) {\n    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n    STACKTOP = initialStackTop;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  if (ENVIRONMENT_IS_NODE) {\n    process['exit'](status);\n  }\n  Module['quit'](status, new ExitStatus(status));\n}\nModule['exit'] = Module.exit = exit;\n\nvar abortDecorators = [];\n\nfunction abort(what) {\n  if (what !== undefined) {\n    Module.print(what);\n    Module.printErr(what);\n    what = JSON.stringify(what)\n  } else {\n    what = '';\n  }\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  var extra = '';\n\n  var output = 'abort(' + what + ') at ' + stackTrace() + extra;\n  if (abortDecorators) {\n    abortDecorators.forEach(function(decorator) {\n      output = decorator(output, what);\n    });\n  }\n  throw output;\n}\nModule['abort'] = Module.abort = abort;\n\n// {{PRE_RUN_ADDITIONS}}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\nif (Module['noInitialRun']) {\n  shouldRunNow = false;\n}\n\n\nrun();\n\n// {{POST_RUN_ADDITIONS}}\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\nmodule.exports = Module;\n\n","module.exports = {\n  libvorbis: require(\"./dist/libvorbis.js\"),\n  encoder: require(\"./dist/encoder.js\")\n}\n","module.exports = require(\"fs\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/utils/exportogg.worker.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}